<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/5.0.4" created="2019-07-10 18:52" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Kien Dang</title>
	<link>https://kiendang.me</link>
	<description>Lifelong learner</description>
	<pubDate>Wed, 10 Jul 2019 18:52:56 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>https://kiendang.me</wp:base_site_url>
	<wp:base_blog_url>https://kiendang.me</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[Kien]]></wp:author_login><wp:author_email><![CDATA[ikien.dang@gmail.com]]></wp:author_email><wp:author_display_name><![CDATA[Kien]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>


	<generator>https://wordpress.org/?v=5.0.4</generator>

<image>
	<url>https://kiendang.me/wp-content/uploads/2019/05/cropped-Kien-2-32x32.png</url>
	<title>Kien Dang</title>
	<link>https://kiendang.me</link>
	<width>32</width>
	<height>32</height>
</image> 

	<item>
		<title>Amsterdam</title>
		<link>https://kiendang.me/index.php/2018/04/16/inspire-amsterdam/</link>
		<pubDate>Mon, 16 Apr 2018 01:48:20 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">http://kiendang.me/?p=54</guid>
		<description></description>
		<content:encoded><![CDATA[Amsterdam was absolutely beautiful! First time outside of the country and my girlfriend and I spent a week there.

My first experience outside of Canada and we planned a lot in Amsterdam. Many have told us its a good 2-3 day trip but since this was going to be our very first trip to Europe, we decided to relax and enjoy our time there.

A very walk-able city, we stayed in an Airbnb at the west location of Amsterdam.

We had planned many events during our stay and had a list that we wanted to do each day. These included visiting:

&nbsp;
<ul>
 	<li style="text-align: left;"><span style="font-size: 14px;"><strong>Albert Cuyp Market</strong> - one of the busiest street markets selling everything from creative crafts and food</span></li>
 	<li style="text-align: left;"><span style="font-size: 14px;"><strong>Brouwerij't lJ</strong> - modern brewery right under the windmill (awesome beers)</span></li>
 	<li style="text-align: left;"><span style="font-size: 14px;"><strong>Hortus Botanicus </strong>- beautiful botanical garden in the Plantage district of Amsterdam, about a block away from Brouweij't lJ brewery</span></li>
 	<li style="text-align: left;"><span style="font-size: 14px;"><strong>Heineken Experience </strong>- the origins of Heineken. It was a very fun experience, a huge tourist trap but I highly recommend it! Lots of unique gifts at the end of the tour</span></li>
 	<li style="text-align: left;"><span style="font-size: 14px;"><strong>Rijksmuseum </strong>- A Dutch national museum dedicated to the history of Amsterdam</span></li>
 	<li style="text-align: left;"><span style="font-size: 14px;"><strong>Van Gogh Museum </strong>- Art museum dedicated to the works of Vincent van Gogh</span></li>
 	<li style="text-align: left;"><span style="font-size: 14px;"><strong>Keukenhof Gardens </strong>- The worlds largest flower garden - also where the tulip fields are</span></li>
</ul>
&nbsp;

Food experience was also one of the biggest highlights in Amsterdam. Dutch food was something we were looking forward to trying. We did our research and found that there were plenty of unique dishes.
<h1><span style="font-size: x-large;"><strong>Bitter-balle</strong></span><strong style="font-size: x-large;">n</strong></h1>
<img class="alignnone wp-image-68" src="http://kiendang.me/wp-content/uploads/2018/03/Bitterballen.jpg" alt="" width="343" height="257" />
<h1><span style="font-size: x-large;"><strong>Raw Herring </strong></span></h1>
<span style="font-size: small;">To our surprise, it tasted really good! You have an option of having it all in one piece or cut into pieces like shown on the left, or having it served on a bun.</span>

<img class="wp-image-72 alignleft" src="http://kiendang.me/wp-content/uploads/2018/03/raw-herring-e1537283751523.jpg" alt="" width="344" height="258" /><b style="font-size: 24px;"></b>

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

<b style="font-size: 24px;">Stroopwafel</b>

Two thin waffels stuck together with some sweet caramel like syrup. They are the best when made fresh and hot. We found this stand in Alberts Cuyp market.

<img class="alignnone wp-image-73" src="http://kiendang.me/wp-content/uploads/2018/03/waffel.jpg" alt="" width="196" height="262" />
<h1><b>FEBO</b></h1>
A Dutch chain fast food restaurant that provides vending type machines where you select the food in a mini preheated glass oven. These were super delicious and filling

<img class=" wp-image-149" src="http://kiendang.me/wp-content/uploads/2018/06/MVIMG_20180409_121753-1.jpg" alt="" width="761" height="428" />

Unfortunately, we forgot to take a picture of Kapslon which is a dish that consists of fries covered in shawarma meat and gouda cheese.

[gallery columns="8" link="file" size="medium" ids="153,154,151,141,147,140,81,80,152,71,79,85,78,146,145,155"]

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date><![CDATA[2018-04-16 01:48:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-16 01:48:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[inspire-amsterdam]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="airbnb"><![CDATA[Airbnb]]></category>
		<category domain="post_tag" nicename="europe"><![CDATA[Europe]]></category>
		<category domain="post_tag" nicename="sight-seeing"><![CDATA[Sight seeing]]></category>
		<category domain="category" nicename="travel"><![CDATA[Travel]]></category>
		<category domain="post_tag" nicename="vacation"><![CDATA[Vacation]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[hide_meta_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_use_builder]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_themify_builder_settings_json]]></wp:meta_key>
			<wp:meta_value><![CDATA[[{"row_order":"0","cols":[{"column_order":"0","grid_class":"col-full"}]}]]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[unlink_post_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[hide_post_date]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[color_design]]></wp:meta_key>
			<wp:meta_value><![CDATA[theme-color-blue]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_built_for_post_type]]></wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_use_ab_testing]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_ab_stats_refresh_interval]]></wp:meta_key>
			<wp:meta_value><![CDATA[hourly]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_old_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_enable_shortcode_tracking]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_ab_current_shortcode]]></wp:meta_key>
			<wp:meta_value><![CDATA[[et_pb_split_track id="54" /]]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_custom_css]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_builder_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[VB|Divi|3.5.1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[inspire-amsterdam__trashed]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_post_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#ffffff]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_post_bg_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[light]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_show_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_post_hide_nav]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[et_right_sidebar]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_side_nav]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_ab_subjects]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[et_enqueued_post_fonts]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:6:"family";a:1:{s:12:"et-gf-roboto";s:91:"Roboto:100,100italic,300,300italic,regular,italic,500,500italic,700,700italic,900,900italic";}s:6:"subset";a:2:{i:0;s:5:"latin";i:1;s:9:"latin-ext";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[colormag_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[default_layout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[83]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
			<wp:meta_value><![CDATA[2018-03-29]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Industry 4.0</title>
		<link>https://kiendang.me/index.php/2018/07/16/industry-4-0/</link>
		<pubDate>Mon, 16 Jul 2018 16:38:21 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">http://kiendang.me/?p=187</guid>
		<description></description>
		<content:encoded><![CDATA[<img class=" aligncenter" src="https://images.unsplash.com/photo-1461749280684-dccba630e2f6?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=e5a31d03ddee66863a599421f792e07b&amp;auto=format&amp;fit=crop&amp;w=1050&amp;q=80" width="846" height="565" />

<span style="font-weight: 400;">The convenience of processing tasks online and using technology has really made me think about our current trend, Industry 4.0. The term coined to be the upcoming trend focusing on automation and data exchange.</span>

<span style="font-weight: 400;">With recent news, we see a lot of people lose their jobs because of automation. RBC reduced their floor footprint by 20% which ultimately led to 500 job cuts¹</span><span style="font-weight: 400;">. Manulife announced that they are reducing their workforce by about 700 people²</span><span style="font-weight: 400;">. The job cuts are a direct result of companies restructuring its operations via automation.</span>

<span style="font-weight: 400;">You’ll probably come across a product of industry 4.0 near your local grocery store with those self-checkouts and even in fast food restaurants. We have less human operated cashiers, we see more computer assisted driving being featured in the automotive industry and more AI assistance in homes (Google and Alexa).</span>

<span style="font-weight: 400;">Industry 4.0 affects the transformation of manufacturing where companies invest more in automation of their processes. The company I work for put large emphasis in their focus on technology. We need to bring automation in our manufacturing plants because they can be much more effective in reducing labour cost. As a result, we can be more competitive and pass on savings to attract our customers. Since this large trend of automation is prevalent, companies must adapt to remain relevant, otherwise, they will not survive this shift to Industry 4.0.</span>

<span style="font-weight: 400;">What does it mean for us?</span>

<span style="font-weight: 400;">For consumers, we benefit the most out of using these services. The convenience of online banking, submitting insurance claims online, ordering food straight from our phones etc, has made life much easier by allowing us to access these services with the tip of our fingertips. Having the ability to tell Google or Alexa to turn off your lights is a godsend, especially when you’re in bed during the cold winter and you’re too comfortable to go get up and turn off the lights (yes me being extremely lazy -- but this is a huge step forward for those who are physically unable to do these simple tasks). As mentioned earlier, if companies can reduce the cost of their products or services they can potentially pass on the savings to their customers by charging less for the service.</span>

<span style="font-weight: 400;">As for the workers, it is the fear of losing their jobs. We are replacing jobs quicker than we can provide them and with machines and technology growing so fast, people are </span><span style="font-weight: 400;">concerned that there will be nothing left for us to do. However, the unemployment by technology also creates employments in other fields that deal with creating automation. I truly believe that this is key to staying relevant, especially as a young individual like myself.</span><span style="font-weight: 400;">I keep my eye closely on the trend and job market. It is important to adapt and learn skills to be able to keep up.</span>

<span style="font-weight: 400;">Perhaps we will see an increase in demand for skilled-trade jobs. There are a lot of speciality jobs that computers can’t automate such as an electrician, plumbers, hairstylist, chefs and many more. Not every job will be automated, but it could definitely benefit from computer assisted technology.</span>

<span style="font-weight: 400;">Companies are seizing the opportunity to go digital and they must adapt with the Industry 4.0 to be able to achieve sustainability from the customer demands and their competition. Being able to capitalize technological innovation will be the greatest driver of success for a company to survive this fast pace market. With that being said, this is one of the best times to live as technology advances.</span>

<span style="font-weight: 400;"><span style="color: #6d6d6d;"><a style="color: #6d6d6d;" href="https://business.financialpost.com/news/fp-street/royal-bank-of-canada-to-cut-branch-space-by-at-least-20-percent">¹ </a></span><a href="https://business.financialpost.com/news/fp-street/royal-bank-of-canada-to-cut-branch-space-by-at-least-20-percent">https://business.financialpost.com/news/fp-street/royal-bank-of-canada-to-cut-branch-space-by-at-least-20-percent</a></span>

<span style="font-weight: 400;">² <a href="https://www.cbc.ca/news/business/manulife-1.4715861">https://www.cbc.ca/news/business/manulife-1.4715861</a></span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>187</wp:post_id>
		<wp:post_date><![CDATA[2018-07-16 16:38:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-07-16 16:38:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[industry-4-0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_side_nav]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[et_right_sidebar]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_post_hide_nav]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_show_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_post_bg_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[light]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_use_builder]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_post_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#ffffff]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_ab_stats_refresh_interval]]></wp:meta_key>
			<wp:meta_value><![CDATA[hourly]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_builder_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[VB|Divi|3.5.1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_old_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_enable_shortcode_tracking]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_custom_css]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[et_enqueued_post_fonts]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:6:"family";a:1:{s:12:"et-gf-roboto";s:91:"Roboto:100,100italic,300,300italic,regular,italic,500,500italic,700,700italic,900,900italic";}s:6:"subset";a:2:{i:0;s:5:"latin";i:1;s:9:"latin-ext";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_built_for_post_type]]></wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_use_ab_testing]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_ab_current_shortcode]]></wp:meta_key>
			<wp:meta_value><![CDATA[[et_pb_split_track id="187" /]]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_ab_subjects]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[colormag_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[default_layout]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Kansas City</title>
		<link>https://kiendang.me/index.php/2018/08/20/kansas-city/</link>
		<pubDate>Mon, 20 Aug 2018 02:24:47 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">http://kiendang.me/?p=223</guid>
		<description></description>
		<content:encoded><![CDATA[You're probably wondering, why Kansas City?

A disclaimer: I went to Kansas City for work meetings.

Kansas City is the largest city in Missouri. I found it hard to believe that this massive city only has a population of around 490,000. When compared to Toronto, which has a population of 2.8 million people, it feels very open and spacious. Kansas City is known for their delicious BBQ, jazz heritage and their fountains.

When I landed, it was 37 degrees, pure sunshine and no cloud in sight. I had to say that the week I was there from Aug 6-10, it was very hot. The weather averaged around 36 degrees. I stayed at the Argosy Casino Hotel &amp; Spa.

One of the main places we went during the evening was the <strong style="font-size: 14px;">Kansas City Power &amp; Light District</strong> where live music is held, tons of restaurants to eat surrounding a very cozy outdoor gathering place.

<strong>Food</strong>
<ul>
 	<li style="margin-bottom: 10px;"><span style="font-size: 14px;"><b>Country Road Ice House</b> - BBQ was really good, better than what we have in Toronto</span></li>
 	<li style="margin-bottom: 10px;"><span style="font-size: 14px;"><b>Hereford House </b>- I was told by many that Kansas City has the one of the best steaks, definitely took that one off the bucket list here at this steakhouse</span></li>
 	<li style="margin-bottom: 10px;"><span style="font-size: 14px;"><b>Nick &amp; Jake's</b> <b>Restaurant </b>- Can't go to the states without trying their American cuisine. Really spacious space for awesome seafood and sandwiches</span></li>
 	<li style="margin-bottom: 10px;"><span style="font-size: 14px;"><b>Rancho Grande Cantina </b>- Really homey Mexican restaurant, their salsa is delicious here</span></li>
 	<li style="margin-bottom: 10px;"><span style="font-size: 14px;"><b>Tribe Street Kitchen</b> - world street kitchen and bar that's situated in the historic River Market District. We ordered a lot of interesting dishes and their cocktails were really good</span></li>
 	<li style="margin-bottom: 10px;"><span style="font-size: 14px;"><strong>Green Lady Lounge </strong>- Open seating jazz bar. Enjoyed a classic old fashion and tried a dirty martini for the first time. Jazz musicians play live here and the atmosphere is perfect for a night out</span></li>
 	<li style="margin-bottom: 10px;"><span style="font-size: 14px;"><strong>Chicken N Pickle </strong>- Casual eatery &amp; bar with pickleball courts, backyard games and a shaded beer garden. Very nice atmosphere and very open.</span></li>
</ul>
<b>Final Notes</b>

Their public transit is completely free in downtown which is awesome and they have 3 cool bridges going across the river. The downtown buildings are pretty neat with a touch of art in every corner. Despite this being a last minute trip, I thoroughly enjoyed the experience of being somewhere new.

[gallery size="large" link="file" ids="265,266,249,263,262,268,255,244"]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>223</wp:post_id>
		<wp:post_date><![CDATA[2018-08-20 02:24:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-20 02:24:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[kansas-city]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="travel"><![CDATA[Travel]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_side_nav]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_use_builder]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_post_bg_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[light]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_show_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_post_hide_nav]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[et_right_sidebar]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_post_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#ffffff]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_builder_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[VB|Divi|3.5.1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_ab_stats_refresh_interval]]></wp:meta_key>
			<wp:meta_value><![CDATA[hourly]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_old_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_enable_shortcode_tracking]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_custom_css]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[et_enqueued_post_fonts]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:6:"family";a:1:{s:12:"et-gf-roboto";s:91:"Roboto:100,100italic,300,300italic,regular,italic,500,500italic,700,700italic,900,900italic";}s:6:"subset";a:2:{i:0;s:5:"latin";i:1;s:9:"latin-ext";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_built_for_post_type]]></wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_use_ab_testing]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_ab_current_shortcode]]></wp:meta_key>
			<wp:meta_value><![CDATA[[et_pb_split_track id="223" /]]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_ab_subjects]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[colormag_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[default_layout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[264]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Windows 10 Redstone 5 Updates</title>
		<link>https://kiendang.me/index.php/2018/09/06/top-windows-10-redstone-5-updates/</link>
		<pubDate>Thu, 06 Sep 2018 00:03:27 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">http://kiendang.me/?p=282</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-size: 14px;">I've been using Windows based systems since Windows XP Home Edition. I've been through so many versions of Windows including Windows Vista, Windows 7, 8.0, 8.1 and the latest Windows 10. Throughout these OS iterations, I've built 2 computers each varying in different hardware generations of RAM. Nothing is more exciting when we see continuous improvement on products that we use every day. I'm looking forward to all the new features that Windows 10 October 2018 update has to offer and</span><span style="font-size: 14px;"> I've hand-picked the most anticipated updates that I'm looking forward to:</span>
<ol>
 	<li style="margin-bottom: 10px;"><span style="font-size: 14px;"><strong style="font-size: 14px;">Dark Mode for File Explorer </strong>- A setting to toggle dark mode for late night computer usage. I personally prefer dark themes as they tend to reduce eye fatigue. It is refreshing to see that Microsoft has been working to implement this.</span></li>
 	<li style="margin-bottom: 10px;"><span style="font-size: 14px;"><strong>File explorer tabs (Sets) </strong>- A feature to combine multiple applications under one window (like chrome tabs) - I've been reading rumors that this feature might not be available due to compatibility issues. I hope they are able to push this to the new update.</span></li>
 	<li style="margin-bottom: 10px;"><span style="font-size: 14px;"><strong>Redesigned Snipping experience </strong>- I use this snipping tool a lot, especially for work. What's interesting is that it will be the same shortcut key as the OneNote screen clip. Snipping will have their own designated spot in the notification bar so you can always refer back to your snipped pictures.</span></li>
 	<li style="margin-bottom: 10px;"><span style="font-size: 14px;"><strong>Improved Clipboard</strong> - This new clipboard experience will save your copy and paste text/data and sync across your Windows devices. A useful feature for productivity as it connects your workflow from your PC to laptop or vice-versa</span></li>
 	<li style="margin-bottom: 10px;"><span style="font-size: 14px;"><strong>Storage</strong> <strong>Sense</strong> - Brings files that you don't frequently use to the cloud so it frees up local hard disk. I see this making a lot of their entry Surface products with 128GB more efficient when it comes not having enough space.</span></li>
 	<li style="margin-bottom: 10px;"><span style="font-size: 14px;"><strong>Phone</strong> <strong>App</strong> - Allows you to sync up your Android/iPhone to sync seamlessly to your PC. Interoperability is basically the future. The only issue I have with this is that it requires you to download their windows launcher on your Android phone. Hopefully, they will be able to get around this with an app instead</span></li>
</ol>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>282</wp:post_id>
		<wp:post_date><![CDATA[2018-09-06 00:03:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-09-06 00:03:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[top-windows-10-redstone-5-updates]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_post_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#ffffff]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_post_bg_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[light]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_show_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_post_hide_nav]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[et_right_sidebar]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_side_nav]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_use_builder]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_builder_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[BB|Divi|3.5.1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_ab_stats_refresh_interval]]></wp:meta_key>
			<wp:meta_value><![CDATA[hourly]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_old_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_enable_shortcode_tracking]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_custom_css]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[et_enqueued_post_fonts]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:6:"family";a:1:{s:12:"et-gf-roboto";s:91:"Roboto:100,100italic,300,300italic,regular,italic,500,500italic,700,700italic,900,900italic";}s:6:"subset";a:2:{i:0;s:5:"latin";i:1;s:9:"latin-ext";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_built_for_post_type]]></wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_use_ab_testing]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_ab_current_shortcode]]></wp:meta_key>
			<wp:meta_value><![CDATA[[et_pb_split_track id="282" /]]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[colormag_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[default_layout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[283]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Seiko SNKL23 Crystal Sapphire Mod</title>
		<link>https://kiendang.me/index.php/2018/09/18/seiko-snkl23-crystal-sapphire-mod/</link>
		<pubDate>Tue, 18 Sep 2018 02:25:28 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">http://kiendang.me/?p=291</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-size: 14px;">I love wrist watches. I picked up interests in watches ever since I saw them in House of Cards. Every time a scene with Francis Underwood came along, I would try to identify the watch he had on his wrist.</span>

I have a humble collection of watches that I slowly collected during my undergrad. After landing a full time job, I treated myself to a Seiko SNKL23, which I stumbled upon online after researching for automatics. An article from <a href="https://www.hodinkee.com/articles/a-seventy-five-dollar-watch-that-looks-like-a-million-bucks">Hodinkee</a> really sold this watch to me.

Seiko 5 is known for their best bang for your buck. On top of that, horological experts praise and love their in-house movements for reliability. Unfortunately, I scuffed my glass and was slightly disappointed in the hardlex's durability.

I ordered a crystal sapphire to replace the factory glass. I was inspired after finding out that a <a href="https://www.youtube.com/watch?v=jmRGzz8P_os">YouTuber</a> had shown some steps on how to do it. I bought all the necessary tools from Amazon and gave it a shot.

It has a very subtle dome and really makes the watch pop. I'm extremely happy with the outcome.

<strong>Before &amp; After:</strong>

<img class="alignnone wp-image-301" src="http://kiendang.me/wp-content/uploads/2018/09/IMG_20180917_195445be3.jpg" alt="" width="272" height="140" />     <img class="alignnone wp-image-303" src="http://kiendang.me/wp-content/uploads/2018/09/IMG_20180917_215354after-1.jpg" alt="" width="205" height="140" />

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>291</wp:post_id>
		<wp:post_date><![CDATA[2018-09-18 02:25:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-09-18 02:25:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[seiko-snkl23-crystal-sapphire-mod]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_post_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#ffffff]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_post_bg_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[light]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_show_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_post_hide_nav]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[et_right_sidebar]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_side_nav]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_use_builder]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_builder_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[VB|Divi|3.5.1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_ab_stats_refresh_interval]]></wp:meta_key>
			<wp:meta_value><![CDATA[hourly]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_old_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_enable_shortcode_tracking]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_custom_css]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[et_enqueued_post_fonts]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:6:"family";a:1:{s:12:"et-gf-roboto";s:91:"Roboto:100,100italic,300,300italic,regular,italic,500,500italic,700,700italic,900,900italic";}s:6:"subset";a:2:{i:0;s:5:"latin";i:1;s:9:"latin-ext";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_built_for_post_type]]></wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_use_ab_testing]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_ab_current_shortcode]]></wp:meta_key>
			<wp:meta_value><![CDATA[[et_pb_split_track id="291" /]]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_et_pb_ab_subjects]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[colormag_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[default_layout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[300]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Summer Books for 2018</title>
		<link>https://kiendang.me/index.php/2018/09/25/2018-summer-books/</link>
		<pubDate>Tue, 25 Sep 2018 21:37:12 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=371</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 style="text-align: center;"><b>Books</b></h1>
<span style="font-weight: 400;">I was never an avid reader back in school. Fast forward a few years later into my high school years, my friend recommended a Dan Brown book called Deception Point. After picking up the book, the words made an imaginary movie in my head. That is the first time I've experienced the magic of words.</span><span style="font-weight: 400;">
</span><span style="font-weight: 400;">
</span><span style="font-weight: 400;">From time to time, I like to read thriller and mystery novels but now that I’m done school, I found myself gravitating towards personal development books and finance books. Simply because I want to be a better version of myself and learn more about personal finance.</span>

<span style="font-weight: 400;">Here’s a few books I read this summer and recommend:</span>
<h1 style="text-align: center;"><b>Never Split the Difference</b><img class="aligncenter" src="http://t2.gstatic.com/images?q=tbn:ANd9GcQOdi2PoYfDciMmMW3sjOzMbYaF__xYOSBViz_Pp-LPfLyZCHJc" width="262" height="397" /></h1>
<span style="font-weight: 400;">A book about a former international hostage negotiator for the FBI reveals some of his insights and tested approaches to high level negotiations and translates it to the reader to learn about his experience. The author tries to bring his experiences to relate to the readers such as negotiating for a better wage, a better deal and even making business decisions.</span>

<span style="font-weight: 400;">Some key points -- none of these will be a substitute for his book nor am I spoiling them. I highly recommend this book.</span>
<ul>
 	<li style="font-weight: 400;"><b>Empathy </b><span style="font-weight: 400;">– everyone is a protagonist of their own life. It is important to always understand their perspective and where they are coming from. Empathy is key to negotiating and understanding what the other party wants. Chris Voss goes into detail in his book with real life scenarios he’s faced while negotiating and how he used empathy to gain the upper hand. </span></li>
</ul>
&nbsp;
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Avoiding the words</span> <b><i>why</i></b><span style="font-weight: 400;"> and use the word</span> <b><i>how </i></b><span style="font-weight: 400;">instead, given the right circumstances. Why makes people defensive, it questions their work and intelligence, and can be insulting.</span></li>
</ul>
&nbsp;
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Negotiation starts with </span><b><i>no</i></b><span style="font-weight: 400;">. It is the best response to trigger an alternative means to your negotiation. You can ask “what is it that won’t work for you?” which ultimately leads you to figuring out why they said no in the first place. Again this is something that reflects back to his important key point about empathy.</span></li>
</ul>
&nbsp;
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">How do we </span><b><i>listen</i></b><span style="font-weight: 400;"> better? What is the magic of listening? Chris Voss reveals some techniques you can use. He also mentions that the worst advice someone can give another is “You need to listen better”. </span></li>
</ul>
<span style="font-weight: 400;">These are just some of the key important points that stood out to me. Chris Voss Never Split the Difference was a great book to read and something I definitely would recommend to my friends.</span>
<h1 style="text-align: center;"><b>The Question Behind the Question</b></h1>
<img class="aligncenter" src="https://images-na.ssl-images-amazon.com/images/I/81SgFlPuFUL.jpg" width="215" height="323" />

<span style="font-weight: 400;">A book by John G. Miller explores personal accountability in the workplace and personal life. I found this book very similar to a section in Chris Voss’s book and I found it quite a coincidence that it mentions using the words </span><b><i>how</i></b> <span style="font-weight: 400;">and </span><b><i>what</i></b> <span style="font-weight: 400;">to address questions.</span>

<span style="font-weight: 400;">It talks about the questions that can lead to change e.g “What can I do to improve the situation?” instead of “Why can’t they do this right? Why is it always me?” Questions to ask yourself to eliminate the complaining and really focus the core issue at hand. </span>

<span style="font-weight: 400;">Personal accountability is not always easy. I admit, I am struggling with this from time to time but after reading this book, it reveals some very interest points that provide valuable take home messages. </span>

&nbsp;
<h1 style="text-align: center;"><b>I Will Teach You To Be Rich</b></h1>
<img class=" aligncenter" src="http://t3.gstatic.com/images?q=tbn:ANd9GcSKzAJq7RAs_iAImXKaZKwCRgY5uOWxLIrseqKekeNDQTFkdzCA" width="226" height="339" />

<span style="font-weight: 400;">School never taught me anything about building wealth and what you should do with your money. I always hear that we should always “save up”, don’t spend your money etc. But how do we effectively do that? It’s very hard to save up when you have expenses and wants. It is very easy spending money and so hard to save without good discipline.</span>

<span style="font-weight: 400;">This book by Ramit Sethi teaches you about money and finances and how to make money work for you, it also teaches you the benefits of using credit cards, setting up your accounts so that money moves on its own and optimize your finances.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>371</wp:post_id>
		<wp:post_date><![CDATA[2018-09-25 21:37:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-09-25 21:37:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[2018-summer-books]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="books"><![CDATA[Books]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_cf9eccaef25b245ad1c03537ba8e68b7]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[colormag_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[default_layout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[372]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Dive Into Personal Finance</title>
		<link>https://kiendang.me/index.php/2018/10/01/dive-into-personal-finance/</link>
		<pubDate>Mon, 01 Oct 2018 22:11:09 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=431</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote><span style="font-weight: 400;">"Money is what drives the world for better or for worse." - Chamath Palihapitiya</span></blockquote>
<span style="font-weight: 400;">An important topic that school should have been taught in detail. Now that the colder months are coming, it’s time to sit down and reflect the things I’ve learned about personal finance and actually apply it to my situation.</span>

<span style="font-weight: 400;">I decided to educate myself about how money works and what to do with it and become financially responsible.</span>

<span style="font-weight: 400;">During the summer, I dedicated a few months reading the following books:</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">A Millionaire Teacher - Andrew Hallman</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">I Will Teach You to Be Rich - Rami Sethi</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Common sense Investing - John C Bogle</span></li>
</ul>
<span style="font-weight: 400;">I've learned how to manage my money, optimize my credit cards, understand the fundamentals of the stock market and the basics of investing. The books provided easy to read material for anyone who is starting their financial journey. I highly recommend you read the first two books before you read the third.</span>

<span style="font-weight: 400;">To keep it short, the take away from the books are as follows:</span>
<ol>
 	<li><b>Pay off any remaining debt/loans (for me this was OSAP)</b></li>
 	<li><strong>Start saving (max out your TFSA/RRSP)</strong></li>
 	<li><strong>Take advantage of the employer match </strong></li>
 	<li><strong>Invest in the market - mainly index funds</strong></li>
</ol>
<span style="font-weight: 400;">Step 1 and 2 are simple, pay off any remaining debts or loans. </span>

<span style="font-weight: 400;">For these steps, I personally used Ramit Sethi’s strategy. It is to have the money </span><b><i>move on its own</i></b><span style="font-weight: 400;"> so you don’t have to deal with it. By setting up the accounts to do the work for me, I’m already halfway through the battle by paying off loans/debts and maxing out my TFSA.</span>

<img class="size-full wp-image-433 aligncenter" src="https://kiendang.me/wp-content/uploads/2018/10/Money-Flow.png" alt="" width="490" height="430" />

<span style="font-weight: 400;">When money is moving by itself, I am </span><b><i>passively</i></b> <span style="font-weight: 400;">paying off the debts/loans and contributing to my TFSA. It will make sure that I won’t touch any money that could have been used effectively towards these goals. If I never see the amount taken away from me, then it won’t feel as bad because its like it was never even there. </span>

<span style="font-weight: 400;">The money is split by percentages, I wanted to have my loans paid as fast as I could - I know I could have done this differently but getting rid of my debt would be a huge stepping stone.  I dedicated 30% of my monthly income to my loans. 40% to my TFSA and 30% to my bank account for expenses.</span>

<span style="font-weight: 400;">I know what my monthly contribution will be towards my loans and I can roughly estimate the end date of when they will be paid off. Having a <strong>clear deadline</strong> for your goals are important.</span>

<span style="font-weight: 400;">Since I’ve already did my research, I have summarized it in this post <a href="https://kiendang.me/index.php/2018/11/04/money-making-money/">here</a>.</span>

Disclaimer: I'm not a financial adviser, all of my post are for educational purposes only and should not be taken as financial advice.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>431</wp:post_id>
		<wp:post_date><![CDATA[2018-10-01 22:11:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-01 22:11:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dive-into-personal-finance]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="personal-finance"><![CDATA[Personal Finance]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[435]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[colormag_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[default_layout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[fw_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:22:"seo-titles-metas-title";s:0:"";s:28:"seo-titles-metas-description";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Journey to Android Development Pt. 1 (Intro to Android Studio and Java)</title>
		<link>https://kiendang.me/index.php/2018/10/07/journey-to-android-development-pt-1/</link>
		<pubDate>Sun, 07 Oct 2018 13:59:48 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=449</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">On my own time, I’ve learned programming languages such as HTML and CSS to start up my personal website, Python to create some fun projects of my own and VB6 to automate some parts of my job. </span>

<span style="font-weight: 400;">However, with so many programming languages, I was unable to find something until I eventually decided on Android Development as a hobby. I found that this would be the perfect creative outlet by building apps and learning a new programming language.</span>

<span style="font-weight: 400;">There was something captivating about navigating through a polished app (e.g Uber) and giving the user the experience of convenience at their fingertips. A well-designed app that provided a clean user-friendly experience. I wanted to recreate this experience for others.</span>

<span style="font-weight: 400;">So I started to find resources online on how to create android apps from scratch. The following resources I used:</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Head First Java (2nd Edition)</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Udemy course from Rob Percival</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Udacity - Android development for beginners (from Google)</span></li>
</ul>
<span style="font-weight: 400;">I had no particular order in what resource I used, I found that I learned topics in the book that I didn’t find in the Udemy course and I had a better understanding of Android development as a whole with the Udacity course.</span>

<span style="font-weight: 400;">I built the “Just Java” app from the first course. It allows a user to create an order of coffee and then send it out using email by taking in the name, the order quantity, and options for topping which charges more.</span>

<img class="wp-image-451 aligncenter" src="https://kiendang.me/wp-content/uploads/2018/10/Just-Java-1.gif" alt="" width="225" height="400" />
<p style="text-align: left;"><span style="font-weight: 400;">Building this app served 2 purposes:</span></p>

<ol style="text-align: center;">
 	<li style="font-weight: 400; text-align: left;"><span style="font-weight: 400;">Understanding how to use Java and the concept of Object Oriented Programming</span></li>
 	<li style="font-weight: 400; text-align: left;"><span style="font-weight: 400;">Understanding how to use Android Studio </span></li>
</ol>
<span style="font-weight: 400;">There were several important topics I took from the first course and will be keeping them in mind for future apps.</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">The ability to create a specific layout by strictly using XML</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Creating methods to generate the final price of coffee, trigger extra cost for toppings</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Setting text based on final results and concatenating them using Java</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Learning how to open other apps by calling Intents (e.g opening Gmail after submitting order)</span></li>
</ul>
<span style="font-weight: 400;">For me to keep consistent with my journey into android, I’ve provided small achievable goals for myself below to hold myself accountable.</span>
<ol>
 	<li>Nov 30/18 - Upload my first app on the PlayStore (Easy Shopping Calculator) - I need to finish this app off with one more feature -need to understand Array Adapters</li>
 	<li>Dec 10/18 - Create my Routine Task app - Deeper dive into Lists and Adapter views</li>
 	<li>Jan 12/19 - Pomodoro Timer app - Milestone Project</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>449</wp:post_id>
		<wp:post_date><![CDATA[2018-10-07 13:59:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-07 13:59:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[journey-to-android-development-pt-1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android Development]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[colormag_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[default_layout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[637]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Happy Thanksgiving</title>
		<link>https://kiendang.me/index.php/2018/10/08/happy-thanksgiving/</link>
		<pubDate>Mon, 08 Oct 2018 00:29:26 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=470</guid>
		<description></description>
		<content:encoded><![CDATA[Finally, a food post.

A very eventful two weeks of October.

UFC 229, McGregor vs Nurmagomedov, Microsoft Surface refreshes, Google Pixel 3 release, and new Google hardware... but nothing beats having a good meal with friends and family.

Every year on October, I've noticed many companies release a lot of new products, perfectly timed before for Black Friday and Christmas. Sometimes its best to forget all those marketed hypes of new technology and just be thankful for food.

It's very tempting every year to dump money on a new gadget, especially when they're on a very large discount. But I think this Black Friday, I'll be keeping the money in my wallet.

My SO is the best when it comes to cooking meals, she cooked ham this year and it was delicious.

Happy Thanksgiving.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>470</wp:post_id>
		<wp:post_date><![CDATA[2018-10-08 00:29:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-08 00:29:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[happy-thanksgiving]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="food"><![CDATA[Food]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[colormag_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[default_layout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[472]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
			<wp:meta_value><![CDATA[2018-10-10]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Books for October</title>
		<link>https://kiendang.me/index.php/2018/10/13/books-for-october/</link>
		<pubDate>Sat, 13 Oct 2018 14:39:04 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=476</guid>
		<description></description>
		<content:encoded><![CDATA[Reading is a great way to exercise the brain. The benefits include having a more focused mind, an increased attention span, and improving grammar skills.

Since Halloween is approaching, I thought I'd share some mystery-thriller novels that will send some chills down your spine.
<h4 style="text-align: center;"><b>Red Notice: A True Story of High Finance, Murder, and One Man’s Fight for Justice</b></h4>
<img class=" aligncenter" src="https://images-na.ssl-images-amazon.com/images/I/510UWROQjSL.jpg" width="204" height="307" />

The perfect book for the fall as this nonfiction political thriller sends you down straight into the Kremlin. The author, Bill Browder, tells his story about doing business in Russia and eventually uncovers disturbing news. As you progress through this book, you will see how everything unfolds. A real-life thriller with news you can uncover and Google while reading it. I highly recommend this book.

&nbsp;
<h4 style="text-align: center;"><b>And Then There Were None</b></h4>
<img class="aligncenter" src="https://images-na.ssl-images-amazon.com/images/I/81B9LhCS2AL.jpg" width="209" height="337" />

I must read during Halloween. There were 10 strangers invited into a small island owned by an unknown millionaire. All of them die without any evidence of an 11th person. A Reddit user recommended this book and says to read on your death bed because you will never see life the same again.

&nbsp;
<h4 style="text-align: center;"><strong>The Girl with the Dragon Tattoo</strong></h4>
<img class="aligncenter" src="https://images.gr-assets.com/books/1327868566l/2429135.jpg" width="228" height="340" />

Alright, I had to put this one up here. It is an international bestseller for a reason. I thoroughly enjoyed the character development and the plot. Sweden's wealthiest family member disappear for years and was never found. The uncle hires a famous journalist (Mikael) to investigate and eventually stumbles upon Lisbeth (The dragon-tattooed girl) whose a genius hacker and aids him in the investigation. During their journey, they uncover Sweden's corruption and darkest secrets which eventually leads them to the answer.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>476</wp:post_id>
		<wp:post_date><![CDATA[2018-10-13 14:39:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-13 14:39:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[books-for-october]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="books"><![CDATA[Books]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[colormag_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[default_layout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[477]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Managing energy - not time</title>
		<link>https://kiendang.me/index.php/2018/10/23/managing-energy-not-time/</link>
		<pubDate>Tue, 23 Oct 2018 16:28:14 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=503</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote><span style="font-weight: 400;">“The number of hours in a day is fixed, but the quantity and quality of energy available to us is not.”</span></blockquote>
<span style="font-weight: 400;">Managing my energy levels is something I have been working on. This post will keep me accountable and serve as a reminder of how to be more productive now that I’m working a full-time job and looking to program on the side.</span>

<span style="font-weight: 400;">I picked up <strong>The Power of Full Engagement </strong>and finished reading it recently. I wanted to figure out what tips and tricks that successful people have picked up and learn from it.</span>

<img class="aligncenter" src="https://images-na.ssl-images-amazon.com/images/I/514v4bYhRcL._SX322_BO1,204,203,200_.jpg" width="255" height="393" />
<blockquote><span style="font-weight: 400;">“We are oscillatory beings in an oscillatory universe. We exhaust our mental and emotional energy and do not spend enough time recovering.” </span></blockquote>
<span style="font-weight: 400;">To achieve this, it is recommended to fully disengage in order to maximize our engagement time.</span>

<span style="font-weight: 400;">The book emphasizes on the importance of balance in your physical, emotional, mental and spiritual energies. While this all may be obvious, it's often forgotten and brushed aside like some kind of ancient saying.</span>

<span style="font-weight: 400;">Exercise is the first key step in improving your mental focus and overall health. I decided to default on action and improve my physical energy by exercising this summer. After work, I'd go for a quick jog which helps release any tension I had from sitting down at my desk all day. I’m not a big fan of running, but since it's free, I do it anyways to improve my cardio. As of today, I’ve ran a total of 50.3 km, which is probably more than I’ve ever ran before. Since its colder, I've taken a break from running, hopefully next year I’ll be able to double this.</span>

<span style="font-weight: 400;">I highly recommend this book as it goes through various case studies of many working professionals and the solutions to many of similar everyday issues that we face.</span>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>503</wp:post_id>
		<wp:post_date><![CDATA[2018-10-23 16:28:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-23 16:28:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[managing-energy-not-time]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[colormag_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[default_layout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_668125453f45328a9580b65dca6f4ebd]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[516]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Artificial Intelligence with Python</title>
		<link>https://kiendang.me/index.php/2018/10/30/dive-into-artificial-intelligence-with-python/</link>
		<pubDate>Tue, 30 Oct 2018 23:18:35 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=522</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">October has been a very busy month. Ending off with a good note of completing the <strong><a href="https://courses.edx.org/certificates/f53eedacae244803ae71eca02f3a25c7">DAT236x - Intro to Data Science course</a></strong> offered by edX Microsoft and my fourth lesson of Android Development -- which I will provide in another post next month of my progress.</span>

Python is a programming language that I picked up after I graduation. I created a few personal projects of mine which included a file organizer for Windows and a Discord Bot. Eventually, I got stuck on figuring out what I wanted to do and researched other applications that Python can build. I found data science and A.I. and wanted to learn what all the buzz was about for machine learning. I enrolled in a course offered by Microsoft through edX to learn more and completed the course with a verified certification.

During this time, I've also explored a boot camp on Udemy called Python for Data Science and Machine Learning. This course revealed tons of resources that Python uses to visualize data and interpret it using many machine learning algorithms. I felt like I needed a strong background in statistics to understand the results as they were difficult to grasp. However, what interests me was how seamless it is to create beautiful visuals using Matplotllib, geopandas and Seaborn. As a person with a science degree, having data that is clean and visually appealing is a very important skill to have.

<img class="aligncenter" src="https://seaborn.pydata.org/_images/different_scatter_variables.png" width="318" height="302" />
<p style="text-align: center;"><em>Example Scatterplot using Seaborn</em></p>
With that said, I truly believe that A.I. and machine learning will be the dominant force that will push us right through industry 4.0 and allow us to achieve greater technological growth.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>522</wp:post_id>
		<wp:post_date><![CDATA[2018-10-30 23:18:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-30 23:18:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dive-into-artificial-intelligence-with-python]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[colormag_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[default_layout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[638]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_1011c8c99bc169dd239defa3c587c6e5]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_fa306071a6bb3d70bc481ba82888ce38]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Money making money</title>
		<link>https://kiendang.me/index.php/2018/11/04/money-making-money/</link>
		<pubDate>Sun, 04 Nov 2018 01:26:49 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=532</guid>
		<description></description>
		<content:encoded><![CDATA[<h2 style="text-align: center;"><strong>Getting started with Investing</strong></h2>
<span style="font-weight: 400;">WTF is investing? Simply put, it’s to take your money and put it into financial systems, shares, property or any commercial venture with expectation of generating profit.</span>

<span style="font-weight: 400;">The idea is that your money is working for you, so when you’re sleeping you can still generate income. How awesome is that? My post will be an extremely high level summary of what investing entails and is not considered to be financial advice. Please do your own research, this is what I’ve learned so far. This post was inspired by </span><a href="https://www.millennial-revolution.com/freedom/how-i-built-a-seven-figure-portfolio-and-retired-at-31/"><span style="font-weight: 400;">millennial-revolution’s </span></a><span style="font-weight: 400;">blog.</span>

<span style="font-weight: 400;">In Canada, you have several investing accounts you can open. But for my current needs and purposes, I will be talking about my </span><a href="https://www.advisor.ca/columnists_/michelle-munro/tfsas-and-non-registered-accounts/"><span style="font-weight: 400;">TFSA (Tax Free Savings)</span></a><span style="font-weight: 400;">, </span><a href="https://www.diffen.com/difference/RRSP_vs_TFSA"><span style="font-weight: 400;">RRSP (Registered Retirement Savings Plan)</span></a><span style="font-weight: 400;"> and my </span><a href="https://www.sunlife.ca/ca/Learn+and+Plan/Money/Retirement+savings/What+kind+of+company+pension+do+you+have?vgnLocale=en_CA"><span style="font-weight: 400;">DCPP (Defined contribution pension plan)</span></a><span style="font-weight: 400;">.</span>

<span style="font-weight: 400;">But wait, if you're young and just starting work, why do you need to save up for retirement already? Well, the best way to retire early with fat stacks is to save a little now and learn all this <a href="https://kiendang.me/index.php/2018/12/02/tfsa-portfolio-ccp/">crap early</a> so that </span><b><i>time </i></b><span style="font-weight: 400;">is playing in </span><b><i>your favour.</i></b><span style="font-weight: 400;"> </span>

<span style="font-weight: 400;">If you have a full time job and it offers a pension plan DCPP or a DBPP from your employer, then you better figure out what the minimal contribution is to receive an employer match. </span>

<span style="font-weight: 400;">For example, if you agree to contribute 5% of your annual income to your work pension plan, then your company will promise to contribute 5% on top of your contribution making it 10% total. You get to keep this extra money from your employer. </span><b>This is literally free money</b><span style="font-weight: 400;">.</span>

<span style="font-weight: 400;">TFSAs are accounts designed to help you save. Any money you gain from it is tax-free. You can open these up at a bank, broker or an insurance company. Every year, the contribution amount increases by a fixed amount based on inflation. If your TFSA investments do well, you increase your total contribution room by the gained amount.</span>
<h3 style="text-align: center;"><b>How do you make money from a TFSA?</b></h3>
<b>Option 1 - The easy bank way:</b>

<span style="font-weight: 400;">Banks have financial services you can go to and they could give you finanicial advice. However, they do take a fee from your investments because they have overhead costs and provide convenient services.</span>

<b>Option 2 - The discount brokerage way:</b>

<span style="font-weight: 400;">After reading John Bogle’s common sense to investing, he says the return is a generous 7-9.5% from the entire US market. In order to do this, you’d have to go through a discount brokerage to purchase index funds. There are less fees with a discount brokerage since they do not give you any financial advice. </span>

<span style="font-weight: 400;">This is more for the DIY kind of people. A few percentages saved from fees can mean the difference of a few thousand dollars in the long run.</span>

<img class="size-full wp-image-548 aligncenter" src="https://kiendang.me/wp-content/uploads/2018/11/Annotation.png" alt="" width="760" height="491" />

The idea is that all your gains from investment be taxed free if possible*. RRSP contributions are taxed after you retire. However, any initial investments in an RRSP are not taxed and reduces your taxable income by lowering your income bracket.

For example, a person making 50k a year, and contribute 5k to their RRSP. The employer reports to the government that the person is making 50k, but when tax papers come around and it will report the individual's income is 45k instead because 5k went to their retirement plan. Therefore, the government will send a refund for paying too much taxes or have a reduced tax payable. Best case scenario, you get a tax refund and use it to top off your TFSA.

My current goal is to shove as much money in my TFSA as I can to max it out. The earlier I have it maxed out, the more time it will have to grow. In my next post, I will break down my current TFSA holding and why I have those holdings.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>532</wp:post_id>
		<wp:post_date><![CDATA[2018-11-04 01:26:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-04 01:26:49]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[money-making-money]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="personal-finance"><![CDATA[Personal Finance]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[colormag_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[default_layout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[537]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Journey to Android Development Pt. 2 (Multi-Screen App)</title>
		<link>https://kiendang.me/index.php/2018/11/11/journey-to-android-development-pt-2/</link>
		<pubDate>Sun, 11 Nov 2018 22:00:56 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=562</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: center;"><b>Android Development: Multiple App Screens</b></p>
<span style="font-weight: 400;">I recently finished the Multiple App Screens lesson on Udacity which is the 3rd course of the curriculum for Android Development for Beginners. </span>

<span style="font-weight: 400;">The things I’ve learned:</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Pre-loading a work in progress app provided by the course</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Figuring what needed to be updated</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Using intents to open multiple activities </span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Understanding Activity Lifecycle of the app</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Array, Lists, Loops and Custom Classes</span></li>
</ul>
<span style="font-weight: 400;">Unfortunately, the Udacity course did not go over fragments in detail. I used Head First Android Development (2nd Edition) to learn fragments and went through the exercise to understand this concept as I knew this was required for a slider tab.</span>

<span style="font-weight: 400;">The most important concept I’ve learned from their exercise was how to use fragments and make the apps appear on different layouts. Fragments are very similar to activities as they have associated layouts. It allows you to reuse code instead of duplicating the codes in separate activities.<img class="wp-image-564 aligncenter" src="https://kiendang.me/wp-content/uploads/2018/11/workout.gif" alt="" width="272" height="483" /></span>

<span style="font-weight: 400;">Understanding how fragments and activities communicate was the hardest challenge in this exercise. However, after going through the exercise and finally building with fragments made this easier to understand. </span><span style="font-weight: 400;">Below shows an example of the fragments being used to display two activities at once. Minimal code was used to generate this type of UI. For larger screen sizes such as tablets, fragments can be used side by side to take up the extra screen real estate seen below.</span>

<img class="wp-image-565 aligncenter" src="https://kiendang.me/wp-content/uploads/2018/11/tablet.gif" alt="" width="271" height="434" />

&nbsp;

<span style="font-weight: 400;">Take away points:</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Fragment’s are used to control part of a screen</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Fragments have associated layouts</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;"><code>onCreateView()</code> method is called every time Android requires the fragment layout</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">We use the &lt;fragment&gt; element and name attribute to reference in XML</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Fragments do not extend Activity class or implement Contents class</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Fragments use the <code>getView()</code> method to be referenced and then <code>findViewById()</code></span></li>
</ul>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>562</wp:post_id>
		<wp:post_date><![CDATA[2018-11-11 22:00:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-11 22:00:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[journey-to-android-development-pt-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android Development]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[colormag_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[default_layout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[636]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Journey to Android Development Pt. 3 (Android Orientation)</title>
		<link>https://kiendang.me/index.php/2018/11/15/journey-to-android-development-pt-3-android-orientation/</link>
		<pubDate>Thu, 15 Nov 2018 01:47:01 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=589</guid>
		<description></description>
		<content:encoded><![CDATA[During my journey, I've stumbled upon an issue with screen orientation where the app breaks and stops functioning when rotated. I feel like I will be coming into this issue often and will write about what I've learned to make sure I understand this clearly.

In Android, when the device is rotated, the activity becomes destroyed and recreated in the new orientation. Any local variables that were used in the activity gets lost. Therefore, to remedy this issue, we would need to save the state of our local variables in the activity's onSaveInstance() method.

As an example below, the timer app I've been working on would have an onSaveInstanceState() defined below.
<pre class="theme:coy lang:java decode:true ">Protected void onSaveInstanceState(Bundle, savedInstanceState) {
	savedInstanceState.putInt(“seconds”,seconds);
 	savedInstanceState.putBoolean(“Running”, running);

}
</pre>
The two lines of code will ensure that the seconds is saved as an Int, and the running variable will be saved as a Bool. When the orientation happens, we need to make sure that in the onCreate method, we call the saved variables back. So in order to restore the state of the variables, I would need to write the code:
<pre class="theme:coy lang:default decode:true">Protected void onCreate(Bundle savedInstanceState) {
...
	if(savedInstanceState != null) {
		seconds = savedInstance.getInt(“seconds”);
		running = savedInstanceState.getBoolean(“running”);
      }
...
} 
</pre>
The code above will set my seconds to the savedInstance (previously set before it gets destroyed) and let the app remember that it was still running when changed orientation.

In my lessons with fragments, this issue is the same. The fragment becomes destroyed and recreated with an activity when orientation change happens. The solution would be to save the fragment state by overriding the fragment onSaveInstanceState() method. The parameter Bundle allows you to save any variables you need to keep at a given state.

In my previous workout app exercise, the fragments would restart and restore back to the first workoutId. The solution would be to save the state of the workoutId (which determines the type of exercise - ranging from 1-4 as an int) and restore the current displayed fragment.

The onSaveInstanceState() method gets called before the fragment is destroyed. The code below resolves this:
<pre class="theme:coy lang:default decode:true ">public void onSaveInstanceState(Bundle savedInstanceState) {
	savedInstanceState.putLong(“workoutId”, workoutId);
}
</pre>
The Bundle called savedInstanceState is then used in the onCreate() method:
<pre class="theme:coy lang:default decode:true">public void onCreate(Bundle savedInstanceState) {
	super.onCreate(savedInstanceState);
	If (savedInstanceState != null) {
		workoutId = savedInstanceState.getLong(“workoutId”);
        }
}
</pre>
During the onCreate method, which is called right after the fragment gets created after orientation change, the If-statement checks whether the Bundle is empty, if not, that tells the program that it needs to set the workoutId to the last saved workoutId. Therefore, it keeps the last fragment open and acts as if nothing happened.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>589</wp:post_id>
		<wp:post_date><![CDATA[2018-11-15 01:47:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-15 01:47:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[journey-to-android-development-pt-3-android-orientation]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android Development]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[colormag_page_layout]]></wp:meta_key>
			<wp:meta_value><![CDATA[default_layout]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[603]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Journey to Android Development Pt. 4 (Custom Array Adapters)</title>
		<link>https://kiendang.me/index.php/2018/11/18/journey-to-android-development-pt-4-custom-array-adapters/</link>
		<pubDate>Sun, 18 Nov 2018 17:48:31 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=624</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">In order to create a list view with different views to show more information, a custom array adapter must be made. An example was done in the previous Miwok app from Udacity Lesson 3, but Lesson 4 had a clearer explanation (Earthquake app) with a summary below:</span>

<img class="wp-image-631 aligncenter" src="https://kiendang.me/wp-content/uploads/2018/11/screenshot.png" alt="" width="202" height="359" />

<span style="font-weight: 400;">For this to work, there are 4 steps involved in making custom array adapters.</span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Create a new XML layout and create a horizontal LinearLayout and adjust the list item view  - this allows us to enter more than just one specific information in a list and is a starting point to allow android to recycle the item list. - </span><i><span style="font-weight: 400;">earthquake_list_item.xml
</span></i></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Create a java object to hold all the earthquake information. We define an Earthquake class which represents a single earthquake and define 3 global variables for its parameters. A public constructor is required for the Earthquake class which will specify the magnitude, location and date.  Global variables are private, so we need public getter methods to recall the variables which is shown in lines 16-25 below.</span></li>
</ol>
<pre class="lang:java decode:true">public class Earthquake {

  /* Setting type of variables for this class*/
  private String mMagnitude;
  private String mLocation;
  private String mDate;

  /* creating the method to hold these variables */
  public Earthquake(String magnitude, String location, String date) {
      mMagnitude = magnitude;
      mLocation = location;
      mDate = date;
  }

  /*Setting getter methods*/
  public String getMagnitude() {
      return mMagnitude;

  }
  public String getLocation() {
      return mLocation;
  }
  public String getDate() {
      return mDate;

  }

</pre>
3. <span style="font-weight: 400;">Edit the Activity to create new Earthquake objects by calling the constructor. Instead of ArrayList of Strings (which is default), we want to create an ArrayList of Earthquake objects called earthquakes [line 14]. </span>

<span style="font-weight: 400;">We then add the new constructor by specifying the name “earthquakes” and using the .add method to add each constructor one at a time and while filling the 3 required parameters.</span>

<span style="font-weight: 400;">Lastly, we create a new adapter that takes the list of earthquakes as input. (Adapters act as a bridge between a view and a data source - an ArrayAdapter is a type of adapters that work with an array). Our custom EarthquakeAdapter is customized to generate the list of earthquakes as an input. The next step is creating the EarthquakeAdapter.</span>
<pre class="lang:java decode:true ">public class EarthquakeActivity extends AppCompatActivity {

  public static final String LOG_TAG = EarthquakeActivity.class.getName();

  @Override

  protected void onCreate(Bundle savedInstanceState) {

      super.onCreate(savedInstanceState);
      setContentView(R.layout.earthquake_activity);

      // Hardcoding the earthquake locations.

      ArrayList&lt;Earthquake&gt; earthquakes = new ArrayList&lt;&gt;();
      earthquakes.add(new Earthquake("7.2","San Francisco", "Feb 2, 2016"));
      earthquakes.add(new Earthquake("6.1","London", "July 20, 2015"));
      earthquakes.add(new Earthquake("3.9","Tokyo", "Nov 10, 2014"));
      earthquakes.add(new Earthquake("5.4","Mexico City", "May 3, 2014"));
      earthquakes.add(new Earthquake("2.8","Moscow", "Jan 31, 2013"));
      earthquakes.add(new Earthquake("4.9","Rio de Janeiro", "Aug 19, 2012"));
      earthquakes.add(new Earthquake("1.6","Paris", "Oct 20, 2011"));

      // Find a reference to the {@link ListView} in the layout
      ListView earthquakeListView = (ListView) findViewById(R.id.list);


      // Create a new {@link ArrayAdapter} of earthquakes
      EarthquakeAdapter adapter = new EarthquakeAdapter(this, earthquakes);

</pre>
4. <span style="font-weight: 400;">Create the EarthquakeAdapter java file in the root of the activity. When we create this, we want it to be an extension of the ArrayAdapter and override the getView method to control how the list item view gets created. </span>
<pre class="">@Override
public View getView(int position, View convertView, ViewGroup parent) {

    View listItemView = convertView;
    if(listItemView == null) {
        listItemView = LayoutInflater.from(getContext()).inflate(R.layout.earthquake_list_item, parent, false);
    }

    Earthquake currentEarthquake = getItem(position);</pre>
<span style="font-weight: 400;">Line 5 - checks to see if existing view is being reused, it is common for it to be null. We name it to be the convertView so that it’s clear we’re working with a listItemView.</span>

<span style="font-weight: 400;">Line 9 - will allow us to get the position parameter of the earthquake in our list, because it is an Array, we want to get the specific Array number to display on the list accordingly.</span>
<pre class="lang:java decode:true ">  Earthquake currentEarthquake = getItem(position);

      TextView magnitudeView = (TextView) listItemView.findViewById(R.id.magnitude);
      magnitudeView.setText(currentEarthquake.getMagnitude());

      TextView locationView = (TextView) listItemView.findViewById(R.id.locaction);
      locationView.setText(currentEarthquake.getLocation());

      TextView dateView = (TextView) listItemView.findViewById(R.id.date);
      dateView.setText(currentEarthquake.getDate());

      return listItemView;

  }</pre>
<span style="font-weight: 400;">Lastly, lines 1 - 14 above will allow us to bind the TextView’s by locating the XML id and set the textview to display the current earthquake data by passing the getter methods which return the specific string of that parameter.</span>

Remembering our last line in our main activity:
<pre class="lang:java decode:true">      // Set the adapter on the {@link ListView}
      // so the list can be populated in the user interface
      earthquakeListView.setAdapter(adapter);
  }

}</pre>
<span style="font-weight: 400;">This code sets the adapter of earthquakeListView and calls the adapter (which is the custom adapter we created) to view the list in the UI of the app.</span>

The above is a summary of how to generate the custom array adapter. I've made a post about it so I can refer back to this concept for my future application.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>624</wp:post_id>
		<wp:post_date><![CDATA[2018-11-18 17:48:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-18 17:48:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[journey-to-android-development-pt-4-custom-array-adapters]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android Development]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[625]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Journey to Android Development Pt. 5 (Intent for Custom Adapters)</title>
		<link>https://kiendang.me/index.php/2018/11/21/journey-to-android-development-pt-5-intent-for-custom-adapters/</link>
		<pubDate>Wed, 21 Nov 2018 00:46:32 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=642</guid>
		<description></description>
		<content:encoded><![CDATA[A continuation of custom array adapters. One of the final objectives in the Android: Network Udacity course was to create an intent to launch a browser with a pre-loaded URL. The logic was to parse the JSON that contained the URL data. In my first post of my journey, I used intents to open up an email app to send an order of coffee. My new exercise also included intents but required to open a browser and read JSON data to fill the URL section.

<img class="wp-image-677 aligncenter" src="https://kiendang.me/wp-content/uploads/2018/11/Intent-GIF-CamTasia.gif" alt="" width="316" height="561" />

As a recap for my personal knowledge, <strong>intents</strong> are types of messages that allow the binding of separate objects together at a run-time. It is the <em>intent</em> to do something and calls the android code to complete it in the background. It is written like so:
<pre class="lang:java decode:true">Intent intent = new Intent(this, Target.class);</pre>
The intent can be see implemented in line 10 below.

For my custom array adapter, an override of the method <code>setOnItemclickListener</code> was required. The reason for this is because we want to make sure we tell android exactly what to do when an item on the list is selected.
<pre class="lang:java decode:true">earthquakeListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView&lt;?&gt; adapterView, View view, int position, long l) {
                Earthquake currentEarthquake = adapter.getItem(position);

                //convert the string url into a uri object to pass into the Intent constructor
                Uri earthquakeUri = Uri.parse(currentEarthquake.getUrl());

                //Create a new intent to view earthquake URI
                Intent websiteIntent = new Intent(Intent.ACTION_VIEW, earthquakeUri);

                //Send the intent to launch a new activity
                startActivity(websiteIntent);
            }
        });
</pre>
The onItemClick takes 4 parameters:
<ol>
 	<li><code>parent</code> - the AdapterView</li>
 	<li><code>view</code> - view within the AdapterView that was clicked</li>
 	<li><code>position</code> - the position of the view in the adapter</li>
 	<li><code>id</code> - the row id of the item</li>
</ol>
The code snippet above is an example of how to implement an action on a custom adapter that was created.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>642</wp:post_id>
		<wp:post_date><![CDATA[2018-11-21 00:46:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-21 00:46:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[journey-to-android-development-pt-5-intent-for-custom-adapters]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android Development]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[645]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TFSA: Portfolio - Canadian Couch Potato</title>
		<link>https://kiendang.me/index.php/2018/12/02/tfsa-portfolio-ccp/</link>
		<pubDate>Sun, 02 Dec 2018 00:14:18 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=654</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: center;">Canadian Couch Potato Method</p>
<span style="font-weight: 400;">Investing when you are young is probably the best thing you can do. Learning at a young age will give you a huge advantage because </span><b>time</b><span style="font-weight: 400;"> is the only commodity you cannot buy. Time is the key factor in investing and will play in your favour the earlier you start.</span>

<span style="font-weight: 400;">When I read about this, I thought to myself about the expenses I had to pay, the student loans that were hovering and how I couldn’t simply bring any money to the table to invest. But understanding that if I was able to stack away 10 dollars a week, which was probably the equivalent of two Starbucks coffees, things might have been different.</span>

<span style="font-weight: 400;">In my investment strategy, I’ve decided to follow the <a href="https://canadiancouchpotato.com/model-portfolios/">Canadian Couch Potato</a> path which is influenced by John C. Bogle’s low cost index funds from <a href="https://kiendang.me/index.php/2018/10/01/dive-into-personal-finance/">Common Sense Investing</a>.</span>

<span style="font-weight: 400;">An Index fund is:</span>
<blockquote><span style="font-weight: 400;"> “Simply a basket (portfolio) that holds many, many eggs(stocks) designed to mimic the overall performance of any financial market or market sector”</span></blockquote>
<span style="font-weight: 400;">That being said:</span>
<blockquote><span style="font-weight: 400;">“Index funds eliminate the risk of individual stocks, market sectors and manager selection. Only stock market risk remains”</span></blockquote>
<span style="font-weight: 400;">I highly recommend the book as it teaches you the fundamentals of getting your fair share of the stock market return.</span>

<span style="font-weight: 400;">I followed the Millennial Revolution’s investment workshop to get started with Questrade which can be found <a href="https://www.millennial-revolution.com/investworkshop/">here</a>.</span><span style="font-weight: 400;">
</span><span style="font-weight: 400;">
</span><span style="font-weight: 400;">In a TFSA account, it is ideal to be investing in the Canadian and International markets because there are no withholding taxes on your dividends. The US (IRS) levies a withholding tax of 15% on dividends paid to Canadian investors. Therefore, it is technically being taxed and we will not be able to claim these taxes. </span>

<span style="font-weight: 400;">However, the good news is that IRS does not levy withholding taxes held in an RRSP. There are other situations where having US stocks in a TFSA would be ideal but you would need to do your own research before doing so.</span>

<span style="font-weight: 400;">In Questrade, I’ve purchased 3 funds as per Canadian Couch Potato’s model - a set it and forget it model.</span>
<ol>
 	<li style="list-style-type: none">
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">VCN - Canada All Cap Index ETFs - Canadian Market (Equity)</span></li>
 	<li style="font-weight: 400;">VAB - Canadian Aggregate Bond Index ETF (Bonds)</li>
 	<li><span style="font-weight: 400;">XEF - iShares CORE MSCI Index ETF - International Market (Equity)</span></li>
</ol>
</li>
</ol>
<span style="font-weight: 400;">The updated Canadian Couch Potato (2017) replaced VAB with ZAG (BMO’s bond ETFs because of its aggressive MER of 0.09%). VAB has 80% government bonds, 20% corporates where as ZAG is 70% and 30% respectively.</span>

<span style="font-weight: 400;">My risk tolerance is fairly aggressive at 85% equity, and 15% bonds because I’m young and could care less about volatility. I know that <a href="https://www.cnbc.com/2018/09/18/warren-buffett-and-jack-bogle-recommend-buying-and-holding.html">long term growth</a> is the key to success.</span>

<span style="font-weight: 400;">When completed, you should be expecting an average annual return of 7-9% over a </span><b>long </b><span style="font-weight: 400;">period of time. If you were to divide your total yield over a 10-20 year period, the math will calculate out to be an average of 7%. This is very important to remember because when the markets are down, you need to “re-balance” your portfolio, which is done once a year.</span>

<span style="font-weight: 400;">The key to building wealth is time. Index funds take the excitement out of investing, but it should be a good thing because it's a steady way of getting the most out of the stock market.</span>

<span style="font-weight: 400;"> Life is short; humans are creatures who crave excitement, so if you want to pick your own stocks, feel free to take some risks but as John C Bogle says, stock picking is like finding a needle in a haystack, its better to just buy the haystack.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>654</wp:post_id>
		<wp:post_date><![CDATA[2018-12-02 00:14:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-02 00:14:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tfsa-portfolio-ccp]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="personal-finance"><![CDATA[Personal Finance]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[656]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Seiko SKX007 Diver&#039;s Watch</title>
		<link>https://kiendang.me/index.php/2018/12/03/seiko-skx007-divers-watch/</link>
		<pubDate>Mon, 03 Dec 2018 03:31:37 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=664</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">The famous Seiko SKX007, an iconic timepiece known by many watch enthusiasts. I’ve seen this specific model all over YouTube and articles but I’ve never had seen one in person until now.</span>

<span style="font-weight: 400;">There’s something that hints a person’s sense of taste when they wear an iconic timepiece. It shows the appreciation of traditional watchmaking and horology. For many, it could be a sense of style and expression and for others, an heirloom. </span>

<span style="font-weight: 400;">I instantly recognized the <a href="https://www.omegawatches.com/watches/speedmaster/moonwatch/professional/product">moon watch</a> on my colleagues wrist and asked him about it. He spent some time talking about how he got into the hobby of watches and a Seiko he inherited from his father. From there, I showed him my own <a href="https://kiendang.me/index.php/2018/09/18/seiko-snkl23-crystal-sapphire-mod/">Seiko</a> watch and he told me he actually had more than the one Seiko in his collection. I immediately asked if one of them was the Seiko SKX007 and lo and behold, it was. He thanked me for asking about his watch and told me he would bring in the SKX007 for me to check it out.</span>

<span style="font-weight: 400;">My first impression when it arrived was how much better it looked in person than from the videos and pictures online. There was a certain depth to the actual watch face that is completely understated in pictures.</span>

<span style="font-weight: 400;"><img class="wp-image-665 aligncenter" src="https://kiendang.me/wp-content/uploads/2018/12/IMG_20181127_123107.jpg" alt="" width="507" height="535" /> </span>

<span style="font-weight: 400;">The watch feels very well made and when paired with a NATO, it gives the watch a very versatile look. The dial is minimal but functional and the lume is excellent. I was hesitant on wearing a 41mm watch as my wrists are only 6.5”, but to my surprise, it wore smaller than expected.</span>

<span style="font-weight: 400;">The Seiko SKX007 was produced in 1996 with an in-house 7s26 movement, known to be extremely robust and reliable with very minimal maintenance. An affordable submariner that is ISO 6425 certified for all under $200 USD. It also has a unique utilitarian styling which makes it very easy to spot. Unfortunately, the model has been discontinued and now goes for a whopping $300 CAD.</span>

<span style="font-weight: 400;">A new lineage of watches from Seiko was announced which is the Seiko Mini-Turtle, a watch that resembles a hybrid of the SKX007 and the Turtle. Perhaps I'll reward myself with the new apparent heir and forego the famous SKX007 due to its inflated price.</span>

<span style="font-weight: 400;">If I'm able to find a great price on this watch, I would definitely pick this in a heartbeat. I’ve had the pleasure of wearing this watch for a week and had a great time bonding over watches with my colleague. </span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>664</wp:post_id>
		<wp:post_date><![CDATA[2018-12-03 03:31:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-03 03:31:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[seiko-skx007-divers-watch]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[666]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Journey to Android Development Pt. 6 (HTTP Request and Async Task)</title>
		<link>https://kiendang.me/index.php/2018/12/06/journey-to-android-development-pt-6-http-request-and-async-task/</link>
		<pubDate>Thu, 06 Dec 2018 03:40:24 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=680</guid>
		<description></description>
		<content:encoded><![CDATA[&nbsp;

<code>HttpURLConnection</code> is an HTTP client that you can use to make HTTP request in Android. This class helps you send and receive data across the web using an HTTP connection.

You start by calling <code>url.openConnection()</code>, the url is defined by the user and we use the <code>openConnection</code> method to access it. In order to fire out the information we use the <code>setRequestMethod</code> to be “GET” and then connect using the connect method to establish the connection with the server and lastly you would use <code>getInputStream()</code> to get the result.

The code snippet can be found below:
<pre class="lang:java decode:true"> urlConnection = (HttpURLConnection) url.openConnection();
       urlConnection.setRequestMethod("GET");
       urlConnection.setReadTimeout(10000 /* milliseconds */);
       urlConnection.setConnectTimeout(15000 /* milliseconds */);
       urlConnection.connect();
       inputStream = urlConnection.getInputStream();
       jsonResponse = readFromStream(inputStream);</pre>
<span style="font-weight: 400;">There are different types of HTTP request methods, the two main types are below:</span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;"><strong>GET</strong> (read) - most commonly used, typically reading info and sending it back to the client</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;"><strong>Post</strong> (write) - when you update something to the server.</span></li>
</ol>
<span style="font-weight: 400;">In Android, we enter the code below to access the URL information and return it as a string:</span>
<pre class="lang:java decode:true">private String makeHttpRequest(URL url) throws IOException {
   String jsonResponse = "";
   HttpURLConnection urlConnection = null;
   InputStream inputStream = null;
   try {
       urlConnection = (HttpURLConnection) url.openConnection();
       urlConnection.setRequestMethod("GET");
       urlConnection.setReadTimeout(10000 /* milliseconds */);
       urlConnection.setConnectTimeout(15000 /* milliseconds */);
       urlConnection.connect();
       inputStream = urlConnection.getInputStream();
       jsonResponse = readFromStream(inputStream);
   } catch (IOException e) {
       // TODO: Handle the exception
   } finally {
       if (urlConnection != null) {
           urlConnection.disconnect();
       }
       if (inputStream != null) {
           // function must handle java.io.IOException here
           inputStream.close();
       }
   }
   return jsonResponse;</pre>
<span style="font-weight: 400;">HTTP request is one of the main codes you require in order to access data online from an API. </span><span style="font-weight: 400;">AsyncTask allows you to perform a background operation and publish results in the UI thread without having to manipulate threads or handlers. </span>

<span style="font-weight: 400;">Asynchronous task allows android to process data in the background thread and update the UI thread. In android it is defined by 3 generic types, <code>Params</code>,<code> Progress</code> and <code>Result</code> with 4 steps:</span>
<ol>
 	<li style="font-weight: 400; text-align: left;"><span style="font-weight: 400;">onPreExecute</span></li>
 	<li style="font-weight: 400; text-align: left;"><span style="font-weight: 400;">doInBackground - does it off the UI thread</span></li>
 	<li style="font-weight: 400; text-align: left;"><span style="font-weight: 400;">onProgressUpdate</span></li>
 	<li style="font-weight: 400; text-align: left;"><span style="font-weight: 400;">onPostExecute</span></li>
</ol>
<span style="font-weight: 400;">Example below:</span>
<code>AsyncTask&lt;Params, Progress, Result&gt;</code>
If there are no data type required, then it would be used as <code>Void</code>
<pre class="lang:java decode:true">private class DownloadFilesTask extends AsyncTask&lt;URL, Integer, Long&gt; {
     protected Long doInBackground(URL... urls) {
         int count = urls.length;
         long totalSize = 0;
         for (int i = 0; i &lt; count; i++) {
             totalSize += Downloader.downloadFile(urls[i]);
             publishProgress((int) ((i / (float) count) * 100));
             // Escape early if cancel() is called
             if (isCancelled()) break;
         }
         return totalSize;
     }

     protected void onProgressUpdate(Integer... progress) {
         setProgressPercent(progress[0]);
     }

     protected void onPostExecute(Long result) {
         showDialog("Downloaded " + result + " bytes");
     }
 }
</pre>
<span style="font-weight: 400;">One of the main issues we need to worry about is the screen orientation. Again, this <a href="https://kiendang.me/index.php/2018/11/15/journey-to-android-development-pt-3-android-orientation/">screen orientation</a> comes up and we need to address it because it destroys our current activity and recreates it in the new orientation. When we are rotating, we need to be careful not to run activities in the background multiple times.</span>

<span style="font-weight: 400;">We need to use </span><b>Loaders. </b><span style="font-weight: 400;">Loaders run on separate threads and helps us load data so they can be displayed in an activity or fragment, regardless of screen orientation which prevents duplicate queries. This would be the best option to update data in a user interface and will be explored in the next post.</span>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>680</wp:post_id>
		<wp:post_date><![CDATA[2018-12-06 03:40:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-06 03:40:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[journey-to-android-development-pt-6-http-request-and-async-task]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android Development]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[720]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Journey to Android Development Pt. 7 (Introduction to Databases)</title>
		<link>https://kiendang.me/index.php/2018/12/09/journey-into-android-pt-7-introduction-to-databases/</link>
		<pubDate>Sun, 09 Dec 2018 03:59:03 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=726</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">Android Basics: Data Storage, the last course for Android for beginners course on <a href="https://eu.udacity.com/course/android-development-for-beginners--ud837">Udacity</a>. </span><span style="font-weight: 400;">I plan on finishing this curriculum completely and then supplementing my android app building with <a href="https://www.amazon.ca/Head-First-Android-Development-Brain-Friendly/dp/9352136063/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1544326588&amp;sr=1-1&amp;keywords=Head+First+Android+Development+2nd+edition">Head First Android Development</a> to fill in any missing details.</span>

<span style="font-weight: 400;">The next step is enrolling in Android Development for Intermediate after being more comfortable with Android and Java.</span>

<span style="font-weight: 400;">In the data storage course, SQL was introduced. I’ve done a bit of SQL self study from the Stanford course in hopes to complete my certification, however, with the lack of real substance in accomplishing anything with SQL and doing plain questions. </span><span style="font-weight: 400;">Now revisiting SQL in Android, it became a nice refresher and something I feel proud of learning beforehand which allowed me to keep up with the instructor. I will still continue to learn enough so that I can finish my SQL certification.</span>

<span style="font-weight: 400;">The objective is create a database to store pets for a local shelter. In this course, SQLite is used. Some recap of the lessons are below:</span>

<span style="font-weight: 400;">SQL Statements:</span>
<pre class="lang:tsql decode:true">CREATE TABLE pets(
_id INTEGER, 
name TEXT, 
breed TEXT, 
gender INTEGER,
weight INTEGER);</pre>
<span style="font-weight: 400;">The <code>CREATE TABLE</code> is part of SQL. This code in SQL initiates a new table named pets with the column name of <code>_id</code>, <code>name</code>, <code>breed</code>, <code>gender</code> and <code>weight</code>. The data type is initiated in red so we know exactly what each parameter field takes. The <code>_id</code> is a conventional column for Android. </span>

<span style="font-weight: 400;">The conventional parameters of creating a table goes as follows:</span>
<pre class="lang:tsql decode:true">(columnname1 &lt;data type&gt;, columnname2 &lt;data type&gt;, . . .);</pre>
For  my reference, I've created a write up for Generic SQL commands below:

<strong>SELECTING A SPECIFIC COLUMN FROM A TABLE:</strong>
<pre class="lang:tsql decode:true">SELECT &lt;column&gt; FROM &lt;tablename&gt;;</pre>
An asterisk (*) can be used to select all of a specific column.

<strong>CREATING A NEW ENTRY IN SQL:</strong>
<pre class="lang:tsql decode:true">INSERT INTO &lt;tablename&gt; (&lt;columnname1&gt;, &lt;columnname2&gt;...) VALUES (&lt;datatype1&gt;,&lt;datatype2&gt;...)</pre>
We can also make entries of SQL data more robust by introducing commands below:

<span style="font-weight: 400;"><strong>PRIMARY KEY</strong> - There can only be 1 primary key, ensures uniqueness</span>
<span style="font-weight: 400;"><strong>AUTOINCREMENT</strong> - Allows increase of a value</span>
<span style="font-weight: 400;"><strong>NOT NULL</strong> - Null values are not allowed</span>
<span style="font-weight: 400;"><strong>DEFAULT</strong> - When inserting a new row, if no values are found then default value will be used</span>

For example, we are creating a table that satisfy the requirements below:
<ul>
 	<li>auto-fills the <code>_id</code> value with a primary key and auto-increments the value by 1,</li>
 	<li>creating a <code>name</code> that is mandatory to have</li>
 	<li><code>breed</code> parameter to be optional</li>
 	<li><code>gender</code> to be an integer that cannot be empty</li>
 	<li><code>weight</code> to be an integer that cannot be empty or else it will default to 0</li>
</ul>

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>726</wp:post_id>
		<wp:post_date><![CDATA[2018-12-09 03:59:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-09 03:59:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[journey-into-android-pt-7-introduction-to-databases]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android Development]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[journey-into-android-pt-7-introduction-to-databases__trashed]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[741]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Journey to Android Development Pt. 8 (Calculator UI)</title>
		<link>https://kiendang.me/index.php/2018/12/16/journey-to-android-development-pt-8-calculator-app/</link>
		<pubDate>Sun, 16 Dec 2018 22:18:59 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=759</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>The best way for me to retain the knowledge is to take small steps and implement what I’ve learned by building simple apps. The database topic was very dry and I felt like I was drifting away from what I learned recently. A short break from Udacity was needed.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>First and foremost, I spent a lot of time researching tips for beginners who are starting out in Android Development. There are tons of valuable tips from experienced programmers who have gone through this journey. As someone who is starting off, I made sure to start off on the right foot by avoiding common mistakes and creating good habits. I found 2 really good resources below:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol>
<li><a href="https://blog.aritraroy.in/50-ultimate-resources-to-master-android-development-15165d6bc376">50 Ultimate Resources to Master Android Dev (Medium Blog Compilation)</a></li>
<li><a href="https://github.com/futurice/android-best-practices">Android Best Practices (Github Resource Library)</a></li>
</ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>For the calculator app, I made multiple <strong>fragments</strong> instead of building in one activity. Fragments are reusable components or sub activities. They can be used to control certain parts of the screen and allows for a more versatile control over <a href="https://kiendang.me/index.php/2018/11/11/journey-to-android-development-pt-2/">multiple devices</a>.</p>
<h2 style="text-align: center;"><strong>Building the Calculator UI</strong></h2>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The first fragment was the <code>input_fragment</code> seen below:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":760,"align":"center","width":276,"height":459} -->
<div class="wp-block-image" style="text-align: center;">
<figure class="aligncenter is-resized"><img class="aligncenter wp-image-760 size-full" src="https://kiendang.me/wp-content/uploads/2018/12/Calculator.png" alt="" width="383" height="637" />
<figcaption>Grid Layout with Buttons</figcaption>
</figure>
</div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Multiple buttons in a grid like manner was achieved using LinearLayout XML</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<pre class="lang:xhtml decode:true ">&lt;LinearLayout
   android:orientation="horizontal"
   android:layout_width="match_parent"
   android:layout_height="0dp"
   android:layout_weight="1"&gt;
&lt;/LinearLayout&gt;
</pre>
<p>Key points:</p>
<ol>
<li>Specified the orientation to be horizontal which is the primary layout we need to stack buttons</li>
<li>Height is equal to <code>0dp</code> because we want to make it stretch as much as the device will allow it to stretch based on the number of rows we create</li>
<li>Weight is considered to be 1 so that all buttons can be equal.</li>
</ol>
<p>Another fragment was created called the <code> fragment_display</code>, which will allow us to see the input the from the calculator app. This fragment will also show the delete button:</p>
<p><img class="wp-image-782 aligncenter" src="https://kiendang.me/wp-content/uploads/2018/12/DisplayFragment.png" alt="" width="222" height="175" /></p>
<p><span style="font-weight: 400;">Since these fragments are separated from the main activity, I’ll combine the two in the order they are displayed as seen below:</span></p>
<p><img class="aligncenter wp-image-783 " src="https://kiendang.me/wp-content/uploads/2018/12/Screenshot_1544986111-576x1024.png" alt="" width="296" height="525" /></p>
<p>Code snippet below:</p>
<pre class="lang:xhtml decode:true">&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
   android:id="@+id/root_activity_calculator"
   xmlns:app="http://schemas.android.com/apk/res-auto"
   xmlns:tools="http://schemas.android.com/tools"
   android:layout_width="match_parent"
   android:layout_height="match_parent"
   tools:context=".CalculatorActivity"&gt;

   &lt;fragment
       android:id="@+id/fragment_display"
       android:layout_width="match_parent"
       android:layout_height="wrap_content"
       android:name="com.example.kien.calculator.DisplayFragment"
       tools:layout="@layout/fragment_display" /&gt;

   &lt;fragment
       android:id="@+id/fragment_input"
       android:layout_width="match_parent"
       android:layout_height="match_parent"
       android:name="com.example.kien.calculator.InputFragment"
       tools:layout="@layout/fragment_input"
       android:layout_below="@+id/frag_display"/&gt;

&lt;/RelativeLayout&gt;
</pre>
<p>Lastly, using the <code>styles.xml</code> resource file which combines all styles under a name, I was able to follow the <a href="https://material.io/design/">material design guidelines</a> and generate the <a href="https://www.materialpalette.com/">material design colour palette.</a> </p>
<pre class="lang:xhtml decode:true">&lt;resources&gt;
   &lt;style name="ButtonNumberPad" parent="Widget.AppCompat.Button"&gt;
       &lt;item name="android:textColor"&gt;@android:color/white&lt;/item&gt;
       &lt;item name="android:background"&gt;@color/colorPrimary&lt;/item&gt;
       &lt;item name="android:textSize"&gt;34sp&lt;/item&gt;
   &lt;/style&gt;
   &lt;style name="ButtonOperation" parent="Widget.AppCompat.Button"&gt;
       &lt;item name="android:textColor"&gt;@android:color/white&lt;/item&gt;
       &lt;item name="android:background"&gt;@color/colorPrimaryDark&lt;/item&gt;
       &lt;item name="android:textSize"&gt;34sp&lt;/item&gt;
   &lt;/style&gt;
   &lt;style name="TextViewDisplay"&gt;
       &lt;item name="android:textSize"&gt;56sp&lt;/item&gt;
       &lt;item name="android:gravity"&gt;center_vertical|right&lt;/item&gt;
       &lt;item name="android:maxLines"&gt;1&lt;/item&gt;
   &lt;/style&gt;
   &lt;style name="ScrollViewDisplay"&gt;
       &lt;item name="android:paddingLeft"&gt;16dp&lt;/item&gt;
       &lt;item name="android:paddingRight"&gt;16dp&lt;/item&gt;
   &lt;/style&gt;
   &lt;style name="ImageButtonDisplay" parent="Base.Widget.AppCompat.ImageButton"&gt;
       &lt;item name="android:alpha"&gt;.54&lt;/item&gt;
       &lt;item name="android:background"&gt;&lt;/item&gt;
   &lt;/style&gt;
&lt;/resources&gt;
</pre>
<p>The <code>parent</code> in the style tag allows us to target the Android specific default styling. The code eventually gives us this beautiful layout we see below. The colours are defined in the <code>colors.xml</code> file.</p>
<p><img class="wp-image-784 aligncenter" src="https://kiendang.me/wp-content/uploads/2018/12/Screenshot_1544988566.png" alt="" width="274" height="488" /></p>
<p>The completed app can be found here in this post.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>759</wp:post_id>
		<wp:post_date><![CDATA[2018-12-16 22:18:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-16 22:18:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[journey-to-android-development-pt-8-calculator-app]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android Development]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[790]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Productivity: Pomodoro Technique</title>
		<link>https://kiendang.me/index.php/2018/12/19/productivity-pomodoro-technique/</link>
		<pubDate>Wed, 19 Dec 2018 02:56:08 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=811</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">Pomodoro Technique is a time management technique that allocates 25 minutes of focus to a particular task followed by a 5 minute break. It is developed by <a href="https://francescocirillo.com/pages/pomodoro-technique">Franceso Cirillo</a> in the late 1980s.</span>

<span style="font-weight: 400;">During my undergrad, I’ve struggled with focusing and studying which eventually led me to finding this technique. I recently read <a href="https://www.goodreads.com/book/show/7117789-pomodoro-technique-illustrated">Pomodoro Technique Illustrated by Staffan Noteberg</a>, to learn how to use this technique more effectively and came up with the summaries below for reference.</span>
<h1 style="text-align: center;"><span style="font-weight: 400;">Core Fundamentals of the Technique:</span></h1>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Choose the highest-priority activity on the To Do Today sheet and only focus on that activity
</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;"><span style="font-weight: 400;">Deming-Shewhart Cycle - PDCA (Plan Do Check Act) a problem solving process to improve processes and based on the scientific method: Hypothesis-Experiment Evaluation.</span></span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Create 3 pieces of paper <a href="https://francescocirillo.com/products/the-pomodoro-technique-sheets">(which can be downloaded)</a></span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">To Do Today - List of actual activities planned for today</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Activity Inventory Sheet - Holds your name to an unsorted list</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Record Sheet - Keeps a metric to be used for process improvements</span></li>
</ol>
</li>
</ol>
<b>Do not switch or stop an activity in the middle of a Pomodoro.</b><span style="font-weight: 400;"> It takes you off your rhythm. The idea is to build rhythm to generate flow.</span>
<h2 style="text-align: center;"><span style="font-weight: 400;">Dealing with distraction and interruption</span></h2>
<span style="font-weight: 400;">One of the main things</span><span style="font-weight: 400;"> I struggle with are </span><b style="font-size: 1.125rem;">interruptions</b><span style="font-weight: 400;">. The book has remedies for this and how to deal with them.</span>

<span style="font-weight: 400;">There are two main types of interruptions and they must be documented.  We need to be able to measure our process and document events that distract us so we can identify and minimize them.</span>
<h4 style="text-align: center;"><span style="text-decoration: underline;"><strong>Internal Interruptions</strong></span></h4>
<strong><em><span style="color: #000000; font-family: Montserrat, 'Helvetica Neue', sans-serif; font-size: 1.125rem;">A sudden urge of to do something while in Pomodoro, completely urgent and unplanned.</span></em></strong>

Solution<span style="font-weight: 400;">:
</span><span style="font-weight: 400;">Write it down on your unplanned part of your To Do Today and document it as 1 internal interruption. The number is a measurement of how many interruptions you’ve had. Once documented, you can get this sense of urgency out of your head and focus at the task you are working on.</span>

<strong><em><span style="color: #000000; font-family: Montserrat, 'Helvetica Neue', sans-serif; font-size: 1.125rem;">Body interruptions that require urgent washroom breaks. If you need to go, you must void your Pomodoro.</span></em></strong>

&nbsp;

Solution:<b>
</b><span style="font-weight: 400;">Shrink your Pomodoro to 15 minutes instead and eventually work your way up to 25 minutes. We need to remember that these 25 minute time blocks are precious and cannot be interrupted or we lose focus.</span>
<h4 style="text-align: center;"><strong><span style="text-decoration: underline;">External Interruptions</span></strong></h4>
<strong><em><span style="color: #000000; font-family: Montserrat, 'Helvetica Neue', sans-serif; font-size: 1.125rem;">When emails constantly go off or someone at work requires help. </span></em></strong>

<b>Solution:
</b><span style="font-weight: 400;">Write it down so that you can remove it from your attention and get back to it later. Do not answer the e-mails right away, just finish up your Pomodoro and then reply when you are completed.</span>

<span style="font-weight: 400;">For external interruptions, perhaps communication with your teammates might not count as an interruption as it is work related. It is up to your discretion whether to abandon your time block. They compete with your attention, so avoiding social media notifications and your phone would be the most effective way to minimize distractions.
</span>
<h4 style="text-align: center;"><span style="text-decoration: underline;"><b>Conclusion</b></span></h4>
<span style="font-weight: 400;">When doing the Pomodoro Technique, wind the timer when you</span><b> feel ready</b><span style="font-weight: 400;"> and in the </span><b>right mood.</b><span style="font-weight: 400;"> The Pomodoro Technique might not be for everyone, but I highly recommend it for those who need to find a way to stay productive. You might fall into two categories below which Steffan outlines in the book:</span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;"><span style="font-weight: 400;">Someone who is really inspired before starting anything which might cause an overwhelming lists of tasks and might be jumping to one task after another, ultimately leading to disorganization.</span></span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Someone who wants to really get something done in a very extensive and long session when they are in the zone. Concentration does not equal productivity and long periods of concentration will be slowed down by trivia. Pomodoro technique allows a sustainable system with frequent breaks.</span></li>
</ol>
<span style="font-weight: 400;">I purchased an actual <a href="https://www.intelligentchange.com/products/the-productivity-planner">day planner</a> specific to the Pomodoro to write these tasks down. Something about going old school with pen and paper makes it feel more personal and makes me feel accountable for using a notebook. I've spent some time on figuring out how other people use their day planner and hopefully increase my productivity.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>811</wp:post_id>
		<wp:post_date><![CDATA[2018-12-19 02:56:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-19 02:56:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[productivity-pomodoro-technique]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[814]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Merry Christmas!</title>
		<link>https://kiendang.me/index.php/2018/12/25/merry-christmas/</link>
		<pubDate>Tue, 25 Dec 2018 14:17:23 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=827</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://www.youtube.com/watch?v=a2EOAF3zPCc">Gordon Ramsey's Beef Wellington</a>. I've been spoiled by my S.O's amazing cooking skills.

<img class="size-full wp-image-830 aligncenter" src="https://kiendang.me/wp-content/uploads/2018/12/IMG_20181224_184314.jpg" alt="" width="4048" height="2473" />

December is ending quickly, can't wait for 2019!

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>827</wp:post_id>
		<wp:post_date><![CDATA[2018-12-25 14:17:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-25 14:17:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[merry-christmas]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="food"><![CDATA[Food]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[829]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
			<wp:meta_value><![CDATA[2018-12-26]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Watches</title>
		<link>https://kiendang.me/index.php/2018/12/28/watches/</link>
		<pubDate>Fri, 28 Dec 2018 02:14:54 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=834</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">A hobby in watches that eventually lead me down a deep rabbit hole. I would spend hours reading articles from <a href="https://www.hodinkee.com/">Hodinkee</a>, <a href="https://wornandwound.com/">Worn and Wound</a> and watching videos from <a href="https://www.youtube.com/watch?v=gNAz3zpFphQ&amp;list=PLZW36VbJh66dsfiWn0zDzBBuKDSZpMcjK">TGV</a>, <a href="https://youtu.be/ERVwwPSbpZo">Teddy Baldassarre</a> and <a href="https://www.youtube.com/watch?v=BhL-m3mgdIQ">Just One More Watch</a>. </span>

<span style="font-weight: 400;">A watch is a timepiece intended to be carried for the soul purpose of keeping time. However, it can be much more than just a pretentious flaunt of wealth as it stems back to the 18th century. In today’s modern technology, we have replaced many items with a phone that does just about everything. Despite this, there are several reasons why I think watches are timeless:</span>

<b>Heirloom</b>

<span style="font-weight: 400;">A watch can be inherited by someone special in your family. It provides a functional jewelry that can be worn in memory of a loved one. They can be passed down to generations and influence the next generation to discover their own taste of watches. Imagine a watch for each family generation. That would be so cool. A quality timepiece can last forever if maintained regularly.</span>

<b>Individual Expression</b>

<span style="font-weight: 400;">A wrist watch can also be a fashionable piece to an outfit. I personally do not own a lot of jewelry that I can pull off tastefully, however, I can feel confident in wearing a watch that I like. There are tons of watches with different shapes, styles, colours and with strap combinations, there are endless possibilities to express an individual's unique taste. Whether it be fashion or luxury watches, it’s the gateway to the horological journey. </span>

<b>Life Achievement</b>

<span style="font-weight: 400;">You can purchase a watch to capture a moment in your life. Watches have captured many historical events. For example: The Omega Speedmaster became the first watch on the moon, the Rolex Explorer became the first watch worn on top of Mount Everest, the first ever quartz watch was made by Seiko in 1969. Purchasing your own watch can signify an achievement in your life that provide a story as you pass it down to your kids or grand kids.</span>

<b>Appreciation of Craftsmanship </b>

<span style="font-weight: 400;">Watches before the quartz era used to be very complex. Before the invention of the battery, mechanical parts were used. A simple mechanical watch had about 130 components which included the mainspring, balance wheel, gears and winding stem, all of which had to be precisely engineered in order to keep the watch oscillating.</span>

<span style="font-weight: 400;">Whether its a quartz or a mechanical watch, wearing one shows appreciation for watchmaking. Being part of horology is in the form of any time keeping device. Quartz is the most accurate technology for time keeping, however, mechanical watches has its own merit of being extremely difficult to manufacture due to its complexity. Mechanical watch's fantastic engineering is one example of human's greatest accomplishments.</span>

<span style="font-weight: 400;">Watches don’t necessarily cost a fortune to own one and that is the best part of this hobby. However, some watches can get very expensive and I used to think it was crazy to spend thousands of dollars on one. </span><span style="font-weight: 400;">But over time, I start to realize and appreciate the rich heritage of many watch brands for bringing a simple and elegant piece of jewelry that would probably be more meaningful than any expensive device we have in our pockets.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>834</wp:post_id>
		<wp:post_date><![CDATA[2018-12-28 02:14:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-28 02:14:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[watches]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[839]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Journey Into Android Development Pt. 9 (Calculator App)</title>
		<link>https://kiendang.me/index.php/2018/12/28/journey-into-android-development-pt-9-calculator-app/</link>
		<pubDate>Fri, 28 Dec 2018 19:56:50 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=850</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">Here’s my completed Calculator App in action!</span>

<img class=" wp-image-851 aligncenter" src="https://kiendang.me/wp-content/uploads/2018/12/Calculator-App.gif" alt="" width="368" height="654" />

<span style="font-weight: 400;">One of the things I wanted to do before I started going into Android Development is to research and really understand the tools available for building apps. By implementing Androids best practices, this will help me develop the proper skill to adapt and streamline any changes.</span>

<span style="font-weight: 400;">The summary of this project exposed to me to:</span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Model-View-Presenter - using proper architectural patterns</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Interfaces - remove dependencies on specific classes</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Fragments - how to properly implement them</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Importing libraries - making use of libraries instead of reinventing the wheel</span></li>
</ol>
<b>Model View Presenter</b>

<span style="font-weight: 400;">For this app, I exposed myself with the Model-view-presenter architectural pattern for building applications. I found this information here in this <a href="https://medium.com/cr8resume/make-you-hand-dirty-with-mvp-model-view-presenter-eab5b5c16e42">link</a> which helps explain the fundamentals of an MVP. Below is my hand made diagram of understanding what went on with my calculator app.</span>

<img class="wp-image-854 aligncenter" src="https://kiendang.me/wp-content/uploads/2018/12/Calculator-MVP.jpg" alt="" width="515" height="396" />

<b>Interfaces (from what I understand)</b>

<span style="font-weight: 400;">Interfaces are similar to classes, they contain only constants, method signatures, default methods, static methods and nested types. They cannot be instantiated and only be implemented by classes or extended by other interfaces</span>

<span style="font-weight: 400;">In short, for Android, interfaces are used so we can disconnect the button class from the specific activity. By doing so, we remove the dependency and allows classes to communicate through an interface instead of calling methods on specific classes. So we can create multiple buttons and re-use them in different fragments.</span>

<span style="font-weight: 400;">How does this help?</span>

<span style="font-weight: 400;">For example, if we had to create a widget in fragments, we can pass the Fragment activity through the button as long as the Fragment is implementing the interfaces. This allows us to reduce tight coupling, direct independency between activities and buttons. Therefore, giving us a more adaptable code base to handle any changing requirements in our app.</span>

<span style="font-weight: 400;">Example of the interface code used in CalculatorContract (Interface):</span>
<pre class="lang:java decode:true ">public interface CalculatorContract {

   //Our View handles these methods (DisplayFragment)
   interface PublishToView{
       void showResult(String result);
       void showToastMessage(String message);
   }

   //passes click events from our View (DisplayFragment), to the presenter
   interface ForwardDisplayInteractionToPresenter {
       void onDeleteShortClick();
       void onDeleteLongClick();
   }

   //passes click events from our View (InputFragment) to the presenter
   interface ForwardInputInteractionToPresenter {
       void onNumberClick(int number);
       void onDecimalClick();
       void onEvaluateClick();
       void onOperatorClick(String Operator);


   }

}</pre>
<span style="font-weight: 400;">These methods would be called in the Presenter called <code>CalculatorPresentor</code>. The java class will implement the <code>ForwardDisplayInteractionToPresenter</code> and <code>ForwardInputInteractionToPresenter</code> and <code>CalculationResult</code> from the Calculation class.</span>

<span style="font-weight: 400;">The Calculation Class is what drives our actual calculation and pushes it back to the Presenter Class which allows it to push to <code>DisplayFragment</code></span>

<b>Fragments </b>

<span style="font-weight: 400;">I used two fragments in this calculator app. Fragments allow to adjust for multiple screen sizes which allow for more flexibility.</span>

<b>Importing Libraries (Android Implementation)</b>

<span style="font-weight: 400;">My first time importing libraries and I’ve had issues getting my Gradle to work. After 30 minutes of constant messing around with versions and a bunch of stackoverflow questions later, I was able to get Butter Knife installed.</span>

<b>Butter Knife</b>

<span style="font-weight: 400;"><a href="http://jakewharton.github.io/butterknife/">Butter Knife</a> was used to simplify the binding of buttons ID and make them much easier to deal with.</span>

<span style="font-weight: 400;">Without this library, I would have had to declare and set all my buttons below and declare an onClick method for every individual button. For example, assigning onClick Listeners for Buttons one and two only..</span>
<pre class="lang:java decode:true">private Button one;
private Button two;

public View onCreateView(Layout Inflator, ViewGroup Container, Bundle savedInstanceState) {

     View v = inflater.inflate(R.layout.fragment_input, container, false);

      one (Button) = v.findViewById(R.id.ButtonOne);
      one.setOnClickListener(new View.OnClickListener() {
	@Override
	Public void onClick(View view) {
            }
      }

      two (Button) = v.findViewById(R.id.ButtonTwo);
      two.setOnClickListener(new View OnClickListener() {
	@Override
	Public void onClick(View view) {
            }
      }

Return v

}
.... This would need to continue on for 14 other buttons which will make our code very long and repetitive.</pre>
<span style="font-weight: 400;">To circumvent this long code, Butter Knife allows you to do the following by adding ButterKnife.bind(this, v); to the onCreateView method to create our annotations:</span>

<span style="font-weight: 400;">For the <code>onClick</code> shortcut, we can create the method <code>onNumberClick</code>.</span>

<span style="font-weight: 400;">The <code>@OnClick</code> is a Butter Knife annotation and assigns all the buttons by throwing it in the array below and associating it with one method we created <code>OnNumberClick</code> based on which button was clicked in the array.</span>
<pre class="lang:java decode:true ">@OnClick({R.id.ButtonOne, R.id.ButtonTwo, R.id.ButtonThree, R.id.ButtonFour,
       R.id.ButtonFive, R.id.ButtonSix, R.id.ButtonSeven, R.id.ButtonEight,
       R.id.ButtonNine, R.id.ButtonZero})

public void onNumberClick(Button v) {

   forwardInteraction.onNumberClick(Integer.parseInt(v.getText().toString()));
</pre>
<b>Arity Library</b>

<span style="font-weight: 400;">Arity helps evaluate arithmetic expressions represented as strings. Basically, it will take my expression which is in a string and evaluate it mathematically by converting my string operators into actual mathematical operations.</span>

<span style="font-weight: 400;">One advice I came across was that I should try focusing on building apps instead of reinventing core functionality that someone has already created. Importing libraries will help reduce time significantly in building apps. This will give me practice in reading documentation of other libraries and figuring out how to use them effectively. I found this to be a very helpful exercise.</span>

<span style="font-weight: 400;">My calculation code snippet is below:</span>
<pre class="lang:java decode:true">public class Calculation {

   private final Symbols symbols;
   private CalculationResult calculationResult;
   private static String currentExpression;

   interface CalculationResult {
       void onExpressionChanged(String result, boolean successful);
   }

   public void setCalculationResultListener(CalculationResult calculationResult) {
       this.calculationResult = calculationResult;
       currentExpression = "";
   }

   public Calculation() {
       symbols = new Symbols();
   }

   public void deleteCharacter() {
       if (currentExpression.length() &gt; 0) {
           currentExpression = currentExpression.substring(0, currentExpression.length() - 1);
           calculationResult.onExpressionChanged(currentExpression, true);
       } else {
           calculationResult.onExpressionChanged("Invalid Input", false);
       }

   }

   public void deleteExpression() {
       if (currentExpression.equals("")) {
           calculationResult.onExpressionChanged("Invalid Input", false);
       }
       currentExpression = "";
       calculationResult.onExpressionChanged(currentExpression, true);
   }

   public void appendNumber(String number) {
       if (currentExpression.startsWith("0") &amp;&amp; number.equals("0")) {
           calculationResult.onExpressionChanged("Invalid Input", false);
       } else {
           if (currentExpression.length() &lt;= 16) {
               currentExpression += number;
               calculationResult.onExpressionChanged(currentExpression, true);
           } else {
               calculationResult.onExpressionChanged("Expression too long", false);
           }
       }
   }

   public void appendOperator(String operator) {
       if (validateExpression(currentExpression)) {
           currentExpression += operator;
           calculationResult.onExpressionChanged(currentExpression, true);
       }

   }

   public void appendDecimal() {
       if (validateExpression(currentExpression)) {
         currentExpression += ".";
         calculationResult.onExpressionChanged(currentExpression, true);
       }
   }

   public void performEvaluation() {
       if (validateExpression(currentExpression)) {
           try {
               Double result = symbols.eval(currentExpression);
               currentExpression = Double.toString(result);
               calculationResult.onExpressionChanged(currentExpression, true);
           } catch (SyntaxException e) {
               calculationResult.onExpressionChanged("Cannot read this", false);
               e.printStackTrace();
           }
       }


   }

   public boolean validateExpression(String expression) {
       if (expression.endsWith("*") ||
               expression.endsWith("/") ||
               expression.endsWith("-") ||
               expression.endsWith("+")) {
           calculationResult.onExpressionChanged("Invalid Input", false);
           return false;
       } else if (expression.equals("")) {
           calculationResult.onExpressionChanged("Empty Expression", false);
           return false;
       } else if (expression.length() &gt; 16) {
           calculationResult.onExpressionChanged("Expression too long, false", false);
           return false;

       } else {
           return true;
       }

    }
}
</pre>
<span style="font-weight: 400;">I had several methods to append the expression as string as seen above with a method to update the display ID in my DisplayFragment. The last method was to make sure my expression is a valid which cycles through the possibility of a non functional expression. Having this check will allow me to throw a Toast message in my app alerting the user that it cannot be processed.</span>

<span style="font-weight: 400;">I’m happy to say that my calculator app is a functional android app, although it's not perfect by any means, it took me 9 Pomodoro’s over a course of a week to complete.</span>

<span style="font-weight: 400;">My goal is to continue practicing and making simple applications that will allow me to understand the fundamentals in Android Development. After I’m comfortable building apps by myself, I will seek out open source Android projects and focus more on reading code.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>850</wp:post_id>
		<wp:post_date><![CDATA[2018-12-28 19:56:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-28 19:56:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[journey-into-android-development-pt-9-calculator-app]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android Development]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[853]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>My Biochemistry Story</title>
		<link>https://kiendang.me/index.php/2019/01/03/my-biochemistry-story/</link>
		<pubDate>Thu, 03 Jan 2019 14:59:53 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=858</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">Biochemistry - A branch of science that explores chemical processes within and related to living organisms. By using chemical knowledge and techniques, biochemists can understand and solve biological problems.</span>

<span style="font-weight: 400;">The journey of completing my degree at the University of Waterloo shaped me who I am today.</span>
<h4 style="text-align: center;"><b>THE BEGINNING</b></h4>
<span style="font-weight: 400;">At the time in high school, everyone rushed out to get early acceptance in Grade 12. It was either business or science from what I knew as a young kid. Perhaps it was the lack of exposure to computer science courses in high school had failed to spark my interest in pursuing a CS background.</span>

<span style="font-weight: 400;">Being 17, a typical young teen who just enjoyed playing games all day, I had no aspirations to figure what I wanted and failed to do the proper research. I did really well in high school and felt confident in pursuing higher education which led me to the University of Waterloo in hopes that I’d find a career in science. All the choices I’ve made have really shaped who I am today and I’m happy to say I don’t regret any of it.</span>
<h4 style="text-align: center;"><b>SELF </b>REFLECTION</h4>
<span style="font-weight: 400;">The experience of my undergrad is irreplaceable. I struggled hard and put in lots of work <strong>just to pass</strong> and I enjoyed my fair share of parties and I made a lot of awesome friends.</span>

<span style="font-weight: 400;">When I said I struggled hard, I meant it. I failed courses along the way but managed to pull through. I failed the second physics course, analytical methods in molecular biology, organic chemistry and eventually dropped out of chemical thermodynamics because my fundamentals in physics weren't good enough to understand the course material. The balance of coursework, labs, and the co-op interviews were a huge part of my stress in undergrad.</span>

<span style="font-weight: 400;">The experience of going from high school to university was night and day. Finally being away from home and having the freedom to skip or do anything during your own time was a reality I was not prepared for. </span>

<span style="font-weight: 400;">During my 2B term, dubbed “<em>2B or not to be</em>”, where most people will either have a good chance of graduating or failing my program, I really felt I was going to be in the latter. I couldn’t figure out how to stay afloat even when I had tried really hard. With all the pressure of dropping out, I’d be disappointing my parents and also coming out with a large loan.</span>

<span style="font-weight: 400;">My girlfriend, who was also going through the same struggle, told me something that would completely change the way I approached my academics. She told me that </span><strong>I </strong><b>forgot how to learn.</b><span style="font-weight: 400;"> I realized my way of learning when I was in high school was through memorization.</span>

<span style="font-weight: 400;">I started to find techniques on how to learn and started to focus on understanding concepts that allowed me to grind through the 2B term and make it on to 3A. I was able to finish all the required courses, including the courses I failed.</span>

<span style="font-weight: 400;">Eventually, after many co-op experiences, I realized science wasn't for me. I was already so far in my program, I wanted to see it through to the end.  </span><span style="font-weight: 400;">Throughout this journey, I’ve learned a lot about myself and developed the proper habits to achieve my goals. I was able to stick through the hardships and found out how to make study habits stick and grow from my failures. </span>

<span style="font-weight: 400;">This perseverance led me to my success in achieving a Bachelors of Science in Honours Biochemistry.</span>
<h4 style="text-align: center;">THE END</h4>
<span style="font-weight: 400;">Biochemistry has taught me the core fundamentals of science and understanding life through a biochemical lens. It has shaped the way I think, how I view and solve problems and the way I do my research. </span>

<span style="font-weight: 400;">It has been the catalyst for me to keep up with the latest scientific trends which includes the discovery of CRISPR Cas9 technology. A technology I think will most likely change the world. I'm glad to be able to understand the scientific methods at a biochemical level.</span>

<span style="font-weight: 400;">It has been 2 years since I've touched any science related work. It has given me a </span><span style="font-weight: 400;">deep appreciation of the science academia and their contributions to improving the quality of human life. </span>

<span style="font-weight: 400;">A degree is what you make out of it, for me, it has laid the fundamentals of learning and persevering through hardships as it arises. It has made me become the person who I am, a life long learner. </span><span style="font-weight: 400;">I look forward to learning new technologies and use these skills to develop my own path.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>858</wp:post_id>
		<wp:post_date><![CDATA[2019-01-03 14:59:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-03 14:59:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[my-biochemistry-story]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[861]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Happy New Year!</title>
		<link>https://kiendang.me/index.php/2019/01/01/happy-new-year/</link>
		<pubDate>Tue, 01 Jan 2019 19:24:12 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=870</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">Time flies and it is important to be able to reflect what you’ve done in 2018.</span>
<h3 style="text-align: center;"><strong>Accomplished in 2018</strong></h3>
<ul>
 	<li style="font-weight: 400;"><b>Swimming </b><span style="font-weight: 400;">- took initiative to take swimming classes at YMCA for 3 months during the summer, proud to say I can do the front crawl and swim to safety.</span></li>
 	<li style="font-weight: 400;"><b>Create a blog</b><span style="font-weight: 400;"> - learned HTML and CSS, enough to customize certain elements and created this blog under the WordPress platform.</span></li>
 	<li style="font-weight: 400;"><a href="https://kiendang.me/index.php/category/personal-finance/"><b>Learn Personal Finance and Investing</b></a><span style="font-weight: 400;"> - I have developed and laid out my plans to tackle my student debt and make my money work for me. I write it out here on my blog to remind myself what to do.</span></li>
 	<li style="font-weight: 400;"><b><a href="https://kiendang.me/index.php/2018/10/23/managing-energy-not-time/">Jog</a> </b><span style="font-weight: 400;">- needed to add physical exercise to my routine to keep my mind clear and get some free endorphins.</span></li>
 	<li style="font-weight: 400;"><a href="https://kiendang.me/index.php/category/android/"><b>Learn a new programming language</b></a><span style="font-weight: 400;"> - decided to do Java and work with Android SDK. Found that this would be my perfect creative outlet.</span></li>
 	<li style="font-weight: 400;"><a href="https://kiendang.me/index.php/category/books/"><b>Read at least 5 books</b></a><span style="font-weight: 400;"> - I kept track of this on <a href="https://www.goodreads.com/user/year_in_books/2018/63733680">goodreads</a>, I ended up surpassing my 5 books goal in 2018 which is a bonus! Some of the personal finance books were short so I will keep the same target for 2019.</span></li>
</ul>
<h4 style="text-align: center;"><strong>My New Year Resolution</strong></h4>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Use my <a href="https://www.intelligentchange.com/products/the-productivity-planner">productivity planner</a> which is tailored to the Pomodoro Technique. It will make me accountable for my goals and keep me on track on my goals.</span></li>
 	<li style="font-weight: 400;">Use <a href="http://www.squawkfox.com/budget-spreadsheet/">Squawkfox</a> budget planner to keep track of my finances.</li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Continue with Android Development.</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Learn React Native to build a watch website.</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Read 5 books for 2019.</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Jog for more than 50 km this year.</span></li>
</ul>
<span style="font-weight: 400;">I kept my 2019 goals list short which will allow me to put more energy and emphasis in Android and web development.</span>

<span style="font-weight: 400;">I am looking forward to seeing where I will be in 2019.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>870</wp:post_id>
		<wp:post_date><![CDATA[2019-01-01 19:24:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-01 19:24:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[happy-new-year]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[871]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Journey Into Android Development Pt. 10 (Workout App)</title>
		<link>https://kiendang.me/index.php/2019/01/04/journey-into-android-development-pt-10-workout-app/</link>
		<pubDate>Fri, 04 Jan 2019 22:31:58 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=901</guid>
		<description></description>
		<content:encoded><![CDATA[This is the continuation of the Workout app that I did with the fragment exercise found in this earlier blog post <a href="https://kiendang.me/index.php/2018/11/11/journey-to-android-development-pt-2/">here</a>. One of the biggest issues I've been having was dealing with fragments and how to effectively use them. Below is a demonstration of an added feature that includes a timer in a separate fragment. <img class="wp-image-902 aligncenter" src="https://kiendang.me/wp-content/uploads/2019/01/Stopwatch-Fragment-and-Workout.gif" alt="" width="313" height="556" />
<h4 style="text-align: center;">Fragments Continued</h4>
<span style="font-weight: 400;">Fragment lifecycle methods are the same as activity lifecycle methods but the major difference is that activity lifecycle methods are protected whereas fragment methods are public</span>

<span style="font-weight: 400;">Fragments cannot call methods like <code>findViewById()</code> directly. We need to find a reference to a View object and then call view’s <code>findViewById()</code> method.</span>

<span style="font-weight: 400;">In the exercise in Head First Java, I explored the option of nested fragments and how we can combine them together. The post here will be referring to my <a href="https://github.com/kxdang/Android-Development/tree/master/Workout-App">github link</a> that goes through the exercise and my blog post is to recap what I’ve learned for future reference.</span>

<span style="font-weight: 400;">Activities lose their state of any instance variables when rotated because activities are destroyed and recreated when device is rotated. We solved this by saving and restoring the state of any instance variables used.</span>

<span style="font-weight: 400;">So when the device becomes rotated, it recreates the activity and if it contains the fragment element, it </span><b><i>re-inserts a new version of the fragment each time the activity is recreated. </i></b><span style="font-weight: 400;">That means any instance of the variables in fragments get discarded and set back to zero.</span>
<p style="text-align: center;"><strong>How do we solve this issue?</strong></p>
<span style="font-weight: 400;">We use something called a </span><b>Fragment Transaction</b><span style="font-weight: 400;">. We add a placeholder for the fragment in the activity’s layout. We add a frame layout to the layout and give it an ID to refer back to Java. Replaced the <code>&lt;fragment&gt;</code> element with <code>&lt;FrameLayout&gt;</code> in the xml file.</span>

<b>Fragment Transaction </b><span style="font-weight: 400;">allows us to</span> <span style="font-weight: 400;">add a fragment to the frame layout. We add code to the TempActivity as soon as it gets created.</span>
<pre class="lang:java decode:true">public class TempActivity extends AppCompatActivity {

   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       setContentView(R.layout.activity_temp);

       if (savedInstanceState == null) {
           StopwatchFragment stopwatch = new StopwatchFragment();
           FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
           ft.add(R.id.stopwatch_container,stopwatch);
           ft.addToBackStack(null);
           ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);
           ft.commit();
       }
   }
}</pre>
<span style="font-weight: 400;">The code will check whether <code>savedInstanceState</code> Bundle parameter is null, this means that the <code>TempActivity</code> is being </span><b>created for the first time,</b><span style="font-weight: 400;"> therefore we add <code>StopwatchFragment</code> to the Activity.</span>

<span style="font-weight: 400;">If <code>savedInstanceState</code> is not null, that means <code>TempActivity</code> is being </span><b>recreated</b><span style="font-weight: 400;"> after being destroyed. We do not want to add a new instance of the fragment as it will overwrite the fragment. Below is the result of being able to call back the saved states in separate fragments as the activity becomes destroyed upon rotation.</span>

<img class="wp-image-903 aligncenter" src="https://kiendang.me/wp-content/uploads/2019/01/Workout-Fragment-Rotation-with-Stopwatcch.gif" alt="" width="298" height="529" />

<span style="font-weight: 400;">When connecting the workout fragment and Stopwatch fragment, I used the <code>getChildFragment()</code> which allows fragments to be nested. This will reduce the transaction stack and allow us to </span><b>escape both fragments </b><span style="font-weight: 400;">at the same time when the user presses the back button.</span>

<span style="font-weight: 400;">In this case below we need to add similar code, however, the <code>getSupportFragmentManager()</code> gets replaced with <code>getChildFragmentManager()</code>:</span>
<pre class="lang:java decode:true ">public void onCreate(Bundle savedInstanceState) {
   super.onCreate(savedInstanceState);
   if (savedInstanceState == null) {
       StopwatchFragment stopwatch = new StopwatchFragment();
       FragmentTransaction ft = getChildFragmentManager().beginTransaction();
       ft.add(R.id.stopwatch_container, stopwatch);
       ft.addToBackStack(null);
       ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);
       ft.commit();


   } else {
       workoutId = savedInstanceState.getLong("workoutId");
   }

}</pre>
<span style="font-weight: 400;">I realized that the more practice I have with Android SDK, the more familiar and comfortable I become when creating apps. I make sure that all my strings go into the <code>strings.xml</code> and use <code>styles.xml</code> when necessary. In addition, making small changes like the colour scheme and figuring out how to debug is all part of the learning process in my journey.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>901</wp:post_id>
		<wp:post_date><![CDATA[2019-01-04 22:31:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-04 22:31:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[journey-into-android-development-pt-10-workout-app]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android Development]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[905]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Java - Object Oriented Programming</title>
		<link>https://kiendang.me/index.php/2019/01/05/java-object-oriented-programming/</link>
		<pubDate>Sat, 05 Jan 2019 00:15:45 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=918</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">I am currently reading Head First Java to understand the object oriented programming and brush up on any Java concepts I’m struggling with such as inheritance of methods and the syntax on how to declare variables, try and catch and interfaces. </span>

<span style="font-weight: 400;">In object oriented programming, we have something called inheritance where there are classes that inherit methods from a superclass. This will allow a user to create subclasses and inherit methods that can be reused. The most important concept here is we can override these methods to adapt to any changing circumstances.</span>

<span style="font-weight: 400;">When declaring a variable, for Java, there are two types. The first types are primitives data and the second is object references. Object references have a specific way of declaring them. For example, creating a Dog object that will have methods such as Bark, Play, Trick.</span>
<pre class="lang:java decode:true">Dog Fido = new Dog()</pre>
<span style="font-weight: 400;"><code>Dog Fido</code>, which reference <code>Fido</code> as a new <code>Dog</code> object. The right hand side of the declaration creates a new Dog. To access Fido’s methods, we can use the <code>Fido.Bark()</code>, <code>Fido.Play()</code> and <code>Fido.Trick()</code>. </span><span style="font-weight: 400;">The syntax here uses a dot syntax to access a method within a class. </span>

<span style="font-weight: 400;">A class is not an object but is used to construct them. Essentially they are the blueprint of an object. When designing classes it should be noted that it is something that object knows (instance variables) and what the objects can do (methods).</span>

<span style="font-weight: 400;">When diving straight into Android Development, my lack of understanding Java made it a little difficult. OOP is something new to me. I wrote this post here to remind myself what I learned as I was doing Android development and what other concepts I need to figure out in addition to Android.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>918</wp:post_id>
		<wp:post_date><![CDATA[2019-01-05 00:15:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-05 00:15:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java-object-oriented-programming]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[920]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
			<wp:meta_value><![CDATA[2019-01-06]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Journey Into Android Development Pt. 11 (Tab View Navigation)</title>
		<link>https://kiendang.me/index.php/2019/01/09/journey-into-android-development-pt-11-tab-view-navigation/</link>
		<pubDate>Wed, 09 Jan 2019 03:05:00 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=928</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">Android Design Support Library allows developers to create apps with an intuitive UI. For the initial exercise, I created a custom toolbar with a share, a plus and an Up button for navigation. In order to achieve the result below I had to remove the basic app bar and replace with a toolbar. </span>

<img class="wp-image-936 aligncenter" src="https://kiendang.me/wp-content/uploads/2019/01/Navigation-Tab-Gestures.gif" alt="" width="324" height="575" />
<h4 style="text-align: center;">Adding the ToolBar</h4>
<span style="font-weight: 400;">Removing the toolbar requires navigating to the <code>styles.xml</code> file and changing the parent theme to <code>parent=”Theme.AppCompat.Light.NoActionBar”</code></span>

<span style="font-weight: 400;">If a toolbar is going to show in multiple activities, then it must be a separate layout to prevent repetition of code for every activity. I had to make a new <code>toolbar.xml</code> so that I can include it in all the activities in this app.  The xml contains the code below:</span>
<pre class="lang:xhtml decode:true">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;android.support.v7.widget.Toolbar
   xmlns:android="http://schemas.android.com/apk/res/android"
   android:layout_width="match_parent"
   android:layout_height="?attr/actionBarSize"
   android:background="?attr/colorPrimary"
   android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar" /&gt;</pre>
Now we include the custom toolbar in several activities by introducing the include tag in the xml file.
<pre class="lang:xhtml decode:true">&lt;include
   layout="@layout/toolbar_main"
   android:id="@+id/toolbar"&gt;&lt;/include&gt;</pre>
We need to connect it to the activity so that it acts like an app bar by calling the AppCompatActivity's <code>setSupportActionBar()</code> method in the <code>onCreate()</code> method of our main activity. The parameter will be the toolbar object that is referenced by it's XML id.

<img class="wp-image-929 aligncenter" src="https://kiendang.me/wp-content/uploads/2019/01/ShareButton.gif" alt="" width="257" height="456" />
<h4 style="text-align: center;">Adding Action and Share to the Toolbar</h4>
<span style="font-weight: 400;">Creating the Order Action that will open a new activity called <code>OrderActivity</code>. In OrderActivity, we will include the custom toolbar we created. We add the <code>android:label=@string/create_order</code> to change the custom toolbar’s name for OrderActivity in the Android Manifest. From here, we need to edit the menu resource file which tells Android what actions we want in the toolbar. The <code>menu_main.xml</code> gets filled with this code below to add the + sign and the share button.</span>
<pre class="lang:xhtml decode:true">&lt;menu xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:app="http://schemas.android.com/apk/res-auto"&gt;
   &lt;item android:id="@+id/action_create_order"
       android:title="@string/create_order_title"
       android:icon="@drawable/ic_add_white_24dp"
       android:orderInCategory="1"
       app:showAsAction="ifRoom"&gt;
   &lt;/item&gt;

   &lt;item android:id="@+id/action_share"
       android:title="@string/action_share"
       android:orderInCategory="2"
       app:showAsAction="ifRoom"
       app:actionProviderClass="android.support.v7.widget.ShareActionProvider"&gt;
   &lt;/item&gt;

&lt;/menu&gt;</pre>
<span style="font-weight: 400;">When completed, we need to add the functionality of the toolbar by implementing <code>onCreateOptionsMenu()</code> method. The one parameter it takes is a Menu object. Here we inflate the action share button with this code:</span>
<pre class="lang:java decode:true">@Override
public boolean onCreateOptionsMenu(Menu menu) {
       getMenuInflater().inflate(R.menu.main_menu, menu);
       MenuItem menuItem = menu.findItem(R.id.action_share);

       shareActionProvider = (ShareActionProvider) MenuItemCompat.getActionProvider(menuItem);
       setShareActionIntent("Want to join me for pizza?");

       return super.onCreateOptionsMenu(menu);
}</pre>
For the onClick of the + icon, we throw an intent to the user to go to the OrderActivity screen.
<pre class="lang:java decode:true ">@Override
public boolean onOptionsItemSelected(MenuItem item) {
   switch (item.getItemId()) {
       case R.id.action_create_order:
           //Code to run when the Create Order item is clicked
           Intent intent = new Intent(this, OrderActivity.class);
           startActivity(intent);
           return true;
       default:
           return super.onOptionsItemSelected(item);
   }</pre>
When the Order Activity screen is present, we will need to add an Up button which allows the user to go back to the previous activity. The reason why we use an Up button over the back navigation button is because its based on the app's hierarchical structure. Using the regular back button will work through the history of activities the user has gone through.

An Up button will reduce the amount of times they need to press back to go to the main activity. We specify the order of activities in the Android Manifest where we reference the parent's activity.
<h4 style="text-align: center;">Adding the Up Button</h4>
First we reference the app bar using activity's <code>getSupportActionBar()</code> method. Then call its <code>setDisplayHomeAsUpEnabled()</code> to be true. We call this on the onCreate of the OrderActivity.
<pre class="lang:java decode:true ">public class OrderActivity extends AppCompatActivity {

   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       setContentView(R.layout.activity_order2);
       Toolbar toolbar = findViewById(R.id.toolbar);
       setSupportActionBar(toolbar);
       ActionBar actionBar = getSupportActionBar();
       actionBar.setDisplayHomeAsUpEnabled(true);
   }</pre>
<h4 style="text-align: center;">Enable swiping gestures to navigate through fragments</h4>
<span style="font-weight: 400;">In this exercise, I added a swipe gesture that allows user to navigate through the different fragments available. The swipe gesture is accompanied by tabs which allow the user to know which screen they are currently in.</span>

<span style="font-weight: 400;">The following steps that were required to accomplish making tabs:</span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Create the fragments</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Enable swipe navigation</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Add the tab layout</span></li>
</ol>
<h5 style="text-align: center;"><span style="font-weight: 400;">Creating the fragments</span></h5>
<span style="font-weight: 400;">After lots of practice, we see similar code below for different fragments as seen from the Earthquake app, I used ListFragment which allows us to display the list of items. The first step was to store the string array in the <code>strings.xml</code> with the following code:</span>
<pre class="lang:xhtml decode:true ">&lt;string-array name="pizzas"&gt;
   &lt;item&gt;Diavolo&lt;/item&gt;
   &lt;item&gt;Funghi&lt;/item&gt;
&lt;/string-array&gt;</pre>
<span style="font-weight: 400;">The string array has a name "pizzas" which allow me to reference list of data. The ListFragments needed to be inflated using the <code>LayoutInflater</code> and <code>ViewGroup</code> method:</span>
<pre class="lang:java decode:true ">public class PizzaFragment extends ListFragment {
   @Override
   public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

       ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;&gt;(
               inflater.getContext(),
               android.R.layout.simple_list_item_1,
               getResources().getStringArray(R.array.pizzas));
       setListAdapter(adapter);
       return super.onCreateView(inflater, container, savedInstanceState);
   }
</pre>
The fragments <code>onCreateView</code> method requires a <code>LayoutInflator</code>, <code>ViewGroup</code> and <code>Bundle</code> with the variables name stored in the corresponding line.

<span style="font-weight: 400;">The ArrayAdapter populates the ListFragments ListView with the pizza name. The inflater will get the context and display it like a simple list item (in this case, android has built in XML layout) and the getResources points to my XML reference of pizzas to generate the items. setListAdapter takes in the adapter and generates it. The return method returns all 3 parameters and uses the onCreateView method.</span>
<h5 style="text-align: center;"><span style="font-weight: 400;">Enabling the swipe gesture</span></h5>
<img class="wp-image-935 aligncenter" src="https://kiendang.me/wp-content/uploads/2019/01/Swiping-Fragments.gif" alt="" width="317" height="563" />

<span style="font-weight: 400;">To enable swipe navigation, we need to use something called a </span><b>view pager</b><span style="font-weight: 400;"> which is a view group that allows the user to swipe through different pages where we will stuff our fragments in.</span>

<span style="font-weight: 400;">To accomplish this, the main activity XML must add the view pager below. The key notes to remember is that there must be an ID reference to this pager because we need to reference it in our activity code.</span>
<pre class="lang:xhtml decode:true ">&lt;android.support.v4.view.ViewPager
   android:id="@+id/pager"
   android:layout_width="match_parent"
   android:layout_height="match_parent" /&gt;</pre>
<span style="font-weight: 400;">In the main activity, we use a </span><b>fragment pager adapter</b><span style="font-weight: 400;"> which will allow us to get the view pager to display the fragments in each of its pages. Two important information you must pass is:</span>
<ol>
 	<li style="font-weight: 400; text-align: left;"><span style="font-weight: 400;">Number of pages</span></li>
 	<li style="font-weight: 400; text-align: left;"><span style="font-weight: 400;">Which fragment should be displayed in each page</span></li>
</ol>
<p style="text-align: left;"><span style="font-weight: 400;">We create a class that extends the <code>FragmentPagerAdapter</code> which means we will inherit specific methods that will be required to display our fragments. These methods will include <code>getCount()</code> - which we will return 4 because we want to have 4 pages to display 4 different fragments and the second method <code>getItem()</code> will return an integer where it returns 0-3 for each specified fragment for each case.</span></p>

<pre class="lang:java decode:true">private class SectionsPagerAdapter extends FragmentPagerAdapter {

   public SectionsPagerAdapter(FragmentManager fm) {
       super(fm);
   }

   @Override
   public int getCount(){
       return 4;
   }

   @Override
   public Fragment getItem(int position) {
       switch (position) {
           case 0:
               return new TopFragment();
           case 1:
               return new PizzaFragment();
           case 2:
               return new PastaFragment();
           case 3:
               return new StoresFragment();
       }
       return null;
   }</pre>
<span style="font-weight: 400;">Lastly, we attach the <code>SectionsPagerAdapter</code> to the view pager by using a method called <code>ViewPagersetAdapter()</code> in the onCreate of our activity.</span>

<span style="font-weight: 400;">A <code>ViewPager</code> object is created called pager and we access a method <code>setAdapter()</code> where we pass the <code>pagerAdapter</code> which is a <code>SectionsPagerAdapter</code> object we created above.</span>
<pre class="lang:java decode:true ">@Override
protected void onCreate(Bundle savedInstanceState) {
   super.onCreate(savedInstanceState);
   setContentView(R.layout.activity_main);
   Toolbar toolbar = findViewById(R.id.toolbar);
   setSupportActionBar(toolbar);

   //Attach SectionsPagerAdapter to the ViewPager
   SectionsPagerAdapter pagerAdapter = new SectionsPagerAdapter(getSupportFragmentManager());

   ViewPager pager = findViewById(R.id.pager);
   pager.setAdapter(pagerAdapter);


}</pre>
<h5 style="text-align: center;">Adding Navigation Tabs</h5>
<span style="font-weight: 400;">For the end product, we will use classes from the Android Design Support Library which has a TabLayout and AppBarLayout built in Android. AppBarLayout will allow us to hold our ToolBar and the tabs that we will create. The XML changes will happen in our main activity xml and will require specific IDs to reference them.</span>
<pre class="lang:xhtml decode:true">&lt;LinearLayout
   xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:tools="http://schemas.android.com/tools"
   android:orientation="vertical"
   android:layout_width="match_parent"
   android:layout_height="match_parent"
   tools:context=".MainActivity"&gt;

   &lt;android.support.design.widget.AppBarLayout
       android:layout_width="match_parent"
       android:layout_height="wrap_content"
       android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"&gt;

       &lt;android.support.v7.widget.Toolbar
           android:id="@+id/toolbar"
           android:layout_width="match_parent"
           android:layout_height="?attr/actionBarSize" /&gt;

       &lt;android.support.design.widget.TabLayout
           android:id="@+id/tabs"
           android:layout_width="match_parent"
           android:layout_height="wrap_content" /&gt;

   &lt;/android.support.design.widget.AppBarLayout&gt;


   &lt;android.support.v4.view.ViewPager
       android:id="@+id/pager"
       android:layout_width="match_parent"
       android:layout_height="match_parent" /&gt;


&lt;/LinearLayout&gt;
</pre>
<span style="font-weight: 400;">Next, we add the following tab titles in the <code>string.xml</code> and implement the <code>getPageTitle()</code> method from fragment pager adapter. The code snippet is below:</span>
<pre class="lang:java decode:true ">@Override
public CharSequence getPageTitle(int position) {
   switch(position) {
       case 0:
           return getResources().getText(R.string.home_tab);
       case 1:
           return getResources().getText(R.string.pizza_tab);
       case 2:
           return getResources().getText(R.string.pasta_tab);
       case 3:
           return getResources().getText(R.string.store_tab);
   }
   return null;
}</pre>
<span style="font-weight: 400;">Then we attach the view pager to the tab layout with the following code:</span>
<pre class="lang:java decode:true">TabLayout tabLayout = findViewById(R.id.tabs);
tabLayout.setupWithViewPager(pager);</pre>
<span style="font-weight: 400;">TabLayout is being initialized called <code>tabLayout</code> that references the ID tab and we call its <code>setupWithViewPager()</code> method and pass in our <code>ViewPager</code> to connect everything. And viola! We have this beautiful tab navigation that follows material design. I will be using this post as a reference to build my own tab navigation for my future projects.</span>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>928</wp:post_id>
		<wp:post_date><![CDATA[2019-01-09 03:05:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-09 03:05:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[journey-into-android-development-pt-11-tab-view-navigation]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android Development]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[941]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How I automated a process at work using Excel VBA</title>
		<link>https://kiendang.me/index.php/2019/01/13/how-i-automate-a-process-at-work-using-excel-vba/</link>
		<pubDate>Sun, 13 Jan 2019 17:39:09 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=943</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">Disclaimer:</span><i><span style="font-weight: 400;"> I do not reveal any sensitive and confidential material that is tied to my employer. My post is about my experience with Visual Basic and how I used it to solve a problem. It is for educational and informational purposes only.</span></i>

<span style="font-weight: 400;">As part of my job, I cost out the Bill of Materials (BOM) from OEMs by reviewing 3D data and using a PLM system. When I finish building the BOM in the PLM system, I send it to my technical manager to check.</span>
<h4 style="text-align: center;"><b>Problem</b></h4>
<span style="font-weight: 400;">The PLM system fails to do preliminary checks; all it knows is how to hold data. No prompts are shown when there are errors and the user interface is very hard on the eyes for spot checking.</span>

<span style="font-weight: 400;">When I saw my technical manager use a ruler to guide his eyes on the monitor to check horizontal lines to compare the old and new BOM, I automatically thought there has to be a better way. </span>

<span style="font-weight: 400;">I had my fair share of making errors when I first started work. As I was learning the job, my work would have to be sent back to fix because I missed small details. I eventually started brainstorm on how to fix this part of the issue when battling with my PLM system. My solution was to externally export the data to excel, then it would be in my playground and I’ll be free to do whatever I want to it.</span>
<h4 style="text-align: center;"><b>Solution</b></h4>
<span style="font-weight: 400;">I took the idea home and built the macros from excel using online resources. My previous experience in Python and Dr.Racket helped me transition to VB. All I did was Google the functions I needed and how Excel and VB worked together. </span>

<span style="font-weight: 400;">I’ve posted the my main code <a href="https://github.com/kxdang/Excel-Macros-Checker">here</a>. Again all of these are excel cell references and have no connection to any sensitive data by my employer. It shows how I referenced certain cells and how I used it to compare data. The main functions that were used:</span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">For Loops to check every BOM data in every cell in Excel by going through its data</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">If-Else statements syntax to execute functions</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">How to create buttons in excel to execute my functions</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">How to compare cells with their data types</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">How to colour code excel lines to trigger a visual cue and show the user that there is an error</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">How to show pop up dialog to let user know tasks have been completed and allow them to interact with the dialog</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Automate sending emails to my technical manager to let him know its ready</span></li>
</ol>
<span style="font-weight: 400;">It took me about 2 hours to create a working excel based software. I learned to refactor the code because it had functions nested in If statements which eventually turned the software checks to be slow. To solve this, I separated functions and called separately. The checks are now instantaneous. </span>

<span style="font-weight: 400;">I learned how to store the code in the excel modules, this separates the code from the actual worksheet themselves so that they are publicly stored and prevent any issues when transferring the workbook to my teammates.</span>

<span style="font-weight: 400;">When doing tons of quotes, we get tired and eventually under perform from time to time. However, computers never get tired, they’re just lines of codes that constantly do the same thing when programmed correctly. I found that to be extremely powerful. Not only has this streamlined my work, but it also gives me 100% confidence that I won’t find any trivial issues.</span>

<span style="font-weight: 400;">I've also been improving many different business units with excel by using VLOOKUPs, nested IF statements, TRIM functions to find specific words and also recording macros to do repetitive tasks. I found ways for other business units to automate their spreadsheets. I made feasibility request by having excel automatically send emails to the appropriate person and even have excel files save with a name that is a standard format to our company. Reducing the number of repetitive typing saves a lot of wasted time.</span>

<span style="font-weight: 400;">All of my improvements have been submitted in our system as <strong>Kaizens</strong> which is the Japanese word for improvements. They refer to activities or ideas that continuously improve all functions and is used heavily in the Toyota Production System and many other lean manufacturers. </span>

<span style="font-weight: 400;">As my co-worker said, where there are inefficiencies, there are opportunities. There are always ways to improve existing processes and those are challenges I like to take.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>943</wp:post_id>
		<wp:post_date><![CDATA[2019-01-13 17:39:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-13 17:39:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-i-automate-a-process-at-work-using-excel-vba]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="excel"><![CDATA[Excel]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[944]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Journey Into Android Development Pt. 12 (Design Support Library)</title>
		<link>https://kiendang.me/index.php/2019/01/15/journey-into-android-development-pt-12-design-support-library/</link>
		<pubDate>Tue, 15 Jan 2019 22:55:04 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=956</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">In this post, I’ll be adding features to the Bits and Pizzas app and implement them while writing out this blog as a way to teach myself for self reference. In this exercise, the Android Design Support Library is explored to give a seamless UI.</span>
<h4 style="text-align: center;"><b>Adding the hiding Toolbar on Scroll</b></h4>
<img class="wp-image-959 aligncenter" src="https://kiendang.me/wp-content/uploads/2019/01/ToolBar-Scrollable-Bar.gif" alt="" width="409" height="726" />

<span style="font-weight: 400;">The toolbar responds to the user scroll action and hides itself. It enables the user to see more content on the screen. In order to achieve this, a <strong>CoordinatorLayout</strong> is used which allow the views to be affected by a behaviour of another. </span>

<span style="font-weight: 400;">We need to mark the view the user will scroll and tell the toolbar to respond to it. The view pager will be the one that will marked using this attribute below:</span>
<pre class="lang:xhtml decode:true">app:layout_behavior="@string/appbar_scrolling_view_behavior"</pre>
<span style="font-weight: 400;"> The toolbar will respond to it by using this attribute:</span>
<pre class="lang:xhtml decode:true ">app:layout_scrollFlags="scroll|enterAlways"</pre>
<span style="font-weight: 400;">The scroll attribute allows the toolbar to scroll up and off the screen and the <code>enterAlways</code> will allow the toolbar to scroll quickly. The code layout pattern is shown below:</span>
<pre class="lang:xhtml decode:true ">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;android.support.design.widget.CoordinatorLayout
  ...&gt;

   &lt;android.support.design.widget.AppBarLayout
       ...&gt;

       &lt;android.support.v7.widget.Toolbar
           android:id="@+id/toolbar"
           android:layout_width="match_parent"
           android:layout_height="?attr/actionBarSize"
           app:layout_scrollFlags="scroll|enterAlways"/&gt;

       &lt;android.support.design.widget.TabLayout
           ... /&gt;

   &lt;/android.support.design.widget.AppBarLayout&gt;


   &lt;android.support.v4.view.ViewPager
       android:id="@+id/pager"
       android:layout_width="match_parent"
       android:layout_height="match_parent"
       app:layout_behavior="@string/appbar_scrolling_view_behavior"/&gt;


&lt;/android.support.design.widget.CoordinatorLayout&gt;</pre>
In order for this to work, we needed the fragment to be scrollable. Therefore we added a nested scroll view in the TopFragment. The nested scroll view holds our picture and text using a Frame Layout which allows the styling to overlap.
<pre class="lang:xhtml decode:true">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;android.support.v4.widget.NestedScrollView xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:tools="http://schemas.android.com/tools"
   android:layout_width="match_parent"
   android:layout_height="match_parent"
   android:orientation="vertical"
   tools:context=".TopFragment"&gt;


   &lt;FrameLayout
       android:layout_width="match_parent"
       android:layout_height="wrap_content"&gt;

       &lt;ImageView android:id="@+id/info_image"
           android:layout_width="match_parent"
           android:layout_height="wrap_content"
           android:scaleType="centerCrop"
           android:src="@drawable/restaurant"
           android:contentDescription="@string/restaurant_image"/&gt;

       &lt;LinearLayout
           android:layout_width="match_parent"
           android:layout_height="wrap_content"
           android:layout_marginTop="40dp"
           android:layout_marginLeft="16dp"
           android:layout_marginRight="16dp"
           android:padding="16dp"
           android:background="#FFFFFF"
           android:orientation="vertical"&gt;

           &lt;TextView
               android:layout_width="match_parent"
               android:layout_height="wrap_content"
               android:textSize="32sp"
               android:text="@string/company_name"/&gt;

           &lt;TextView
               android:layout_width="match_parent"
               android:layout_height="wrap_content"
               android:text="@string/home_text"/&gt;

       &lt;/LinearLayout&gt;
   &lt;/FrameLayout&gt;


&lt;/android.support.v4.widget.NestedScrollView&gt;</pre>
<h4 style="text-align: center;">Adding the collapsing Toolbar to OrderActivity</h4>
<span style="font-weight: 400;">This is a neat feature implemented in the Design Support Library. The variant of the toolbar interactions are seen below:<img class="wp-image-961 aligncenter" src="https://kiendang.me/wp-content/uploads/2019/01/Scrollable-Order.gif" alt="" width="414" height="735" /></span>

In order to achieve this effect, the structure of the layout would have to look like something below where the data is nested in the android support design widget.
<pre class="lang:xhtml decode:true ">&lt;android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
   ...&gt;

 &lt;android.support.design.widget.AppBarLayout
    ...&gt;

     &lt;android.support.design.widget.CollapsingToolbarLayout
         ..
         app:layout_scrollFlags="scroll|exitUntilCollapsed"
         app:contentScrim="?attr/colorPrimary"&gt;
        
         &lt;ImageView
             android:scaleType="centerCrop"
             android:src="@drawable/restaurant"
             android:contentDescription="@string/restaurant_image"
             app:layout_collapseMode="parallax"/&gt;


     &lt;android.support.v7.widget.Toolbar
             ..
             android:layout_height="?attr/actionBarSize"
             app:layout_collapseMode="pin" /&gt;

     &lt;/android.support.design.widget.CollapsingToolbarLayout&gt;

 &lt;/android.support.design.widget.AppBarLayout&gt;

   &lt;android.support.v4.widget.NestedScrollView
         app:layout_behavior=”@string/appear_scrolling_view_behaviour”
   &lt;/android.support.v4.widget.NestedScrollView&gt;


&lt;/android.support.design.widget.CoordinatorLayout&gt;

</pre>
We need to use the CollapsingToolbarLayout element and nest the Toolbar widget inside of it. An image is also added with a parallax effect. As seen before, we need to mark the scrollable content with <code>app:@string/appbar_scrolling_view_behavior</code> and then add the flag attribute of <code>app:layout_scrollFlags="scroll|exitUntilCollapsed"</code> to let Android know that our CollapingToolbar will change depending on the scrollable content.

Lastly, we add <code>app:layout_collapseMode="pin"</code> which allows us to pin anything important in the toolbar, in this case, the Up button.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>956</wp:post_id>
		<wp:post_date><![CDATA[2019-01-15 22:55:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-15 22:55:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[journey-into-android-development-pt-12-design-support-library]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android Development]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[957]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Journey into Android Development Pt. 13 (Floating Action Bar &amp; Snackbar)</title>
		<link>https://kiendang.me/index.php/2019/01/19/journey-into-android-development-pt-13-floating-action-bar-snackbar/</link>
		<pubDate>Sat, 19 Jan 2019 15:03:43 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=966</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">In this short exercise, I'll be adding the FAB and Snackbar.</span>

<img class="wp-image-968 aligncenter" src="https://kiendang.me/wp-content/uploads/2019/01/Adding-FAB-and-Snackbar.gif" alt="" width="310" height="551" />

<span style="font-weight: 400;">FAB is short for <strong>f</strong>loating<strong> a</strong>ction <strong>b</strong>ar which allows engage a floating button to promote an action.</span>

<span style="font-weight: 400;">First we need to add the icon to our project to display the FAB. The best free resources for default icons is provided from Google.</span>

<span style="font-weight: 400;">The checkmark icon is called “done” which is found on the <a href="https://material.io/tools/icons/?style=baseline">Material Design website</a>. To install this, you will need to add folders to your app/src/main/res and call them the following:</span>

<span style="font-weight: 400;">drawable-hdpi
</span><span style="font-weight: 400;">drawable-mdpi
</span><span style="font-weight: 400;">drawable-xhdpi
</span><span style="font-weight: 400;">drawable-xxhdpi
</span><span style="font-weight: 400;">drawable-xxxhdpi</span>

<span style="font-weight: 400;">When the icon is downloaded, it will have these subfolders and you will need to add them individually. The reason why this exist is because devices have different DPIs and Google has provided an easy way to let the device set the correct DPI setting for its screen, meaning low DPI icons won’t be shown in high DPI devices which will appear blurry.</span>

<span style="font-weight: 400;">The code to add a floating action button for the XML is:</span>
<pre class="lang:xhtml decode:true ">&lt;android.support.design.widget.CoordinatorLayout…&gt;
…
&lt;android.support.design.widget.FloatingActionButton
   android:layout_width="wrap_content"
   android:layout_height="wrap_content"
   android:layout_gravity="end|bottom"
   android:layout_margin="16dp"
   android:src="@drawable/ic_done_white_24dp"
   android:onClick="onClickDone"/&gt;

...
&lt;/android.support.design.widget.CoordinatorLayout&gt;</pre>
<span style="font-weight: 400;">A snackbar is similar to a toast but the user can engage with it. It can display a short message and an action item . For this to appear, you must implement the Snackbar.make() method and it takes 3 parameters.</span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">View - the view ID that you want it to show in</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Text - the message you want to appear</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Int - duration of the snackbar</span></li>
</ol>
<span style="font-weight: 400;">The snackbar object also contains a method called <code>setAction()</code> which allows the user to undo an action. The code snippet is below for the snackbar method and setAction.</span>
<pre class="lang:java decode:true ">public void onClickDone(View view) {
   CharSequence text = "Your order has been updated";
   int duration = Snackbar.LENGTH_SHORT;
   Snackbar snackbar = Snackbar.make(findViewById(R.id.coordinator), text, duration);

// setAction allows you to Undo an action this is the code below
   snackbar.setAction("Undo", new View.OnClickListener() {
      @Override
      public void onClick(View view) {
          Toast toast = Toast.makeText(OrderActivity.this, "Undone!", Toast.LENGTH_SHORT);
          toast.show();
      }
   });
   snackbar.show();
}</pre>
&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>966</wp:post_id>
		<wp:post_date><![CDATA[2019-01-19 15:03:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-19 15:03:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[journey-into-android-development-pt-13-floating-action-bar-snackbar]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android Development]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[972]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Excel: VBA Tips and Tricks</title>
		<link>https://kiendang.me/index.php/2019/01/20/excel-automating-tips-and-tricks/</link>
		<pubDate>Sun, 20 Jan 2019 23:05:12 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=982</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">My post here is to keep a reference of the functions and VBA codes I’ve found and modified for my own personal and professional use. I figure I might need these one day.</span>

<span style="font-weight: 400;">I deal with Excel spreadsheets at work. One of my favourite things to do is try to automate the work I find by programming in VBA. Below are a few Excel tips and tricks I learned.</span>
<h4 style="text-align: center;"><b>Tip #1: Automatically save a spreadsheet using cell reference</b></h4>
<img class="alignnone size-full wp-image-983" src="https://kiendang.me/wp-content/uploads/2019/01/Excel-Project.gif" alt="" />
<h4 style="text-align: center;">Purpose</h4>
<span style="font-weight: 400;">It saves the Excel spreadsheet with a referenced cell in your workbook. It will make your workflow faster and prevents the Excel file from being overwritten. The file will save on the path it is currently on. However, you can also tell Excel to save to a certain directory or create new folders using <code>MkDir</code>. Code snippet:</span>
<pre class="lang:vb decode:true">Sub QuickSave()
ThisFile = Range("D6").Value &amp; " Tooling Quote"
ActiveWorkbook.SaveAs Filename:=ActiveWorkbook.Path &amp; "\" &amp; ThisFile
End Sub
</pre>
<h4></h4>
<h4 style="text-align: center;"><b>Tip #2: Automatically send emails using Excel</b></h4>
<img class="alignnone size-full wp-image-986" src="https://kiendang.me/wp-content/uploads/2019/01/Excel-Email.gif" alt="" />
<h4 style="text-align: center;">Purpose</h4>
<span style="font-weight: 400;">When completing an excel spreadsheet, such as filling out a sales inquiry, the user would want to send the email to the appropriate party to call an action item. The text in the outlook email can be seen in the code snippet, the demo above shows the Excel calling the outlook app and all fields are auto-filled in from the VBA code.</span>

<span style="font-weight: 400;">There’s a bit of prep work for this with a combo box and drop downs to bring a cell to someone’s name. Follow this set up by Microsoft <a href="https://support.office.com/en-us/article/add-a-list-box-or-combo-box-to-a-worksheet-in-excel-579e1958-f7f6-41ae-ba0c-c83cc6e40878">here.</a></span>

<span style="font-weight: 400;">The <code>Input Range</code> is the list of names and the <code>Cell Link</code> should point to an empty cell. The <code>Cell Link</code> will call the index starting from 1 in the drop down list and toggle through. An IF statement is then used to reference the <code>Cell Link</code> and generate the email you want the person to be called. Note that the pop up prompt is not necessary, I just added it in there to serve as a reminder to make sure all boxes are filled when completing my work. The VBA code is referenced below:</span>
<pre class="lang:vbnet decode:true">Sub ReadyToPreferEmail() 'This will automatically set up your outlook
'Updated by Extendoffice 2017/9/14
    Dim xOutApp As Object
    Dim xOutMail As Object
    Dim xMailBody As String
    On Error Resume Next
    Set xOutApp = CreateObject("Outlook.Application")
    Set xOutMail = xOutApp.CreateItem(0)
    xMailBody = "Hi, this email was sent by Excel!!! "
              
                  On Error Resume Next
    With xOutMail
        .To = Range("Z12")
        .CC = ""
        .BCC = ""
        .Subject = "Email Sent by Excel VBA - How cool is this"
        .Body = xMailBody
        .Display
    End With
    On Error GoTo 0
    Set xOutMail = Nothing
    Set xOutApp = Nothing

End Sub

Sub YesNoMessage()
Dim Answer As String
Dim MyNote As String
 
    'Place your text here
    MyNote = "Do you want to send this email?"
 
    'Display MessageBox
    Answer = MsgBox(MyNote, vbQuestion + vbYesNo, "")
 
    If Answer = vbNo Then
        MsgBox "Cancelling request"
    Else
        Call ReadyToPreferEmail
    End If
 
End Sub</pre>
&nbsp;

<span style="font-weight: 400;">In Excel, there is an extremely powerful tool called Macro Recorder. The macro recorder allows the user to perform an Excel task and it will generate the code for that action. For beginners, this is a great way to learn all the functionalities of Excel in the raw VBA language. I used this as a way to find functions that I wanted to automate in excel and put it in a button or assign it in a shortcut. However, when you want to do something very specific, this is where Googling will help and knowing how to find the specific answer to your solution is a satisfying feeling.</span>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>982</wp:post_id>
		<wp:post_date><![CDATA[2019-01-20 23:05:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-20 23:05:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[excel-automating-tips-and-tricks]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="excel"><![CDATA[Excel]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[989]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Journey Into Android Development Pt. 14 (RecyclerViews)</title>
		<link>https://kiendang.me/index.php/2019/01/29/journey-into-android-development-pt-14-recyclerviews/</link>
		<pubDate>Tue, 29 Jan 2019 08:26:48 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=999</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">RecyclerViews are more flexible than List Views. It efficiently manages a small number of views to give an appearance of a large collection that extends beyond the screen. I’ve learned about this in the Udacity course from Google and I’ve struggled to implement the RecyclerView a few times. A CardView was created to show the pizza names and image.</span>

<img class="wp-image-1000 aligncenter" src="https://kiendang.me/wp-content/uploads/2019/01/CardViews.gif" alt="" width="343" height="609" />

<span style="font-weight: 400;">When creating and generating data on our device, we generally want to use a RecyclerView. The data flows goes as follows: </span><span style="font-weight: 400;">Datasource -&gt; Adapter -&gt; RecyclerView</span>
<h4 style="text-align: center;"><strong>Adding Design Support Libraries</strong></h4>
<span style="font-weight: 400;">Navigate to File -&gt; Project Structure -&gt; app -&gt; Dependencies and the + button and find the dependency and add them to the project.</span>
<h4 style="text-align: center;"><strong>Building the RecyclerView Adapter</strong></h4>
<span style="font-weight: 400;">There are two main objectives of adapters:</span>
<ol>
 	<li>Bind the data with a datasource to RecyclerViews</li>
 	<li>Create a visible data for the RecyclerView from the data</li>
</ol>
<span style="font-weight: 400;">In this exercise, the data would be the pizza’s image and the name. Therefore, the adapter must take in an array of images and pizza names. This is created by extending the RecycleView.Adapter class and overriding the methods required to create this new adapter. We also need to define an inner class called ViewHolder. A ViewHolder tells the app which views the Recycler will use for the given data.</span>

<span style="font-weight: 400;">A custom adapter will be created so that it can satisfy the two main objectives. In this app, the adapter created will be called <code>CaptionedImagesAdapter</code> which will take a String and an int (for the image ID). The code for the adapter is shown below:</span>
<pre class="lang:java decode:true">class CaptionedImagesAdapter extends RecyclerView.Adapter&lt;CaptionedImagesAdapter.ViewHolder&gt; {

   private String[] captions;
   private int[] imageIds;
   private Listener listener;

   interface Listener {
       void onClick(int position);
   }

   public static class ViewHolder extends RecyclerView.ViewHolder {

       private CardView cardView;

       public ViewHolder(CardView v) {
           super(v);
           cardView = v;
       }

   }


   public CaptionedImagesAdapter(String[] captions, int[] imageIDs) {
       this.captions = captions;
       this.imageIds = imageIDs;

   }</pre>
<span style="font-weight: 400;">For the RecyclerView, we will be using a CardView class from the support library, the XML for CardView can be found in the github repo. We need to call the ViewHolder method and put our CardView inside it. The super(v) is the super constructor and needs to be included because the ViewHolder’s superclass contains data that is required give its full functionality. Since we want to shown a CardView, it will be generated in our ViewHolder method. The RecyclerView code snippet is part of the adapter, but for clarity sake, its isolated here below:</span>
<pre class="lang:java decode:true ">public static class ViewHolder extends RecyclerView.ViewHolder {

   private CardView cardView;

   public ViewHolder(CardView v) {
       super(v);
       cardView = v;
   }

}</pre>
<span style="font-weight: 400;">The ViewHolder class is now defined, the next step would be generating the adapter to construct one using the onCreateViewHolder() method. The method takes two parameters:</span>
<ol>
 	<li><span style="font-weight: 400;">ViewGroup parent (recyclerview)</span></li>
 	<li><span style="font-weight: 400;">Int (viewType)</span></li>
</ol>
<span style="font-weight: 400;">To instantiate the ViewHolder, the CardView will be created and inflated out to the code snippet below:</span>
<pre class="lang:java decode:true">@Override
public CaptionedImagesAdapter.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
   CardView cv = (CardView) LayoutInflater.from(parent.getContext()).inflate(R.layout.card_captioned_image, parent, false);
   return new ViewHolder(cv);
}</pre>
<span style="font-weight: 400;">Up until this point, we have a blank CardView. In order to connect the data required to show in the CardView, we will need to implement the <code>onBindViewHolder()</code> method. Since the CardView contains two parameters, which is the image (ID of info_image) and the text (ID of info_text)</span>

<span style="font-weight: 400;">The <code>onBindViewHolder()</code> method code snippet is show below:</span>
<pre class="lang:java decode:true ">@Override
public void onBindViewHolder(ViewHolder holder,final int position) {
   CardView cardView = holder.cardView;
   ImageView imageView = (ImageView)cardView.findViewById(R.id.info_image);
   Drawable drawable = ContextCompat.getDrawable(cardView.getContext(), imageIds[position]);
   imageView.setImageDrawable(drawable);
   imageView.setContentDescription(captions[position]);
   TextView textView = (TextView)cardView.findViewById(R.id.info_text);
   textView.setText(captions[position]);
   cardView.setOnClickListener(new View.OnClickListener() {
       @Override
       public void onClick(View v) {
           if (listener != null) {
               listener.onClick(position);
           }
       }
   });
}</pre>
<span style="font-weight: 400;">We call the CardView, ImageView and Drawable object in the method and also bring in our Image and Textview. The code snippet also contains an onClick to toggle and generate an intent when someone clicks on a card.</span>

<span style="font-weight: 400;">The RecyclerView will be in a separate android fragment. In this app, it's called the PizzaFragment. The xml connected to this fragment will need to contain our RecyclerView code snippet:</span>
<pre class="lang:xhtml decode:true ">&lt;android.support.v7.widget.RecyclerView
   xmlns:android="http://schemas.android.com/apk/res/android"
   android:id="@+id/pizza_recycler"
   android:layout_width="match_parent"
   android:layout_height="match_parent"
   android:scrollbars="vertical"
   /&gt;
</pre>
<span style="font-weight: 400;">To hook up our RecyclerView and our adapter, we will need to tell the adapter what kind of data to use and then connect the RecyclerView to it. In this case, it will be the pizza names and the image IDs from its constructor. The next step would be to use its setAdapter() which will make our connection.</span>

<span style="font-weight: 400;">The code snippet for this is below. We first initialize the pizzaNames as an array of Strings and then the pizzaImage as an array of ints. This will help call the appropriate pizza based on its location of <code>i</code>.</span>

<span style="font-weight: 400;">The <code>CaptionedImagesArrayAdapter</code> passes the array to the adapter.</span>
<pre class="lang:java decode:true ">public class PizzaFragment extends Fragment {
   @Override
   public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

       RecyclerView pizzaRecycler = (RecyclerView) inflater.inflate(R.layout.fragment_pizza, container, false);

       String[] pizzaNames = new String[Pizza.pizzas.length];
       for (int i = 0; i &lt; pizzaNames.length; i++) {
           pizzaNames[i] = Pizza.pizzas[i].getName();
       }

       int[] pizzaImages = new int[Pizza.pizzas.length];
       for (int i = 0; i &lt; pizzaImages.length; i++) {
           pizzaImages[i] = Pizza.pizzas[i].getImageResourceId();
       }

       CaptionedImagesAdapter adapter = new CaptionedImagesAdapter(pizzaNames, pizzaImages);
       pizzaRecycler.setAdapter(adapter);
       GridLayoutManager layoutManager = new GridLayoutManager(getActivity(), 2);
       pizzaRecycler.setLayoutManager(layoutManager);

       adapter.setListener(new CaptionedImagesAdapter.Listener() {
           public void onClick(int position) {
               Intent intent = new Intent(getActivity(), PizzaDetailActivity.class);
               intent.putExtra(PizzaDetailActivity.EXTRA_PIZZA_ID, position);
               getActivity().startActivity(intent);
           }
       });
       return pizzaRecycler;

   }
 }
</pre>
<h3 style="text-align: center;">Layout of Cards</h3>
<span style="font-weight: 400;">The <code>GridLayoutManager</code> allows us to create the layout in a grid like orientation. We can also change this to be a linear list by calling a <code>LinearLayoutManager</code> using the code snippet below:</span>
<pre class="lang:java decode:true">LinearLayoutManager layoutManager = new LinearLayoutManager(getActivity());
pizzaRecycler.setLayoutManager(layoutManager);
</pre>
<span style="font-weight: 400;">This code snippet will give us this look below.</span>

<span style="font-weight: 400;"><img class="wp-image-1001 aligncenter" src="https://kiendang.me/wp-content/uploads/2019/01/Screenshot_20190129-193909.png" alt="" width="314" height="558" /></span>

&nbsp;
<h3 style="text-align: center;"><strong>Responding to User Clicks</strong></h3>
<span style="font-weight: 400;">In a ListView, there are a large number of superclasses that is inherited which allows the developer to use onItemClickListener when a specific view is pressed on the list. The built-in features allow the developer to override these methods. However, for a RecyclerView, they do not inherit the superclasses that ListView has. Therefore, RecyclerViews require extra work to respond to user clicks. </span><span style="font-weight: 400;">There are two ways in approaching this.</span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Listen to view events from Adapter</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Use an interface</span></li>
</ol>
<span style="font-weight: 400;">We will skip the first way because we want to be able to reuse the adapter. Instead we will use an interface. An interface is similar to an abstract class. An abstract method provides a way to generate a method but does not implement it. An interface is similar in that you can specify methods that have no body and that these methods must be implemented in a class in order for it to be defined. Once an interface is defined, any class can implement it and must require a body to implement its method. This was seen in the previous code snippet, but here it is as an isolated method:</span>
<pre class="lang:java decode:true"> CaptionedImagesAdapter adapter = new CaptionedImagesAdapter(pizzaNames, pizzaImages);
       pizzaRecycler.setAdapter(adapter);
       GridLayoutManager layoutManager = new GridLayoutManager(getActivity(), 2);
       pizzaRecycler.setLayoutManager(layoutManager);

       adapter.setListener(new CaptionedImagesAdapter.Listener() {
           public void onClick(int position) {
               Intent intent = new Intent(getActivity(), PizzaDetailActivity.class);
               intent.putExtra(PizzaDetailActivity.EXTRA_PIZZA_ID, position);
               getActivity().startActivity(intent);
           }
       });
       return pizzaRecycler;
   }
}
</pre>
<span style="font-weight: 400;">We throw in the intent to add a new activity just like what was learned previously.</span>

<span style="font-weight: 400;">Phew, this was a long one, after doing many examples and practices with RecyclerViews, I’m becoming more comfortable using them. The next chapter will be creating a Navigation Drawer.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>999</wp:post_id>
		<wp:post_date><![CDATA[2019-01-29 08:26:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-29 08:26:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[journey-into-android-development-pt-14-recyclerviews]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android Development]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1004]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
			<wp:meta_value><![CDATA[2019-01-30]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Java Pt. 1: Fundamentals</title>
		<link>https://kiendang.me/index.php/2019/02/08/java-fundamentals-pt-1/</link>
		<pubDate>Fri, 08 Feb 2019 17:57:11 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=1010</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">I picked up Thinking in Java by Bruce Eckel to help develop my understanding of object oriented programming. When working with Java and trying to develop android applications I wanted to understand why the Java code is the way it is and how it works the way it does. I know that once I solidify my fundamentals of OOP, I'll recognize some of the core concepts when developing and eventually help me become a better programmer.</span>

<span style="font-weight: 400;">The concepts are taken from the book and are written in my own words to help me understand them as I go through the book. This post will be a long one.</span>

<span style="font-weight: 400;">Characteristics that represent a pure approach to object-oriented programming by Alan Kay:</span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Everything is an object</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Thinking of objects as variables which store data but can make request to perform certain operations on itself</span></li>
</ul>
</li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">A program is a bunch of objects communicating to each other by sending messages</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">The messages are request to call a method belonging to a particular object</span></li>
</ul>
</li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Each object has its own memory made up of other objects</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">We can create new objects by making a package that contains existing objects, therefore being able to build complex objects</span></li>
</ul>
</li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Every object has a type</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Each object is an instance of a class</span></li>
</ul>
</li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">All objects of a particular type can receive the same messages</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">For example, a circle object is an object type of shape. Shape type can be shared with other objects like triangle or square and any objects that will satisfy the shape description</span></li>
</ul>
</li>
</ol>
<span style="font-weight: 400;">Another description of an object from Booch:</span>

<span style="font-weight: 400;">An object has a state (internal data), behaviour (methods) and identity (unique address in memory).</span>
<h3 style="text-align: center;"><b>Interfaces</b></h3>
<span style="font-weight: 400;">All objects are unique but are part of a class of objects that share characteristics and behaviours. Creating abstract classes (data types) is a fundamental concept in OOP, we can create variable types (e.g objects or instances) and manipulate them. For the bank teller example, tellers, customers, accounts etc, are represented with a unique entity in the computer program. This unique entity is the object and each object belongs to a class that defines the characteristics and behaviours.</span>

<span style="font-weight: 400;">When a class is created, the programmer can make as many objects of that class and manipulate those objects to find a solution to the problem. Each object can satisfy only a certain request and the request that are made are defined by its </span><b>interface </b><span style="font-weight: 400;">and the type is what determines the interface.</span>

<span style="font-weight: 400;">An example would be a light bulb:</span><img class="size-full wp-image-1011 aligncenter" src="https://kiendang.me/wp-content/uploads/2019/02/Screenshot-2019-02-08-at-12.41.15-PM.png" alt="" width="196" height="131" />
<pre class="lang:java decode:true">Light lt = new Light();
lt.on();</pre>
<span style="font-weight: 400;">The interface determines the request you can make for a specific object. The code is not written in the interface itself, but is hidden and comprises the </span><i><span style="font-weight: 400;">implementation</span></i><span style="font-weight: 400;">.</span>

<span style="font-weight: 400;">The Light is the name of the class and is called <strong>lt</strong>, the requests you can make from a Light object are turning it on, off, brighten or dim. The Light object is defined by a reference “<strong>lt</strong>” and calling new to create a new object. From there, the way to connect the interface is using the dot to manage the request to execute a function.</span>
<h3 style="text-align: center;"><b>Think about objects as service providers</b></h3>
<span style="font-weight: 400;">The program provides services to the user by utilizing the functions of other objects. The idea is to locate existing code libraries (set of objects) that provide the ideal service to solve the problem.</span>

<span style="font-weight: 400;">High cohesion - fundamental quality of software design that means many aspects of the software component fit together well.</span>

<span style="font-weight: 400;">In OOP, there are two types if programmers:</span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Class creators (those who create new data types or classes)</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Client programmers (consumers who uses classes in their applications)</span></li>
</ol>
<span style="font-weight: 400;">The goal of the class creator is to build a class that exposes only the essential code required for the client programmers and hide the rest of the code. The goal of the client programmer is to use a bunch of the classes for rapid application development.</span>

<span style="font-weight: 400;">The reason for hidden code is that the client programmer cannot access it and allows the class creator to refactor the code behind the scenes without having to impact anyone else. Hiding implementations can reduce program bugs because the hidden portion of the code is untouched by the client programmer.</span>

<span style="font-weight: 400;">In summary:</span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Restrict access control to keep client programmers from breaking the code necessary of internal operations. Separates what is important and what is not for client programmers.</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Allow library designers to refactor the code of the class without affecting client programmer</span></li>
</ol>
<span style="font-weight: 400;">Java uses the three keywords to set boundaries in a class called access specifiers: public, private and protected.</span>

<span style="font-weight: 400;"><code>public</code> - the element is available to everyone</span>

<span style="font-weight: 400;"><code>private</code> - no one can access the element except you (brick wall)</span>

<span style="font-weight: 400;"><code>protected</code> - acts like private but allows an inheriting class to access it.</span>
<h3 style="text-align: center;"><b>Reusing implementation - Composition (Member object)</b></h3>
<span style="font-weight: 400;">Reusing a class is as easy as using an object of that class directly but also putting that object inside of a new class - “creating a member object”. Your new class can be made up of any combination of other objects to achieve functionality. This concept is called <strong>composition</strong>. If it happens dynamically, it's called <strong>aggregation</strong>. An example of composition is “A car has an engine”. Composition allows for a lot of flexibility as member objects of new classes are private and allow changes to them without disturbing client code.</span>

<span style="font-weight: 400;">It is ideal for a beginner to use compositions first when creating new classes; it will help the design be cleaner and with experience it will be obvious when to use inheritance over compositions.</span>
<h3 style="text-align: center;"><b>Inheritance (class extends from another)</b></h3>
<span style="font-weight: 400;">Instead of creating classes and be forced to create a new one that might have similar functionality, we can clone the existing class and make additions and modifications to the clone. This is called inheritance. However, if the original class (e.g superclass or base class) is changed, then the modified cloned (inherited class or subclass) also reflects those changes.</span>

<span style="font-weight: 400;">Usually, when an interface is created, it can have more characteristics and behaviours than the base type but share common ones. For example, when building a recycling center, the base class would be trash and the piece of trash has weight etc. and it can either be shredded, melted, or recycled. From this, we can generate specific types of trash that might have additional characteristics like the colour, or behaviours (metallic) and using inheritance, a hierarchy can be built.</span>

<span style="font-weight: 400;">There are two ways to differentiate the new derived class (subclass) from its original base class.</span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Add new methods to the derived class that are not part of the base class interface</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Changing the behaviour of the base class method referred to as </span><b>overriding</b></li>
</ol>
<span style="font-weight: 400;">When the derived class is exactly the same type as the base class but only override the base class methods is known as pure substitution and is referred to as the substitution principle. “A circle </span><b>is a</b><span style="font-weight: 400;"> shape”, an easy test to determine if it is an “is-a” relationship and have it make sense. When adding new interface elements to the derived type (extending the interface), you will have an object that contain the interface of the base type but also other methods so they’re not 100% the same. </span>

<span style="font-weight: 400;">An example would be having an air conditioner pump that's broken and you replace it with a pump that can cool and heat. Therefore the new pump can be an object that has been extended and the air conditioner system only knows how to interact with the cooling interface of the pump and not the heat.</span>
<h3 style="text-align: center;"><b>Polymorphism</b></h3>
<span style="font-weight: 400;">When dealing with type hierarchies, we should treat an object as the base type and not the specific type. The benefit of this is that we can write code that is not dependent on a specific type, but rather, its base type. </span>

<span style="font-weight: 400;">For example, we write a code that ignores specific details of type and talks only to base class:</span>
<pre class="lang:java decode:true">void doSomething(Shape shape) {

    shape.calculateArea(); 

    shape.calculatePerimeter();

}</pre>
<span style="font-weight: 400;">This method works for any Shape so regardless of what specific shape it is, all it knows is that it takes a Shape object and when a type of Shape is passed through, it will know exactly how to execute its method. Remember that creating those instances means that Circle or Triangle objects <strong>extends</strong> Shape and will be overriding base methods to solve the problem.</span>
<pre class="lang:java decode:true ">Circle circle = new Circle()
Triangle triangle = new Triangle()

doSomething(circle);
doSomething(triangle);
</pre>
<span style="font-weight: 400;">The <code>doSomething()</code> automatically works regardless of the exact type of object. Circle is being passed into a method that expects a Shape and a circle is a Shape, it can be treated as one by the <code>doSomething()</code> method. The process of treating a derived type as if it was a base type is considered upcasting. What is great about this process is that there are no conditionals, meaning, if you are a Circle, execute method A, if you are a Triangle, execute method B and so on. There requires no check because of<strong> polymorphism</strong>.</span>

<span style="font-weight: 400;">So calling <code>calculateArea()</code> on a circle runs a different code than calling <code>calculateArea()</code> on a triangle. The correct behaviour occurs based on the type of Shape, this is the benefit of polymorphism. </span>

<span style="font-weight: 400;">This wraps put part one of Java fundamentals. I will continue to review and summarize more concepts by writing them out in my future posts.</span>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1010</wp:post_id>
		<wp:post_date><![CDATA[2019-02-08 12:57:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-08 17:57:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java-fundamentals-pt-1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1012]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Journey into Android Development Pt. 15 (Navigation Drawers)</title>
		<link>https://kiendang.me/index.php/2019/02/10/journey-into-android-development-pt-15-navigation-drawers/</link>
		<pubDate>Sun, 10 Feb 2019 23:54:37 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=1020</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">Tabs are great for easy navigation when there are only a few screens required. However, when dealing with multiple screens, an ideal solution would be using the Navigation View. The Navigation View allows users to swipe or use the hamburger menu to access other screens. Below is the finished product in action:</span>

<img class=" wp-image-1021 aligncenter" src="https://kiendang.me/wp-content/uploads/2019/02/Android-Navigation-Drawer.gif" alt="" width="355" height="631" />

<span style="font-weight: 400;">I will be writing my experience on implementing the navigation drawer and will use this as a reference to come back when I need it for my future projects.</span>

<span style="font-weight: 400;">By implementing a navigation drawer, we need to add the drawer layout to the activities layout. There are two views that are considered:</span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">The main content - which contains a toolbar and a frame layout which is used to display each fragment.</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">A view for the drawer contents - the navigation view itself which controls its behaviour</span></li>
</ol>
<span style="font-weight: 400;">There will be four main steps to create this navigation drawer</span>
<h2 style="text-align: center;"><b>Creating the fragments and activities</b></h2>
<span style="font-weight: 400;">The important thing we need to remember is we will be displaying a toolbar over all of these activities and the navigation drawer. We first need to create the fragments and activities individually and hook them up to the navigation.</span>

<span style="font-weight: 400;">Fragments will be displayed under the frame component of the application, this will be reviewed later.</span>

<span style="font-weight: 400;">Creating fragments will be done as usual, under the <code>app/src/main/java folder</code>, New -&gt; Fragment -&gt; Fragment (Blank) and it will generate its own XML layout.</span>

<span style="font-weight: 400;">Each fragment will have a simple code below:</span>
<pre class="lang:java decode:true "> @Override
   public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
       return inflater.inflate(R.layout.fragment_inbox, container, false);
   }
}
</pre>
<span style="font-weight: 400;"><code>The R.layout.fragment_inbox</code> references our XML layout <code>fragment_inbox.xml</code>. This is repeated for the Drafts, Sent Messages, and Trash respectively.</span>

<span style="font-weight: 400;">For the activities, which are the support items in the navigation drawer, the activities need to be created through the New -&gt; Empty Activity. We need to add our toolbar to these activities and we will do so by making the toolbar a separate layout.</span>

<span style="font-weight: 400;">We need to navigate through the <code>app/src/res/main/layout</code> folder and create a new Layout resource file. We need to make sure we rename this to <code>toolbar_main</code> which will generate our XML file. The toolbar we created will be replacing our built in one because we want to be able to add other functionalities to it, like adding the hamburger menu or a share button in previous exercises.</span>
<pre class="lang:xhtml decode:true">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;android.support.v7.widget.Toolbar
   xmlns:android="http://schemas.android.com/apk/res/android"
   android:layout_width="match_parent"
   android:layout_height="?attr/actionBarSize"
   android:background="?attr/colorPrimary"
   android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"/&gt;
</pre>
<span style="font-weight: 400;">In order to remove the built in one, we need to update the <code>styles.xml</code> and replacing the parent with “<strong>Theme.AppCompat.Light.NoActionBar</strong>”.</span>
<pre class="lang:xhtml decode:true">&lt;resources&gt;
    &lt;!-- Base application theme. --&gt;
   &lt;style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar"&gt;
       &lt;!-- Customize your theme here. --&gt;
       &lt;item name="windowNoTitle"&gt;true&lt;/item&gt;
       &lt;item name="windowActionBar"&gt;false&lt;/item&gt;
   &lt;/style&gt;

&lt;/resources&gt;</pre>
<h2 style="text-align: center;"><b>Creating the Header of the Navigation Drawer</b></h2>
<span style="font-weight: 400;">The navigation drawer header is usually a picture and contain basic information. It is an optional component, however, its recommended to make the application look nicer. There are a set of options below and this is where we will connect the fragments and activities based on the users inputs.</span>

<span style="font-weight: 400;">For this navigation header, we create it in a separate Layout resource file and is named “nav_header”. The code to make this layout is below:</span><span style="font-weight: 400;">
</span>
<pre class="lang:xhtml decode:true">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;FrameLayout
   xmlns:android="http://schemas.android.com/apk/res/android"
   android:layout_width="match_parent"
   android:layout_height="180dp"
   android:theme="@style/ThemeOverlay.AppCompat.Dark"&gt;

   &lt;ImageView
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
       android:scaleType="centerCrop"
       android:src="@drawable/kitten_small"/&gt;

   &lt;LinearLayout
       android:layout_width="wrap_content"
       android:layout_height="match_parent"
       android:orientation="vertical"<code>
       android:gravity="bottom|start"
       android:layout_margin="16dp"&gt;

       &lt;TextView
           android:layout_width="wrap_content"
           android:layout_height="wrap_content"
           android:text="@string/app_name"
           android:textAppearance="@style/TextAppearance.AppCompat.Body1"/&gt;

       &lt;TextView
           android:layout_width="wrap_content"
           android:layout_height="wrap_content"
           android:text="@string/user_name"/&gt;

   &lt;/LinearLayout&gt;

&lt;/FrameLayout&gt;</code></pre>
<h3 style="text-align: center;"><b>Creating the Options of the Navigation View</b></h3>
<span style="font-weight: 400;">For the list of options, we need to create another resource file called <code>menu_nav</code> and give it a resource type of “<strong>Menu</strong>”. You’ll see how the menu is created and pay close attention to the way it is grouped. The <code>android:checkableBehaviour=”single”</code> is set to the parent group that contains the items which allow the android to know when each individual item is clicked in the menu list. </span>

<span style="font-weight: 400;">All of the string is referenced from the <code>strings.xml</code> for good practice. All the icons are built in from Android which is awesome. We can also use custom icons in the drawable folder if we had them.</span>

<span style="font-weight: 400;">The strings will all be listed under the resource component like so:</span>
<pre class="lang:xhtml decode:true ">&lt;menu xmlns:android="http://schemas.android.com/apk/res/android"&gt;
   &lt;group android:checkableBehavior="single"&gt;
       &lt;item
           android:id="@+id/nav_inbox"
           android:icon="@android:drawable/sym_action_email"
           android:title="@string/nav_inbox"
           android:checked="true"/&gt;
       &lt;item
           android:id="@+id/nav_drafts"
           android:icon="@android:drawable/ic_menu_edit"
           android:title="@string/nav_drafts" /&gt;
       &lt;item
           android:id="@+id/nav_sent"
           android:icon="@android:drawable/ic_menu_send"
           android:title="@string/nav_sent" /&gt;
       &lt;item
           android:id="@+id/nav_trash"
           android:icon="@android:drawable/ic_menu_delete"
           android:title="@string/nav_trash" /&gt;
   &lt;/group&gt;
   &lt;item android:title="@string/nav_support"&gt;
       &lt;menu&gt;
           &lt;item
               android:id="@+id/nav_help"
               android:icon="@android:drawable/ic_menu_help"
               android:title="@string/nav_help" /&gt;
           &lt;item
               android:id="@+id/nav_feedback"
               android:icon="@android:drawable/sym_action_email"
               android:title="@string/nav_feedback"/&gt;
       &lt;/menu&gt;
   &lt;/item&gt;

&lt;/menu&gt;</pre>
<h3 style="text-align: center;"><b>Implementing the Navigation Drawer in the MainActivity</b></h3>
<span style="font-weight: 400;">There are two main things we need to finish doing, the first step is to adjust our Main Activity XML and the second step is to connect everything together in the MainActivity java file.</span>

<span style="font-weight: 400;">You will notice right away that the parent element of <code>android.support.v4.widget.DrawerLayout</code> will nest everything in our MainActivity XML, including our custom toolbar and our <code>FrameLayout</code> element (where the fragments will be inflated):</span>
<pre class="lang:xhtml decode:true">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;android.support.v4.widget.DrawerLayout
   xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:app="http://schemas.android.com/apk/res-auto"
   android:id="@+id/drawer_layout"
   android:layout_width="match_parent"
   android:layout_height="match_parent"&gt;

   &lt;LinearLayout
       android:layout_width="match_parent"
       android:layout_height="match_parent"
       android:orientation="vertical"&gt;

       &lt;include
           android:id="@+id/toolbar"
           layout="@layout/toolbar_main" /&gt;

       &lt;FrameLayout
           android:id="@+id/content_frame"
           android:layout_width="match_parent"
           android:layout_height="match_parent"/&gt;
   &lt;/LinearLayout&gt;

   &lt;android.support.design.widget.NavigationView
       android:id="@+id/nav_view"
       android:layout_width="wrap_content"
       android:layout_height="match_parent"
       android:layout_gravity="start"
       app:headerLayout="@layout/nav_header"
       app:menu="@menu/menu_nav"/&gt;

&lt;/android.support.v4.widget.DrawerLayout&gt;</pre>
<span style="font-weight: 400;">There is one thing I need to point out and that would be making sure that the LinearLayout has its orientation, I was pulling my hair out for 30 minutes figuring out why none of my fragments were showing up. This was a silly mistake but I will make sure that never happens again.</span>

<span style="font-weight: 400;">At this point, we are missing the hamburger menu, you will need to create two string names with <code>nav_open_drawer</code> and <code>nav_close_drawer</code> which is required as the last two parameters of our <code>ActionBarDrawerToggle</code> object in the MainActivity <code>onCreate()</code>. The code snippet is below:</span>
<pre class="lang:java decode:true">DrawerLayout drawer = findViewById(R.id.drawer_layout);
ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawer, toolbar, R.string.nav_open_drawer, R.string.nav_close_drawer);

drawer.addDrawerListener(toggle);
toggle.syncState();</pre>
<span style="font-weight: 400;">The <code>addDrawerListener(toggle)</code> passes our <code>ActionBarDrawerToggle</code> to let the drawer know when it should pop out. The <code>toggle.syncState()</code> method allows the icons to synchronize with the toolbar state. The icon changes based on the click and gives us a nice animation but the drawer will cover it.</span>

<span style="font-weight: 400;">The entire code snippet for MainActivity is shown below, this is when things go from 0 to 100 real quick, just like how everything is unfortunately. However, when breaking all the chunks of code down, it becomes easier over time:</span>
<pre class="lang:java decode:true">public class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {

   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       setContentView(R.layout.activity_main);

       Toolbar toolbar = findViewById(R.id.toolbar);
       setSupportActionBar(toolbar);

       DrawerLayout drawer = findViewById(R.id.drawer_layout);
       ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawer, toolbar, R.string.nav_open_drawer, R.string.nav_close_drawer);

       drawer.addDrawerListener(toggle);
       toggle.syncState();

       NavigationView navigationView = findViewById(R.id.nav_view);
       navigationView.setNavigationItemSelectedListener(this);

       Fragment fragment = new InboxFragment();
       FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
       ft.add(R.id.content_frame, fragment);
       ft.commit();
   }

   @Override
   public boolean onNavigationItemSelected(MenuItem item) {
       int id = item.getItemId();
       Fragment fragment = null;
       Intent intent = null;

       switch (id) {
           case R.id.nav_drafts:
               fragment = new DraftsFragment();
               break;
           case R.id.nav_sent:
               fragment = new SentItemsFragment();
               break;
           case R.id.nav_trash:
               fragment = new TrashFragment();
               break;
           case R.id.nav_help:
               intent = new Intent(this, HelpActivity.class);
               break;
           case R.id.nav_feedback:
               intent = new Intent(this, FeedbackActivity.class);
               break;
           default:
               fragment = new InboxFragment();

       }

       if (fragment != null) {
           FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
           ft.replace(R.id.content_frame, fragment);
           ft.commit();
       } else {
           startActivity(intent);
       }

       DrawerLayout drawer = findViewById(R.id.drawer_layout);
       drawer.closeDrawer(GravityCompat.START);
       return true;

   }

   @Override
   public void onBackPressed() {
       DrawerLayout drawer = findViewById(R.id.drawer_layout);
       if (drawer.isDrawerOpen(GravityCompat.START)) {
           drawer.closeDrawer(GravityCompat.START);
       } else {
           super.onBackPressed();
       }
   }
}</pre>
<span style="font-weight: 400;">The MainActivity needs to implement the <code>NavigationView.OnNavigationItemSelectedListener</code> because we will be overriding some important methods to get our Navigation Drawer to connect and display our certain fragments. In this case, we are using a Switch Case statement to toggle and inflate the corresponding fragments in the <code>FrameLayout</code> we had set up in our XML file. The activities for support will throw intents as shown in previous posts. </span>

<span style="font-weight: 400;">Keep in mind, we add all of the essential components such as our Toolbar, DrawerLayout, NavigationView and Fragment objects in our <code>onCreate()</code> method of our activity since we want to make sure these are created for the user when the application starts.</span>

<span style="font-weight: 400;">And viola, by doing these 4 steps, we will be able to implement our functional navigation drawer.  The final code is hosted on my Github repository under the Android Development section for a thorough reference.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1020</wp:post_id>
		<wp:post_date><![CDATA[2019-02-10 18:54:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-10 23:54:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[journey-into-android-development-pt-15-navigation-drawers]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android Development]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[625]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>David Goggins - Can&#039;t Hurt Me</title>
		<link>https://kiendang.me/index.php/2019/02/12/david-goggins-cant-hurt-me/</link>
		<pubDate>Wed, 13 Feb 2019 00:11:08 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=1027</guid>
		<description></description>
		<content:encoded><![CDATA[<img class="aligncenter" src="https://d188rgcu4zozwl.cloudfront.net/content/B07H453KGH/resources/1919703094" width="301" height="465" />
<blockquote><span style="font-weight: 400;">“The most important conversations you’ll ever have are the ones you’ll have with yourself.” </span></blockquote>
<span style="font-weight: 400;">I picked up this book from a friend recommendation and I was instantly hooked after the first few pages. David Goggins' book was not only eye opening but his life journey is extremely inspiring. The book is very well written, almost as if he was a fictional character in a messed up world. It is a story of a man whose been through hell and achieved greatness. </span>

<span style="font-weight: 400;">As you read though his story, you’ll find that life dealt him the worst hand possible. Every event he leads you through is another dark hole, one after another and yet he was able to find strength and persevere.</span>

<span style="font-weight: 400;">Most of his experiences are painful ones, mentally and physically. It is through the suffering that he was able to find himself and become who he is today. Whether it is setting up a goal to go to the gym, dealing with relationships at work or at home or developing a new skill, he constantly reminds us that work ethic is the most important factor in all of his accomplishments. The constant desire to seek out discomfort allows us to grow.</span>

<span style="font-weight: 400;">Can’t Hurt Me is not your average self help book giving you the steps on how to accomplish something, it is the journey and experience that David Goggins shares and his thought process he developed. They are perfect examples of mind over matter and has given me a paradigm shift in understanding personal growth.</span>

<span style="font-weight: 400;">This is my first book of 2019 and by far my favourite one I've read to date. I have 4 more books to go to complete my <a href="https://www.goodreads.com/challenges/8863-2019-reading-challenge">2019 challenge</a> and I look forward to completing this!</span>

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1027</wp:post_id>
		<wp:post_date><![CDATA[2019-02-12 19:11:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-13 00:11:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[david-goggins-cant-hurt-me]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="books"><![CDATA[Books]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1030]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How I stay focused: Productivity Tools</title>
		<link>https://kiendang.me/index.php/2019/02/18/how-i-stay-focused-productivity-tools/</link>
		<pubDate>Tue, 19 Feb 2019 02:33:45 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=1040</guid>
		<description></description>
		<content:encoded><![CDATA[Being productive feels good. It feels even better when you're able to track your progress. Here are some of my tools I use to keep productive.
<h3 style="text-align: left;">Trello</h3>
I discovered Trello through a friend and found it to be a great way to visually see my To Do's slowly shrink. I combine the boards and cards with my Pomodoro's and it has been a great tool to organize my tasks. Trello is free and comes with a ton of features. A comphrensive guide on how to use Trello can be found <a href="https://trello.com/guide/trello-101" target="_blank" rel="noopener">here</a>.
<h3>Pomotodo</h3>
<a href="https://pomotodo.com/" target="_blank" rel="noopener">Pomotodo</a> is a web application specifically made to do the <a href="https://kiendang.me/index.php/2018/12/19/productivity-pomodoro-technique/" target="_blank" rel="noopener"><strong>Pomodoro Technique</strong></a>. The app has features such as a graph visualizer to see how many Pomodoro's you've completed in a day, week or month and shows your productive hours as well as your optimal days. Visualization of Pomodoros are a great motivator. With their hashtag functions, it makes organizing your accomplishments easier.
<h3>OneNote</h3>
<a href="https://products.office.com/en-ca/onenote/digital-note-taking-app?rtc=1" target="_blank" rel="noopener">OneNote</a> is a free fully featured notebook developed by Microsoft. It is a digital binder that helps you store your notes and ideas. After using this application for school, I've been able to use the features for work. I've helped my department utilize this tool and streamline our notes together using its cloud based capabilities.

There are tons of useful features that are integrated with Outlook including tasks, archiving specific emails, integrating meeting notes and being able to query information in an instant. I highly recommend learning how to use this!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1040</wp:post_id>
		<wp:post_date><![CDATA[2019-02-18 21:33:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-19 02:33:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-i-stay-focused-productivity-tools]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1041]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Java Pt. 2: Fundamentals Cont&#039;d</title>
		<link>https://kiendang.me/index.php/2019/02/24/java-fundamentals-pt-2/</link>
		<pubDate>Mon, 25 Feb 2019 02:08:42 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=1046</guid>
		<description></description>
		<content:encoded><![CDATA[<h3 style="text-align: center;"><b>Containers</b></h3>
<span style="font-weight: 400;">You don’t know how many objects you will need to solve a problem or how to store them or even how much space is required if the information isn’t known until the program is ran.</span>

<span style="font-weight: 400;">For this, you will be using an object called a <strong>container</strong> (or a collection) and will expand itself every time it is required. Java has different types of containers for different needs, these are Lists classes (holds sequences) Maps (associative arrays, associates objects with other objects) and Sets (to hold one of each type of object).</span>

<span style="font-weight: 400;">Java containers provide different types of interfaces and external behaviours, so one of these might solve your solution better than another. Different containers have different efficiencies for certain operations.</span>

<span style="font-weight: 400;">Example:</span>

<span style="font-weight: 400;">List: <strong>ArrayList</strong> and <strong>LinkedLinks</strong></span><span style="font-weight: 400;">
</span><span style="font-weight: 400;">
</span><span style="font-weight: 400;">Both can have identical interfaces and external behaviours, however, they can have significantly different costs of resources. ArrayLists is a constant-time operation, it takes the same amount of time regardless of the elements you select. A LinkedList takes longer to find random elements that is farther down the list but faster to insert an element in the middle of a sequence.</span>

<span style="font-weight: 400;">Containers only hold Objects, so when you add an object reference into the container, it only upcasts to an Object. In this specific example of finding the type of Object, we need to do something called downcasting. Remember that upcasting a Circle is a Shape so it is safe to upcast, however, you don’t know if the object is a Shape or a Circle, so downcasting is not ideal here. If downcasting finds the wrong thing, you will have a runtime error called </span><i><span style="font-weight: 400;">exception.</span></i>

<span style="font-weight: 400;">Downcasting and runtime checks require cost extra for running the program, so in order to create the container so it knows the type it holds and reduce downcast, we can use something called <strong>parameterized</strong> type mechanism. It is a class that runs to customize work with particular types and is used by creating angle brackets (these are the use of generics)</span>
<pre class="lang:java decode:true">ArrayList&lt;Shape&gt; shapes = new ArrayList&lt;Shape&gt;();</pre>
<h3 style="text-align: center;"><b>Object Creation and Life Time</b><b></b></h3>
<span style="font-weight: 400;">One of the major issues working with object is the way they are created and destroyed as they require resources and most importantly, memory to exist. When an object is destroyed, it frees up resources to be reused.</span>

<span style="font-weight: 400;">The issue becomes more prominent when you want to destroy objects and you don’t know when to. The resolution for this is to create objects dynamically in memory called the heap. Java uses a dynamic memory allocation and you would use the </span><b>new </b><span style="font-weight: 400;">operator to build a dyanmic instance of that object. The lifetime of that object is determined when the </span><b>garbage collector</b><span style="font-weight: 400;"> (feature in Java) discovers that the object is no longer in use and destroys it. The garbage collector feature in Java knows when an object is not in use and automatically frees up memory.</span>
<h3 style="text-align: center;"><b>Exception Handling in Java</b></h3>
<span style="font-weight: 400;">Exception handling helps your code simpler to write because you aren’t constantly checking for errors, when something goes wrong a thrown exception. An exception cannot be ignored and provide away to recover your code and create robust programs.</span>
<h3 style="text-align: center;"><b>Concurrent Programming</b></h3>
<span style="font-weight: 400;">A fundamental concept of programming is the idea off handling multiple tasks at the same time. Within a program, these separate running “threads” provide a more responsive program. The tasks can run in parallel if your operating system can support multiple processors. However, there is a catch when you are trying to access the shared resources. This becomes a bottleneck and two processes cannot access a single resource at the same time. Java's concurrency is built into the language. </span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1046</wp:post_id>
		<wp:post_date><![CDATA[2019-02-24 21:08:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-25 02:08:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java-fundamentals-pt-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1048]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Java Pt 3: Manipulating Objects with References</title>
		<link>https://kiendang.me/index.php/2019/03/03/java/</link>
		<pubDate>Sun, 03 Mar 2019 17:22:50 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=1063</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">Treat everything as an object using consistent syntax. The identifier you manipulate will be a reference to the object. For example, a TV and a remote. The TV is the object, the remote is the reference to the object. So when you want to perform a change on the TV, you use the remote to modify the TV. You can still change the TV’s state anywhere in the room, just take the remote with you.</span>
<h3 style="text-align: center;"><b>You must create all objects</b></h3>
<span style="font-weight: 400;">You create objects by using the </span><b>new</b><span style="font-weight: 400;"> operator. For example, creating a String s = new String(“hello world”). If everything is an object, then using the class keyword followed by the name of the new type.</span>

<span style="font-weight: 400;">Creating new data types:</span><span style="font-weight: 400;">
</span>
<pre class="lang:java decode:true">Class ATypeName {/* Class body goes here */}</pre>
<span style="font-weight: 400;">You will then create an object of this type using </span><b>new</b><span style="font-weight: 400;">:</span><span style="font-weight: 400;">
</span>
<pre class="lang:java decode:true">ATypeName a = new ATypeName();</pre>
<span style="font-weight: 400;">
</span><span style="font-weight: 400;">You then must define methods in order to send messages. You define classes, make objects of those classes (objects are instances of classes, and classes are blueprints of objects) and you can put two types of elements in your class</span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Fields (data members)</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Methods (specific functions)</span></li>
</ol>
<span style="font-weight: 400;">Example of a class with fields:</span>
<pre class="lang:java decode:true">Class DataOnly {

Int i

Double d
Boolean b

}</pre>
<span style="font-weight: 400;">This class does nothing so far, but hold data. You create an object using this notation below:</span><span style="font-weight: 400;">
</span><span style="font-weight: 400;">
</span><span style="font-weight: 400;">DataOnly data = new DataOnly();</span><span style="font-weight: 400;">
</span><span style="font-weight: 400;">
</span><span style="font-weight: 400;">Then assign values to the field using the dot object reference like so:</span><span style="font-weight: 400;">
</span><span style="font-weight: 400;">
</span>
<pre class="lang:java decode:true ">Data.i = 44;
Data.d = 4.1;
Data.b = true;</pre>
<span style="font-weight: 400;">
</span><span style="font-weight: 400;">Your object might contain other objects so you would keep connecting the dots:</span>
<pre class="lang:java decode:true">myCar.gasTank.capacity = 13;</pre>
<h3 style="text-align: center;"><b>Methods, arguments and return values</b></h3>
<span style="font-weight: 400;">A function is used to describe a subroutine, this is true in languages such as C and C++. However, in Java, these are called </span><b>methods,</b><span style="font-weight: 400;"> thinking of methods as a way to do something. As stated in previous post, methods determine what the objects can receive. The important part of methods are</span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Name</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Arguments - gives the types and names for information that is passed into the method</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Return Type - describes the value that comes back from the method after it’s been called.</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Body</span></li>
</ol>
<span style="font-weight: 400;">It is structured below:</span>
<pre class="lang:java decode:true">ReturnType methodName (/* Argument list */ =( {

/* Method body */

}</pre>
<span style="font-weight: 400;">Methods in Java can be created only as part of a class</span>

<span style="font-weight: 400;">Remember:</span>

<span style="font-weight: 400;">Objects are instances of classes. For example, we can take Human as an example of a class, and the objects would be individuals such as you and me. In the class of Humans, we can have methods such as walk, which applies to every individual. </span>
<h3 style="text-align: center;"><b>Return</b></h3>
<span style="font-weight: 400;">The return keyword does two things:</span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Leave the method, I’m done</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">If method produces a value, then it will return that value after the method is complete</span></li>
</ol>
<span style="font-weight: 400;"><code>Void</code>  - When the return is a type void, then the return keyword is used to exit the method.</span>

<span style="font-weight: 400;">Everything in a Java program can look like a bunch of objects with methods that take other objects as arguments and send messages to other objects. With that in mind, we can break the steps down by the next posts.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1063</wp:post_id>
		<wp:post_date><![CDATA[2019-03-03 12:22:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-03 17:22:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1066]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Time for Change</title>
		<link>https://kiendang.me/index.php/2019/04/19/new-chapter/</link>
		<pubDate>Fri, 19 Apr 2019 20:05:34 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=1072</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">May 3rd will be my last day working for The Woodbridge group as a Product Evaluation and Costing Technologist. I spent 2 years and 4 months learning the operations of a chemical company that produced foam for the automotive industry and felt that I’ve learned all I could and figured it was time to part ways and pursue other opportunities. </span>

<span style="font-weight: 400;">I’ve been extremely grateful for the opportunity and the ability to work alongside many individuals at The Woodbridge Group. I’ve learned to work with many different business units including the product engineers, tooling managers, purchasing commodity managers, the pricing and commercial team.</span>

<span style="font-weight: 400;">I’ve learned the skills to collaborate in team environments, problem solve and find effective solutions to current problems and meet very tight deadlines from customer demands. My objectives were to maintain my programs and provide up to date costs for chemicals and components of automotive foam seats as well as costing new businesses.</span>

<span style="font-weight: 400;"> My programs included Chrysler, Nissan and Ford. A large portion of my day goes to slicing 3D data using Teamcenter VisView and reading 2D blueprints of car seats and making sure they’re costed according to our standards and review data with different units to ensure manufacturing feasibility.</span>

<span style="font-weight: 400;">Initially, when I started 2 years ago, I felt a bit of impostor syndrome. As someone who did not have an engineering degree, I was nervous when taking on a job description that had nothing to do with my background in sciences. But they felt that my skill set would be a great fit to the position based on previous experiences. As a bonus, the job was 8 minutes away from home!</span>

<span style="font-weight: 400;">I believe that having an open mind and the ability to learn was what made me excel in my position regardless of my degree. It took me a full year to finally grasp my job title and understand my position at my company.</span>

<span style="font-weight: 400;">During my first year I saw a lot of opportunities to improve their process. I’ve made many improvements with excel macros alone which saved the company over <a href="https://kiendang.me/index.php/2019/01/13/how-i-automate-a-process-at-work-using-excel-vba/" target="_blank" rel="noopener">$4500 yearly</a>. The second year was spent on improving my ability to meet tight deadlines and was now finally comfortable working in my position. </span>

<span style="font-weight: 400;">Unfortunately, being comfortable meant plateauing and I was no longer learning anything new. Manufacturing wasn’t something I wanted to do long term and ultimately made the decision to resign.</span>

<span style="font-weight: 400;">I wanted to spend more time on programming. I was making progress but at a slow pace. I realized that the energy and time I had was very limited with a full-time job. I knew that commitment to change requires 100% focus. I gave ample time in my notice to allow them to find a replacement.</span>

<span style="font-weight: 400;">Being in my 20's and still having the energy to learn was something I wanted to capitalize on. I wanted a career that involved programming because it is something I'm interested in. I would program on the side to develop new skills and eventually automate a part of my job. I found that being able to develop something to solve a problem was a lot more fun which eventually sparked my interest in programming.</span>

<span style="font-weight: 400;">Being unemployed means having more free time to work towards developing my skills in programming and learning various languages that will help me with my career path.</span>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1072</wp:post_id>
		<wp:post_date><![CDATA[2019-04-19 15:05:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-19 20:05:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[new-chapter]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1128]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Here we go!</title>
		<link>https://kiendang.me/index.php/2019/05/06/here-we-go/</link>
		<pubDate>Mon, 06 May 2019 15:24:13 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=1109</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">First day of unemployment. I have no idea what lies ahead of me but I do know where I want to be and how to get there.</span>

<span style="font-weight: 400;">Having a full-time job and programming on the side was difficult, however, I did manage to get farther than I thought I would using the <a href="https://kiendang.me/index.php/2019/02/18/how-i-stay-focused-productivity-tools/" target="_blank" rel="noopener">Pomodoro Technique</a>. My progress was tracked using the <a href="https://pomotodo.com" target="_blank" rel="noopener">Pomotodo</a> tracker from Sept 1st 2018 to May 3rd 2019:</span>

<img class="alignnone wp-image-1115" src="https://kiendang.me/wp-content/uploads/2019/05/PomoToDo.png" alt="" width="759" height="90" />

<img class="alignnone size-full wp-image-1116" src="https://kiendang.me/wp-content/uploads/2019/05/PomoTodo-Track.png" alt="" width="1961" height="1438" />

<span style="font-weight: 400;">Looking back, I explored Java through Android development which was about a total of 700 pages of Head First Android. I'm proud to say that I can make a simple Android application with the built in SQL database. React was also explored during my time with Android with some small projects on my Github.</span>

<span style="font-weight: 400;">My productivity was never the highest during the weekday which was to be expected due to work. As you can see I've been most productive during weekends. I learned a lot about myself and my own energy level through this exercise. </span>

<span style="font-weight: 400;"> Now with more free time I'll be able to develop projects from what I've learned. </span><span style="font-weight: 400;">I told myself I’d give myself a good week to relax and enjoy the beautiful start of spring. This will be the first summer since 2012 that I have off.</span>

<span style="font-weight: 400;">Hopefully this won’t be too much as I have set myself a soft deadline for theory. I’m focusing heavily on the algorithms and data structures because I know this knowledge is required for the technical interviews. As someone who has no experience in any algorithm questions, I will be using the courses offered by MIT and Princeton University to develop the foundation.</span>

<span style="font-weight: 400;">I plan on gaining the skills I need to be employable in the tech industry. I feel will be the most difficult part would be standing out in front of many who have Computer Engineering and Computer Science degree with entry level positions under their belt.</span>

<span style="font-weight: 400;">I'm hoping my hard work, willingness to learn and determination will set me apart.</span>

<strong>Programming (First 20 days):</strong>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">freeCodeCamp Responsive Web Design Certification (HTML, CSS)</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">freeCodeCamp JavaScript Algorithms and Data Structures Certification (JS)</span><span style="font-weight: 400;">
</span></li>
</ul>
<strong>Theory - Coursework (70 days): </strong>
<ul>
 	<li style="font-weight: 400;"><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/index.htm"><span style="font-weight: 400;">Intro to Algorithms MIT Course </span></a></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Princeton University course <a href="https://www.coursera.org/learn/algorithms-part1" target="_blank" rel="noopener">Part 1</a> and <a href="https://www.coursera.org/learn/algorithms-part2?" target="_blank" rel="noopener">Part 2</a> for Algorithms</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Java Object Oriented Programming from (</span><a href="http://moocfi.github.io/courses/2013/programming-part-1/material.html"><span style="font-weight: 400;">moocfi</span></a><span style="font-weight: 400;">)</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Thinking in Java for Object Oriented Programming (Book Supplement)</span></li>
</ul>
</li>
</ul>
<strong>Projects (parallel to coursework - ongoing):</strong>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Create personal Android Application (Android SDK, Java)</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Recreate Android mobile app into ReactJS (React and Redux)</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Biochemistry Toolbox Website (React and Redux) - <em>idea</em></span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Update Mississauga Magazine (WordPress)</span></li>
</ul>
<span style="font-weight: 400;">I will continue to post my progress on where I’ve been. I like to keep track of my journey and maybe one day look back to see where I started and how far I've come.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1109</wp:post_id>
		<wp:post_date><![CDATA[2019-05-06 10:24:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-05-06 15:24:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[here-we-go]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1110]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>freeCodecamp Certification Review</title>
		<link>https://kiendang.me/index.php/2019/05/11/freecodecamp-certification-review/</link>
		<pubDate>Sat, 11 May 2019 14:36:43 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=1124</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">I’ve done many courses on HTML and CSS from Udemy courses, Treehouse and W3School. Over the years this was something I learned by myself and used lots of resources online. Understanding how to use frameworks like Bootstrap help me edit websites and tailor them to how I want them to look.</span>

<span style="font-weight: 400;">I decided to brush up on my HTML and CSS since it has been awhile. freeCodeCamp is an excellent resource for this. They provide problems that require you to use HTML and CSS to solve them. What’s great about this course is that it focuses heavily on Applied HTML Accessibility which is something I’ve never dealt with in depth. It also taught me new concepts of CSS’s new offerings which are CSS Flex Box and CSS Grid layout. </span>

<span style="font-weight: 400;">When completing the curriculum, there were 5 milestone projects to help the user re-apply what they’ve learned. You are required to pass in order to receive the certification. I received my <a href="https://www.freecodecamp.org/certification/kxdang/responsive-web-design">certification</a> on May 11th.</span><span style="font-weight: 400;">
</span><span style="font-weight: 400;">
</span><span style="font-weight: 400;">I look forward to doing the JavaScript curriculum offered by freeCodeCamp. I think it’s time for me to start my Algorithm course alongside my JavaScript.</span>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1124</wp:post_id>
		<wp:post_date><![CDATA[2019-05-11 09:36:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-05-11 14:36:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[freecodecamp-certification-review]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1126]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Algorithms: Big-O Notation</title>
		<link>https://kiendang.me/index.php/2019/05/15/intro-to-algorithms-big-o-notation/</link>
		<pubDate>Wed, 15 May 2019 19:30:41 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=1132</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">Active recall is an effective learning technique to help solidify the material learned by actively engaging your memory. It is a <a href="https://www.ncbi.nlm.nih.gov/pubmed/26173288" target="_blank" rel="noopener">proven technique</a> to help you learn new material. As someone with a science background that has no relevance in Computer Science, I will be using this technique to learn concepts that I need to become a developer.</span>

<span style="font-weight: 400;">Below are my active recall questions. Materials have been taken from either the textbook, Introduction to Algorithms 3rd Edition by Thomas H. Cormen et al. or from the MIT course.</span>
<h2 style="text-align: center;"><b>What is an Algorithm?</b></h2>
<span style="font-weight: 400;">An algorithm is the sequence of computational steps that transforms input into output.</span>
<h2 style="text-align: center;"><b>Why do we care about Algorithms?</b></h2>
<span style="font-weight: 400;">We care about algorithms because computing is time bounded and so are the resources (e.g space in memory). Algorithms can solve all sorts of problems such as identifying the genes in a human genome and determining sequences of base pairs, finding the shortest distance on a map, automation and any problem that can be solved with step by step instructions to produce a result.</span>

<span style="font-weight: 400;">It is important to be able to develop different algorithms to tackle different problems. Overtime, developing a pattern can help us solve a similar problem we will encounter in the future.</span>

<span style="font-weight: 400;">I’ve used a Python course I found <a href="https://runestone.academy/runestone/static/pythonds/index.html">here</a> with interactive examples to help me learn this concept as well as <a href="https://www.youtube.com/watch?v=D6xkbGLQesk">YouTube</a> videos to explain. I found that the textbook gets really in depth with the technical side, using other resources helped clear any confusion I had.</span>
<h2 style="text-align: center;"><b>Explain the Big-O Notation</b></h2>
<span style="font-weight: 400;">An algorithm can be broken down into different time complexities which can be explained in a systematic and mathematical way, hence, the </span><b>Big-O</b> <b>Notation</b><span style="font-weight: 400;">. There are common functions for the Big-O which will be explored throughout this journey.</span>

<span style="font-weight: 400;">It is written as a function T(n) = 1 + n, where T is the time it takes to run a function, grows as the size of the input n grows. From what I understand, the problem of an algorithm become larger due to the number of inputs. There will be some part of the formula that can provide a useful approximation to the actual number of steps in computation.</span><span style="font-weight: 400;">
</span>

<span style="font-weight: 400;">Therefore, when comparing algorithms, we can directly compare them using the Big-O notation. This will explain how long it takes to complete its algorithm with respect to input size when it becomes infinitely large.</span>

<span style="font-weight: 400;">My goal here is to understand the fundamentals of Algorithms and Data Structures because the entire premise of programming is the process of taking an algorithm to provide a solution. Therefore, I feel that it is important to know this topic regardless of how I’m able to program any projects. I can say that I’ve learned this topic well enough to understand the term and theory behind Big-O notation.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1132</wp:post_id>
		<wp:post_date><![CDATA[2019-05-15 14:30:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-05-15 19:30:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[intro-to-algorithms-big-o-notation]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1133]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OOP: Encapsulation, Abstraction, Polymorphism</title>
		<link>https://kiendang.me/index.php/2019/05/21/oop-encapsulation-abstraction-polymorphism/</link>
		<pubDate>Tue, 21 May 2019 20:32:15 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=1140</guid>
		<description></description>
		<content:encoded><![CDATA[Inheritance was covered here in this <a href="https://kiendang.me/index.php/2019/02/08/java-fundamentals-pt-1/">post</a>. The other concepts are explained here using my own words. These are my active recall questions.
<h2 style="text-align: center;">What is Encapsulation?</h2>
In object oriented programming, encapsulation is the process of wrapping the data (variables) and the code acting on the data (methods) together as a single unit. That means that the variables are considered private and not accessible to other classes except its own.
<h2 style="text-align: center;">Why is Encapsulation Important?</h2>
It is important because a class can have total control over what is stored in its field. It allows for data hiding which means the user will not have any information regarding the inner implementations. Other advantages are increased flexibility and re-usability like most of the concepts here.
<h2 style="text-align: center;">What is Abstraction?</h2>
It is the process of hiding the implementation details from the user and only functionality will be accessible.
<h2 style="text-align: center;"><strong>Why is Abstraction important in OPP?</strong></h2>
It is important because the subclasses that are created inherit the parent class methods and require their <strong>own</strong> implementation of the parent method. You cannot instantiate the parent class and must provide an override of the abstract method or declare it as abstract.

Data abstraction is a property which only the essential details are displayed to the user, any trivial or non-essentials are hidden. Therefore it reduces the complexity of viewing things, avoid code duplication and increases usability.

An example would be having a superclass called Employee where it contains a <code>calculateSalary()</code> method. We set Employee as an abstract class and can have instances of either Contractor or FullTime. When Contractor or FullTime is created, its own implementation of calculateSalary will be required, therefore, being able to separate the calculateSalary method based on the class type.
<h2 style="text-align: center;">What is Polymorphism?</h2>
Polymorphism is a robust feature of object oriented programming. The reference type can point to a different object at any given time (the simplest form of polymorphism). It is based on the concept of inheritance and overriding concepts.

For example, we can create an interface called Animal and have a method of <code>move()</code>. We can implement the animal by creating subclasses below:
<pre class="lang:java decode:true">public interface Animal {
    public void move();
}
 
public class Bird implements Animal {
    public void move() {
        System.out.print("Flying...");
    }
}
 
public class Fish implements Animal {
    public void move() {
        System.out.print("Swimming...");
    }
}
</pre>
Now we can create a Trainer that teaches the animal to speak:
<pre class="lang:java decode:true ">public class Trainer {
    public void teach(Animal anim) {
        anim.move();
    }
}</pre>
The parameter anim can take any Animal base class, whether its a fish or a bird it will execute its method according to the base class.
<h2 style="text-align: center;">Why is Polymorphism important?</h2>
It is important because it allows for re-usability and flexibility with minimal modifications to the code. We do not need to write if statements for this type of problem.

There was also one question that I needed to clarify:
<h2 style="text-align: center;">What is the different between extends and implements in Java?</h2>
The difference is that extends is for extending a class, you can extend and override its methods (a.k.a creating subclasses)

Implements is for implementing an interface, meaning you cannot implement any of the declared methods and must specify what the methods should be doing when you implement them. Think of an interface as a remote with many buttons. Interface is the remote and buttons and you must assign what those buttons do when you create a new remote specific to an object.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1140</wp:post_id>
		<wp:post_date><![CDATA[2019-05-21 15:32:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-05-21 20:32:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[oop-encapsulation-abstraction-polymorphism]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1141]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Blockchain and the future</title>
		<link>https://kiendang.me/index.php/2019/05/24/blockchain-and-the-future/</link>
		<pubDate>Fri, 24 May 2019 15:27:21 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=1147</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">Blockchain, we hear it all over the news. It is the technology that Bitcoin uses and is a digital currency that is decentralized. Once transactions are verified from millions of computers through cryptography, it turns into a block of data and then added to the a public distributed ledger called blockchain.</span>
<h1 style="text-align: center;"><b>Blockchain</b></h1>
<span style="font-weight: 400;">A blockchain is a list of growing records that are linked via cryptography. To think of this, a podcast described it as an insect stuck in amber. You can view it, but you can never change how the insect looks. Then it becomes connected together meaning you can go back in any point in time to view the insect (data) that is immutable.</span>

<span style="font-weight: 400;">In this day and age, big data becomes extremely valuable. How we store and access it can be extremely challenging. With all this information, we can start to think about how they could start “talking” to each other making our lives easier. </span>

<span style="font-weight: 400;">People who live in third world countries do not have the best record for keeping information and data. Imagine trying to verify who you really are without the proper documentation like a drivers licenses, passport and proof of land ownership, most of which are paper based and could be lost and take forever to reproduce from the government. </span>

<span style="font-weight: 400;">Storing all this information via blockchain through cryptography would reduce processing times. In an ideal world where we can just give them our fingerprint and they could just produce those documents after it becomes verified from the blockchain.</span>
<h2 style="text-align: center;"><b>Security</b></h2>
<span style="font-weight: 400;">Can’t the blockchain be hacked? It is possible, but very unlikely because blockchains are decentralized and are not contained in a single location. It becomes distributed across several millions of computers that keep the block in sync. That means a hacker must have enough computing power to change </span><b>millions </b><span style="font-weight: 400;">computers all </span><b>at the same time</b><span style="font-weight: 400;"> to change and alter a block (or 51% of all computers syncing the blockchain). Data is secured through a process called cryptography using a public key and private key which could be explained for another day.</span>
<h2 style="text-align: center;"><b>Future</b></h2>
<span style="font-weight: 400;">With all this talk about blockchain, the world is changing right under our nose! I’ve read the uses for it and the implementations are endless, ranging from supply chain to insurance uses. Below are some of the cool things happening:</span>
<h4><strong><a href="https://hurricaneguard.io/">HurricaneGuard</a></strong></h4>
<span style="font-weight: 400;">HurricaneGuard aims to solve current insurance policies with hurricane coverage. They automatically fill out claims that pay if wind speeds are recorded within 30 miles of your home or business. In an event like a hurricane disaster, having insurance automatically pay out based on the data real-time which becomes verified into a blockchain will give immediate relief for cash for food, water and repairs.</span>
<h4><span style="text-decoration: underline;"><b>Funeral Services</b></span></h4>
<span style="font-weight: 400;">As uncomfortable as it may sound, having death certificates issued on a blockchain can potentially trigger insurance companies to help verify the data and send out the appropriate documentation to other companies and banks making one less thing to deal with after death. However, there are a lot of laws in place to prevent any changes, hopefully this will change in the future.</span>
<blockquote><span style="font-weight: 400;">“There hasn’t been a lot of change in the past 100 years of the funeral service” -</span><span style="color: rgba(0, 0, 0, 0.7); font-size: 1.125rem;"> Rob Goff, executive director of the Washington State Funeral Directors.</span></blockquote>
<span style="font-weight: 400;">Companies like </span><a href="https://www.recompose.life/"><span style="font-weight: 400;">Recompose</span></a><span style="font-weight: 400;"> and </span><a href="https://angel.co/company/coeio"><span style="font-weight: 400;">Coeio</span></a><span style="font-weight: 400;"> are changing the way we convert human remains into the soil giving life to other species on Earth and reducing carbon emissions from cremation. I can't see why we can't incorporate other conveniences offered by technology to help handle documentation.</span>
<h4 style="text-align: left;"><a href="https://modum.io/"><b>Modum</b></a></h4>
<span style="font-weight: 400;">A company specializing in automation and intelligence. They provide real time tracking such as temperature and humidity for medical products during shipment to ensure the safety and quality of medical products.</span>

<span style="font-weight: 400;">As you can see there are many use cases of blockchain, with the Internet of Things we can have interoperability with big data making our lives more convenient than it already is. </span>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1147</wp:post_id>
		<wp:post_date><![CDATA[2019-05-24 10:27:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-05-24 15:27:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[blockchain-and-the-future]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1148]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bank of Canada Interest Rates at 1.75%</title>
		<link>https://kiendang.me/index.php/2019/05/29/bank-of-canada-interest-rates-at-1-75/</link>
		<pubDate>Wed, 29 May 2019 16:55:40 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=1170</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">We work and trade our time for money. Why not spend a little bit of time learning about what all the fuss is about when it comes to money? I’m not an financial adviser, nor do I have an accounting background, but I love reading about what’s going on and how it affects us. </span>

<span style="font-weight: 400;">Today, <a href="https://www.bankofcanada.ca/2019/05/fad-press-release-2019-05-29/">Bank of Canada maintains its interest rate at 1.75</a>%.. OK what does that even mean? We hear people talk about it in the news and sometimes I just sit and listen and feel irrelevant. So with some Google magic, I went and found a very high level overview of what it means for inflation.</span>
<blockquote><span style="font-weight: 400;">In economic terms, inflation is when there is a fall in purchasing power (value of money) and a general increase in prices. </span></blockquote>
<p style="text-align: center;"><b>Low interest rate at 1.75%</b></p>
<span style="font-weight: 400;">When the interest rate of banks are low, this stimulates spending and economic growth as more goods are being purchased. It means that people can borrow more money, go out and spend since interest rates are low. Companies can spend their money on riskier projects that might not have been profitable, thus, making new products and stimulating economic growth.</span>
<p style="text-align: center;"><b>Bad news for savers</b></p>
<span style="font-weight: 400;">Unfortunately, this means bad news for savers because now your dollar is worth less. Why? Because when interests rates are low, consumer goods are being purchased which drives up the price of your consumer products, hence, inflation. Supply and demand, it drives supply of purchase goods down and now everything cost more!</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1170</wp:post_id>
		<wp:post_date><![CDATA[2019-05-29 11:55:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-05-29 16:55:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[bank-of-canada-interest-rates-at-1-75]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="personal-finance"><![CDATA[Personal Finance]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1171]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mastering concentration: Pomodoro Reflection</title>
		<link>https://kiendang.me/index.php/2019/06/06/mastering-concentration-pomodoro-reflection/</link>
		<pubDate>Fri, 07 Jun 2019 02:30:51 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=1181</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">Concentration is a skill that takes time to develop; we live in an era where everything competes for our attention. The internet is a space where distractions are endless and to make matters worse, our personal phones keep us connected by alerting us for emails, social media and other miscellaneous apps. The <a href="https://kiendang.me/index.php/2018/12/19/productivity-pomodoro-technique/" target="_blank" rel="noopener">Pomodoro technique</a> can be used to increase your concentration skills and help stay productive.</span>

<span style="font-weight: 400;">The simple and effective concept of 25 minutes of focus and 5 minute break. I remember struggling with 25 minutes of focus when I was in school. Studying was boring, I couldn’t sit still for 10 minutes because I was easily distracted with Facebook, games and other mundane things on the internet. Eventually, I became better at concentrating by working my way up, I would increase the focus time by 5 minutes starting at 10 until I was able to do one pomodoro.</span>
<h2 style="text-align: center;"><strong>Pomodoros help mimic a due date.</strong></h2>
<span style="font-weight: 400;">If you’ve ever procrastinated before, you definitely know the feeling of urgency to complete something before it's due. Getting started is probably the hardest thing to do and pomodoros help create a sense of urgency to complete a task within 25 minutes. Most of the time, once you start working, you get into a state of <strong>flow</strong> (in the zone).</span>
<blockquote><span style="font-weight: 400;">Flow is characterized by complete absorption in what one does and a resulting loss in one's sense of space and time.</span></blockquote>
<span style="font-weight: 400;">You are most productive in a state of flow and pomodoros are meant to capitalize off this state. There will be times where you work past the 25 minutes, which is completely normal and when you are stuck then that would be the ideal time to take your 5 minute break.</span>
<h2 style="text-align: center;"><strong>Pomodoro as a unit of measure for productivity.</strong></h2>
<span style="font-weight: 400;">Tracking productivity can be tricky, however, with pomodoros, you know they are only 25 minute time blocks which are allocated for a particular task. If you do not finish the task within 25 minutes, then you can always try another pomodoro. Do not get caught up in the idea that if it is not completed in 25 minutes, then you have been unproductive. The most important thing is that you have spent 25 minutes putting in the effort to a particular task or problem.</span>

<span style="font-weight: 400;">Sometimes you might hear others putting “<em>endless</em>” hours trying to do a task or solve a problem, but then they don’t realize how many interruptions they’ve had and maybe it only took them 30 minutes of real work to complete something. Pomodoros allow you to quantify your efforts because you are blocking all interruptions during this time and you know those efforts were meaningful.</span>

<span style="font-weight: 400;">I’ve been using pomodoros to keep track of my studying and how many hours I’m using to actively learn a new topic. During May, I wanted to see my progress and track them as I go along and I found some valuable information about myself.</span>
<h1 style="text-align: center;"><b>Self Reflection</b></h1>
<span style="font-weight: 400;">Below is a snapshot of my tracked Pomodoros last month, I left my full-time job on the first Friday of May.</span>

<img class="alignnone size-full wp-image-1184" src="https://kiendang.me/wp-content/uploads/2019/06/Annotation-2019-06-06-222304.jpg" alt="" width="1614" height="968" />

<img class="alignnone size-full wp-image-1185" src="https://kiendang.me/wp-content/uploads/2019/06/Annotation-2019-06-06-211140.jpg" alt="" width="968" height="828" />

<span style="font-weight: 400;">There was a total of 92 pomodoros, equivalent to 106 hours and 47 minutes last month that was split between my React course, learning about algorithms and from freeCodeCamp. The pomodoros are now on full effect compared to what I had before with a full-time.</span>

<span style="font-weight: 400;">Previously, with a full-time job, weekends were the only times I really did any programming work, but now the difference is literally night and day as seen above and below respectively (best work time from night to noon - pun intended).</span>

<img class="alignnone size-full wp-image-1186" src="https://kiendang.me/wp-content/uploads/2019/06/PomoTodo-FT-job.png" alt="" width="1960" height="602" />

<span style="font-weight: 400;">I found that I’m extremely productive in early mornings. During the afternoon, my brain starts to get sluggish, from around 2 pm to 3 pm is when my productivity decreases significantly and I start to lose focus. My goal was to hit 8 pomodoros every day, but when I first started, I was only able to hit 4/8 on most days. To combat sluggishness, I would jog around this time to <a href="https://kiendang.me/index.php/2018/10/23/managing-energy-not-time/" target="_blank" rel="noopener">increase my energy levels</a> and to enjoy the beautiful summer weather.</span>

<span style="font-weight: 400;">During the last 2 weeks of May, I was able to hit 6/8 without any issues as my “mental stamina” became much better with practice and routine. Early this month, I’ve hit my 8 pomodoro goal multiple times and I feel like this is the progress I’ve been satisfied with.</span>

<span style="font-weight: 400;">Although the hours are not as crazy as the 8 hours per day that comes with a full-time job, I could honestly say that nobody has the energy and capacity to work the 8 hours every day at 100% efficiency and productivity. Based on my experience, a working full-time person would be at 75% productivity on average due to urgent email requests, meetings and other external interruptions that occur at a job.</span>

<span style="font-weight: 400;">That gives us about 30 hours on average of working time from a full-time job which equates to 5 hours per day not including 1-hour lunch. My 8 pomodoros hit 3.3 hours which is 1.7 hours shy of a full-time job. My goal is to be consistent and be able to spend my time developing skills to pursue my passion for programming and improve other aspects of my life through self-learning.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1181</wp:post_id>
		<wp:post_date><![CDATA[2019-06-06 21:30:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-06-07 02:30:51]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mastering-concentration-pomodoro-reflection]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1182]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Speedbump</title>
		<link>https://kiendang.me/index.php/2019/07/02/speedbump/</link>
		<pubDate>Tue, 02 Jul 2019 16:05:11 +0000</pubDate>
		<dc:creator><![CDATA[Kien]]></dc:creator>
		<guid isPermaLink="false">https://kiendang.me/?p=1224</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">Life will always be unpredictable. I am currently recovering from a painful surgery and have taken about an entire month of dealing with the pain, fever, and health complications. I had a great running routine and kept my physical health in check until it decides to throw me a curve ball.</span>

<span style="font-weight: 400;">As per my recent bloodwork, I’m a healthy young male. However, my body likes to think otherwise!</span>
<h2><span style="text-decoration: underline;"><span style="font-weight: 400;">List of physical failures:</span></span></h2>
<h6><span style="font-weight: 400;"><strong>Bells Palsy (2016)</strong> - Facial paralysis, meds only - complete recovery!</span></h6>
<h6><span style="font-weight: 400;"><strong>Retinal Tear (2016)</strong> - Eye surgery required - found out what those tiny floating things were caused by</span></h6>
<h6><span style="font-weight: 400;"><strong>Epididymal Cyst (2018)</strong> - Surgery pending - thought it was testicular cancer😅 </span></h6>
<h6><span style="font-weight: 400;"><strong>Perianal Abscess (2019)</strong> - Surgery required - by far the most painful one I’ve ever had to deal with</span></h6>
<span style="font-weight: 400;">All 4 medical issues were random occurrences. In summary, my body sucks and I need a new host. I’m hoping for a better year in 2020.</span>

<span style="font-weight: 400;">Now it’s just spending some time recovering and then getting back into the routine. </span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1224</wp:post_id>
		<wp:post_date><![CDATA[2019-07-02 11:05:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-07-02 16:05:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[speedbump]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1225]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
